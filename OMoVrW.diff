diff --git a/freemius/assets/css/admin/index.php b/freemius/assets/css/admin/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/assets/css/admin/index.php
+++ b/freemius/assets/css/admin/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/assets/css/index.php b/freemius/assets/css/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/assets/css/index.php
+++ b/freemius/assets/css/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/assets/img/index.php b/freemius/assets/img/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/assets/img/index.php
+++ b/freemius/assets/img/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/assets/index.php b/freemius/assets/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/assets/index.php
+++ b/freemius/assets/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/assets/js/index.php b/freemius/assets/js/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/assets/js/index.php
+++ b/freemius/assets/js/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/assets/scss/admin/index.php b/freemius/assets/scss/admin/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/assets/scss/admin/index.php
+++ b/freemius/assets/scss/admin/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/assets/scss/index.php b/freemius/assets/scss/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/assets/scss/index.php
+++ b/freemius/assets/scss/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/config.php b/freemius/config.php
index f51eb4087b3b0920e0a9581233b86cf3228e9aea..7fea4357f861c40f5c64180e799c0c57da23626e 100644
--- a/freemius/config.php
+++ b/freemius/config.php
@@ -6,50 +6,50 @@
      * @since       1.0.4
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
-    if ( ! defined( 'WP_FS__SLUG' ) ) {
-        define( 'WP_FS__SLUG', 'freemius' );
+    if (! defined('WP_FS__SLUG')) {
+        define('WP_FS__SLUG', 'freemius');
     }
-    if ( ! defined( 'WP_FS__DEV_MODE' ) ) {
-        define( 'WP_FS__DEV_MODE', false );
+    if (! defined('WP_FS__DEV_MODE')) {
+        define('WP_FS__DEV_MODE', false);
     }
 
     #--------------------------------------------------------------------------------
     #region API Connectivity Issues Simulation
     #--------------------------------------------------------------------------------
 
-    if ( ! defined( 'WP_FS__SIMULATE_NO_API_CONNECTIVITY' ) ) {
-        define( 'WP_FS__SIMULATE_NO_API_CONNECTIVITY', false );
+    if (! defined('WP_FS__SIMULATE_NO_API_CONNECTIVITY')) {
+        define('WP_FS__SIMULATE_NO_API_CONNECTIVITY', false);
     }
-    if ( ! defined( 'WP_FS__SIMULATE_NO_CURL' ) ) {
-        define( 'WP_FS__SIMULATE_NO_CURL', false );
+    if (! defined('WP_FS__SIMULATE_NO_CURL')) {
+        define('WP_FS__SIMULATE_NO_CURL', false);
     }
-    if ( ! defined( 'WP_FS__SIMULATE_NO_API_CONNECTIVITY_CLOUDFLARE' ) ) {
-        define( 'WP_FS__SIMULATE_NO_API_CONNECTIVITY_CLOUDFLARE', false );
+    if (! defined('WP_FS__SIMULATE_NO_API_CONNECTIVITY_CLOUDFLARE')) {
+        define('WP_FS__SIMULATE_NO_API_CONNECTIVITY_CLOUDFLARE', false);
     }
-    if ( ! defined( 'WP_FS__SIMULATE_NO_API_CONNECTIVITY_SQUID_ACL' ) ) {
-        define( 'WP_FS__SIMULATE_NO_API_CONNECTIVITY_SQUID_ACL', false );
+    if (! defined('WP_FS__SIMULATE_NO_API_CONNECTIVITY_SQUID_ACL')) {
+        define('WP_FS__SIMULATE_NO_API_CONNECTIVITY_SQUID_ACL', false);
     }
-    if ( WP_FS__SIMULATE_NO_CURL ) {
-        define( 'FS_SDK__SIMULATE_NO_CURL', true );
+    if (WP_FS__SIMULATE_NO_CURL) {
+        define('FS_SDK__SIMULATE_NO_CURL', true);
     }
-    if ( WP_FS__SIMULATE_NO_API_CONNECTIVITY_CLOUDFLARE ) {
-        define( 'FS_SDK__SIMULATE_NO_API_CONNECTIVITY_CLOUDFLARE', true );
+    if (WP_FS__SIMULATE_NO_API_CONNECTIVITY_CLOUDFLARE) {
+        define('FS_SDK__SIMULATE_NO_API_CONNECTIVITY_CLOUDFLARE', true);
     }
-    if ( WP_FS__SIMULATE_NO_API_CONNECTIVITY_SQUID_ACL ) {
-        define( 'FS_SDK__SIMULATE_NO_API_CONNECTIVITY_SQUID_ACL', true );
+    if (WP_FS__SIMULATE_NO_API_CONNECTIVITY_SQUID_ACL) {
+        define('FS_SDK__SIMULATE_NO_API_CONNECTIVITY_SQUID_ACL', true);
     }
 
     #endregion
 
-    if ( ! defined( 'WP_FS__SIMULATE_FREEMIUS_OFF' ) ) {
-        define( 'WP_FS__SIMULATE_FREEMIUS_OFF', false );
+    if (! defined('WP_FS__SIMULATE_FREEMIUS_OFF')) {
+        define('WP_FS__SIMULATE_FREEMIUS_OFF', false);
     }
 
-    if ( ! defined( 'WP_FS__PING_API_ON_IP_OR_HOST_CHANGES' ) ) {
+    if (! defined('WP_FS__PING_API_ON_IP_OR_HOST_CHANGES')) {
         /**
          * @since  1.1.7.3
          * @author Vova Feldman (@svovaf)
@@ -60,7 +60,7 @@
          * multiple unwanted connectivity test pings, temporary ignore domain or
          * server IP changes.
          */
-        define( 'WP_FS__PING_API_ON_IP_OR_HOST_CHANGES', false );
+        define('WP_FS__PING_API_ON_IP_OR_HOST_CHANGES', false);
     }
 
     /**
@@ -68,11 +68,11 @@
      * like VVV, please update WP_FS__LOCALHOST_IP with your public IP
      * and uncomment it during dev.
      */
-    if ( ! defined( 'WP_FS__LOCALHOST_IP' ) ) {
+    if (! defined('WP_FS__LOCALHOST_IP')) {
         // VVV default public network IP.
-        define( 'WP_FS__VVV_DEFAULT_PUBLIC_IP', '192.168.50.4' );
+        define('WP_FS__VVV_DEFAULT_PUBLIC_IP', '192.168.50.4');
 
-//		define( 'WP_FS__LOCALHOST_IP', WP_FS__VVV_DEFAULT_PUBLIC_IP );
+        //		define( 'WP_FS__LOCALHOST_IP', WP_FS__VVV_DEFAULT_PUBLIC_IP );
     }
 
     /**
@@ -87,8 +87,8 @@
      *      THEREFORE, MAKE SURE THAT WHEN USING THIS PARAMETER,YOUR TESTING ENVIRONMENT'S
      *      CLOCK IS SYNCED.
      */
-    if ( ! defined( 'WP_FS__SKIP_EMAIL_ACTIVATION' ) ) {
-        define( 'WP_FS__SKIP_EMAIL_ACTIVATION', false );
+    if (! defined('WP_FS__SKIP_EMAIL_ACTIVATION')) {
+        define('WP_FS__SKIP_EMAIL_ACTIVATION', false);
     }
 
 
@@ -96,29 +96,29 @@
     #region Directories
     #--------------------------------------------------------------------------------
 
-    if ( ! defined( 'WP_FS__DIR' ) ) {
-        define( 'WP_FS__DIR', dirname( __FILE__ ) );
+    if (! defined('WP_FS__DIR')) {
+        define('WP_FS__DIR', dirname(__FILE__));
     }
-    if ( ! defined( 'WP_FS__DIR_INCLUDES' ) ) {
-        define( 'WP_FS__DIR_INCLUDES', WP_FS__DIR . '/includes' );
+    if (! defined('WP_FS__DIR_INCLUDES')) {
+        define('WP_FS__DIR_INCLUDES', WP_FS__DIR . '/includes');
     }
-    if ( ! defined( 'WP_FS__DIR_TEMPLATES' ) ) {
-        define( 'WP_FS__DIR_TEMPLATES', WP_FS__DIR . '/templates' );
+    if (! defined('WP_FS__DIR_TEMPLATES')) {
+        define('WP_FS__DIR_TEMPLATES', WP_FS__DIR . '/templates');
     }
-    if ( ! defined( 'WP_FS__DIR_ASSETS' ) ) {
-        define( 'WP_FS__DIR_ASSETS', WP_FS__DIR . '/assets' );
+    if (! defined('WP_FS__DIR_ASSETS')) {
+        define('WP_FS__DIR_ASSETS', WP_FS__DIR . '/assets');
     }
-    if ( ! defined( 'WP_FS__DIR_CSS' ) ) {
-        define( 'WP_FS__DIR_CSS', WP_FS__DIR_ASSETS . '/css' );
+    if (! defined('WP_FS__DIR_CSS')) {
+        define('WP_FS__DIR_CSS', WP_FS__DIR_ASSETS . '/css');
     }
-    if ( ! defined( 'WP_FS__DIR_JS' ) ) {
-        define( 'WP_FS__DIR_JS', WP_FS__DIR_ASSETS . '/js' );
+    if (! defined('WP_FS__DIR_JS')) {
+        define('WP_FS__DIR_JS', WP_FS__DIR_ASSETS . '/js');
     }
-    if ( ! defined( 'WP_FS__DIR_IMG' ) ) {
-        define( 'WP_FS__DIR_IMG', WP_FS__DIR_ASSETS . '/img' );
+    if (! defined('WP_FS__DIR_IMG')) {
+        define('WP_FS__DIR_IMG', WP_FS__DIR_ASSETS . '/img');
     }
-    if ( ! defined( 'WP_FS__DIR_SDK' ) ) {
-        define( 'WP_FS__DIR_SDK', WP_FS__DIR_INCLUDES . '/sdk' );
+    if (! defined('WP_FS__DIR_SDK')) {
+        define('WP_FS__DIR_SDK', WP_FS__DIR_INCLUDES . '/sdk');
     }
 
     #endregion
@@ -126,76 +126,81 @@
     /**
      * Domain / URL / Address
      */
-    define( 'WP_FS__ROOT_DOMAIN_PRODUCTION', 'freemius.com' );
-    define( 'WP_FS__DOMAIN_PRODUCTION', 'wp.freemius.com' );
-    define( 'WP_FS__ADDRESS_PRODUCTION', 'https://' . WP_FS__DOMAIN_PRODUCTION );
+    define('WP_FS__ROOT_DOMAIN_PRODUCTION', 'freemius.com');
+    define('WP_FS__DOMAIN_PRODUCTION', 'wp.freemius.com');
+    define('WP_FS__ADDRESS_PRODUCTION', 'https://' . WP_FS__DOMAIN_PRODUCTION);
 
-    if ( ! defined( 'WP_FS__DOMAIN_LOCALHOST' ) ) {
-        define( 'WP_FS__DOMAIN_LOCALHOST', 'wp.freemius' );
+    if (! defined('WP_FS__DOMAIN_LOCALHOST')) {
+        define('WP_FS__DOMAIN_LOCALHOST', 'wp.freemius');
     }
-    if ( ! defined( 'WP_FS__ADDRESS_LOCALHOST' ) ) {
-        define( 'WP_FS__ADDRESS_LOCALHOST', 'http://' . WP_FS__DOMAIN_LOCALHOST . ':8080' );
+    if (! defined('WP_FS__ADDRESS_LOCALHOST')) {
+        define('WP_FS__ADDRESS_LOCALHOST', 'http://' . WP_FS__DOMAIN_LOCALHOST . ':8080');
     }
 
-    if ( ! defined( 'WP_FS__TESTING_DOMAIN' ) ) {
-        define( 'WP_FS__TESTING_DOMAIN', 'fswp' );
+    if (! defined('WP_FS__TESTING_DOMAIN')) {
+        define('WP_FS__TESTING_DOMAIN', 'fswp');
     }
 
     #--------------------------------------------------------------------------------
     #region HTTP
     #--------------------------------------------------------------------------------
 
-    if ( ! defined( 'WP_FS__IS_HTTP_REQUEST' ) ) {
-        define( 'WP_FS__IS_HTTP_REQUEST', isset( $_SERVER['HTTP_HOST'] ) );
+    if (! defined('WP_FS__IS_HTTP_REQUEST')) {
+        define('WP_FS__IS_HTTP_REQUEST', isset($_SERVER['HTTP_HOST']));
     }
 
-    if ( ! defined( 'WP_FS__IS_HTTPS' ) ) {
-        define( 'WP_FS__IS_HTTPS', ( WP_FS__IS_HTTP_REQUEST &&
+    if (! defined('WP_FS__IS_HTTPS')) {
+        define(
+            'WP_FS__IS_HTTPS',
+            (
+            WP_FS__IS_HTTP_REQUEST &&
                                      // Checks if CloudFlare's HTTPS (Flexible SSL support).
-                                     isset( $_SERVER['HTTP_X_FORWARDED_PROTO'] ) &&
-                                     'https' === strtolower( $_SERVER['HTTP_X_FORWARDED_PROTO'] )
-                                   ) ||
+                                     isset($_SERVER['HTTP_X_FORWARDED_PROTO']) &&
+                                     'https' === strtolower($_SERVER['HTTP_X_FORWARDED_PROTO'])
+        ) ||
                                    // Check if HTTPS request.
-                                   ( isset( $_SERVER['HTTPS'] ) && 'on' == $_SERVER['HTTPS'] ) ||
-                                   ( isset( $_SERVER['SERVER_PORT'] ) && 443 == $_SERVER['SERVER_PORT'] )
+                                   (isset($_SERVER['HTTPS']) && 'on' == $_SERVER['HTTPS']) ||
+                                   (isset($_SERVER['SERVER_PORT']) && 443 == $_SERVER['SERVER_PORT'])
         );
     }
 
-    if ( ! defined( 'WP_FS__IS_POST_REQUEST' ) ) {
-        define( 'WP_FS__IS_POST_REQUEST', ( WP_FS__IS_HTTP_REQUEST &&
-                                            strtoupper( $_SERVER['REQUEST_METHOD'] ) == 'POST' ) );
+    if (! defined('WP_FS__IS_POST_REQUEST')) {
+        define('WP_FS__IS_POST_REQUEST', (WP_FS__IS_HTTP_REQUEST &&
+                                            strtoupper($_SERVER['REQUEST_METHOD']) == 'POST'));
     }
 
-    if ( ! defined( 'WP_FS__REMOTE_ADDR' ) ) {
-        define( 'WP_FS__REMOTE_ADDR', fs_get_ip() );
+    if (! defined('WP_FS__REMOTE_ADDR')) {
+        define('WP_FS__REMOTE_ADDR', fs_get_ip());
     }
 
-    if ( ! defined( 'WP_FS__IS_LOCALHOST' ) ) {
-        if ( defined( 'WP_FS__LOCALHOST_IP' ) ) {
-            define( 'WP_FS__IS_LOCALHOST', ( WP_FS__LOCALHOST_IP === WP_FS__REMOTE_ADDR ) );
+    if (! defined('WP_FS__IS_LOCALHOST')) {
+        if (defined('WP_FS__LOCALHOST_IP')) {
+            define('WP_FS__IS_LOCALHOST', (WP_FS__LOCALHOST_IP === WP_FS__REMOTE_ADDR));
         } else {
-            define( 'WP_FS__IS_LOCALHOST', WP_FS__IS_HTTP_REQUEST &&
-                                           is_string( WP_FS__REMOTE_ADDR ) &&
-                                           ( substr( WP_FS__REMOTE_ADDR, 0, 4 ) === '127.' ||
-                                             WP_FS__REMOTE_ADDR === '::1' )
+            define(
+                'WP_FS__IS_LOCALHOST',
+                WP_FS__IS_HTTP_REQUEST &&
+                                           is_string(WP_FS__REMOTE_ADDR) &&
+                                           (substr(WP_FS__REMOTE_ADDR, 0, 4) === '127.' ||
+                                             WP_FS__REMOTE_ADDR === '::1')
             );
         }
     }
 
-    if ( ! defined( 'WP_FS__IS_LOCALHOST_FOR_SERVER' ) ) {
-        define( 'WP_FS__IS_LOCALHOST_FOR_SERVER', ( ! WP_FS__IS_HTTP_REQUEST ||
-                                                    false !== strpos( $_SERVER['HTTP_HOST'], 'localhost' ) ) );
+    if (! defined('WP_FS__IS_LOCALHOST_FOR_SERVER')) {
+        define('WP_FS__IS_LOCALHOST_FOR_SERVER', (! WP_FS__IS_HTTP_REQUEST ||
+                                                    false !== strpos($_SERVER['HTTP_HOST'], 'localhost')));
     }
 
     #endregion
 
-    if ( ! defined( 'WP_FS__IS_PRODUCTION_MODE' ) ) {
+    if (! defined('WP_FS__IS_PRODUCTION_MODE')) {
         // By default, run with Freemius production servers.
-        define( 'WP_FS__IS_PRODUCTION_MODE', true );
+        define('WP_FS__IS_PRODUCTION_MODE', true);
     }
 
-    if ( ! defined( 'WP_FS__ADDRESS' ) ) {
-        define( 'WP_FS__ADDRESS', ( WP_FS__IS_PRODUCTION_MODE ? WP_FS__ADDRESS_PRODUCTION : WP_FS__ADDRESS_LOCALHOST ) );
+    if (! defined('WP_FS__ADDRESS')) {
+        define('WP_FS__ADDRESS', (WP_FS__IS_PRODUCTION_MODE ? WP_FS__ADDRESS_PRODUCTION : WP_FS__ADDRESS_LOCALHOST));
     }
 
 
@@ -203,20 +208,20 @@
     #region API
     #--------------------------------------------------------------------------------
 
-    if ( ! defined( 'WP_FS__API_ADDRESS_LOCALHOST' ) ) {
-        define( 'WP_FS__API_ADDRESS_LOCALHOST', 'http://api.freemius-local.com:8080' );
+    if (! defined('WP_FS__API_ADDRESS_LOCALHOST')) {
+        define('WP_FS__API_ADDRESS_LOCALHOST', 'http://api.freemius-local.com:8080');
     }
-    if ( ! defined( 'WP_FS__API_SANDBOX_ADDRESS_LOCALHOST' ) ) {
-        define( 'WP_FS__API_SANDBOX_ADDRESS_LOCALHOST', 'http://sandbox-api.freemius:8080' );
+    if (! defined('WP_FS__API_SANDBOX_ADDRESS_LOCALHOST')) {
+        define('WP_FS__API_SANDBOX_ADDRESS_LOCALHOST', 'http://sandbox-api.freemius:8080');
     }
 
     // Set API address for local testing.
-    if ( ! WP_FS__IS_PRODUCTION_MODE ) {
-        if ( ! defined( 'FS_API__ADDRESS' ) ) {
-            define( 'FS_API__ADDRESS', WP_FS__API_ADDRESS_LOCALHOST );
+    if (! WP_FS__IS_PRODUCTION_MODE) {
+        if (! defined('FS_API__ADDRESS')) {
+            define('FS_API__ADDRESS', WP_FS__API_ADDRESS_LOCALHOST);
         }
-        if ( ! defined( 'FS_API__SANDBOX_ADDRESS' ) ) {
-            define( 'FS_API__SANDBOX_ADDRESS', WP_FS__API_SANDBOX_ADDRESS_LOCALHOST );
+        if (! defined('FS_API__SANDBOX_ADDRESS')) {
+            define('FS_API__SANDBOX_ADDRESS', WP_FS__API_SANDBOX_ADDRESS_LOCALHOST);
         }
     }
 
@@ -226,114 +231,114 @@
     #region Checkout
     #--------------------------------------------------------------------------------
 
-    if ( ! defined( 'FS_CHECKOUT__ADDRESS_PRODUCTION' ) ) {
-        define( 'FS_CHECKOUT__ADDRESS_PRODUCTION', 'https://checkout.freemius.com' );
+    if (! defined('FS_CHECKOUT__ADDRESS_PRODUCTION')) {
+        define('FS_CHECKOUT__ADDRESS_PRODUCTION', 'https://checkout.freemius.com');
     }
 
-    if ( ! defined( 'FS_CHECKOUT__ADDRESS_LOCALHOST' ) ) {
-        define( 'FS_CHECKOUT__ADDRESS_LOCALHOST', 'http://checkout.freemius-local.com:8080' );
+    if (! defined('FS_CHECKOUT__ADDRESS_LOCALHOST')) {
+        define('FS_CHECKOUT__ADDRESS_LOCALHOST', 'http://checkout.freemius-local.com:8080');
     }
 
-    if ( ! defined( 'FS_CHECKOUT__ADDRESS' ) ) {
-        define( 'FS_CHECKOUT__ADDRESS', ( WP_FS__IS_PRODUCTION_MODE ? FS_CHECKOUT__ADDRESS_PRODUCTION : FS_CHECKOUT__ADDRESS_LOCALHOST ) );
+    if (! defined('FS_CHECKOUT__ADDRESS')) {
+        define('FS_CHECKOUT__ADDRESS', (WP_FS__IS_PRODUCTION_MODE ? FS_CHECKOUT__ADDRESS_PRODUCTION : FS_CHECKOUT__ADDRESS_LOCALHOST));
     }
 
     #endregion
 
-    define( 'WP_FS___OPTION_PREFIX', 'fs' . ( WP_FS__IS_PRODUCTION_MODE ? '' : '_dbg' ) . '_' );
+    define('WP_FS___OPTION_PREFIX', 'fs' . (WP_FS__IS_PRODUCTION_MODE ? '' : '_dbg') . '_');
 
-    if ( ! defined( 'WP_FS__ACCOUNTS_OPTION_NAME' ) ) {
-        define( 'WP_FS__ACCOUNTS_OPTION_NAME', WP_FS___OPTION_PREFIX . 'accounts' );
+    if (! defined('WP_FS__ACCOUNTS_OPTION_NAME')) {
+        define('WP_FS__ACCOUNTS_OPTION_NAME', WP_FS___OPTION_PREFIX . 'accounts');
     }
-    if ( ! defined( 'WP_FS__API_CACHE_OPTION_NAME' ) ) {
-        define( 'WP_FS__API_CACHE_OPTION_NAME', WP_FS___OPTION_PREFIX . 'api_cache' );
+    if (! defined('WP_FS__API_CACHE_OPTION_NAME')) {
+        define('WP_FS__API_CACHE_OPTION_NAME', WP_FS___OPTION_PREFIX . 'api_cache');
     }
-    if ( ! defined( 'WP_FS__GDPR_OPTION_NAME' ) ) {
-        define( 'WP_FS__GDPR_OPTION_NAME', WP_FS___OPTION_PREFIX . 'gdpr' );
+    if (! defined('WP_FS__GDPR_OPTION_NAME')) {
+        define('WP_FS__GDPR_OPTION_NAME', WP_FS___OPTION_PREFIX . 'gdpr');
     }
-    define( 'WP_FS__OPTIONS_OPTION_NAME', WP_FS___OPTION_PREFIX . 'options' );
+    define('WP_FS__OPTIONS_OPTION_NAME', WP_FS___OPTION_PREFIX . 'options');
 
     /**
      * Module types
      *
      * @since 1.2.2
      */
-    define( 'WP_FS__MODULE_TYPE_PLUGIN', 'plugin' );
-    define( 'WP_FS__MODULE_TYPE_THEME', 'theme' );
+    define('WP_FS__MODULE_TYPE_PLUGIN', 'plugin');
+    define('WP_FS__MODULE_TYPE_THEME', 'theme');
 
     /**
      * Billing Frequencies
      */
-    define( 'WP_FS__PERIOD_ANNUALLY', 'annual' );
-    define( 'WP_FS__PERIOD_MONTHLY', 'monthly' );
-    define( 'WP_FS__PERIOD_LIFETIME', 'lifetime' );
+    define('WP_FS__PERIOD_ANNUALLY', 'annual');
+    define('WP_FS__PERIOD_MONTHLY', 'monthly');
+    define('WP_FS__PERIOD_LIFETIME', 'lifetime');
 
     /**
      * Plans
      */
-    define( 'WP_FS__PLAN_DEFAULT_PAID', false );
-    define( 'WP_FS__PLAN_FREE', 'free' );
-    define( 'WP_FS__PLAN_TRIAL', 'trial' );
+    define('WP_FS__PLAN_DEFAULT_PAID', false);
+    define('WP_FS__PLAN_FREE', 'free');
+    define('WP_FS__PLAN_TRIAL', 'trial');
 
     /**
      * Times in seconds
      */
-    if ( ! defined( 'WP_FS__TIME_5_MIN_IN_SEC' ) ) {
-        define( 'WP_FS__TIME_5_MIN_IN_SEC', 300 );
+    if (! defined('WP_FS__TIME_5_MIN_IN_SEC')) {
+        define('WP_FS__TIME_5_MIN_IN_SEC', 300);
     }
-    if ( ! defined( 'WP_FS__TIME_10_MIN_IN_SEC' ) ) {
-        define( 'WP_FS__TIME_10_MIN_IN_SEC', 600 );
+    if (! defined('WP_FS__TIME_10_MIN_IN_SEC')) {
+        define('WP_FS__TIME_10_MIN_IN_SEC', 600);
     }
 //	define( 'WP_FS__TIME_15_MIN_IN_SEC', 900 );
-    if ( ! defined( 'WP_FS__TIME_12_HOURS_IN_SEC' ) ) {
-        define( 'WP_FS__TIME_12_HOURS_IN_SEC', 43200 );
+    if (! defined('WP_FS__TIME_12_HOURS_IN_SEC')) {
+        define('WP_FS__TIME_12_HOURS_IN_SEC', 43200);
     }
-    if ( ! defined( 'WP_FS__TIME_24_HOURS_IN_SEC' ) ) {
-        define( 'WP_FS__TIME_24_HOURS_IN_SEC', WP_FS__TIME_12_HOURS_IN_SEC * 2 );
+    if (! defined('WP_FS__TIME_24_HOURS_IN_SEC')) {
+        define('WP_FS__TIME_24_HOURS_IN_SEC', WP_FS__TIME_12_HOURS_IN_SEC * 2);
     }
-    if ( ! defined( 'WP_FS__TIME_WEEK_IN_SEC' ) ) {
-        define( 'WP_FS__TIME_WEEK_IN_SEC', 7 * WP_FS__TIME_24_HOURS_IN_SEC );
+    if (! defined('WP_FS__TIME_WEEK_IN_SEC')) {
+        define('WP_FS__TIME_WEEK_IN_SEC', 7 * WP_FS__TIME_24_HOURS_IN_SEC);
     }
 
     #--------------------------------------------------------------------------------
     #region Debugging
     #--------------------------------------------------------------------------------
 
-    if ( ! defined( 'WP_FS__DEBUG_SDK' ) ) {
-        $debug_mode = get_option( 'fs_debug_mode', null );
+    if (! defined('WP_FS__DEBUG_SDK')) {
+        $debug_mode = get_option('fs_debug_mode', null);
 
-        if ( $debug_mode === null ) {
+        if ($debug_mode === null) {
             $debug_mode = false;
-            add_option( 'fs_debug_mode', $debug_mode );
+            add_option('fs_debug_mode', $debug_mode);
         }
 
-        define( 'WP_FS__DEBUG_SDK', is_numeric( $debug_mode ) ? ( 0 < $debug_mode ) : WP_FS__DEV_MODE );
+        define('WP_FS__DEBUG_SDK', is_numeric($debug_mode) ? (0 < $debug_mode) : WP_FS__DEV_MODE);
     }
 
-    if ( ! defined( 'WP_FS__ECHO_DEBUG_SDK' ) ) {
-        define( 'WP_FS__ECHO_DEBUG_SDK', WP_FS__DEV_MODE && ! empty( $_GET['fs_dbg_echo'] ) );
+    if (! defined('WP_FS__ECHO_DEBUG_SDK')) {
+        define('WP_FS__ECHO_DEBUG_SDK', WP_FS__DEV_MODE && ! empty($_GET['fs_dbg_echo']));
     }
-    if ( ! defined( 'WP_FS__LOG_DATETIME_FORMAT' ) ) {
-        define( 'WP_FS__LOG_DATETIME_FORMAT', 'Y-m-d H:i:s' );
+    if (! defined('WP_FS__LOG_DATETIME_FORMAT')) {
+        define('WP_FS__LOG_DATETIME_FORMAT', 'Y-m-d H:i:s');
     }
-    if ( ! defined( 'FS_API__LOGGER_ON' ) ) {
-        define( 'FS_API__LOGGER_ON', WP_FS__DEBUG_SDK );
+    if (! defined('FS_API__LOGGER_ON')) {
+        define('FS_API__LOGGER_ON', WP_FS__DEBUG_SDK);
     }
 
-    if ( WP_FS__ECHO_DEBUG_SDK ) {
-        error_reporting( E_ALL );
+    if (WP_FS__ECHO_DEBUG_SDK) {
+        error_reporting(E_ALL);
     }
 
     #endregion
 
-    if ( ! defined( 'WP_FS__SCRIPT_START_TIME' ) ) {
-        define( 'WP_FS__SCRIPT_START_TIME', time() );
+    if (! defined('WP_FS__SCRIPT_START_TIME')) {
+        define('WP_FS__SCRIPT_START_TIME', time());
     }
-    if ( ! defined( 'WP_FS__DEFAULT_PRIORITY' ) ) {
-        define( 'WP_FS__DEFAULT_PRIORITY', 10 );
+    if (! defined('WP_FS__DEFAULT_PRIORITY')) {
+        define('WP_FS__DEFAULT_PRIORITY', 10);
     }
-    if ( ! defined( 'WP_FS__LOWEST_PRIORITY' ) ) {
-        define( 'WP_FS__LOWEST_PRIORITY', 999999999 );
+    if (! defined('WP_FS__LOWEST_PRIORITY')) {
+        define('WP_FS__LOWEST_PRIORITY', 999999999);
     }
 
     #--------------------------------------------------------------------------------
@@ -349,16 +354,19 @@
      *
      * @author Vova Feldman (@svovaf)
      */
-    if ( ! defined( 'WP_FS__IS_NETWORK_ADMIN' ) ) {
-        define( 'WP_FS__IS_NETWORK_ADMIN',
+    if (! defined('WP_FS__IS_NETWORK_ADMIN')) {
+        define(
+            'WP_FS__IS_NETWORK_ADMIN',
             is_multisite() &&
-            ( is_network_admin() ||
-              ( ( defined( 'DOING_AJAX' ) && DOING_AJAX &&
-                  ( isset( $_REQUEST['_fs_network_admin'] ) /*||
-                    ( ! empty( $_REQUEST['action'] ) && 'delete-plugin' === $_REQUEST['action'] )*/ )
-                ) ||
+            (
+                is_network_admin() ||
+              ((
+                  defined('DOING_AJAX') && DOING_AJAX &&
+                  (isset($_REQUEST['_fs_network_admin']) /*||
+                    ( ! empty( $_REQUEST['action'] ) && 'delete-plugin' === $_REQUEST['action'] )*/)
+              ) ||
                 // Plugin uninstall.
-                defined( 'WP_UNINSTALL_PLUGIN' ) )
+                defined('WP_UNINSTALL_PLUGIN'))
             )
         );
     }
@@ -372,20 +380,20 @@
      *
      * @author Vova Feldman (@svovaf)
      */
-    if ( ! defined( 'WP_FS__IS_BLOG_ADMIN' ) ) {
-        define( 'WP_FS__IS_BLOG_ADMIN', is_blog_admin() || ( defined( 'DOING_AJAX' ) && DOING_AJAX && isset( $_REQUEST['_fs_blog_admin'] ) ) );
+    if (! defined('WP_FS__IS_BLOG_ADMIN')) {
+        define('WP_FS__IS_BLOG_ADMIN', is_blog_admin() || (defined('DOING_AJAX') && DOING_AJAX && isset($_REQUEST['_fs_blog_admin'])));
     }
 
-    if ( ! defined( 'WP_FS__SHOW_NETWORK_EVEN_WHEN_DELEGATED' ) ) {
+    if (! defined('WP_FS__SHOW_NETWORK_EVEN_WHEN_DELEGATED')) {
         // Set to true to show network level settings even if delegated to site admins.
-        define( 'WP_FS__SHOW_NETWORK_EVEN_WHEN_DELEGATED', false );
+        define('WP_FS__SHOW_NETWORK_EVEN_WHEN_DELEGATED', false);
     }
 
     #endregion
 
-    if ( ! defined( 'WP_FS__DEMO_MODE' ) ) {
-        define( 'WP_FS__DEMO_MODE', false );
-    }
-    if ( ! defined( 'FS_SDK__SSLVERIFY' ) ) {
-        define( 'FS_SDK__SSLVERIFY', false );
-    }
\ No newline at end of file
+    if (! defined('WP_FS__DEMO_MODE')) {
+        define('WP_FS__DEMO_MODE', false);
+    }
+    if (! defined('FS_SDK__SSLVERIFY')) {
+        define('FS_SDK__SSLVERIFY', false);
+    }
diff --git a/freemius/includes/class-freemius-abstract.php b/freemius/includes/class-freemius-abstract.php
index 18d9fb59d2b95549a6371def323059df86761566..48424a1d55f0a0a485cb35a5e972f5a9b044ce12 100644
--- a/freemius/includes/class-freemius-abstract.php
+++ b/freemius/includes/class-freemius-abstract.php
@@ -1,597 +1,614 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.7
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-
-	/**
-	 * - Each instance of Freemius class represents a single plugin
-	 * install by a single user (the installer of the plugin).
-	 *
-	 * - Each website can only have one install of the same plugin.
-	 *
-	 * - Install entity is only created after a user connects his account with Freemius.
-	 *
-	 * Class Freemius_Abstract
-	 */
-	abstract class Freemius_Abstract {
-
-		#----------------------------------------------------------------------------------
-		#region Identity
-		#----------------------------------------------------------------------------------
-
-		/**
-		 * Check if user has connected his account (opted-in).
-		 *
-		 * Note:
-		 *      If the user opted-in and opted-out on a later stage,
-		 *      this will still return true. If you want to check if the
-		 *      user is currently opted-in, use:
-		 *          `$fs->is_registered() && $fs->is_tracking_allowed()`
-		 *
-		 * @since 1.0.1
-		 * @return bool
-		 */
-		abstract function is_registered();
-
-		/**
-		 * Check if the user skipped connecting the account with Freemius.
-		 *
-		 * @since 1.0.7
-		 *
-		 * @return bool
-		 */
-		abstract function is_anonymous();
-
-		/**
-		 * Check if the user currently in activation mode.
-		 *
-		 * @since 1.0.7
-		 *
-		 * @return bool
-		 */
-		abstract function is_activation_mode();
-
-		#endregion
-
-		#----------------------------------------------------------------------------------
-		#region Usage Tracking
-		#----------------------------------------------------------------------------------
-
-		/**
-		 * Returns TRUE if the user opted-in and didn't disconnect (opt-out).
-		 *
-		 * @author Leo Fajardo (@leorw)
-		 * @since 1.2.1.5
-		 *
-		 * @return bool
-		 */
-		abstract function is_tracking_allowed();
-
-		/**
-		 * Returns TRUE if the user never opted-in or manually opted-out.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since 1.2.1.5
-		 *
-		 * @return bool
-		 */
-		function is_tracking_prohibited() {
-			return ! $this->is_registered() || ! $this->is_tracking_allowed();
-		}
-
-		/**
-		 * Opt-out from usage tracking.
-		 *
-		 * Note: This will not delete the account information but will stop all tracking.
-		 *
-		 * Returns:
-		 *  1. FALSE  - If the user never opted-in.
-		 *  2. TRUE   - If successfully opted-out.
-		 *  3. object - API Result on failure.
-		 *
-		 * @author Leo Fajardo (@leorw)
-		 * @since  1.2.1.5
-		 *
-		 * @return bool|object
-		 */
-		abstract function stop_tracking();
-
-		/**
-		 * Opt-in back into usage tracking.
-		 *
-		 * Note: This will only work if the user opted-in previously.
-		 *
-		 * Returns:
-		 *  1. FALSE  - If the user never opted-in.
-		 *  2. TRUE   - If successfully opted-in back to usage tracking.
-		 *  3. object - API result on failure.
-		 *
-		 * @author Leo Fajardo (@leorw)
-		 * @since  1.2.1.5
-		 *
-		 * @return bool|object
-		 */
-		abstract function allow_tracking();
-
-		#endregion
-
-		#----------------------------------------------------------------------------------
-		#region Module Type
-		#----------------------------------------------------------------------------------
-
-		/**
-		 * Checks if the plugin's type is "plugin". The other type is "theme".
-		 *
-		 * @author Leo Fajardo (@leorw)
-		 * @since  1.2.2
-		 *
-		 * @return bool
-		 */
-		abstract function is_plugin();
-
-		/**
-		 * Checks if the module type is "theme". The other type is "plugin".
-		 *
-		 * @author Leo Fajardo (@leorw)
-		 * @since  1.2.2
-		 *
-		 * @return bool
-		 */
-		function is_theme() {
-			return ( ! $this->is_plugin() );
-		}
-
-		#endregion
-
-		#----------------------------------------------------------------------------------
-		#region Permissions
-		#----------------------------------------------------------------------------------
-
-		/**
-		 * Check if plugin must be WordPress.org compliant.
-		 *
-		 * @since 1.0.7
-		 *
-		 * @return bool
-		 */
-		abstract function is_org_repo_compliant();
-
-		/**
-		 * Check if plugin is allowed to install executable files.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.5
-		 *
-		 * @return bool
-		 */
-		function is_allowed_to_install() {
-			return ( $this->is_premium() || ! $this->is_org_repo_compliant() );
-		}
-
-		#endregion
-
-		/**
-		 * Check if user in trial or in free plan (not paying).
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.4
-		 *
-		 * @return bool
-		 */
-		function is_not_paying() {
-			return ( $this->is_trial() || $this->is_free_plan() );
-		}
-
-		/**
-		 * Check if the user has an activated and valid paid license on current plugin's install.
-		 *
-		 * @since 1.0.9
-		 *
-		 * @return bool
-		 */
-		abstract function is_paying();
-
-		/**
-		 * Check if the user is paying or in trial.
-		 *
-		 * @since 1.0.9
-		 *
-		 * @return bool
-		 */
-		function is_paying_or_trial() {
-			return ( $this->is_paying() || $this->is_trial() );
-		}
-
-		/**
-		 * Check if user in a trial or have feature enabled license.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.7
-		 *
-		 * @return bool
-		 */
-		abstract function can_use_premium_code();
-
-		#----------------------------------------------------------------------------------
-		#region Premium Only
-		#----------------------------------------------------------------------------------
-
-		/**
-		 * All logic wrapped in methods with "__premium_only()" suffix will be only
-		 * included in the premium code.
-		 *
-		 * Example:
-		 *      if ( freemius()->is__premium_only() ) {
-		 *          ...
-		 *      }
-		 */
-
-		/**
-		 * Returns true when running premium plugin code.
-		 *
-		 * @since 1.0.9
-		 *
-		 * @return bool
-		 */
-		function is__premium_only() {
-			return $this->is_premium();
-		}
-
-		/**
-		 * Check if the user has an activated and valid paid license on current plugin's install.
-		 *
-		 * @since 1.0.9
-		 *
-		 * @return bool
-		 *
-		 */
-		function is_paying__premium_only() {
-			return ( $this->is__premium_only() && $this->is_paying() );
-		}
-
-		/**
-		 * All code wrapped in this statement will be only included in the premium code.
-		 *
-		 * @since  1.0.9
-		 *
-		 * @param string $plan  Plan name.
-		 * @param bool   $exact If true, looks for exact plan. If false, also check "higher" plans.
-		 *
-		 * @return bool
-		 */
-		function is_plan__premium_only( $plan, $exact = false ) {
-			return ( $this->is_premium() && $this->is_plan( $plan, $exact ) );
-		}
-
-		/**
-		 * Check if plan matches active license' plan or active trial license' plan.
-		 *
-		 * All code wrapped in this statement will be only included in the premium code.
-		 *
-		 * @since  1.0.9
-		 *
-		 * @param string $plan  Plan name.
-		 * @param bool   $exact If true, looks for exact plan. If false, also check "higher" plans.
-		 *
-		 * @return bool
-		 */
-		function is_plan_or_trial__premium_only( $plan, $exact = false ) {
-			return ( $this->is_premium() && $this->is_plan_or_trial( $plan, $exact ) );
-		}
-
-		/**
-		 * Check if the user is paying or in trial.
-		 *
-		 * All code wrapped in this statement will be only included in the premium code.
-		 *
-		 * @since 1.0.9
-		 *
-		 * @return bool
-		 */
-		function is_paying_or_trial__premium_only() {
-			return $this->is_premium() && $this->is_paying_or_trial();
-		}
-
-		/**
-		 * Check if the user has an activated and valid paid license on current plugin's install.
-		 *
-		 * @since      1.0.4
-		 *
-		 * @return bool
-		 *
-		 * @deprecated Method name is confusing since it's not clear from the name the code will be removed.
-		 * @using      Alias to is_paying__premium_only()
-		 */
-		function is_paying__fs__() {
-			return $this->is_paying__premium_only();
-		}
-
-		/**
-		 * Check if user in a trial or have feature enabled license.
-		 *
-		 * All code wrapped in this statement will be only included in the premium code.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.9
-		 *
-		 * @return bool
-		 */
-		function can_use_premium_code__premium_only() {
-			return $this->is_premium() && $this->can_use_premium_code();
-		}
-
-		#endregion
-
-		#----------------------------------------------------------------------------------
-		#region Trial
-		#----------------------------------------------------------------------------------
-
-		/**
-		 * Check if the user in a trial.
-		 *
-		 * @since 1.0.3
-		 *
-		 * @return bool
-		 */
-		abstract function is_trial();
-
-		/**
-		 * Check if trial already utilized.
-		 *
-		 * @since 1.0.9
-		 *
-		 * @return bool
-		 */
-		abstract function is_trial_utilized();
-
-		#endregion
-
-		#----------------------------------------------------------------------------------
-		#region Plans
-		#----------------------------------------------------------------------------------
-
-		/**
-		 * Check if the user is on the free plan of the product.
-		 *
-		 * @since 1.0.4
-		 *
-		 * @return bool
-		 */
-		abstract function is_free_plan();
-
-		/**
-		 * @since  1.0.2
-		 *
-		 * @param string $plan  Plan name.
-		 * @param bool   $exact If true, looks for exact plan. If false, also check "higher" plans.
-		 *
-		 * @return bool
-		 */
-		abstract function is_plan( $plan, $exact = false );
-
-		/**
-		 * Check if plan based on trial. If not in trial mode, should return false.
-		 *
-		 * @since  1.0.9
-		 *
-		 * @param string $plan  Plan name.
-		 * @param bool   $exact If true, looks for exact plan. If false, also check "higher" plans.
-		 *
-		 * @return bool
-		 */
-		abstract function is_trial_plan( $plan, $exact = false );
-
-		/**
-		 * Check if plan matches active license' plan or active trial license' plan.
-		 *
-		 * @since  1.0.9
-		 *
-		 * @param string $plan  Plan name.
-		 * @param bool   $exact If true, looks for exact plan. If false, also check "higher" plans.
-		 *
-		 * @return bool
-		 */
-		function is_plan_or_trial( $plan, $exact = false ) {
-			return $this->is_plan( $plan, $exact ) ||
-			       $this->is_trial_plan( $plan, $exact );
-		}
-
-		/**
-		 * Check if plugin has any paid plans.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.7
-		 *
-		 * @return bool
-		 */
-		abstract function has_paid_plan();
-
-		/**
-		 * Check if plugin has any free plan, or is it premium only.
-		 *
-		 * Note: If no plans configured, assume plugin is free.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.7
-		 *
-		 * @return bool
-		 */
-		abstract function has_free_plan();
-
-		/**
-		 * Check if plugin is premium only (no free plans).
-		 *
-		 * NOTE: is__premium_only() is very different method, don't get confused.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.9
-		 *
-		 * @return bool
-		 */
-		abstract function is_only_premium();
-
-		/**
-		 * Check if module has a premium code version.
-		 *
-		 * Serviceware module might be freemium without any
-		 * premium code version, where the paid features
-		 * are all part of the service.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.1.6
-		 *
-		 * @return bool
-		 */
-		abstract function has_premium_version();
-
-		/**
-		 * Check if module has any release on Freemius,
-		 * or all plugin's code is on WordPress.org (Serviceware).
-		 *
-		 * @return bool
-		 */
-		function has_release_on_freemius() {
-			return ! $this->is_org_repo_compliant() ||
-			       $this->has_premium_version();
-		}
-
-		/**
-		 * Checks if it's a freemium plugin.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.9
-		 *
-		 * @return bool
-		 */
-		function is_freemium() {
-			return $this->has_paid_plan() &&
-			       $this->has_free_plan();
-		}
-
-		/**
-		 * Check if module has only one plan.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.1.7
-		 *
-		 * @return bool
-		 */
-		abstract function is_single_plan();
-
-		#endregion
-
-		/**
-		 * Check if running payments in sandbox mode.
-		 *
-		 * @since 1.0.4
-		 *
-		 * @return bool
-		 */
-		abstract function is_payments_sandbox();
-
-		/**
-		 * Check if running test vs. live plugin.
-		 *
-		 * @since 1.0.5
-		 *
-		 * @return bool
-		 */
-		abstract function is_live();
-
-		/**
-		 * Check if running premium plugin code.
-		 *
-		 * @since 1.0.5
-		 *
-		 * @return bool
-		 */
-		abstract function is_premium();
-
-		/**
-		 * Get upgrade URL.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.2
-		 *
-		 * @param string $period Billing cycle.
-		 *
-		 * @return string
-		 */
-		abstract function get_upgrade_url( $period = WP_FS__PERIOD_ANNUALLY );
-
-		/**
-		 * Check if Freemius was first added in a plugin update.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.5
-		 *
-		 * @return bool
-		 */
-		function is_plugin_update() {
-			return ! $this->is_plugin_new_install();
-		}
-
-		/**
-		 * Check if Freemius was part of the plugin when the user installed it first.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.5
-		 *
-		 * @return bool
-		 */
-		abstract function is_plugin_new_install();
-
-		#----------------------------------------------------------------------------------
-		#region Marketing
-		#----------------------------------------------------------------------------------
-
-		/**
-		 * Check if current user purchased any other plugins before.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.9
-		 *
-		 * @return bool
-		 */
-		abstract function has_purchased_before();
-
-		/**
-		 * Check if current user classified as an agency.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.9
-		 *
-		 * @return bool
-		 */
-		abstract function is_agency();
-
-		/**
-		 * Check if current user classified as a developer.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.9
-		 *
-		 * @return bool
-		 */
-		abstract function is_developer();
-
-		/**
-		 * Check if current user classified as a business.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.9
-		 *
-		 * @return bool
-		 */
-		abstract function is_business();
-
-		#endregion
-	}
\ No newline at end of file
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.7
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+
+    /**
+     * - Each instance of Freemius class represents a single plugin
+     * install by a single user (the installer of the plugin).
+     *
+     * - Each website can only have one install of the same plugin.
+     *
+     * - Install entity is only created after a user connects his account with Freemius.
+     *
+     * Class Freemius_Abstract
+     */
+    abstract class Freemius_Abstract
+    {
+
+        #----------------------------------------------------------------------------------
+        #region Identity
+        #----------------------------------------------------------------------------------
+
+        /**
+         * Check if user has connected his account (opted-in).
+         *
+         * Note:
+         *      If the user opted-in and opted-out on a later stage,
+         *      this will still return true. If you want to check if the
+         *      user is currently opted-in, use:
+         *          `$fs->is_registered() && $fs->is_tracking_allowed()`
+         *
+         * @since 1.0.1
+         * @return bool
+         */
+        abstract public function is_registered();
+
+        /**
+         * Check if the user skipped connecting the account with Freemius.
+         *
+         * @since 1.0.7
+         *
+         * @return bool
+         */
+        abstract public function is_anonymous();
+
+        /**
+         * Check if the user currently in activation mode.
+         *
+         * @since 1.0.7
+         *
+         * @return bool
+         */
+        abstract public function is_activation_mode();
+
+        #endregion
+
+        #----------------------------------------------------------------------------------
+        #region Usage Tracking
+        #----------------------------------------------------------------------------------
+
+        /**
+         * Returns TRUE if the user opted-in and didn't disconnect (opt-out).
+         *
+         * @author Leo Fajardo (@leorw)
+         * @since 1.2.1.5
+         *
+         * @return bool
+         */
+        abstract public function is_tracking_allowed();
+
+        /**
+         * Returns TRUE if the user never opted-in or manually opted-out.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since 1.2.1.5
+         *
+         * @return bool
+         */
+        public function is_tracking_prohibited()
+        {
+            return ! $this->is_registered() || ! $this->is_tracking_allowed();
+        }
+
+        /**
+         * Opt-out from usage tracking.
+         *
+         * Note: This will not delete the account information but will stop all tracking.
+         *
+         * Returns:
+         *  1. FALSE  - If the user never opted-in.
+         *  2. TRUE   - If successfully opted-out.
+         *  3. object - API Result on failure.
+         *
+         * @author Leo Fajardo (@leorw)
+         * @since  1.2.1.5
+         *
+         * @return bool|object
+         */
+        abstract public function stop_tracking();
+
+        /**
+         * Opt-in back into usage tracking.
+         *
+         * Note: This will only work if the user opted-in previously.
+         *
+         * Returns:
+         *  1. FALSE  - If the user never opted-in.
+         *  2. TRUE   - If successfully opted-in back to usage tracking.
+         *  3. object - API result on failure.
+         *
+         * @author Leo Fajardo (@leorw)
+         * @since  1.2.1.5
+         *
+         * @return bool|object
+         */
+        abstract public function allow_tracking();
+
+        #endregion
+
+        #----------------------------------------------------------------------------------
+        #region Module Type
+        #----------------------------------------------------------------------------------
+
+        /**
+         * Checks if the plugin's type is "plugin". The other type is "theme".
+         *
+         * @author Leo Fajardo (@leorw)
+         * @since  1.2.2
+         *
+         * @return bool
+         */
+        abstract public function is_plugin();
+
+        /**
+         * Checks if the module type is "theme". The other type is "plugin".
+         *
+         * @author Leo Fajardo (@leorw)
+         * @since  1.2.2
+         *
+         * @return bool
+         */
+        public function is_theme()
+        {
+            return (! $this->is_plugin());
+        }
+
+        #endregion
+
+        #----------------------------------------------------------------------------------
+        #region Permissions
+        #----------------------------------------------------------------------------------
+
+        /**
+         * Check if plugin must be WordPress.org compliant.
+         *
+         * @since 1.0.7
+         *
+         * @return bool
+         */
+        abstract public function is_org_repo_compliant();
+
+        /**
+         * Check if plugin is allowed to install executable files.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.5
+         *
+         * @return bool
+         */
+        public function is_allowed_to_install()
+        {
+            return ($this->is_premium() || ! $this->is_org_repo_compliant());
+        }
+
+        #endregion
+
+        /**
+         * Check if user in trial or in free plan (not paying).
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.4
+         *
+         * @return bool
+         */
+        public function is_not_paying()
+        {
+            return ($this->is_trial() || $this->is_free_plan());
+        }
+
+        /**
+         * Check if the user has an activated and valid paid license on current plugin's install.
+         *
+         * @since 1.0.9
+         *
+         * @return bool
+         */
+        abstract public function is_paying();
+
+        /**
+         * Check if the user is paying or in trial.
+         *
+         * @since 1.0.9
+         *
+         * @return bool
+         */
+        public function is_paying_or_trial()
+        {
+            return ($this->is_paying() || $this->is_trial());
+        }
+
+        /**
+         * Check if user in a trial or have feature enabled license.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.7
+         *
+         * @return bool
+         */
+        abstract public function can_use_premium_code();
+
+        #----------------------------------------------------------------------------------
+        #region Premium Only
+        #----------------------------------------------------------------------------------
+
+        /**
+         * All logic wrapped in methods with "__premium_only()" suffix will be only
+         * included in the premium code.
+         *
+         * Example:
+         *      if ( freemius()->is__premium_only() ) {
+         *          ...
+         *      }
+         */
+
+        /**
+         * Returns true when running premium plugin code.
+         *
+         * @since 1.0.9
+         *
+         * @return bool
+         */
+        public function is__premium_only()
+        {
+            return $this->is_premium();
+        }
+
+        /**
+         * Check if the user has an activated and valid paid license on current plugin's install.
+         *
+         * @since 1.0.9
+         *
+         * @return bool
+         *
+         */
+        public function is_paying__premium_only()
+        {
+            return ($this->is__premium_only() && $this->is_paying());
+        }
+
+        /**
+         * All code wrapped in this statement will be only included in the premium code.
+         *
+         * @since  1.0.9
+         *
+         * @param string $plan  Plan name.
+         * @param bool   $exact If true, looks for exact plan. If false, also check "higher" plans.
+         *
+         * @return bool
+         */
+        public function is_plan__premium_only($plan, $exact = false)
+        {
+            return ($this->is_premium() && $this->is_plan($plan, $exact));
+        }
+
+        /**
+         * Check if plan matches active license' plan or active trial license' plan.
+         *
+         * All code wrapped in this statement will be only included in the premium code.
+         *
+         * @since  1.0.9
+         *
+         * @param string $plan  Plan name.
+         * @param bool   $exact If true, looks for exact plan. If false, also check "higher" plans.
+         *
+         * @return bool
+         */
+        public function is_plan_or_trial__premium_only($plan, $exact = false)
+        {
+            return ($this->is_premium() && $this->is_plan_or_trial($plan, $exact));
+        }
+
+        /**
+         * Check if the user is paying or in trial.
+         *
+         * All code wrapped in this statement will be only included in the premium code.
+         *
+         * @since 1.0.9
+         *
+         * @return bool
+         */
+        public function is_paying_or_trial__premium_only()
+        {
+            return $this->is_premium() && $this->is_paying_or_trial();
+        }
+
+        /**
+         * Check if the user has an activated and valid paid license on current plugin's install.
+         *
+         * @since      1.0.4
+         *
+         * @return bool
+         *
+         * @deprecated Method name is confusing since it's not clear from the name the code will be removed.
+         * @using      Alias to is_paying__premium_only()
+         */
+        public function is_paying__fs__()
+        {
+            return $this->is_paying__premium_only();
+        }
+
+        /**
+         * Check if user in a trial or have feature enabled license.
+         *
+         * All code wrapped in this statement will be only included in the premium code.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.9
+         *
+         * @return bool
+         */
+        public function can_use_premium_code__premium_only()
+        {
+            return $this->is_premium() && $this->can_use_premium_code();
+        }
+
+        #endregion
+
+        #----------------------------------------------------------------------------------
+        #region Trial
+        #----------------------------------------------------------------------------------
+
+        /**
+         * Check if the user in a trial.
+         *
+         * @since 1.0.3
+         *
+         * @return bool
+         */
+        abstract public function is_trial();
+
+        /**
+         * Check if trial already utilized.
+         *
+         * @since 1.0.9
+         *
+         * @return bool
+         */
+        abstract public function is_trial_utilized();
+
+        #endregion
+
+        #----------------------------------------------------------------------------------
+        #region Plans
+        #----------------------------------------------------------------------------------
+
+        /**
+         * Check if the user is on the free plan of the product.
+         *
+         * @since 1.0.4
+         *
+         * @return bool
+         */
+        abstract public function is_free_plan();
+
+        /**
+         * @since  1.0.2
+         *
+         * @param string $plan  Plan name.
+         * @param bool   $exact If true, looks for exact plan. If false, also check "higher" plans.
+         *
+         * @return bool
+         */
+        abstract public function is_plan($plan, $exact = false);
+
+        /**
+         * Check if plan based on trial. If not in trial mode, should return false.
+         *
+         * @since  1.0.9
+         *
+         * @param string $plan  Plan name.
+         * @param bool   $exact If true, looks for exact plan. If false, also check "higher" plans.
+         *
+         * @return bool
+         */
+        abstract public function is_trial_plan($plan, $exact = false);
+
+        /**
+         * Check if plan matches active license' plan or active trial license' plan.
+         *
+         * @since  1.0.9
+         *
+         * @param string $plan  Plan name.
+         * @param bool   $exact If true, looks for exact plan. If false, also check "higher" plans.
+         *
+         * @return bool
+         */
+        public function is_plan_or_trial($plan, $exact = false)
+        {
+            return $this->is_plan($plan, $exact) ||
+                   $this->is_trial_plan($plan, $exact);
+        }
+
+        /**
+         * Check if plugin has any paid plans.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.7
+         *
+         * @return bool
+         */
+        abstract public function has_paid_plan();
+
+        /**
+         * Check if plugin has any free plan, or is it premium only.
+         *
+         * Note: If no plans configured, assume plugin is free.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.7
+         *
+         * @return bool
+         */
+        abstract public function has_free_plan();
+
+        /**
+         * Check if plugin is premium only (no free plans).
+         *
+         * NOTE: is__premium_only() is very different method, don't get confused.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.9
+         *
+         * @return bool
+         */
+        abstract public function is_only_premium();
+
+        /**
+         * Check if module has a premium code version.
+         *
+         * Serviceware module might be freemium without any
+         * premium code version, where the paid features
+         * are all part of the service.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.1.6
+         *
+         * @return bool
+         */
+        abstract public function has_premium_version();
+
+        /**
+         * Check if module has any release on Freemius,
+         * or all plugin's code is on WordPress.org (Serviceware).
+         *
+         * @return bool
+         */
+        public function has_release_on_freemius()
+        {
+            return ! $this->is_org_repo_compliant() ||
+                   $this->has_premium_version();
+        }
+
+        /**
+         * Checks if it's a freemium plugin.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.9
+         *
+         * @return bool
+         */
+        public function is_freemium()
+        {
+            return $this->has_paid_plan() &&
+                   $this->has_free_plan();
+        }
+
+        /**
+         * Check if module has only one plan.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.1.7
+         *
+         * @return bool
+         */
+        abstract public function is_single_plan();
+
+        #endregion
+
+        /**
+         * Check if running payments in sandbox mode.
+         *
+         * @since 1.0.4
+         *
+         * @return bool
+         */
+        abstract public function is_payments_sandbox();
+
+        /**
+         * Check if running test vs. live plugin.
+         *
+         * @since 1.0.5
+         *
+         * @return bool
+         */
+        abstract public function is_live();
+
+        /**
+         * Check if running premium plugin code.
+         *
+         * @since 1.0.5
+         *
+         * @return bool
+         */
+        abstract public function is_premium();
+
+        /**
+         * Get upgrade URL.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.2
+         *
+         * @param string $period Billing cycle.
+         *
+         * @return string
+         */
+        abstract public function get_upgrade_url($period = WP_FS__PERIOD_ANNUALLY);
+
+        /**
+         * Check if Freemius was first added in a plugin update.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.5
+         *
+         * @return bool
+         */
+        public function is_plugin_update()
+        {
+            return ! $this->is_plugin_new_install();
+        }
+
+        /**
+         * Check if Freemius was part of the plugin when the user installed it first.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.5
+         *
+         * @return bool
+         */
+        abstract public function is_plugin_new_install();
+
+        #----------------------------------------------------------------------------------
+        #region Marketing
+        #----------------------------------------------------------------------------------
+
+        /**
+         * Check if current user purchased any other plugins before.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.9
+         *
+         * @return bool
+         */
+        abstract public function has_purchased_before();
+
+        /**
+         * Check if current user classified as an agency.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.9
+         *
+         * @return bool
+         */
+        abstract public function is_agency();
+
+        /**
+         * Check if current user classified as a developer.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.9
+         *
+         * @return bool
+         */
+        abstract public function is_developer();
+
+        /**
+         * Check if current user classified as a business.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.9
+         *
+         * @return bool
+         */
+        abstract public function is_business();
+
+        #endregion
+    }
diff --git a/freemius/includes/class-fs-admin-notices.php b/freemius/includes/class-fs-admin-notices.php
index 01b197af532ad2955401e1e099a655f1c905b945..75047fa3dd68c2a4b735d2aeb6d9b973ab7faed9 100644
--- a/freemius/includes/class-fs-admin-notices.php
+++ b/freemius/includes/class-fs-admin-notices.php
@@ -6,7 +6,7 @@
      * @since       2.0.0
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
@@ -15,7 +15,8 @@
      *
      * Class FS_Admin_Notices
      */
-    class FS_Admin_Notices {
+    class FS_Admin_Notices
+    {
         /**
          * @since 1.2.2
          *
@@ -60,9 +61,10 @@
          *
          * @return FS_Admin_Notices
          */
-        static function instance( $id, $title = '', $module_unique_affix = '', $is_network_and_blog_admins = false ) {
-            if ( ! isset( self::$_instances[ $id ] ) ) {
-                self::$_instances[ $id ] = new FS_Admin_Notices( $id, $title, $module_unique_affix, $is_network_and_blog_admins );
+        public static function instance($id, $title = '', $module_unique_affix = '', $is_network_and_blog_admins = false)
+        {
+            if (! isset(self::$_instances[ $id ])) {
+                self::$_instances[ $id ] = new FS_Admin_Notices($id, $title, $module_unique_affix, $is_network_and_blog_admins);
             }
 
             return self::$_instances[ $id ];
@@ -75,13 +77,14 @@
          * @param bool   $is_network_and_blog_admins Whether or not the message should be shown both on network and
          *                                           blog admin pages.
          */
-        protected function __construct( $id, $title = '', $module_unique_affix = '', $is_network_and_blog_admins = false ) {
+        protected function __construct($id, $title = '', $module_unique_affix = '', $is_network_and_blog_admins = false)
+        {
             $this->_id                  = $id;
             $this->_title               = $title;
             $this->_module_unique_affix = $module_unique_affix;
             $this->_is_multisite        = is_multisite();
 
-            if ( $this->_is_multisite ) {
+            if ($this->_is_multisite) {
                 $this->_blog_id = get_current_blog_id();
 
                 $this->_network_notices = FS_Admin_Notice_Manager::instance(
@@ -118,7 +121,7 @@
          *
          * @uses   add_action()
          */
-        function add(
+        public function add(
             $message,
             $title = '',
             $type = 'success',
@@ -127,10 +130,10 @@
             $store_if_sticky = true,
             $network_level_or_blog_id = null
         ) {
-            if ( $this->should_use_network_notices( $id, $network_level_or_blog_id ) ) {
+            if ($this->should_use_network_notices($id, $network_level_or_blog_id)) {
                 $notices = $this->_network_notices;
             } else {
-                $notices = $this->get_site_notices( $network_level_or_blog_id );
+                $notices = $this->get_site_notices($network_level_or_blog_id);
             }
 
             $notices->add(
@@ -150,18 +153,19 @@
          * @param string|string[] $ids
          * @param int|null        $network_level_or_blog_id
          */
-        function remove_sticky( $ids, $network_level_or_blog_id = null ) {
-            if ( ! is_array( $ids ) ) {
+        public function remove_sticky($ids, $network_level_or_blog_id = null)
+        {
+            if (! is_array($ids)) {
                 $ids = array( $ids );
             }
 
-            if ( $this->should_use_network_notices( $ids[0], $network_level_or_blog_id ) ) {
+            if ($this->should_use_network_notices($ids[0], $network_level_or_blog_id)) {
                 $notices = $this->_network_notices;
             } else {
-                $notices = $this->get_site_notices( $network_level_or_blog_id );
+                $notices = $this->get_site_notices($network_level_or_blog_id);
             }
 
-            return $notices->remove_sticky( $ids );
+            return $notices->remove_sticky($ids);
         }
 
         /**
@@ -175,14 +179,15 @@
          *
          * @return bool
          */
-        function has_sticky( $id, $network_level_or_blog_id = null ) {
-            if ( $this->should_use_network_notices( $id, $network_level_or_blog_id ) ) {
+        public function has_sticky($id, $network_level_or_blog_id = null)
+        {
+            if ($this->should_use_network_notices($id, $network_level_or_blog_id)) {
                 $notices = $this->_network_notices;
             } else {
-                $notices = $this->get_site_notices( $network_level_or_blog_id );
+                $notices = $this->get_site_notices($network_level_or_blog_id);
             }
 
-            return $notices->has_sticky( $id );
+            return $notices->has_sticky($id);
         }
 
         /**
@@ -201,7 +206,7 @@
          * @param bool        $is_network_and_blog_admins Whether or not the message should be shown both on network and
          *                                                blog admin pages.
          */
-        function add_sticky(
+        public function add_sticky(
             $message,
             $id,
             $title = '',
@@ -211,13 +216,13 @@
             $plugin_title = null,
             $is_network_and_blog_admins = false
         ) {
-            if ( $this->should_use_network_notices( $id, $network_level_or_blog_id ) ) {
+            if ($this->should_use_network_notices($id, $network_level_or_blog_id)) {
                 $notices = $this->_network_notices;
             } else {
-                $notices = $this->get_site_notices( $network_level_or_blog_id );
+                $notices = $this->get_site_notices($network_level_or_blog_id);
             }
 
-            $notices->add_sticky( $message, $id, $title, $type, $wp_user_id, $plugin_title, $is_network_and_blog_admins );
+            $notices->add_sticky($message, $id, $title, $type, $wp_user_id, $plugin_title, $is_network_and_blog_admins);
         }
 
         /**
@@ -228,18 +233,19 @@
          *
          * @param int|null $network_level_or_blog_id
          */
-        function clear_all_sticky( $network_level_or_blog_id = null ) {
-            if ( ! $this->_is_multisite ||
+        public function clear_all_sticky($network_level_or_blog_id = null)
+        {
+            if (! $this->_is_multisite ||
                  false === $network_level_or_blog_id ||
                  0 == $network_level_or_blog_id ||
-                 is_null( $network_level_or_blog_id )
+                 is_null($network_level_or_blog_id)
             ) {
-                $notices = $this->get_site_notices( $network_level_or_blog_id );
+                $notices = $this->get_site_notices($network_level_or_blog_id);
                 $notices->clear_all_sticky();
             }
 
-            if ( $this->_is_multisite &&
-                 ( true === $network_level_or_blog_id || is_null( $network_level_or_blog_id ) )
+            if ($this->_is_multisite &&
+                 (true === $network_level_or_blog_id || is_null($network_level_or_blog_id))
             ) {
                 $this->_network_notices->clear_all_sticky();
             }
@@ -257,8 +263,9 @@
          * @param bool   $is_sticky
          * @param string $id Message ID
          */
-        function add_all( $message, $title = '', $type = 'success', $is_sticky = false, $id = '' ) {
-            $this->add( $message, $title, $type, $is_sticky, true, $id );
+        public function add_all($message, $title = '', $type = 'success', $is_sticky = false, $id = '')
+        {
+            $this->add($message, $title, $type, $is_sticky, true, $id);
         }
 
         #--------------------------------------------------------------------------------
@@ -273,8 +280,9 @@
          *
          * @return FS_Admin_Notice_Manager
          */
-        private function get_site_notices( $blog_id = 0 ) {
-            if ( 0 == $blog_id || $blog_id == $this->_blog_id ) {
+        private function get_site_notices($blog_id = 0)
+        {
+            if (0 == $blog_id || $blog_id == $this->_blog_id) {
                 return $this->_notices;
             }
 
@@ -298,18 +306,19 @@
          *
          * @return bool
          */
-        private function should_use_network_notices( $id = '', $network_level_or_blog_id = null ) {
-            if ( ! $this->_is_multisite ) {
+        private function should_use_network_notices($id = '', $network_level_or_blog_id = null)
+        {
+            if (! $this->_is_multisite) {
                 // Not a multisite environment.
                 return false;
             }
 
-            if ( is_numeric( $network_level_or_blog_id ) ) {
+            if (is_numeric($network_level_or_blog_id)) {
                 // Explicitly asked to use a specified blog storage.
                 return false;
             }
 
-            if ( is_bool( $network_level_or_blog_id ) ) {
+            if (is_bool($network_level_or_blog_id)) {
                 // Explicitly specified whether should use the network or blog level storage.
                 return $network_level_or_blog_id;
             }
@@ -318,4 +327,4 @@
         }
 
         #endregion
-    }
\ No newline at end of file
+    }
diff --git a/freemius/includes/class-fs-api.php b/freemius/includes/class-fs-api.php
index ec24ea27cd03da769dc65819170d21e070d42a4c..92fb5bc2801a892e653b1de7ff70549c4c042d13 100644
--- a/freemius/includes/class-fs-api.php
+++ b/freemius/includes/class-fs-api.php
@@ -1,60 +1,61 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.4
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	/**
-	 * Class FS_Api
-	 *
-	 * Wraps Freemius API SDK to handle:
-	 *      1. Clock sync.
-	 *      2. Fallback to HTTP when HTTPS fails.
-	 *      3. Adds caching layer to GET requests.
-	 *      4. Adds consistency for failed requests by using last cached version.
-	 */
-	class FS_Api {
-		/**
-		 * @var FS_Api[]
-		 */
-		private static $_instances = array();
-
-		/**
-		 * @var FS_Option_Manager Freemius options, options-manager.
-		 */
-		private static $_options;
-
-		/**
-		 * @var FS_Cache_Manager API Caching layer
-		 */
-		private static $_cache;
-
-		/**
-		 * @var int Clock diff in seconds between current server to API server.
-		 */
-		private static $_clock_diff;
-
-		/**
-		 * @var Freemius_Api_WordPress
-		 */
-		private $_api;
-
-		/**
-		 * @var string
-		 */
-		private $_slug;
-
-		/**
-		 * @var FS_Logger
-		 * @since 1.0.4
-		 */
-		private $_logger;
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.4
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    /**
+     * Class FS_Api
+     *
+     * Wraps Freemius API SDK to handle:
+     *      1. Clock sync.
+     *      2. Fallback to HTTP when HTTPS fails.
+     *      3. Adds caching layer to GET requests.
+     *      4. Adds consistency for failed requests by using last cached version.
+     */
+    class FS_Api
+    {
+        /**
+         * @var FS_Api[]
+         */
+        private static $_instances = array();
+
+        /**
+         * @var FS_Option_Manager Freemius options, options-manager.
+         */
+        private static $_options;
+
+        /**
+         * @var FS_Cache_Manager API Caching layer
+         */
+        private static $_cache;
+
+        /**
+         * @var int Clock diff in seconds between current server to API server.
+         */
+        private static $_clock_diff;
+
+        /**
+         * @var Freemius_Api_WordPress
+         */
+        private $_api;
+
+        /**
+         * @var string
+         */
+        private $_slug;
+
+        /**
+         * @var FS_Logger
+         * @since 1.0.4
+         */
+        private $_logger;
 
         /**
          * @author Leo Fajardo (@leorw)
@@ -65,18 +66,18 @@
         private $_sdk_version;
 
         /**
-		 * @param string      $slug
-		 * @param string      $scope      'app', 'developer', 'user' or 'install'.
-		 * @param number      $id         Element's id.
-		 * @param string      $public_key Public key.
-		 * @param bool        $is_sandbox
-		 * @param bool|string $secret_key Element's secret key.
-		 * @param null|string $sdk_version
-		 *
-		 * @return FS_Api
-		 */
-		static function instance(
-		    $slug,
+         * @param string      $slug
+         * @param string      $scope      'app', 'developer', 'user' or 'install'.
+         * @param number      $id         Element's id.
+         * @param string      $public_key Public key.
+         * @param bool        $is_sandbox
+         * @param bool|string $secret_key Element's secret key.
+         * @param null|string $sdk_version
+         *
+         * @return FS_Api
+         */
+        public static function instance(
+            $slug,
             $scope,
             $id,
             $public_key,
@@ -84,48 +85,49 @@
             $secret_key = false,
             $sdk_version = null
         ) {
-			$identifier = md5( $slug . $scope . $id . $public_key . ( is_string( $secret_key ) ? $secret_key : '' ) . json_encode( $is_sandbox ) );
-
-			if ( ! isset( self::$_instances[ $identifier ] ) ) {
-				self::_init();
-
-				self::$_instances[ $identifier ] = new FS_Api( $slug, $scope, $id, $public_key, $secret_key, $is_sandbox, $sdk_version );
-			}
-
-			return self::$_instances[ $identifier ];
-		}
-
-		private static function _init() {
-			if ( isset( self::$_options ) ) {
-				return;
-			}
-
-			if ( ! class_exists( 'Freemius_Api_WordPress' ) ) {
-				require_once WP_FS__DIR_SDK . '/FreemiusWordPress.php';
-			}
-
-			self::$_options = FS_Option_Manager::get_manager( WP_FS__OPTIONS_OPTION_NAME, true, true );
-			self::$_cache   = FS_Cache_Manager::get_manager( WP_FS__API_CACHE_OPTION_NAME );
-
-			self::$_clock_diff = self::$_options->get_option( 'api_clock_diff', 0 );
-			Freemius_Api_WordPress::SetClockDiff( self::$_clock_diff );
-
-			if ( self::$_options->get_option( 'api_force_http', false ) ) {
-				Freemius_Api_WordPress::SetHttp();
-			}
-		}
-
-		/**
-		 * @param string      $slug
-		 * @param string      $scope      'app', 'developer', 'user' or 'install'.
-		 * @param number      $id         Element's id.
-		 * @param string      $public_key Public key.
-		 * @param bool|string $secret_key Element's secret key.
-		 * @param bool        $is_sandbox
-		 * @param null|string $sdk_version
-		 */
-		private function __construct(
-		    $slug,
+            $identifier = md5($slug . $scope . $id . $public_key . (is_string($secret_key) ? $secret_key : '') . json_encode($is_sandbox));
+
+            if (! isset(self::$_instances[ $identifier ])) {
+                self::_init();
+
+                self::$_instances[ $identifier ] = new FS_Api($slug, $scope, $id, $public_key, $secret_key, $is_sandbox, $sdk_version);
+            }
+
+            return self::$_instances[ $identifier ];
+        }
+
+        private static function _init()
+        {
+            if (isset(self::$_options)) {
+                return;
+            }
+
+            if (! class_exists('Freemius_Api_WordPress')) {
+                require_once WP_FS__DIR_SDK . '/FreemiusWordPress.php';
+            }
+
+            self::$_options = FS_Option_Manager::get_manager(WP_FS__OPTIONS_OPTION_NAME, true, true);
+            self::$_cache   = FS_Cache_Manager::get_manager(WP_FS__API_CACHE_OPTION_NAME);
+
+            self::$_clock_diff = self::$_options->get_option('api_clock_diff', 0);
+            Freemius_Api_WordPress::SetClockDiff(self::$_clock_diff);
+
+            if (self::$_options->get_option('api_force_http', false)) {
+                Freemius_Api_WordPress::SetHttp();
+            }
+        }
+
+        /**
+         * @param string      $slug
+         * @param string      $scope      'app', 'developer', 'user' or 'install'.
+         * @param number      $id         Element's id.
+         * @param string      $public_key Public key.
+         * @param bool|string $secret_key Element's secret key.
+         * @param bool        $is_sandbox
+         * @param null|string $sdk_version
+         */
+        private function __construct(
+            $slug,
             $scope,
             $id,
             $public_key,
@@ -133,221 +135,228 @@
             $is_sandbox,
             $sdk_version
         ) {
-			$this->_api = new Freemius_Api_WordPress( $scope, $id, $public_key, $secret_key, $is_sandbox );
-
-			$this->_slug        = $slug;
-			$this->_sdk_version = $sdk_version;
-			$this->_logger      = FS_Logger::get_logger( WP_FS__SLUG . '_' . $slug . '_api', WP_FS__DEBUG_SDK, WP_FS__ECHO_DEBUG_SDK );
-		}
-
-		/**
-		 * Find clock diff between server and API server, and store the diff locally.
-		 *
-		 * @param bool|int $diff
-		 *
-		 * @return bool|int False if clock diff didn't change, otherwise returns the clock diff in seconds.
-		 */
-		private function _sync_clock_diff( $diff = false ) {
-			$this->_logger->entrance();
-
-			// Sync clock and store.
-			$new_clock_diff = ( false === $diff ) ?
-				Freemius_Api_WordPress::FindClockDiff() :
-				$diff;
-
-			if ( $new_clock_diff === self::$_clock_diff ) {
-				return false;
-			}
-
-			self::$_clock_diff = $new_clock_diff;
-
-			// Update API clock's diff.
-			Freemius_Api_WordPress::SetClockDiff( self::$_clock_diff );
-
-			// Store new clock diff in storage.
-			self::$_options->set_option( 'api_clock_diff', self::$_clock_diff, true );
-
-			return $new_clock_diff;
-		}
-
-		/**
-		 * Override API call to enable retry with servers' clock auto sync method.
-		 *
-		 * @param string $path
-		 * @param string $method
-		 * @param array  $params
-		 * @param bool   $retry Is in retry or first call attempt.
-		 *
-		 * @return array|mixed|string|void
-		 */
-		private function _call( $path, $method = 'GET', $params = array(), $retry = false ) {
-            $this->_logger->entrance( $method . ':' . $path );
-
-            if ( self::is_temporary_down() ) {
+            $this->_api = new Freemius_Api_WordPress($scope, $id, $public_key, $secret_key, $is_sandbox);
+
+            $this->_slug        = $slug;
+            $this->_sdk_version = $sdk_version;
+            $this->_logger      = FS_Logger::get_logger(WP_FS__SLUG . '_' . $slug . '_api', WP_FS__DEBUG_SDK, WP_FS__ECHO_DEBUG_SDK);
+        }
+
+        /**
+         * Find clock diff between server and API server, and store the diff locally.
+         *
+         * @param bool|int $diff
+         *
+         * @return bool|int False if clock diff didn't change, otherwise returns the clock diff in seconds.
+         */
+        private function _sync_clock_diff($diff = false)
+        {
+            $this->_logger->entrance();
+
+            // Sync clock and store.
+            $new_clock_diff = (false === $diff) ?
+                Freemius_Api_WordPress::FindClockDiff() :
+                $diff;
+
+            if ($new_clock_diff === self::$_clock_diff) {
+                return false;
+            }
+
+            self::$_clock_diff = $new_clock_diff;
+
+            // Update API clock's diff.
+            Freemius_Api_WordPress::SetClockDiff(self::$_clock_diff);
+
+            // Store new clock diff in storage.
+            self::$_options->set_option('api_clock_diff', self::$_clock_diff, true);
+
+            return $new_clock_diff;
+        }
+
+        /**
+         * Override API call to enable retry with servers' clock auto sync method.
+         *
+         * @param string $path
+         * @param string $method
+         * @param array  $params
+         * @param bool   $retry Is in retry or first call attempt.
+         *
+         * @return array|mixed|string|void
+         */
+        private function _call($path, $method = 'GET', $params = array(), $retry = false)
+        {
+            $this->_logger->entrance($method . ':' . $path);
+
+            if (self::is_temporary_down()) {
                 $result = $this->get_temporary_unavailable_error();
             } else {
                 /**
                  * @since 2.3.0 Include the SDK version with all API requests that going through the API manager. IMPORTANT: Only pass the SDK version if the caller didn't include it yet.
                  */
-                if ( ! empty( $this->_sdk_version ) ) {
-                    if ( false === strpos( $path, 'sdk_version=' ) &&
-                         ! isset( $params['sdk_version'] )
+                if (! empty($this->_sdk_version)) {
+                    if (false === strpos($path, 'sdk_version=') &&
+                         ! isset($params['sdk_version'])
                     ) {
                         // Always add the sdk_version param in the querystring. DO NOT INCLUDE IT IN THE BODY PARAMS, OTHERWISE, IT MAY LEAD TO AN UNEXPECTED PARAMS PARSING IN CASES WHERE THE $params IS A REGULAR NON-ASSOCIATIVE ARRAY.
-                        $path = add_query_arg( 'sdk_version', $this->_sdk_version, $path );
+                        $path = add_query_arg('sdk_version', $this->_sdk_version, $path);
                     }
                 }
 
-                $result = $this->_api->Api( $path, $method, $params );
+                $result = $this->_api->Api($path, $method, $params);
 
-                if ( null !== $result &&
-                     isset( $result->error ) &&
-                     isset( $result->error->code ) &&
+                if (null !== $result &&
+                     isset($result->error) &&
+                     isset($result->error->code) &&
                      'request_expired' === $result->error->code
                 ) {
-                    if ( ! $retry ) {
-                        $diff = isset( $result->error->timestamp ) ?
-                            ( time() - strtotime( $result->error->timestamp ) ) :
+                    if (! $retry) {
+                        $diff = isset($result->error->timestamp) ?
+                            (time() - strtotime($result->error->timestamp)) :
                             false;
 
                         // Try to sync clock diff.
-                        if ( false !== $this->_sync_clock_diff( $diff ) ) {
+                        if (false !== $this->_sync_clock_diff($diff)) {
                             // Retry call with new synced clock.
-                            return $this->_call( $path, $method, $params, true );
+                            return $this->_call($path, $method, $params, true);
                         }
                     }
                 }
             }
 
-            if ( $this->_logger->is_on() && self::is_api_error( $result ) ) {
+            if ($this->_logger->is_on() && self::is_api_error($result)) {
                 // Log API errors.
-                $this->_logger->api_error( $result );
+                $this->_logger->api_error($result);
             }
 
             return $result;
         }
 
-		/**
-		 * Override API call to wrap it in servers' clock sync method.
-		 *
-		 * @param string $path
-		 * @param string $method
-		 * @param array  $params
-		 *
-		 * @return array|mixed|string|void
-		 * @throws Freemius_Exception
-		 */
-		function call( $path, $method = 'GET', $params = array() ) {
-			return $this->_call( $path, $method, $params );
-		}
-
-		/**
-		 * Get API request URL signed via query string.
-		 *
-		 * @param string $path
-		 *
-		 * @return string
-		 */
-		function get_signed_url( $path ) {
-			return $this->_api->GetSignedUrl( $path );
-		}
-
-		/**
-		 * @param string $path
-		 * @param bool   $flush
-		 * @param int    $expiration (optional) Time until expiration in seconds from now, defaults to 24 hours
-		 *
-		 * @return stdClass|mixed
-		 */
-		function get( $path = '/', $flush = false, $expiration = WP_FS__TIME_24_HOURS_IN_SEC ) {
-			$this->_logger->entrance( $path );
-
-			$cache_key = $this->get_cache_key( $path );
-
-			// Always flush during development.
-			if ( WP_FS__DEV_MODE || $this->_api->IsSandbox() ) {
-				$flush = true;
-			}
-
-			$cached_result = self::$_cache->get( $cache_key );
-
-			if ( $flush || ! self::$_cache->has_valid( $cache_key, $expiration ) ) {
-				$result = $this->call( $path );
-
-				if ( ! is_object( $result ) || isset( $result->error ) ) {
-					// Api returned an error.
-					if ( is_object( $cached_result ) &&
-					     ! isset( $cached_result->error )
-					) {
-						// If there was an error during a newer data fetch,
-						// fallback to older data version.
-						$result = $cached_result;
-
-						if ( $this->_logger->is_on() ) {
-							$this->_logger->warn( 'Fallback to cached API result: ' . var_export( $cached_result, true ) );
-						}
-					} else {
-					    if ( is_object( $result ) && isset( $result->error->http ) && 404 == $result->error->http ) {
+        /**
+         * Override API call to wrap it in servers' clock sync method.
+         *
+         * @param string $path
+         * @param string $method
+         * @param array  $params
+         *
+         * @return array|mixed|string|void
+         * @throws Freemius_Exception
+         */
+        public function call($path, $method = 'GET', $params = array())
+        {
+            return $this->_call($path, $method, $params);
+        }
+
+        /**
+         * Get API request URL signed via query string.
+         *
+         * @param string $path
+         *
+         * @return string
+         */
+        public function get_signed_url($path)
+        {
+            return $this->_api->GetSignedUrl($path);
+        }
+
+        /**
+         * @param string $path
+         * @param bool   $flush
+         * @param int    $expiration (optional) Time until expiration in seconds from now, defaults to 24 hours
+         *
+         * @return stdClass|mixed
+         */
+        public function get($path = '/', $flush = false, $expiration = WP_FS__TIME_24_HOURS_IN_SEC)
+        {
+            $this->_logger->entrance($path);
+
+            $cache_key = $this->get_cache_key($path);
+
+            // Always flush during development.
+            if (WP_FS__DEV_MODE || $this->_api->IsSandbox()) {
+                $flush = true;
+            }
+
+            $cached_result = self::$_cache->get($cache_key);
+
+            if ($flush || ! self::$_cache->has_valid($cache_key, $expiration)) {
+                $result = $this->call($path);
+
+                if (! is_object($result) || isset($result->error)) {
+                    // Api returned an error.
+                    if (is_object($cached_result) &&
+                         ! isset($cached_result->error)
+                    ) {
+                        // If there was an error during a newer data fetch,
+                        // fallback to older data version.
+                        $result = $cached_result;
+
+                        if ($this->_logger->is_on()) {
+                            $this->_logger->warn('Fallback to cached API result: ' . var_export($cached_result, true));
+                        }
+                    } else {
+                        if (is_object($result) && isset($result->error->http) && 404 == $result->error->http) {
                             /**
                              * If the response code is 404, cache the result for half of the `$expiration`.
                              *
                              * @author Leo Fajardo (@leorw)
                              * @since 2.2.4
                              */
-					        $expiration /= 2;
+                            $expiration /= 2;
                         } else {
                             // If no older data version and the response code is not 404, return result without
                             // caching the error.
                             return $result;
                         }
-					}
-				}
-
-				self::$_cache->set( $cache_key, $result, $expiration );
-
-				$cached_result = $result;
-			} else {
-				$this->_logger->log( 'Using cached API result.' );
-			}
-
-			return $cached_result;
-		}
-
-		/**
-		 * Check if there's a cached version of the API request.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.1
-		 *
-		 * @param string $path
-		 * @param string $method
-		 * @param array  $params
-		 *
-		 * @return bool
-		 */
-		function is_cached( $path, $method = 'GET', $params = array() ) {
-			$cache_key = $this->get_cache_key( $path, $method, $params );
-
-			return self::$_cache->has_valid( $cache_key );
-		}
-
-		/**
-		 * Invalidate a cached version of the API request.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.1.5
-		 *
-		 * @param string $path
-		 * @param string $method
-		 * @param array  $params
-		 */
-		function purge_cache( $path, $method = 'GET', $params = array() ) {
-			$this->_logger->entrance( "{$method}:{$path}" );
-
-			$cache_key = $this->get_cache_key( $path, $method, $params );
-
-			self::$_cache->purge( $cache_key );
-		}
+                    }
+                }
+
+                self::$_cache->set($cache_key, $result, $expiration);
+
+                $cached_result = $result;
+            } else {
+                $this->_logger->log('Using cached API result.');
+            }
+
+            return $cached_result;
+        }
+
+        /**
+         * Check if there's a cached version of the API request.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.1
+         *
+         * @param string $path
+         * @param string $method
+         * @param array  $params
+         *
+         * @return bool
+         */
+        public function is_cached($path, $method = 'GET', $params = array())
+        {
+            $cache_key = $this->get_cache_key($path, $method, $params);
+
+            return self::$_cache->has_valid($cache_key);
+        }
+
+        /**
+         * Invalidate a cached version of the API request.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.1.5
+         *
+         * @param string $path
+         * @param string $method
+         * @param array  $params
+         */
+        public function purge_cache($path, $method = 'GET', $params = array())
+        {
+            $this->_logger->entrance("{$method}:{$path}");
+
+            $cache_key = $this->get_cache_key($path, $method, $params);
+
+            self::$_cache->purge($cache_key);
+        }
 
         /**
          * Invalidate a cached version of the API request.
@@ -360,233 +369,243 @@
          * @param string $method
          * @param array  $params
          */
-        function update_cache_expiration( $path, $expiration = WP_FS__TIME_24_HOURS_IN_SEC, $method = 'GET', $params = array() ) {
-            $this->_logger->entrance( "{$method}:{$path}:{$expiration}" );
+        public function update_cache_expiration($path, $expiration = WP_FS__TIME_24_HOURS_IN_SEC, $method = 'GET', $params = array())
+        {
+            $this->_logger->entrance("{$method}:{$path}:{$expiration}");
 
-            $cache_key = $this->get_cache_key( $path, $method, $params );
+            $cache_key = $this->get_cache_key($path, $method, $params);
 
-            self::$_cache->update_expiration( $cache_key, $expiration );
+            self::$_cache->update_expiration($cache_key, $expiration);
         }
 
         /**
-		 * @param string $path
-		 * @param string $method
-		 * @param array  $params
-		 *
-		 * @return string
-		 * @throws \Freemius_Exception
-		 */
-		private function get_cache_key( $path, $method = 'GET', $params = array() ) {
-			$canonized = $this->_api->CanonizePath( $path );
-//			$exploded = explode('/', $canonized);
-//			return $method . '_' . array_pop($exploded) . '_' . md5($canonized . json_encode($params));
-			return strtolower( $method . ':' . $canonized ) . ( ! empty( $params ) ? '#' . md5( json_encode( $params ) ) : '' );
-		}
-
-		/**
-		 * Test API connectivity.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.9 If fails, try to fallback to HTTP.
-		 * @since  1.1.6 Added a 5-min caching mechanism, to prevent from overloading the server if the API if
-		 *         temporary down.
-		 *
-		 * @return bool True if successful connectivity to the API.
-		 */
-		static function test() {
-			self::_init();
-
-			$cache_key = 'ping_test';
-
-			$test = self::$_cache->get_valid( $cache_key, null );
-
-			if ( is_null( $test ) ) {
-				$test = Freemius_Api_WordPress::Test();
-
-				if ( false === $test && Freemius_Api_WordPress::IsHttps() ) {
-					// Fallback to HTTP, since HTTPS fails.
-					Freemius_Api_WordPress::SetHttp();
-
-					self::$_options->set_option( 'api_force_http', true, true );
-
-					$test = Freemius_Api_WordPress::Test();
-
-					if ( false === $test ) {
-						/**
-						 * API connectivity test fail also in HTTP request, therefore,
-						 * fallback to HTTPS to keep connection secure.
-						 *
-						 * @since 1.1.6
-						 */
-						self::$_options->set_option( 'api_force_http', false, true );
-					}
-				}
-
-				self::$_cache->set( $cache_key, $test, WP_FS__TIME_5_MIN_IN_SEC );
-			}
-
-			return $test;
-		}
-
-		/**
-		 * Check if API is temporary down.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.6
-		 *
-		 * @return bool
-		 */
-		static function is_temporary_down() {
-			self::_init();
-
-			$test = self::$_cache->get_valid( 'ping_test', null );
-
-			return ( false === $test );
-		}
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.6
-		 *
-		 * @return object
-		 */
-		private function get_temporary_unavailable_error() {
-			return (object) array(
-				'error' => (object) array(
-					'type'    => 'TemporaryUnavailable',
-					'message' => 'API is temporary unavailable, please retry in ' . ( self::$_cache->get_record_expiration( 'ping_test' ) - WP_FS__SCRIPT_START_TIME ) . ' sec.',
-					'code'    => 'temporary_unavailable',
-					'http'    => 503
-				)
-			);
-		}
-
-		/**
-		 * Ping API for connectivity test, and return result object.
-		 *
-		 * @author   Vova Feldman (@svovaf)
-		 * @since    1.0.9
-		 *
-		 * @param null|string $unique_anonymous_id
-		 * @param array       $params
-		 *
-		 * @return object
-		 */
-		function ping( $unique_anonymous_id = null, $params = array() ) {
-			$this->_logger->entrance();
-
-			if ( self::is_temporary_down() ) {
-				return $this->get_temporary_unavailable_error();
-			}
-
-			$pong = is_null( $unique_anonymous_id ) ?
-				Freemius_Api_WordPress::Ping() :
-				$this->_call( 'ping.json?' . http_build_query( array_merge(
-						array( 'uid' => $unique_anonymous_id ),
-						$params
-					) ) );
-
-			if ( $this->is_valid_ping( $pong ) ) {
-				return $pong;
-			}
-
-			if ( self::should_try_with_http( $pong ) ) {
-				// Fallback to HTTP, since HTTPS fails.
-				Freemius_Api_WordPress::SetHttp();
-
-				self::$_options->set_option( 'api_force_http', true, true );
-
-				$pong = is_null( $unique_anonymous_id ) ?
-					Freemius_Api_WordPress::Ping() :
-					$this->_call( 'ping.json?' . http_build_query( array_merge(
-							array( 'uid' => $unique_anonymous_id ),
-							$params
-						) ) );
-
-				if ( ! $this->is_valid_ping( $pong ) ) {
-					self::$_options->set_option( 'api_force_http', false, true );
-				}
-			}
-
-			return $pong;
-		}
-
-		/**
-		 * Check if based on the API result we should try
-		 * to re-run the same request with HTTP instead of HTTPS.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.6
-		 *
-		 * @param $result
-		 *
-		 * @return bool
-		 */
-		private static function should_try_with_http( $result ) {
-			if ( ! Freemius_Api_WordPress::IsHttps() ) {
-				return false;
-			}
-
-			return ( ! is_object( $result ) ||
-			         ! isset( $result->error ) ||
-			         ! isset( $result->error->code ) ||
-			         ! in_array( $result->error->code, array(
-				         'curl_missing',
-				         'cloudflare_ddos_protection',
-				         'maintenance_mode',
-				         'squid_cache_block',
-				         'too_many_requests',
-			         ) ) );
-
-		}
-
-		/**
-		 * Check if valid ping request result.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.1
-		 *
-		 * @param mixed $pong
-		 *
-		 * @return bool
-		 */
-		function is_valid_ping( $pong ) {
-			return Freemius_Api_WordPress::Test( $pong );
-		}
-
-		function get_url( $path = '' ) {
-			return Freemius_Api_WordPress::GetUrl( $path, $this->_api->IsSandbox() );
-		}
-
-		/**
-		 * Clear API cache.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.9
-		 */
-		static function clear_cache() {
-			self::_init();
-
-			self::$_cache = FS_Cache_Manager::get_manager( WP_FS__API_CACHE_OPTION_NAME );
-			self::$_cache->clear();
-		}
-
-		#----------------------------------------------------------------------------------
-		#region Error Handling
-		#----------------------------------------------------------------------------------
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.1.5
-		 *
-		 * @param mixed $result
-		 *
-		 * @return bool Is API result contains an error.
-		 */
-		static function is_api_error( $result ) {
-			return ( is_object( $result ) && isset( $result->error ) ) ||
-			       is_string( $result );
-		}
+         * @param string $path
+         * @param string $method
+         * @param array  $params
+         *
+         * @return string
+         * @throws \Freemius_Exception
+         */
+        private function get_cache_key($path, $method = 'GET', $params = array())
+        {
+            $canonized = $this->_api->CanonizePath($path);
+            //			$exploded = explode('/', $canonized);
+            //			return $method . '_' . array_pop($exploded) . '_' . md5($canonized . json_encode($params));
+            return strtolower($method . ':' . $canonized) . (! empty($params) ? '#' . md5(json_encode($params)) : '');
+        }
+
+        /**
+         * Test API connectivity.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.9 If fails, try to fallback to HTTP.
+         * @since  1.1.6 Added a 5-min caching mechanism, to prevent from overloading the server if the API if
+         *         temporary down.
+         *
+         * @return bool True if successful connectivity to the API.
+         */
+        public static function test()
+        {
+            self::_init();
+
+            $cache_key = 'ping_test';
+
+            $test = self::$_cache->get_valid($cache_key, null);
+
+            if (is_null($test)) {
+                $test = Freemius_Api_WordPress::Test();
+
+                if (false === $test && Freemius_Api_WordPress::IsHttps()) {
+                    // Fallback to HTTP, since HTTPS fails.
+                    Freemius_Api_WordPress::SetHttp();
+
+                    self::$_options->set_option('api_force_http', true, true);
+
+                    $test = Freemius_Api_WordPress::Test();
+
+                    if (false === $test) {
+                        /**
+                         * API connectivity test fail also in HTTP request, therefore,
+                         * fallback to HTTPS to keep connection secure.
+                         *
+                         * @since 1.1.6
+                         */
+                        self::$_options->set_option('api_force_http', false, true);
+                    }
+                }
+
+                self::$_cache->set($cache_key, $test, WP_FS__TIME_5_MIN_IN_SEC);
+            }
+
+            return $test;
+        }
+
+        /**
+         * Check if API is temporary down.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.6
+         *
+         * @return bool
+         */
+        public static function is_temporary_down()
+        {
+            self::_init();
+
+            $test = self::$_cache->get_valid('ping_test', null);
+
+            return (false === $test);
+        }
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.6
+         *
+         * @return object
+         */
+        private function get_temporary_unavailable_error()
+        {
+            return (object) array(
+                'error' => (object) array(
+                    'type'    => 'TemporaryUnavailable',
+                    'message' => 'API is temporary unavailable, please retry in ' . (self::$_cache->get_record_expiration('ping_test') - WP_FS__SCRIPT_START_TIME) . ' sec.',
+                    'code'    => 'temporary_unavailable',
+                    'http'    => 503
+                )
+            );
+        }
+
+        /**
+         * Ping API for connectivity test, and return result object.
+         *
+         * @author   Vova Feldman (@svovaf)
+         * @since    1.0.9
+         *
+         * @param null|string $unique_anonymous_id
+         * @param array       $params
+         *
+         * @return object
+         */
+        public function ping($unique_anonymous_id = null, $params = array())
+        {
+            $this->_logger->entrance();
+
+            if (self::is_temporary_down()) {
+                return $this->get_temporary_unavailable_error();
+            }
+
+            $pong = is_null($unique_anonymous_id) ?
+                Freemius_Api_WordPress::Ping() :
+                $this->_call('ping.json?' . http_build_query(array_merge(
+                    array( 'uid' => $unique_anonymous_id ),
+                    $params
+                )));
+
+            if ($this->is_valid_ping($pong)) {
+                return $pong;
+            }
+
+            if (self::should_try_with_http($pong)) {
+                // Fallback to HTTP, since HTTPS fails.
+                Freemius_Api_WordPress::SetHttp();
+
+                self::$_options->set_option('api_force_http', true, true);
+
+                $pong = is_null($unique_anonymous_id) ?
+                    Freemius_Api_WordPress::Ping() :
+                    $this->_call('ping.json?' . http_build_query(array_merge(
+                        array( 'uid' => $unique_anonymous_id ),
+                        $params
+                    )));
+
+                if (! $this->is_valid_ping($pong)) {
+                    self::$_options->set_option('api_force_http', false, true);
+                }
+            }
+
+            return $pong;
+        }
+
+        /**
+         * Check if based on the API result we should try
+         * to re-run the same request with HTTP instead of HTTPS.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.6
+         *
+         * @param $result
+         *
+         * @return bool
+         */
+        private static function should_try_with_http($result)
+        {
+            if (! Freemius_Api_WordPress::IsHttps()) {
+                return false;
+            }
+
+            return (! is_object($result) ||
+                     ! isset($result->error) ||
+                     ! isset($result->error->code) ||
+                     ! in_array($result->error->code, array(
+                         'curl_missing',
+                         'cloudflare_ddos_protection',
+                         'maintenance_mode',
+                         'squid_cache_block',
+                         'too_many_requests',
+                     )));
+        }
+
+        /**
+         * Check if valid ping request result.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.1
+         *
+         * @param mixed $pong
+         *
+         * @return bool
+         */
+        public function is_valid_ping($pong)
+        {
+            return Freemius_Api_WordPress::Test($pong);
+        }
+
+        public function get_url($path = '')
+        {
+            return Freemius_Api_WordPress::GetUrl($path, $this->_api->IsSandbox());
+        }
+
+        /**
+         * Clear API cache.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.9
+         */
+        public static function clear_cache()
+        {
+            self::_init();
+
+            self::$_cache = FS_Cache_Manager::get_manager(WP_FS__API_CACHE_OPTION_NAME);
+            self::$_cache->clear();
+        }
+
+        #----------------------------------------------------------------------------------
+        #region Error Handling
+        #----------------------------------------------------------------------------------
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.1.5
+         *
+         * @param mixed $result
+         *
+         * @return bool Is API result contains an error.
+         */
+        public static function is_api_error($result)
+        {
+            return (is_object($result) && isset($result->error)) ||
+                   is_string($result);
+        }
 
         /**
          * @author Vova Feldman (@svovaf)
@@ -596,47 +615,50 @@
          *
          * @return bool Is API result contains an error.
          */
-        static function is_api_error_object( $result ) {
+        public static function is_api_error_object($result)
+        {
+            return (
+                is_object($result) &&
+                isset($result->error) &&
+                isset($result->error->message)
+            );
+        }
+
+        /**
+         * Checks if given API result is a non-empty and not an error object.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.1.5
+         *
+         * @param mixed       $result
+         * @param string|null $required_property Optional property we want to verify that is set.
+         *
+         * @return bool
+         */
+        public static function is_api_result_object($result, $required_property = null)
+        {
             return (
-                is_object( $result ) &&
-                isset( $result->error ) &&
-                isset( $result->error->message )
+                is_object($result) &&
+                ! isset($result->error) &&
+                (empty($required_property) || isset($result->{$required_property}))
             );
         }
 
-		/**
-		 * Checks if given API result is a non-empty and not an error object.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.1.5
-		 *
-		 * @param mixed       $result
-		 * @param string|null $required_property Optional property we want to verify that is set.
-		 *
-		 * @return bool
-		 */
-		static function is_api_result_object( $result, $required_property = null ) {
-			return (
-				is_object( $result ) &&
-				! isset( $result->error ) &&
-				( empty( $required_property ) || isset( $result->{$required_property} ) )
-			);
-		}
-
-		/**
-		 * Checks if given API result is a non-empty entity object with non-empty ID.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.1.5
-		 *
-		 * @param mixed $result
-		 *
-		 * @return bool
-		 */
-		static function is_api_result_entity( $result ) {
-			return self::is_api_result_object( $result, 'id' ) &&
-			       FS_Entity::is_valid_id( $result->id );
-		}
+        /**
+         * Checks if given API result is a non-empty entity object with non-empty ID.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.1.5
+         *
+         * @param mixed $result
+         *
+         * @return bool
+         */
+        public static function is_api_result_entity($result)
+        {
+            return self::is_api_result_object($result, 'id') &&
+                   FS_Entity::is_valid_id($result->id);
+        }
 
         /**
          * Get API result error code. If failed to get code, returns an empty string.
@@ -648,11 +670,12 @@
          *
          * @return string
          */
-        static function get_error_code( $result ) {
-            if ( is_object( $result ) &&
-                 isset( $result->error ) &&
-                 is_object( $result->error ) &&
-                 ! empty( $result->error->code )
+        public static function get_error_code($result)
+        {
+            if (is_object($result) &&
+                 isset($result->error) &&
+                 is_object($result->error) &&
+                 ! empty($result->error->code)
             ) {
                 return $result->error->code;
             }
@@ -660,5 +683,5 @@
             return '';
         }
 
-		#endregion
-	}
\ No newline at end of file
+        #endregion
+    }
diff --git a/freemius/includes/class-fs-logger.php b/freemius/includes/class-fs-logger.php
index 624c683c508d8d92df852bb2e23d877fa7bad06d..ad3cd0440247218fc3fcd789a860ebe9f0056a76 100644
--- a/freemius/includes/class-fs-logger.php
+++ b/freemius/includes/class-fs-logger.php
@@ -1,334 +1,358 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.3
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	class FS_Logger {
-		private $_id;
-		private $_on = false;
-		private $_echo = false;
-		private $_file_start = 0;
-		/**
-		 * @var int PHP Process ID.
-		 */
-		private static $_processID;
-		/**
-		 * @var string PHP Script user name.
-		 */
-		private static $_ownerName;
-		/**
-		 * @var bool Is storage logging turned on.
-		 */
-		private static $_isStorageLoggingOn;
-		/**
-		 * @var int ABSPATH length.
-		 */
-		private static $_abspathLength;
-
-		private static $LOGGERS = array();
-		private static $LOG = array();
-		private static $CNT = 0;
-		private static $_HOOKED_FOOTER = false;
-
-		private function __construct( $id, $on = false, $echo = false ) {
-			$this->_id = $id;
-
-			$bt     = debug_backtrace();
-			$caller = $bt[2];
-
-			if ( false !== strpos( $caller['file'], 'plugins' ) ) {
-				$this->_file_start = strpos( $caller['file'], 'plugins' ) + strlen( 'plugins/' );
-			} else {
-				$this->_file_start = strpos( $caller['file'], 'themes' ) + strlen( 'themes/' );
-			}
-
-			if ( $on ) {
-				$this->on();
-			}
-			if ( $echo ) {
-				$this->echo_on();
-			}
-		}
-
-		/**
-		 * @param string $id
-		 * @param bool   $on
-		 * @param bool   $echo
-		 *
-		 * @return FS_Logger
-		 */
-		public static function get_logger( $id, $on = false, $echo = false ) {
-			$id = strtolower( $id );
-
-			if ( ! isset( self::$_processID ) ) {
-				self::init();
-			}
-
-			if ( ! isset( self::$LOGGERS[ $id ] ) ) {
-				self::$LOGGERS[ $id ] = new FS_Logger( $id, $on, $echo );
-			}
-
-			return self::$LOGGERS[ $id ];
-		}
-
-		/**
-		 * Initialize logging global info.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.1.6
-		 */
-		private static function init() {
-			self::$_ownerName          = function_exists( 'get_current_user' ) ?
-				get_current_user() :
-				'unknown';
-			self::$_isStorageLoggingOn = ( 1 == get_option( 'fs_storage_logger', 0 ) );
-			self::$_abspathLength      = strlen( ABSPATH );
-			self::$_processID          = mt_rand( 0, 32000 );
-
-			// Process ID may be `false` on errors.
-			if ( ! is_numeric( self::$_processID ) ) {
-				self::$_processID = 0;
-			}
-		}
-
-		private static function hook_footer() {
-			if ( self::$_HOOKED_FOOTER ) {
-				return;
-			}
-
-			if ( is_admin() ) {
-				add_action( 'admin_footer', 'FS_Logger::dump', 100 );
-			} else {
-				add_action( 'wp_footer', 'FS_Logger::dump', 100 );
-			}
-		}
-
-		function is_on() {
-			return $this->_on;
-		}
-
-		function on() {
-			$this->_on = true;
-
-			if ( ! function_exists( 'dbDelta' ) ) {
-				require_once ABSPATH . 'wp-admin/includes/upgrade.php';
-			}
-
-			self::hook_footer();
-		}
-
-		function echo_on() {
-			$this->on();
-
-			$this->_echo = true;
-		}
-
-		function is_echo_on() {
-			return $this->_echo;
-		}
-
-		function get_id() {
-			return $this->_id;
-		}
-
-		function get_file() {
-			return $this->_file_start;
-		}
-
-		private function _log( &$message, $type, $wrapper = false ) {
-			if ( ! $this->is_on() ) {
-				return;
-			}
-
-			$bt    = debug_backtrace();
-			$depth = $wrapper ? 3 : 2;
-			while ( $depth < count( $bt ) - 1 && 'eval' === $bt[ $depth ]['function'] ) {
-				$depth ++;
-			}
-
-			$caller = $bt[ $depth ];
-
-			/**
-			 * Retrieve the correct call file & line number from backtrace
-			 * when logging from a wrapper method.
-			 *
-			 * @author Vova Feldman
-			 * @since  1.2.1.6
-			 */
-			if ( empty( $caller['line'] ) ) {
-				$depth --;
-
-				while ( $depth >= 0 ) {
-					if ( ! empty( $bt[ $depth ]['line'] ) ) {
-						$caller['line'] = $bt[ $depth ]['line'];
-						$caller['file'] = $bt[ $depth ]['file'];
-						break;
-					}
-				}
-			}
-
-			$log = array_merge( $caller, array(
-				'cnt'       => self::$CNT ++,
-				'logger'    => $this,
-				'timestamp' => microtime( true ),
-				'log_type'  => $type,
-				'msg'       => $message,
-			) );
-
-			if ( self::$_isStorageLoggingOn ) {
-				$this->db_log( $type, $message, self::$CNT, $caller );
-			}
-
-			self::$LOG[] = $log;
-
-			if ( $this->is_echo_on() && ! Freemius::is_ajax() ) {
-				echo self::format_html( $log ) . "\n";
-			}
-		}
-
-		function log( $message, $wrapper = false ) {
-			$this->_log( $message, 'log', $wrapper );
-		}
-
-		function info( $message, $wrapper = false ) {
-			$this->_log( $message, 'info', $wrapper );
-		}
-
-		function warn( $message, $wrapper = false ) {
-			$this->_log( $message, 'warn', $wrapper );
-		}
-
-		function error( $message, $wrapper = false ) {
-			$this->_log( $message, 'error', $wrapper );
-		}
-
-		/**
-		 * Log API error.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.1.5
-		 *
-		 * @param mixed $api_result
-		 * @param bool  $wrapper
-		 */
-		function api_error( $api_result, $wrapper = false ) {
-			$message = '';
-			if ( is_object( $api_result ) &&
-			     ! empty( $api_result->error ) &&
-			     ! empty( $api_result->error->message )
-			) {
-				$message = $api_result->error->message;
-			} else if ( is_object( $api_result ) ) {
-				$message = var_export( $api_result, true );
-			} else if ( is_string( $api_result ) ) {
-				$message = $api_result;
-			} else if ( empty( $api_result ) ) {
-				$message = 'Empty API result.';
-			}
-
-			$message = 'API Error: ' . $message;
-
-			$this->_log( $message, 'error', $wrapper );
-		}
-
-		function entrance( $message = '', $wrapper = false ) {
-			$msg = 'Entrance' . ( empty( $message ) ? '' : ' > ' ) . $message;
-
-			$this->_log( $msg, 'log', $wrapper );
-		}
-
-		function departure( $message = '', $wrapper = false ) {
-			$msg = 'Departure' . ( empty( $message ) ? '' : ' > ' ) . $message;
-
-			$this->_log( $msg, 'log', $wrapper );
-		}
-
-		#--------------------------------------------------------------------------------
-		#region Log Formatting
-		#--------------------------------------------------------------------------------
-
-		private static function format( $log, $show_type = true ) {
-			return '[' . str_pad( $log['cnt'], strlen( self::$CNT ), '0', STR_PAD_LEFT ) . '] [' . $log['logger']->_id . '] ' . ( $show_type ? '[' . $log['log_type'] . ']' : '' ) . ( ! empty( $log['class'] ) ? $log['class'] . $log['type'] : '' ) . $log['function'] . ' >> ' . $log['msg'] . ( isset( $log['file'] ) ? ' (' . substr( $log['file'], $log['logger']->_file_start ) . ' ' . $log['line'] . ') ' : '' ) . ' [' . $log['timestamp'] . ']';
-		}
-
-		private static function format_html( $log ) {
-			return '<div style="font-size: 13px; font-family: monospace; color: #7da767; padding: 8px 3px; background: #000; border-bottom: 1px solid #555;">[' . $log['cnt'] . '] [' . $log['logger']->_id . '] [' . $log['log_type'] . '] <b><code style="color: #c4b1e0;">' . ( ! empty( $log['class'] ) ? $log['class'] . $log['type'] : '' ) . $log['function'] . '</code> >> <b style="color: #f59330;">' . esc_html( $log['msg'] ) . '</b></b>' . ( isset( $log['file'] ) ? ' (' . substr( $log['file'], $log['logger']->_file_start ) . ' ' . $log['line'] . ')' : '' ) . ' [' . $log['timestamp'] . ']</div>';
-		}
-
-		#endregion
-
-		static function dump() {
-			?>
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.3
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    class FS_Logger
+    {
+        private $_id;
+        private $_on = false;
+        private $_echo = false;
+        private $_file_start = 0;
+        /**
+         * @var int PHP Process ID.
+         */
+        private static $_processID;
+        /**
+         * @var string PHP Script user name.
+         */
+        private static $_ownerName;
+        /**
+         * @var bool Is storage logging turned on.
+         */
+        private static $_isStorageLoggingOn;
+        /**
+         * @var int ABSPATH length.
+         */
+        private static $_abspathLength;
+
+        private static $LOGGERS = array();
+        private static $LOG = array();
+        private static $CNT = 0;
+        private static $_HOOKED_FOOTER = false;
+
+        private function __construct($id, $on = false, $echo = false)
+        {
+            $this->_id = $id;
+
+            $bt     = debug_backtrace();
+            $caller = $bt[2];
+
+            if (false !== strpos($caller['file'], 'plugins')) {
+                $this->_file_start = strpos($caller['file'], 'plugins') + strlen('plugins/');
+            } else {
+                $this->_file_start = strpos($caller['file'], 'themes') + strlen('themes/');
+            }
+
+            if ($on) {
+                $this->on();
+            }
+            if ($echo) {
+                $this->echo_on();
+            }
+        }
+
+        /**
+         * @param string $id
+         * @param bool   $on
+         * @param bool   $echo
+         *
+         * @return FS_Logger
+         */
+        public static function get_logger($id, $on = false, $echo = false)
+        {
+            $id = strtolower($id);
+
+            if (! isset(self::$_processID)) {
+                self::init();
+            }
+
+            if (! isset(self::$LOGGERS[ $id ])) {
+                self::$LOGGERS[ $id ] = new FS_Logger($id, $on, $echo);
+            }
+
+            return self::$LOGGERS[ $id ];
+        }
+
+        /**
+         * Initialize logging global info.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.1.6
+         */
+        private static function init()
+        {
+            self::$_ownerName          = function_exists('get_current_user') ?
+                get_current_user() :
+                'unknown';
+            self::$_isStorageLoggingOn = (1 == get_option('fs_storage_logger', 0));
+            self::$_abspathLength      = strlen(ABSPATH);
+            self::$_processID          = mt_rand(0, 32000);
+
+            // Process ID may be `false` on errors.
+            if (! is_numeric(self::$_processID)) {
+                self::$_processID = 0;
+            }
+        }
+
+        private static function hook_footer()
+        {
+            if (self::$_HOOKED_FOOTER) {
+                return;
+            }
+
+            if (is_admin()) {
+                add_action('admin_footer', 'FS_Logger::dump', 100);
+            } else {
+                add_action('wp_footer', 'FS_Logger::dump', 100);
+            }
+        }
+
+        public function is_on()
+        {
+            return $this->_on;
+        }
+
+        public function on()
+        {
+            $this->_on = true;
+
+            if (! function_exists('dbDelta')) {
+                require_once ABSPATH . 'wp-admin/includes/upgrade.php';
+            }
+
+            self::hook_footer();
+        }
+
+        public function echo_on()
+        {
+            $this->on();
+
+            $this->_echo = true;
+        }
+
+        public function is_echo_on()
+        {
+            return $this->_echo;
+        }
+
+        public function get_id()
+        {
+            return $this->_id;
+        }
+
+        public function get_file()
+        {
+            return $this->_file_start;
+        }
+
+        private function _log(&$message, $type, $wrapper = false)
+        {
+            if (! $this->is_on()) {
+                return;
+            }
+
+            $bt    = debug_backtrace();
+            $depth = $wrapper ? 3 : 2;
+            while ($depth < count($bt) - 1 && 'eval' === $bt[ $depth ]['function']) {
+                $depth ++;
+            }
+
+            $caller = $bt[ $depth ];
+
+            /**
+             * Retrieve the correct call file & line number from backtrace
+             * when logging from a wrapper method.
+             *
+             * @author Vova Feldman
+             * @since  1.2.1.6
+             */
+            if (empty($caller['line'])) {
+                $depth --;
+
+                while ($depth >= 0) {
+                    if (! empty($bt[ $depth ]['line'])) {
+                        $caller['line'] = $bt[ $depth ]['line'];
+                        $caller['file'] = $bt[ $depth ]['file'];
+                        break;
+                    }
+                }
+            }
+
+            $log = array_merge($caller, array(
+                'cnt'       => self::$CNT ++,
+                'logger'    => $this,
+                'timestamp' => microtime(true),
+                'log_type'  => $type,
+                'msg'       => $message,
+            ));
+
+            if (self::$_isStorageLoggingOn) {
+                $this->db_log($type, $message, self::$CNT, $caller);
+            }
+
+            self::$LOG[] = $log;
+
+            if ($this->is_echo_on() && ! Freemius::is_ajax()) {
+                echo self::format_html($log) . "\n";
+            }
+        }
+
+        public function log($message, $wrapper = false)
+        {
+            $this->_log($message, 'log', $wrapper);
+        }
+
+        public function info($message, $wrapper = false)
+        {
+            $this->_log($message, 'info', $wrapper);
+        }
+
+        public function warn($message, $wrapper = false)
+        {
+            $this->_log($message, 'warn', $wrapper);
+        }
+
+        public function error($message, $wrapper = false)
+        {
+            $this->_log($message, 'error', $wrapper);
+        }
+
+        /**
+         * Log API error.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.1.5
+         *
+         * @param mixed $api_result
+         * @param bool  $wrapper
+         */
+        public function api_error($api_result, $wrapper = false)
+        {
+            $message = '';
+            if (is_object($api_result) &&
+                 ! empty($api_result->error) &&
+                 ! empty($api_result->error->message)
+            ) {
+                $message = $api_result->error->message;
+            } elseif (is_object($api_result)) {
+                $message = var_export($api_result, true);
+            } elseif (is_string($api_result)) {
+                $message = $api_result;
+            } elseif (empty($api_result)) {
+                $message = 'Empty API result.';
+            }
+
+            $message = 'API Error: ' . $message;
+
+            $this->_log($message, 'error', $wrapper);
+        }
+
+        public function entrance($message = '', $wrapper = false)
+        {
+            $msg = 'Entrance' . (empty($message) ? '' : ' > ') . $message;
+
+            $this->_log($msg, 'log', $wrapper);
+        }
+
+        public function departure($message = '', $wrapper = false)
+        {
+            $msg = 'Departure' . (empty($message) ? '' : ' > ') . $message;
+
+            $this->_log($msg, 'log', $wrapper);
+        }
+
+        #--------------------------------------------------------------------------------
+        #region Log Formatting
+        #--------------------------------------------------------------------------------
+
+        private static function format($log, $show_type = true)
+        {
+            return '[' . str_pad($log['cnt'], strlen(self::$CNT), '0', STR_PAD_LEFT) . '] [' . $log['logger']->_id . '] ' . ($show_type ? '[' . $log['log_type'] . ']' : '') . (! empty($log['class']) ? $log['class'] . $log['type'] : '') . $log['function'] . ' >> ' . $log['msg'] . (isset($log['file']) ? ' (' . substr($log['file'], $log['logger']->_file_start) . ' ' . $log['line'] . ') ' : '') . ' [' . $log['timestamp'] . ']';
+        }
+
+        private static function format_html($log)
+        {
+            return '<div style="font-size: 13px; font-family: monospace; color: #7da767; padding: 8px 3px; background: #000; border-bottom: 1px solid #555;">[' . $log['cnt'] . '] [' . $log['logger']->_id . '] [' . $log['log_type'] . '] <b><code style="color: #c4b1e0;">' . (! empty($log['class']) ? $log['class'] . $log['type'] : '') . $log['function'] . '</code> >> <b style="color: #f59330;">' . esc_html($log['msg']) . '</b></b>' . (isset($log['file']) ? ' (' . substr($log['file'], $log['logger']->_file_start) . ' ' . $log['line'] . ')' : '') . ' [' . $log['timestamp'] . ']</div>';
+        }
+
+        #endregion
+
+        public static function dump()
+        {
+            ?>
 			<!-- BEGIN: Freemius PHP Console Log -->
 			<script type="text/javascript">
 				<?php
-				foreach ( self::$LOG as $log ) {
-					echo 'console.' . $log['log_type'] . '(' . json_encode( self::format( $log, false ) ) . ')' . "\n";
-				}
-				?>
+                foreach (self::$LOG as $log) {
+                    echo 'console.' . $log['log_type'] . '(' . json_encode(self::format($log, false)) . ')' . "\n";
+                } ?>
 			</script>
 			<!-- END: Freemius PHP Console Log -->
 			<?php
-		}
-
-		static function get_log() {
-			return self::$LOG;
-		}
-
-		#--------------------------------------------------------------------------------
-		#region Database Logging
-		#--------------------------------------------------------------------------------
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.1.6
-		 *
-		 * @return bool
-		 */
-		public static function is_storage_logging_on() {
-			if ( ! isset( self::$_isStorageLoggingOn ) ) {
-				self::$_isStorageLoggingOn = ( 1 == get_option( 'fs_storage_logger', 0 ) );
-			}
-
-			return self::$_isStorageLoggingOn;
-		}
-
-		/**
-		 * Turns on/off database persistent debugging to capture
-		 * multi-session logs to debug complex flows like
-		 * plugin auto-deactivate on premium version activation.
-		 *
-		 * @todo   Check if Theme Check has issues with DB tables for themes.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.1.6
-		 *
-		 * @param bool $is_on
-		 *
-		 * @return bool
-		 */
-		public static function _set_storage_logging( $is_on = true ) {
-			global $wpdb;
-
-			$table = "{$wpdb->prefix}fs_logger";
-
-			if ( $is_on ) {
-				/**
-				 * Create logging table.
-				 *
-				 * NOTE:
-				 *  dbDelta must use KEY and not INDEX for indexes.
-				 *
-				 * @link https://core.trac.wordpress.org/ticket/2695
-				 */
-				$result = $wpdb->query( "CREATE TABLE {$table} (
+        }
+
+        public static function get_log()
+        {
+            return self::$LOG;
+        }
+
+        #--------------------------------------------------------------------------------
+        #region Database Logging
+        #--------------------------------------------------------------------------------
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.1.6
+         *
+         * @return bool
+         */
+        public static function is_storage_logging_on()
+        {
+            if (! isset(self::$_isStorageLoggingOn)) {
+                self::$_isStorageLoggingOn = (1 == get_option('fs_storage_logger', 0));
+            }
+
+            return self::$_isStorageLoggingOn;
+        }
+
+        /**
+         * Turns on/off database persistent debugging to capture
+         * multi-session logs to debug complex flows like
+         * plugin auto-deactivate on premium version activation.
+         *
+         * @todo   Check if Theme Check has issues with DB tables for themes.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.1.6
+         *
+         * @param bool $is_on
+         *
+         * @return bool
+         */
+        public static function _set_storage_logging($is_on = true)
+        {
+            global $wpdb;
+
+            $table = "{$wpdb->prefix}fs_logger";
+
+            if ($is_on) {
+                /**
+                 * Create logging table.
+                 *
+                 * NOTE:
+                 *  dbDelta must use KEY and not INDEX for indexes.
+                 *
+                 * @link https://core.trac.wordpress.org/ticket/2695
+                 */
+                $result = $wpdb->query("CREATE TABLE {$table} (
 `id` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT,
 `process_id` INT UNSIGNED NOT NULL,
 `user_name` VARCHAR(64) NOT NULL,
@@ -346,346 +370,347 @@ PRIMARY KEY (`id`),
 KEY `process_id` (`process_id` ASC),
 KEY `process_logger` (`process_id` ASC, `logger` ASC),
 KEY `function` (`function` ASC),
-KEY `type` (`type` ASC))" );
-			} else {
-				/**
-				 * Drop logging table.
-				 */
-				$result = $wpdb->query( "DROP TABLE IF EXISTS $table;" );
-			}
-
-			if ( false !== $result ) {
-				update_option( 'fs_storage_logger', ( $is_on ? 1 : 0 ) );
-			}
-
-			return ( false !== $result );
-		}
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.1.6
-		 *
-		 * @param string $type
-		 * @param string $message
-		 * @param int    $log_order
-		 * @param array  $caller
-		 *
-		 * @return false|int
-		 */
-		private function db_log(
-			&$type,
-			&$message,
-			&$log_order,
-			&$caller
-		) {
-			global $wpdb;
-
-			$request_type = 'call';
-			if ( defined( 'DOING_CRON' ) && DOING_CRON ) {
-				$request_type = 'cron';
-			} else if ( defined( 'DOING_AJAX' ) && DOING_AJAX ) {
-				$request_type = 'ajax';
-			}
-
-			$request_url = WP_FS__IS_HTTP_REQUEST ?
-				$_SERVER['REQUEST_URI'] :
-				'';
-
-			return $wpdb->insert(
-				"{$wpdb->prefix}fs_logger",
-				array(
-					'process_id'   => self::$_processID,
-					'user_name'    => self::$_ownerName,
-					'logger'       => $this->_id,
-					'log_order'    => $log_order,
-					'type'         => $type,
-					'request_type' => $request_type,
-					'request_url'  => $request_url,
-					'message'      => $message,
-					'file'         => isset( $caller['file'] ) ?
-						substr( $caller['file'], self::$_abspathLength ) :
-						'',
-					'line'         => $caller['line'],
-					'function'     => ( ! empty( $caller['class'] ) ? $caller['class'] . $caller['type'] : '' ) . $caller['function'],
-					'created'      => microtime( true ),
-				)
-			);
-		}
-
-		/**
-		 * Persistent DB logger columns.
-		 *
-		 * @var array
-		 */
-		private static $_log_columns = array(
-			'id',
-			'process_id',
-			'user_name',
-			'logger',
-			'log_order',
-			'type',
-			'message',
-			'file',
-			'line',
-			'function',
-			'request_type',
-			'request_url',
-			'created',
-		);
-
-		/**
-		 * Create DB logs query.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.1.6
-		 *
-		 * @param bool $filters
-		 * @param int  $limit
-		 * @param int  $offset
-		 * @param bool $order
-		 * @param bool $escape_eol
-		 *
-		 * @return string
-		 */
-		private static function build_db_logs_query(
-			$filters = false,
-			$limit = 200,
-			$offset = 0,
-			$order = false,
-			$escape_eol = false
-		) {
-			global $wpdb;
-
-			$select = '*';
-
-			if ( $escape_eol ) {
-				$select = '';
-				for ( $i = 0, $len = count( self::$_log_columns ); $i < $len; $i ++ ) {
-					if ( $i > 0 ) {
-						$select .= ', ';
-					}
-
-					if ( 'message' !== self::$_log_columns[ $i ] ) {
-						$select .= self::$_log_columns[ $i ];
-					} else {
-						$select .= 'REPLACE(message , \'\n\', \' \') AS message';
-					}
-				}
-			}
-
-			$query = "SELECT {$select} FROM {$wpdb->prefix}fs_logger";
-			if ( is_array( $filters ) ) {
-				$criteria = array();
-
-				if ( ! empty( $filters['type'] ) && 'all' !== $filters['type'] ) {
-					$filters['type'] = strtolower( $filters['type'] );
-
-					switch ( $filters['type'] ) {
-						case 'warn_error':
-							$criteria[] = array( 'col' => 'type', 'val' => array( 'warn', 'error' ) );
-							break;
-						case 'error':
-						case 'warn':
-							$criteria[] = array( 'col' => 'type', 'val' => $filters['type'] );
-							break;
-						case 'info':
-						default:
-							$criteria[] = array( 'col' => 'type', 'val' => array( 'info', 'log' ) );
-							break;
-					}
-				}
-
-				if ( ! empty( $filters['request_type'] ) ) {
-					$filters['request_type'] = strtolower( $filters['request_type'] );
-
-					if ( in_array( $filters['request_type'], array( 'call', 'ajax', 'cron' ) ) ) {
-						$criteria[] = array( 'col' => 'request_type', 'val' => $filters['request_type'] );
-					}
-				}
-
-				if ( ! empty( $filters['file'] ) ) {
-					$criteria[] = array(
-						'col' => 'file',
-						'op'  => 'LIKE',
-						'val' => '%' . esc_sql( $filters['file'] ),
-					);
-				}
-
-				if ( ! empty( $filters['function'] ) ) {
-					$criteria[] = array(
-						'col' => 'function',
-						'op'  => 'LIKE',
-						'val' => '%' . esc_sql( $filters['function'] ),
-					);
-				}
-
-				if ( ! empty( $filters['process_id'] ) && is_numeric( $filters['process_id'] ) ) {
-					$criteria[] = array( 'col' => 'process_id', 'val' => $filters['process_id'] );
-				}
-
-				if ( ! empty( $filters['logger'] ) ) {
-					$criteria[] = array(
-						'col' => 'logger',
-						'op'  => 'LIKE',
-						'val' => '%' . esc_sql( $filters['logger'] ) . '%',
-					);
-				}
-
-				if ( ! empty( $filters['message'] ) ) {
-					$criteria[] = array(
-						'col' => 'message',
-						'op'  => 'LIKE',
-						'val' => '%' . esc_sql( $filters['message'] ) . '%',
-					);
-				}
-
-				if ( 0 < count( $criteria ) ) {
-					$query .= "\nWHERE\n";
-
-					$first = true;
-					foreach ( $criteria as $c ) {
-						if ( ! $first ) {
-							$query .= "AND\n";
-						}
-
-						if ( is_array( $c['val'] ) ) {
-							$operator = 'IN';
-
-							for ( $i = 0, $len = count( $c['val'] ); $i < $len; $i ++ ) {
-								$c['val'][ $i ] = "'" . esc_sql( $c['val'][ $i ] ) . "'";
-							}
-
-							$val = '(' . implode( ',', $c['val'] ) . ')';
-						} else {
-							$operator = ! empty( $c['op'] ) ? $c['op'] : '=';
-							$val      = "'" . esc_sql( $c['val'] ) . "'";
-						}
-
-						$query .= "`{$c['col']}` {$operator} {$val}\n";
-
-						$first = false;
-					}
-				}
-			}
-
-			if ( ! is_array( $order ) ) {
-				$order = array(
-					'col'   => 'id',
-					'order' => 'desc'
-				);
-			}
-
-			$query .= " ORDER BY {$order['col']} {$order['order']} LIMIT {$offset},{$limit}";
-
-			return $query;
-		}
-
-		/**
-		 * Load logs from DB.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.1.6
-		 *
-		 * @param bool $filters
-		 * @param int  $limit
-		 * @param int  $offset
-		 * @param bool $order
-		 *
-		 * @return object[]|null
-		 */
-		public static function load_db_logs(
-			$filters = false,
-			$limit = 200,
-			$offset = 0,
-			$order = false
-		) {
-			global $wpdb;
-
-			$query = self::build_db_logs_query(
-				$filters,
-				$limit,
-				$offset,
-				$order
-			);
-
-			return $wpdb->get_results( $query );
-		}
-
-		/**
-		 * Load logs from DB.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.1.6
-		 *
-		 * @param bool   $filters
-		 * @param string $filename
-		 * @param int    $limit
-		 * @param int    $offset
-		 * @param bool   $order
-		 *
-		 * @return false|string File download URL or false on failure.
-		 */
-		public static function download_db_logs(
-			$filters = false,
-			$filename = '',
-			$limit = 10000,
-			$offset = 0,
-			$order = false
-		) {
-			global $wpdb;
-
-			$query = self::build_db_logs_query(
-				$filters,
-				$limit,
-				$offset,
-				$order,
-				true
-			);
-
-			$upload_dir = wp_upload_dir();
-			if ( empty( $filename ) ) {
-				$filename = 'fs-logs-' . date( 'Y-m-d_H-i-s', WP_FS__SCRIPT_START_TIME ) . '.csv';
-			}
-			$filepath = rtrim( $upload_dir['path'], '/' ) . "/{$filename}";
-
-			$query .= " INTO OUTFILE '{$filepath}' FIELDS TERMINATED BY '\t' ESCAPED BY '\\\\' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n'";
-
-			$columns = '';
-			for ( $i = 0, $len = count( self::$_log_columns ); $i < $len; $i ++ ) {
-				if ( $i > 0 ) {
-					$columns .= ', ';
-				}
-
-				$columns .= "'" . self::$_log_columns[ $i ] . "'";
-			}
-
-			$query = "SELECT {$columns} UNION ALL " . $query;
-
-			$result = $wpdb->query( $query );
-
-			if ( false === $result ) {
-				return false;
-			}
-
-			return rtrim( $upload_dir['url'], '/' ) . '/' . $filename;
-		}
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.1.6
-		 *
-		 * @param string $filename
-		 *
-		 * @return string
-		 */
-		public static function get_logs_download_url( $filename = '' ) {
-			$upload_dir = wp_upload_dir();
-			if ( empty( $filename ) ) {
-				$filename = 'fs-logs-' . date( 'Y-m-d_H-i-s', WP_FS__SCRIPT_START_TIME ) . '.csv';
-			}
-
-			return rtrim( $upload_dir['url'], '/' ) . $filename;
-		}
-
-		#endregion
-	}
+KEY `type` (`type` ASC))");
+            } else {
+                /**
+                 * Drop logging table.
+                 */
+                $result = $wpdb->query("DROP TABLE IF EXISTS $table;");
+            }
+
+            if (false !== $result) {
+                update_option('fs_storage_logger', ($is_on ? 1 : 0));
+            }
+
+            return (false !== $result);
+        }
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.1.6
+         *
+         * @param string $type
+         * @param string $message
+         * @param int    $log_order
+         * @param array  $caller
+         *
+         * @return false|int
+         */
+        private function db_log(
+            &$type,
+            &$message,
+            &$log_order,
+            &$caller
+        ) {
+            global $wpdb;
+
+            $request_type = 'call';
+            if (defined('DOING_CRON') && DOING_CRON) {
+                $request_type = 'cron';
+            } elseif (defined('DOING_AJAX') && DOING_AJAX) {
+                $request_type = 'ajax';
+            }
+
+            $request_url = WP_FS__IS_HTTP_REQUEST ?
+                $_SERVER['REQUEST_URI'] :
+                '';
+
+            return $wpdb->insert(
+                "{$wpdb->prefix}fs_logger",
+                array(
+                    'process_id'   => self::$_processID,
+                    'user_name'    => self::$_ownerName,
+                    'logger'       => $this->_id,
+                    'log_order'    => $log_order,
+                    'type'         => $type,
+                    'request_type' => $request_type,
+                    'request_url'  => $request_url,
+                    'message'      => $message,
+                    'file'         => isset($caller['file']) ?
+                        substr($caller['file'], self::$_abspathLength) :
+                        '',
+                    'line'         => $caller['line'],
+                    'function'     => (! empty($caller['class']) ? $caller['class'] . $caller['type'] : '') . $caller['function'],
+                    'created'      => microtime(true),
+                )
+            );
+        }
+
+        /**
+         * Persistent DB logger columns.
+         *
+         * @var array
+         */
+        private static $_log_columns = array(
+            'id',
+            'process_id',
+            'user_name',
+            'logger',
+            'log_order',
+            'type',
+            'message',
+            'file',
+            'line',
+            'function',
+            'request_type',
+            'request_url',
+            'created',
+        );
+
+        /**
+         * Create DB logs query.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.1.6
+         *
+         * @param bool $filters
+         * @param int  $limit
+         * @param int  $offset
+         * @param bool $order
+         * @param bool $escape_eol
+         *
+         * @return string
+         */
+        private static function build_db_logs_query(
+            $filters = false,
+            $limit = 200,
+            $offset = 0,
+            $order = false,
+            $escape_eol = false
+        ) {
+            global $wpdb;
+
+            $select = '*';
+
+            if ($escape_eol) {
+                $select = '';
+                for ($i = 0, $len = count(self::$_log_columns); $i < $len; $i ++) {
+                    if ($i > 0) {
+                        $select .= ', ';
+                    }
+
+                    if ('message' !== self::$_log_columns[ $i ]) {
+                        $select .= self::$_log_columns[ $i ];
+                    } else {
+                        $select .= 'REPLACE(message , \'\n\', \' \') AS message';
+                    }
+                }
+            }
+
+            $query = "SELECT {$select} FROM {$wpdb->prefix}fs_logger";
+            if (is_array($filters)) {
+                $criteria = array();
+
+                if (! empty($filters['type']) && 'all' !== $filters['type']) {
+                    $filters['type'] = strtolower($filters['type']);
+
+                    switch ($filters['type']) {
+                        case 'warn_error':
+                            $criteria[] = array( 'col' => 'type', 'val' => array( 'warn', 'error' ) );
+                            break;
+                        case 'error':
+                        case 'warn':
+                            $criteria[] = array( 'col' => 'type', 'val' => $filters['type'] );
+                            break;
+                        case 'info':
+                        default:
+                            $criteria[] = array( 'col' => 'type', 'val' => array( 'info', 'log' ) );
+                            break;
+                    }
+                }
+
+                if (! empty($filters['request_type'])) {
+                    $filters['request_type'] = strtolower($filters['request_type']);
+
+                    if (in_array($filters['request_type'], array( 'call', 'ajax', 'cron' ))) {
+                        $criteria[] = array( 'col' => 'request_type', 'val' => $filters['request_type'] );
+                    }
+                }
+
+                if (! empty($filters['file'])) {
+                    $criteria[] = array(
+                        'col' => 'file',
+                        'op'  => 'LIKE',
+                        'val' => '%' . esc_sql($filters['file']),
+                    );
+                }
+
+                if (! empty($filters['function'])) {
+                    $criteria[] = array(
+                        'col' => 'function',
+                        'op'  => 'LIKE',
+                        'val' => '%' . esc_sql($filters['function']),
+                    );
+                }
+
+                if (! empty($filters['process_id']) && is_numeric($filters['process_id'])) {
+                    $criteria[] = array( 'col' => 'process_id', 'val' => $filters['process_id'] );
+                }
+
+                if (! empty($filters['logger'])) {
+                    $criteria[] = array(
+                        'col' => 'logger',
+                        'op'  => 'LIKE',
+                        'val' => '%' . esc_sql($filters['logger']) . '%',
+                    );
+                }
+
+                if (! empty($filters['message'])) {
+                    $criteria[] = array(
+                        'col' => 'message',
+                        'op'  => 'LIKE',
+                        'val' => '%' . esc_sql($filters['message']) . '%',
+                    );
+                }
+
+                if (0 < count($criteria)) {
+                    $query .= "\nWHERE\n";
+
+                    $first = true;
+                    foreach ($criteria as $c) {
+                        if (! $first) {
+                            $query .= "AND\n";
+                        }
+
+                        if (is_array($c['val'])) {
+                            $operator = 'IN';
+
+                            for ($i = 0, $len = count($c['val']); $i < $len; $i ++) {
+                                $c['val'][ $i ] = "'" . esc_sql($c['val'][ $i ]) . "'";
+                            }
+
+                            $val = '(' . implode(',', $c['val']) . ')';
+                        } else {
+                            $operator = ! empty($c['op']) ? $c['op'] : '=';
+                            $val      = "'" . esc_sql($c['val']) . "'";
+                        }
+
+                        $query .= "`{$c['col']}` {$operator} {$val}\n";
+
+                        $first = false;
+                    }
+                }
+            }
+
+            if (! is_array($order)) {
+                $order = array(
+                    'col'   => 'id',
+                    'order' => 'desc'
+                );
+            }
+
+            $query .= " ORDER BY {$order['col']} {$order['order']} LIMIT {$offset},{$limit}";
+
+            return $query;
+        }
+
+        /**
+         * Load logs from DB.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.1.6
+         *
+         * @param bool $filters
+         * @param int  $limit
+         * @param int  $offset
+         * @param bool $order
+         *
+         * @return object[]|null
+         */
+        public static function load_db_logs(
+            $filters = false,
+            $limit = 200,
+            $offset = 0,
+            $order = false
+        ) {
+            global $wpdb;
+
+            $query = self::build_db_logs_query(
+                $filters,
+                $limit,
+                $offset,
+                $order
+            );
+
+            return $wpdb->get_results($query);
+        }
+
+        /**
+         * Load logs from DB.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.1.6
+         *
+         * @param bool   $filters
+         * @param string $filename
+         * @param int    $limit
+         * @param int    $offset
+         * @param bool   $order
+         *
+         * @return false|string File download URL or false on failure.
+         */
+        public static function download_db_logs(
+            $filters = false,
+            $filename = '',
+            $limit = 10000,
+            $offset = 0,
+            $order = false
+        ) {
+            global $wpdb;
+
+            $query = self::build_db_logs_query(
+                $filters,
+                $limit,
+                $offset,
+                $order,
+                true
+            );
+
+            $upload_dir = wp_upload_dir();
+            if (empty($filename)) {
+                $filename = 'fs-logs-' . date('Y-m-d_H-i-s', WP_FS__SCRIPT_START_TIME) . '.csv';
+            }
+            $filepath = rtrim($upload_dir['path'], '/') . "/{$filename}";
+
+            $query .= " INTO OUTFILE '{$filepath}' FIELDS TERMINATED BY '\t' ESCAPED BY '\\\\' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\\n'";
+
+            $columns = '';
+            for ($i = 0, $len = count(self::$_log_columns); $i < $len; $i ++) {
+                if ($i > 0) {
+                    $columns .= ', ';
+                }
+
+                $columns .= "'" . self::$_log_columns[ $i ] . "'";
+            }
+
+            $query = "SELECT {$columns} UNION ALL " . $query;
+
+            $result = $wpdb->query($query);
+
+            if (false === $result) {
+                return false;
+            }
+
+            return rtrim($upload_dir['url'], '/') . '/' . $filename;
+        }
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.1.6
+         *
+         * @param string $filename
+         *
+         * @return string
+         */
+        public static function get_logs_download_url($filename = '')
+        {
+            $upload_dir = wp_upload_dir();
+            if (empty($filename)) {
+                $filename = 'fs-logs-' . date('Y-m-d_H-i-s', WP_FS__SCRIPT_START_TIME) . '.csv';
+            }
+
+            return rtrim($upload_dir['url'], '/') . $filename;
+        }
+
+        #endregion
+    }
diff --git a/freemius/includes/class-fs-options.php b/freemius/includes/class-fs-options.php
index dcb9409288ed0e5ffb7de9cdc404484fd4447e9f..07468129bfaeb7879c72b779bab39dacd8dcd0e6 100644
--- a/freemius/includes/class-fs-options.php
+++ b/freemius/includes/class-fs-options.php
@@ -6,7 +6,7 @@
      * @since       1.2.3
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
@@ -15,7 +15,8 @@
      *
      * A wrapper class for handling network level and single site level options.
      */
-    class FS_Options {
+    class FS_Options
+    {
         /**
          * @var string
          */
@@ -63,9 +64,10 @@
          *
          * @return FS_Options
          */
-        static function instance( $id, $load = false ) {
-            if ( ! isset( self::$_instances[ $id ] ) ) {
-                self::$_instances[ $id ] = new FS_Options( $id, $load );
+        public static function instance($id, $load = false)
+        {
+            if (! isset(self::$_instances[ $id ])) {
+                self::$_instances[ $id ] = new FS_Options($id, $load);
             }
 
             return self::$_instances[ $id ];
@@ -78,16 +80,17 @@
          * @param string $id
          * @param bool   $load
          */
-        private function __construct( $id, $load = false ) {
+        private function __construct($id, $load = false)
+        {
             $this->_id           = $id;
             $this->_is_multisite = is_multisite();
 
-            if ( $this->_is_multisite ) {
+            if ($this->_is_multisite) {
                 $this->_blog_id         = get_current_blog_id();
-                $this->_network_options = FS_Option_Manager::get_manager( $id, $load, true );
+                $this->_network_options = FS_Option_Manager::get_manager($id, $load, true);
             }
 
-            $this->_options = FS_Option_Manager::get_manager( $id, $load, $this->_blog_id );
+            $this->_options = FS_Option_Manager::get_manager($id, $load, $this->_blog_id);
         }
 
         /**
@@ -98,10 +101,11 @@
          *
          * @param $blog_id
          */
-        function set_site_blog_context( $blog_id ) {
+        public function set_site_blog_context($blog_id)
+        {
             $this->_blog_id = $blog_id;
 
-            $this->_options = FS_Option_Manager::get_manager( $this->_id, false, $this->_blog_id );
+            $this->_options = FS_Option_Manager::get_manager($this->_id, false, $this->_blog_id);
         }
 
         /**
@@ -113,14 +117,15 @@
          *
          * @return mixed
          */
-        function get_option( $option, $default = null, $network_level_or_blog_id = null ) {
-            if ( $this->should_use_network_storage( $option, $network_level_or_blog_id ) ) {
-                return $this->_network_options->get_option( $option, $default );
+        public function get_option($option, $default = null, $network_level_or_blog_id = null)
+        {
+            if ($this->should_use_network_storage($option, $network_level_or_blog_id)) {
+                return $this->_network_options->get_option($option, $default);
             }
 
-            $site_options = $this->get_site_options( $network_level_or_blog_id );
+            $site_options = $this->get_site_options($network_level_or_blog_id);
 
-            return $site_options->get_option( $option, $default );
+            return $site_options->get_option($option, $default);
         }
 
         /**
@@ -132,12 +137,13 @@
          * @param bool          $flush
          * @param null|bool|int $network_level_or_blog_id When an integer, use the given blog storage. When `true` use the multisite storage (if there's a network). When `false`, use the current context blog storage. When `null`, the decision which storage to use (MS vs. Current S) will be handled internally and determined based on the $option (based on self::$_SITE_LEVEL_PARAMS).
          */
-        function set_option( $option, $value, $flush = false, $network_level_or_blog_id = null ) {
-            if ( $this->should_use_network_storage( $option, $network_level_or_blog_id ) ) {
-                $this->_network_options->set_option( $option, $value, $flush );
+        public function set_option($option, $value, $flush = false, $network_level_or_blog_id = null)
+        {
+            if ($this->should_use_network_storage($option, $network_level_or_blog_id)) {
+                $this->_network_options->set_option($option, $value, $flush);
             } else {
-                $site_options = $this->get_site_options( $network_level_or_blog_id );
-                $site_options->set_option( $option, $value, $flush );
+                $site_options = $this->get_site_options($network_level_or_blog_id);
+                $site_options->set_option($option, $value, $flush);
             }
         }
 
@@ -149,12 +155,13 @@
          * @param bool          $flush
          * @param null|bool|int $network_level_or_blog_id When an integer, use the given blog storage. When `true` use the multisite storage (if there's a network). When `false`, use the current context blog storage. When `null`, the decision which storage to use (MS vs. Current S) will be handled internally and determined based on the $option (based on self::$_SITE_LEVEL_PARAMS).
          */
-        function unset_option( $option, $flush = false, $network_level_or_blog_id = null ) {
-            if ( $this->should_use_network_storage( $option, $network_level_or_blog_id ) ) {
-                $this->_network_options->unset_option( $option, $flush );
+        public function unset_option($option, $flush = false, $network_level_or_blog_id = null)
+        {
+            if ($this->should_use_network_storage($option, $network_level_or_blog_id)) {
+                $this->_network_options->unset_option($option, $flush);
             } else {
-                $site_options = $this->get_site_options( $network_level_or_blog_id );
-                $site_options->unset_option( $option, $flush );
+                $site_options = $this->get_site_options($network_level_or_blog_id);
+                $site_options->unset_option($option, $flush);
             }
         }
 
@@ -165,11 +172,12 @@
          * @param bool $flush
          * @param bool $network_level
          */
-        function load( $flush = false, $network_level = true ) {
-            if ( $this->_is_multisite && $network_level ) {
-                $this->_network_options->load( $flush );
+        public function load($flush = false, $network_level = true)
+        {
+            if ($this->_is_multisite && $network_level) {
+                $this->_network_options->load($flush);
             } else {
-                $this->_options->load( $flush );
+                $this->_options->load($flush);
             }
         }
 
@@ -179,18 +187,19 @@
          *
          * @param null|bool|int $network_level_or_blog_id When an integer, use the given blog storage. When `true` use the multisite storage (if there's a network). When `false`, use the current context blog storage. When `null`, store both network storage and the current context blog storage.
          */
-        function store( $network_level_or_blog_id = null ) {
-            if ( ! $this->_is_multisite ||
+        public function store($network_level_or_blog_id = null)
+        {
+            if (! $this->_is_multisite ||
                  false === $network_level_or_blog_id ||
                  0 == $network_level_or_blog_id ||
-                 is_null( $network_level_or_blog_id )
+                 is_null($network_level_or_blog_id)
             ) {
-                $site_options = $this->get_site_options( $network_level_or_blog_id );
+                $site_options = $this->get_site_options($network_level_or_blog_id);
                 $site_options->store();
             }
 
-            if ( $this->_is_multisite &&
-                 ( is_null( $network_level_or_blog_id ) || true === $network_level_or_blog_id )
+            if ($this->_is_multisite &&
+                 (is_null($network_level_or_blog_id) || true === $network_level_or_blog_id)
             ) {
                 $this->_network_options->store();
             }
@@ -203,20 +212,21 @@
          * @param int|null|bool $network_level_or_blog_id
          * @param bool          $flush
          */
-        function clear( $network_level_or_blog_id = null, $flush = false ) {
-            if ( ! $this->_is_multisite ||
+        public function clear($network_level_or_blog_id = null, $flush = false)
+        {
+            if (! $this->_is_multisite ||
                  false === $network_level_or_blog_id ||
-                 is_null( $network_level_or_blog_id ) ||
-                 is_numeric( $network_level_or_blog_id )
+                 is_null($network_level_or_blog_id) ||
+                 is_numeric($network_level_or_blog_id)
             ) {
-                $site_options = $this->get_site_options( $network_level_or_blog_id );
-                $site_options->clear( $flush );
+                $site_options = $this->get_site_options($network_level_or_blog_id);
+                $site_options->clear($flush);
             }
 
-            if ( $this->_is_multisite &&
-                 ( true === $network_level_or_blog_id || is_null( $network_level_or_blog_id ) )
+            if ($this->_is_multisite &&
+                 (true === $network_level_or_blog_id || is_null($network_level_or_blog_id))
             ) {
-                $this->_network_options->clear( $flush );
+                $this->_network_options->clear($flush);
             }
         }
 
@@ -232,19 +242,20 @@
          *
          * @param int $blog_id
          */
-        function migrate_to_network( $blog_id = 0 ) {
-            if ( ! $this->_is_multisite ) {
+        public function migrate_to_network($blog_id = 0)
+        {
+            if (! $this->_is_multisite) {
                 return;
             }
 
             $updated = false;
 
-            $site_options = $this->get_site_options( $blog_id );
+            $site_options = $this->get_site_options($blog_id);
 
             $keys = $site_options->get_options_keys();
 
-            foreach ( $keys as $option ) {
-                if ( $this->is_site_option( $option ) ||
+            foreach ($keys as $option) {
+                if ($this->is_site_option($option) ||
                      // Don't move admin notices to the network storage.
                     in_array($option, array(
                         // Don't move admin notices to the network storage.
@@ -260,43 +271,43 @@
                 $option_updated = false;
 
                 // Migrate option to the network storage.
-                $site_option = $site_options->get_option( $option );
+                $site_option = $site_options->get_option($option);
 
-                if ( ! $this->_network_options->has_option( $option ) ) {
+                if (! $this->_network_options->has_option($option)) {
                     // Option not set on the network level, so just set it.
-                    $this->_network_options->set_option( $option, $site_option, false );
+                    $this->_network_options->set_option($option, $site_option, false);
 
                     $option_updated = true;
                 } else {
                     // Option already set on the network level, so we need to merge it inelegantly.
-                    $network_option = $this->_network_options->get_option( $option );
+                    $network_option = $this->_network_options->get_option($option);
 
-                    if ( is_array( $network_option ) && is_array( $site_option ) ) {
+                    if (is_array($network_option) && is_array($site_option)) {
                         // Option is an array.
-                        foreach ( $site_option as $key => $value ) {
-                            if ( ! isset( $network_option[ $key ] ) ) {
+                        foreach ($site_option as $key => $value) {
+                            if (! isset($network_option[ $key ])) {
                                 $network_option[ $key ] = $value;
 
                                 $option_updated = true;
-                            } else if ( is_array( $network_option[ $key ] ) && is_array( $value ) ) {
-                                if ( empty( $network_option[ $key ] ) ) {
+                            } elseif (is_array($network_option[ $key ]) && is_array($value)) {
+                                if (empty($network_option[ $key ])) {
                                     $network_option[ $key ] = $value;
 
                                     $option_updated = true;
-                                } else if ( empty( $value ) ) {
+                                } elseif (empty($value)) {
                                     // Do nothing.
                                 } else {
                                     reset($value);
                                     $first_key = key($value);
-                                    if ( $value[$first_key] instanceof FS_Entity ) {
+                                    if ($value[$first_key] instanceof FS_Entity) {
                                         // Merge entities by IDs.
                                         $network_entities_ids = array();
-                                        foreach ( $network_option[ $key ] as $entity ) {
+                                        foreach ($network_option[ $key ] as $entity) {
                                             $network_entities_ids[ $entity->id ] = true;
                                         }
 
-                                        foreach ( $value as $entity ) {
-                                            if ( ! isset( $network_entities_ids[ $entity->id ] ) ) {
+                                        foreach ($value as $entity) {
+                                            if (! isset($network_entities_ids[ $entity->id ])) {
                                                 $network_option[ $key ][] = $entity;
 
                                                 $option_updated = true;
@@ -308,8 +319,8 @@
                         }
                     }
 
-                    if ( $option_updated ) {
-                        $this->_network_options->set_option( $option, $network_option, false );
+                    if ($option_updated) {
+                        $this->_network_options->set_option($option, $network_option, false);
                     }
                 }
 
@@ -326,12 +337,12 @@
                  */
 //                    $site_options->unset_option($option, false);
 
-                if ( $option_updated ) {
+                if ($option_updated) {
                     $updated = true;
                 }
             }
 
-            if ( ! $updated ) {
+            if (! $updated) {
                 return;
             }
 
@@ -351,7 +362,8 @@
          * @author Vova Feldman (@svovaf)
          * @since  2.0.0
          */
-        private static function load_site_options_map() {
+        private static function load_site_options_map()
+        {
             self::$_SITE_OPTIONS_MAP = array(
                 'sites'          => true,
                 'theme_sites'    => true,
@@ -368,16 +380,17 @@
          *
          * @return bool
          */
-        private function is_site_option( $option ) {
-            if ( WP_FS__ACCOUNTS_OPTION_NAME != $this->_id ) {
+        private function is_site_option($option)
+        {
+            if (WP_FS__ACCOUNTS_OPTION_NAME != $this->_id) {
                 return false;
             }
 
-            if ( ! isset( self::$_SITE_OPTIONS_MAP ) ) {
+            if (! isset(self::$_SITE_OPTIONS_MAP)) {
                 self::load_site_options_map();
             }
 
-            return isset( self::$_SITE_OPTIONS_MAP[ $option ] );
+            return isset(self::$_SITE_OPTIONS_MAP[ $option ]);
         }
 
         /**
@@ -388,12 +401,13 @@
          *
          * @return FS_Option_Manager
          */
-        private function get_site_options( $blog_id = 0 ) {
-            if ( 0 == $blog_id || $blog_id == $this->_blog_id ) {
+        private function get_site_options($blog_id = 0)
+        {
+            if (0 == $blog_id || $blog_id == $this->_blog_id) {
                 return $this->_options;
             }
 
-            return FS_Option_Manager::get_manager( $this->_id, true, $blog_id );
+            return FS_Option_Manager::get_manager($this->_id, true, $blog_id);
         }
 
         /**
@@ -407,25 +421,26 @@
          *
          * @return bool
          */
-        private function should_use_network_storage( $option, $network_level_or_blog_id = null ) {
-            if ( ! $this->_is_multisite ) {
+        private function should_use_network_storage($option, $network_level_or_blog_id = null)
+        {
+            if (! $this->_is_multisite) {
                 // Not a multisite environment.
                 return false;
             }
 
-            if ( is_numeric( $network_level_or_blog_id ) ) {
+            if (is_numeric($network_level_or_blog_id)) {
                 // Explicitly asked to use a specified blog storage.
                 return false;
             }
 
-            if ( is_bool( $network_level_or_blog_id ) ) {
+            if (is_bool($network_level_or_blog_id)) {
                 // Explicitly specified whether should use the network or blog level storage.
                 return $network_level_or_blog_id;
             }
 
             // Determine which storage to use based on the option.
-            return ! $this->is_site_option( $option );
+            return ! $this->is_site_option($option);
         }
 
         #endregion
-    }
\ No newline at end of file
+    }
diff --git a/freemius/includes/class-fs-plugin-updater.php b/freemius/includes/class-fs-plugin-updater.php
index 8f6b99616d06b6dcf5de8069b76eadfd989d7ab7..c44f518872775d0e9830664238032c7bd4d61dfc 100644
--- a/freemius/includes/class-fs-plugin-updater.php
+++ b/freemius/includes/class-fs-plugin-updater.php
@@ -8,11 +8,12 @@
      * @link        https://github.com/easydigitaldownloads/EDD-License-handler/blob/master/EDD_SL_Plugin_Updater.php
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
-    class FS_Plugin_Updater {
+    class FS_Plugin_Updater
+    {
 
         /**
          * @var Freemius
@@ -52,11 +53,12 @@
          *
          * @return FS_Plugin_Updater
          */
-        static function instance( Freemius $freemius ) {
+        public static function instance(Freemius $freemius)
+        {
             $key = $freemius->get_id();
 
-            if ( ! isset( self::$_INSTANCES[ $key ] ) ) {
-                self::$_INSTANCES[ $key ] = new self( $freemius );
+            if (! isset(self::$_INSTANCES[ $key ])) {
+                self::$_INSTANCES[ $key ] = new self($freemius);
             }
 
             return self::$_INSTANCES[ $key ];
@@ -64,10 +66,11 @@
 
         #endregion
 
-        private function __construct( Freemius $freemius ) {
+        private function __construct(Freemius $freemius)
+        {
             $this->_fs = $freemius;
 
-            $this->_logger = FS_Logger::get_logger( WP_FS__SLUG . '_' . $freemius->get_slug() . '_updater', WP_FS__DEBUG_SDK, WP_FS__ECHO_DEBUG_SDK );
+            $this->_logger = FS_Logger::get_logger(WP_FS__SLUG . '_' . $freemius->get_slug() . '_updater', WP_FS__DEBUG_SDK, WP_FS__ECHO_DEBUG_SDK);
 
             $this->filters();
         }
@@ -78,9 +81,10 @@
          * @author Vova Feldman (@svovaf)
          * @since  1.0.4
          */
-        private function filters() {
+        private function filters()
+        {
             // Override request for plugin information
-            add_filter( 'plugins_api', array( &$this, 'plugins_api_filter' ), 10, 3 );
+            add_filter('plugins_api', array( &$this, 'plugins_api_filter' ), 10, 3);
 
             $this->add_transient_filters();
 
@@ -93,36 +97,36 @@
              *
              */
             // WP 2.9+
-            add_action( "after_plugin_row_{$this->_fs->get_plugin_basename()}", array(
+            add_action("after_plugin_row_{$this->_fs->get_plugin_basename()}", array(
                 &$this,
                 'catch_plugin_update_row'
-            ), 9 );
-            add_action( "after_plugin_row_{$this->_fs->get_plugin_basename()}", array(
+            ), 9);
+            add_action("after_plugin_row_{$this->_fs->get_plugin_basename()}", array(
                 &$this,
                 'edit_and_echo_plugin_update_row'
-            ), 11, 2 );
+            ), 11, 2);
 
-            if ( ! $this->_fs->has_any_active_valid_license() ) {
-                add_action( 'admin_head', array( &$this, 'catch_plugin_information_dialog_contents' ) );
+            if (! $this->_fs->has_any_active_valid_license()) {
+                add_action('admin_head', array( &$this, 'catch_plugin_information_dialog_contents' ));
             }
 
-            if ( ! WP_FS__IS_PRODUCTION_MODE ) {
-                add_filter( 'http_request_host_is_external', array(
+            if (! WP_FS__IS_PRODUCTION_MODE) {
+                add_filter('http_request_host_is_external', array(
                     $this,
                     'http_request_host_is_external_filter'
-                ), 10, 3 );
+                ), 10, 3);
             }
 
-            if ( $this->_fs->is_premium() ) {
-                if ( ! $this->is_correct_folder_name() ) {
-                    add_filter( 'upgrader_post_install', array( &$this, '_maybe_update_folder_name' ), 10, 3 );
+            if ($this->_fs->is_premium()) {
+                if (! $this->is_correct_folder_name()) {
+                    add_filter('upgrader_post_install', array( &$this, '_maybe_update_folder_name' ), 10, 3);
                 }
 
-                add_filter( 'upgrader_pre_install', array( 'FS_Plugin_Updater', '_store_basename_for_source_adjustment' ), 1, 2 );
-                add_filter( 'upgrader_source_selection', array( 'FS_Plugin_Updater', '_maybe_adjust_source_dir' ), 1, 3 );
+                add_filter('upgrader_pre_install', array( 'FS_Plugin_Updater', '_store_basename_for_source_adjustment' ), 1, 2);
+                add_filter('upgrader_source_selection', array( 'FS_Plugin_Updater', '_maybe_adjust_source_dir' ), 1, 3);
 
-                if ( ! $this->_fs->has_any_active_valid_license() ) {
-                    add_filter( 'wp_prepare_themes_for_js', array( &$this, 'change_theme_update_info_html' ), 10, 1 );
+                if (! $this->_fs->has_any_active_valid_license()) {
+                    add_filter('wp_prepare_themes_for_js', array( &$this, 'change_theme_update_info_html' ), 10, 1);
                 }
             }
         }
@@ -131,15 +135,16 @@
          * @author Leo Fajardo (@leorw)
          * @since 2.1.4
          */
-        function catch_plugin_information_dialog_contents() {
+        public function catch_plugin_information_dialog_contents()
+        {
             if (
-                'plugin-information' !== fs_request_get( 'tab', false ) ||
-                $this->_fs->get_slug() !== fs_request_get( 'plugin', false )
+                'plugin-information' !== fs_request_get('tab', false) ||
+                $this->_fs->get_slug() !== fs_request_get('plugin', false)
             ) {
                 return;
             }
 
-            add_action( 'admin_footer', array( &$this, 'edit_and_echo_plugin_information_dialog_contents' ), 0, 1 );
+            add_action('admin_footer', array( &$this, 'edit_and_echo_plugin_information_dialog_contents' ), 0, 1);
 
             ob_start();
         }
@@ -150,31 +155,32 @@
          *
          * @param string $hook_suffix
          */
-        function edit_and_echo_plugin_information_dialog_contents( $hook_suffix ) {
+        public function edit_and_echo_plugin_information_dialog_contents($hook_suffix)
+        {
             if (
-                'plugin-information' !== fs_request_get( 'tab', false ) ||
-                $this->_fs->get_slug() !== fs_request_get( 'plugin', false )
+                'plugin-information' !== fs_request_get('tab', false) ||
+                $this->_fs->get_slug() !== fs_request_get('plugin', false)
             ) {
                 return;
             }
 
             $license = $this->_fs->_get_license();
 
-            $subscription = ( is_object( $license ) && ! $license->is_lifetime() ) ?
-                $this->_fs->_get_subscription( $license->id ) :
+            $subscription = (is_object($license) && ! $license->is_lifetime()) ?
+                $this->_fs->_get_subscription($license->id) :
                 null;
 
             $contents = ob_get_clean();
 
-            $update_button_id_attribute_pos = strpos( $contents, 'id="plugin_update_from_iframe"' );
+            $update_button_id_attribute_pos = strpos($contents, 'id="plugin_update_from_iframe"');
 
-            if ( false !== $update_button_id_attribute_pos ) {
+            if (false !== $update_button_id_attribute_pos) {
                 $update_button_start_pos = strrpos(
-                    substr( $contents, 0, $update_button_id_attribute_pos ),
+                    substr($contents, 0, $update_button_id_attribute_pos),
                     '<a'
                 );
 
-                $update_button_end_pos = ( strpos( $contents, '</a>', $update_button_id_attribute_pos ) + strlen( '</a>' ) );
+                $update_button_end_pos = (strpos($contents, '</a>', $update_button_id_attribute_pos) + strlen('</a>'));
 
                 /**
                  * The part of the contents without the update button.
@@ -182,9 +188,9 @@
                  * @author Leo Fajardo (@leorw)
                  * @since 2.2.5
                  */
-                $modified_contents = substr( $contents, 0, $update_button_start_pos );
+                $modified_contents = substr($contents, 0, $update_button_start_pos);
 
-                $update_button = substr( $contents, $update_button_start_pos, ( $update_button_end_pos - $update_button_start_pos ) );
+                $update_button = substr($contents, $update_button_start_pos, ($update_button_end_pos - $update_button_start_pos));
 
                 /**
                  * Replace the plugin information dialog's "Install Update Now" button's text and URL. If there's a license,
@@ -193,22 +199,22 @@
                  */
                 $update_button = preg_replace(
                     '/(\<a.+)(id="plugin_update_from_iframe")(.+href=")([^\s]+)(".*\>)(.+)(\<\/a>)/is',
-                    is_object( $license ) ?
+                    is_object($license) ?
                         sprintf(
                             '$1$3%s$5%s$7',
                             $this->_fs->checkout_url(
-                                is_object( $subscription ) ?
-                                    ( 1 == $subscription->billing_cycle ? WP_FS__PERIOD_MONTHLY : WP_FS__PERIOD_ANNUALLY ) :
+                                is_object($subscription) ?
+                                    (1 == $subscription->billing_cycle ? WP_FS__PERIOD_MONTHLY : WP_FS__PERIOD_ANNUALLY) :
                                     WP_FS__PERIOD_LIFETIME,
                                 false,
                                 array( 'licenses' => $license->quota )
                             ),
-                            fs_text_inline( 'Renew license', 'renew-license', $this->_fs->get_slug() )
+                            fs_text_inline('Renew license', 'renew-license', $this->_fs->get_slug())
                         ) :
                         sprintf(
                             '$1$3%s$5%s$7',
                             $this->_fs->pricing_url(),
-                            fs_text_inline( 'Buy license', 'buy-license', $this->_fs->get_slug() )
+                            fs_text_inline('Buy license', 'buy-license', $this->_fs->get_slug())
                         ),
                     $update_button
                 );
@@ -227,7 +233,7 @@
                  * @author Leo Fajardo (@leorw)
                  * @since 2.2.5
                  */
-                $modified_contents .= substr( $contents, $update_button_end_pos );
+                $modified_contents .= substr($contents, $update_button_end_pos);
 
                 $contents = $modified_contents;
             }
@@ -239,38 +245,40 @@
          * @author Vova Feldman (@svovaf)
          * @since  2.0.0
          */
-        private function add_transient_filters() {
-            if ( $this->_fs->is_premium() && ! $this->_fs->is_tracking_allowed() ) {
-                $this->_logger->log( 'Opted out sites cannot receive automatic software updates.' );
+        private function add_transient_filters()
+        {
+            if ($this->_fs->is_premium() && ! $this->_fs->is_tracking_allowed()) {
+                $this->_logger->log('Opted out sites cannot receive automatic software updates.');
 
                 return;
             }
 
-            add_filter( 'pre_set_site_transient_update_plugins', array(
+            add_filter('pre_set_site_transient_update_plugins', array(
                 &$this,
                 'pre_set_site_transient_update_plugins_filter'
-            ) );
+            ));
 
-            add_filter( 'pre_set_site_transient_update_themes', array(
+            add_filter('pre_set_site_transient_update_themes', array(
                 &$this,
                 'pre_set_site_transient_update_plugins_filter'
-            ) );
+            ));
         }
 
         /**
          * @author Vova Feldman (@svovaf)
          * @since  2.0.0
          */
-        private function remove_transient_filters() {
-            remove_filter( 'pre_set_site_transient_update_plugins', array(
+        private function remove_transient_filters()
+        {
+            remove_filter('pre_set_site_transient_update_plugins', array(
                 &$this,
                 'pre_set_site_transient_update_plugins_filter'
-            ) );
+            ));
 
-            remove_filter( 'pre_set_site_transient_update_themes', array(
+            remove_filter('pre_set_site_transient_update_themes', array(
                 &$this,
                 'pre_set_site_transient_update_plugins_filter'
-            ) );
+            ));
         }
 
         /**
@@ -279,7 +287,8 @@
          * @author Vova Feldman (@svovaf)
          * @since  1.1.6
          */
-        function catch_plugin_update_row() {
+        public function catch_plugin_update_row()
+        {
             ob_start();
         }
 
@@ -292,11 +301,12 @@
          * @param string $file
          * @param array  $plugin_data
          */
-        function edit_and_echo_plugin_update_row( $file, $plugin_data ) {
+        public function edit_and_echo_plugin_update_row($file, $plugin_data)
+        {
             $plugin_update_row = ob_get_clean();
 
-            $current = get_site_transient( 'update_plugins' );
-            if ( ! isset( $current->response[ $file ] ) ) {
+            $current = get_site_transient('update_plugins');
+            if (! isset($current->response[ $file ])) {
                 echo $plugin_update_row;
 
                 return;
@@ -306,8 +316,8 @@
 
             $has_beta_update = $this->_fs->has_beta_update();
 
-            if ( $this->_fs->has_any_active_valid_license() ) {
-                if ( $has_beta_update ) {
+            if ($this->_fs->has_any_active_valid_license()) {
+                if ($has_beta_update) {
                     /**
                      * Turn the "new version" text into "new Beta version".
                      *
@@ -324,10 +334,10 @@
                         (
                             '$1' .
                             sprintf(
-                                fs_text_inline( 'There is a %s of %s available.', 'new-version-available', $this->_fs->get_slug() ),
+                                fs_text_inline('There is a %s of %s available.', 'new-version-available', $this->_fs->get_slug()),
                                 $has_beta_update ?
-                                    fs_text_inline( 'new Beta version', 'new-beta-version', $this->_fs->get_slug() ) :
-                                    fs_text_inline( 'new version', 'new-version', $this->_fs->get_slug() ),
+                                    fs_text_inline('new Beta version', 'new-beta-version', $this->_fs->get_slug()) :
+                                    fs_text_inline('new version', 'new-version', $this->_fs->get_slug()),
                                 $this->_fs->get_plugin_title()
                             ) .
                             ' ' .
@@ -357,18 +367,18 @@
                     (
                         '$1' .
                         sprintf(
-                            fs_text_inline( 'There is a %s of %s available.', 'new-version-available', $this->_fs->get_slug() ),
+                            fs_text_inline('There is a %s of %s available.', 'new-version-available', $this->_fs->get_slug()),
                             sprintf(
                                 '<a href="$4"%s>%s</a>',
                                 '$5',
                                 $has_beta_update ?
-                                    fs_text_inline( 'new Beta version', 'new-beta-version', $this->_fs->get_slug() ) :
-                                    fs_text_inline( 'new version', 'new-version', $this->_fs->get_slug() )
+                                    fs_text_inline('new Beta version', 'new-beta-version', $this->_fs->get_slug()) :
+                                    fs_text_inline('new version', 'new-version', $this->_fs->get_slug())
                             ),
                             $this->_fs->get_plugin_title()
                         ) .
                         ' ' .
-                        $this->_fs->version_upgrade_checkout_link( $r->new_version ) .
+                        $this->_fs->version_upgrade_checkout_link($r->new_version) .
                         '$6'
                     ),
                     $plugin_update_row
@@ -377,8 +387,8 @@
 
             if (
                 $this->_fs->is_plugin() &&
-                isset( $r->upgrade_notice ) &&
-                strlen( trim( $r->upgrade_notice ) ) > 0
+                isset($r->upgrade_notice) &&
+                strlen(trim($r->upgrade_notice)) > 0
             ) {
                 $slug = $this->_fs->get_slug();
 
@@ -386,11 +396,11 @@
                     '<p class="notice fs-upgrade-notice fs-slug-%1$s fs-type-%2$s" data-slug="%1$s" data-type="%2$s"><strong>%3$s</strong> %4$s</p>',
                     $slug,
                     $this->_fs->get_module_type(),
-                    fs_text_inline( 'Important Upgrade Notice:', 'upgrade_notice', $slug ),
-                    esc_html( $r->upgrade_notice )
+                    fs_text_inline('Important Upgrade Notice:', 'upgrade_notice', $slug),
+                    esc_html($r->upgrade_notice)
                 );
 
-                $plugin_update_row = str_replace( '</div>', '</div>' . $upgrade_notice_html, $plugin_update_row );
+                $plugin_update_row = str_replace('</div>', '</div>' . $upgrade_notice_html, $plugin_update_row);
             }
 
             echo $plugin_update_row;
@@ -404,23 +414,24 @@
          *
          * @return array
          */
-        function change_theme_update_info_html( $prepared_themes ) {
+        public function change_theme_update_info_html($prepared_themes)
+        {
             $theme_basename = $this->_fs->get_plugin_basename();
 
-            if ( ! isset( $prepared_themes[ $theme_basename ] ) ) {
+            if (! isset($prepared_themes[ $theme_basename ])) {
                 return $prepared_themes;
             }
 
-            $themes_update = get_site_transient( 'update_themes' );
-            if ( ! isset( $themes_update->response[ $theme_basename ] ) ||
-                empty( $themes_update->response[ $theme_basename ]['package'] )
+            $themes_update = get_site_transient('update_themes');
+            if (! isset($themes_update->response[ $theme_basename ]) ||
+                empty($themes_update->response[ $theme_basename ]['package'])
             ) {
                 return $prepared_themes;
             }
 
             $prepared_themes[ $theme_basename ]['update'] = preg_replace(
                 '/(\<p.+>)(.+)(\<a.+\<a.+)\.(.+\<\/p\>)/is',
-                '$1 $2 ' . $this->_fs->version_upgrade_checkout_link( $themes_update->response[ $theme_basename ]['new_version'] ) .
+                '$1 $2 ' . $this->_fs->version_upgrade_checkout_link($themes_update->response[ $theme_basename ]['new_version']) .
                 '$4',
                 $prepared_themes[ $theme_basename ]['update']
             );
@@ -447,8 +458,9 @@
          *
          * @return bool
          */
-        function http_request_host_is_external_filter( $allow, $host, $url ) {
-            return ( false !== strpos( $host, 'freemius' ) ) ? true : $allow;
+        public function http_request_host_is_external_filter($allow, $host, $url)
+        {
+            return (false !== strpos($host, 'freemius')) ? true : $allow;
         }
 
         /**
@@ -468,7 +480,8 @@
          *
          * @return object Modified update array with custom plugin data.
          */
-        function pre_set_site_transient_update_plugins_filter( $transient_data ) {
+        public function pre_set_site_transient_update_plugins_filter($transient_data)
+        {
             $this->_logger->entrance();
 
             /**
@@ -485,12 +498,12 @@
              * @author Leo Fajardo (@leorw)
              * @since  1.2.2
              */
-            if ( "pre_set_site_transient_update_{$module_type}" !== current_filter() ) {
+            if ("pre_set_site_transient_update_{$module_type}" !== current_filter()) {
                 return $transient_data;
             }
 
-            if ( empty( $transient_data ) ||
-                 defined( 'WP_FS__UNINSTALL_MODE' )
+            if (empty($transient_data) ||
+                 defined('WP_FS__UNINSTALL_MODE')
             ) {
                 return $transient_data;
             }
@@ -499,10 +512,10 @@
 
             $current_plugin_version = $this->_fs->get_plugin_version();
 
-            if ( ! empty( $wp_current_filter ) && 'upgrader_process_complete' === $wp_current_filter[0] ) {
+            if (! empty($wp_current_filter) && 'upgrader_process_complete' === $wp_current_filter[0]) {
                 if (
-                    is_null( $this->_update_details ) ||
-                    ( is_object( $this->_update_details ) && $this->_update_details->new_version !== $current_plugin_version )
+                    is_null($this->_update_details) ||
+                    (is_object($this->_update_details) && $this->_update_details->new_version !== $current_plugin_version)
                 ) {
                     /**
                      * After an update, clear the stored update details and reparse the plugin's main file in order to get
@@ -513,23 +526,23 @@
                      * @since 2.3.1
                      */
                     $this->_update_details  = null;
-                    $current_plugin_version = $this->_fs->get_plugin_version( true );
+                    $current_plugin_version = $this->_fs->get_plugin_version(true);
                 }
             }
 
-            if ( ! isset( $this->_update_details ) ) {
+            if (! isset($this->_update_details)) {
                 // Get plugin's newest update.
                 $new_version = $this->_fs->get_update(
                     false,
-                    fs_request_get_bool( 'force-check' ),
+                    fs_request_get_bool('force-check'),
                     WP_FS__TIME_24_HOURS_IN_SEC / 24,
                     $current_plugin_version
                 );
 
                 $this->_update_details = false;
 
-                if ( is_object( $new_version ) && $this->is_new_version_premium( $new_version ) ) {
-                    $this->_logger->log( 'Found newer plugin version ' . $new_version->version );
+                if (is_object($new_version) && $this->is_new_version_premium($new_version)) {
+                    $this->_logger->log('Found newer plugin version ' . $new_version->version);
 
                     /**
                      * Cache plugin details locally since set_site_transient( 'update_plugins' )
@@ -538,19 +551,19 @@
                      *
                      * @since 1.1.8.1
                      */
-                    $this->_update_details = $this->get_update_details( $new_version );
+                    $this->_update_details = $this->get_update_details($new_version);
                 }
             }
 
             // Alias.
             $basename = $this->_fs->premium_plugin_basename();
 
-            if ( is_object( $this->_update_details ) ) {
-                if ( isset( $transient_data->no_update ) ) {
-                    unset( $transient_data->no_update[ $basename ] );
+            if (is_object($this->_update_details)) {
+                if (isset($transient_data->no_update)) {
+                    unset($transient_data->no_update[ $basename ]);
                 }
 
-                if ( ! isset( $transient_data->response ) ) {
+                if (! isset($transient_data->response)) {
                     $transient_data->response = array();
                 }
 
@@ -559,17 +572,17 @@
                     $this->_update_details :
                     (array) $this->_update_details;
             } else {
-                if ( isset( $transient_data->response ) ) {
+                if (isset($transient_data->response)) {
                     /**
                      * Ensure that there's no update data for the plugin to prevent upgrading the premium version to the latest free version.
                      *
                      * @author Leo Fajardo (@leorw)
                      * @since 2.3.0
                      */
-                    unset( $transient_data->response[ $basename ] );
+                    unset($transient_data->response[ $basename ]);
                 }
 
-                if ( ! isset( $transient_data->no_update ) ) {
+                if (! isset($transient_data->no_update)) {
                     $transient_data->no_update = array();
                 }
 
@@ -606,41 +619,41 @@
 
             $slug = $this->_fs->get_slug();
 
-            if ( $this->_fs->is_org_repo_compliant() && $this->_fs->is_freemium() ) {
-                if ( ! isset( $this->_translation_updates ) ) {
+            if ($this->_fs->is_org_repo_compliant() && $this->_fs->is_freemium()) {
+                if (! isset($this->_translation_updates)) {
                     $this->_translation_updates = array();
 
-                    if ( current_user_can( 'update_languages' ) ) {
-                        $translation_updates = $this->fetch_wp_org_module_translation_updates( $module_type, $slug );
-                        if ( ! empty( $translation_updates ) ) {
+                    if (current_user_can('update_languages')) {
+                        $translation_updates = $this->fetch_wp_org_module_translation_updates($module_type, $slug);
+                        if (! empty($translation_updates)) {
                             $this->_translation_updates = $translation_updates;
                         }
                     }
                 }
 
-                if ( ! empty( $this->_translation_updates ) ) {
-                    $all_translation_updates = ( isset( $transient_data->translations ) && is_array( $transient_data->translations ) ) ?
+                if (! empty($this->_translation_updates)) {
+                    $all_translation_updates = (isset($transient_data->translations) && is_array($transient_data->translations)) ?
                         $transient_data->translations :
                         array();
 
                     $current_plugin_translation_updates_map = array();
-                    foreach ( $all_translation_updates as $key => $translation_update ) {
-                        if ( $module_type === ( $translation_update['type'] . 's' ) && $slug === $translation_update['slug'] ) {
+                    foreach ($all_translation_updates as $key => $translation_update) {
+                        if ($module_type === ($translation_update['type'] . 's') && $slug === $translation_update['slug']) {
                             $current_plugin_translation_updates_map[ $translation_update['language'] ] = $translation_update;
-                            unset( $all_translation_updates[ $key ] );
+                            unset($all_translation_updates[ $key ]);
                         }
                     }
 
-                    foreach ( $this->_translation_updates as $translation_update ) {
+                    foreach ($this->_translation_updates as $translation_update) {
                         $lang = $translation_update['language'];
-                        if ( ! isset( $current_plugin_translation_updates_map[ $lang ] ) ||
-                            version_compare( $translation_update['version'], $current_plugin_translation_updates_map[ $lang ]['version'], '>' )
+                        if (! isset($current_plugin_translation_updates_map[ $lang ]) ||
+                            version_compare($translation_update['version'], $current_plugin_translation_updates_map[ $lang ]['version'], '>')
                         ) {
                             $current_plugin_translation_updates_map[ $lang ] = $translation_update;
                         }
                     }
 
-                    $transient_data->translations = array_merge( $all_translation_updates, array_values( $current_plugin_translation_updates_map ) );
+                    $transient_data->translations = array_merge($all_translation_updates, array_values($current_plugin_translation_updates_map));
                 }
             }
 
@@ -657,7 +670,8 @@
          *
          * @return object
          */
-        function get_update_details( FS_Plugin_Tag $new_version ) {
+        public function get_update_details(FS_Plugin_Tag $new_version)
+        {
             $update              = new stdClass();
             $update->slug        = $this->_fs->get_slug();
             $update->new_version = $new_version->version;
@@ -668,7 +682,7 @@
 
             $icon = $this->_fs->get_local_icon_url();
 
-            if ( ! empty( $icon ) ) {
+            if (! empty($icon)) {
                 $update->icons = array(
 //                    '1x'      => $icon,
 //                    '2x'      => $icon,
@@ -676,13 +690,13 @@
                 );
             }
 
-            if ( $this->_fs->is_premium() ) {
-                $latest_tag = $this->_fs->_fetch_latest_version( $this->_fs->get_id(), false );
+            if ($this->_fs->is_premium()) {
+                $latest_tag = $this->_fs->_fetch_latest_version($this->_fs->get_id(), false);
 
                 if (
-                    isset( $latest_tag->readme ) &&
-                    isset( $latest_tag->readme->upgrade_notice ) &&
-                    ! empty( $latest_tag->readme->upgrade_notice )
+                    isset($latest_tag->readme) &&
+                    isset($latest_tag->readme->upgrade_notice) &&
+                    ! empty($latest_tag->readme->upgrade_notice)
                 ) {
                     $update->upgrade_notice = $latest_tag->readme->upgrade_notice;
                 }
@@ -701,15 +715,16 @@
          *
          * @return bool
          */
-        private function is_new_version_premium( FS_Plugin_Tag $new_version ) {
-            $query_str = parse_url( $new_version->url, PHP_URL_QUERY );
-            if ( empty( $query_str ) ) {
+        private function is_new_version_premium(FS_Plugin_Tag $new_version)
+        {
+            $query_str = parse_url($new_version->url, PHP_URL_QUERY);
+            if (empty($query_str)) {
                 return false;
             }
 
-            parse_str( $query_str, $params );
+            parse_str($query_str, $params);
 
-            return ( isset( $params['is_premium'] ) && 'true' == $params['is_premium'] );
+            return (isset($params['is_premium']) && 'true' == $params['is_premium']);
         }
 
         /**
@@ -727,18 +742,19 @@
          *
          * @param \FS_Plugin_Tag $new_version
          */
-        function set_update_data( FS_Plugin_Tag $new_version ) {
+        public function set_update_data(FS_Plugin_Tag $new_version)
+        {
             $this->_logger->entrance();
 
-            if ( ! $this->is_new_version_premium( $new_version ) ) {
+            if (! $this->is_new_version_premium($new_version)) {
                 return;
             }
 
             $transient_key = "update_{$this->_fs->get_module_type()}s";
 
-            $transient_data = get_site_transient( $transient_key );
+            $transient_data = get_site_transient($transient_key);
 
-            $transient_data = is_object( $transient_data ) ?
+            $transient_data = is_object($transient_data) ?
                 $transient_data :
                 new stdClass();
 
@@ -746,21 +762,23 @@
             $basename  = $this->_fs->get_plugin_basename();
             $is_plugin = $this->_fs->is_plugin();
 
-            if ( ! isset( $transient_data->response ) ||
-                 ! is_array( $transient_data->response )
+            if (! isset($transient_data->response) ||
+                 ! is_array($transient_data->response)
             ) {
                 $transient_data->response = array();
-            } else if ( ! empty( $transient_data->response[ $basename ] ) ) {
+            } elseif (! empty($transient_data->response[ $basename ])) {
                 $version = $is_plugin ?
-                    ( ! empty( $transient_data->response[ $basename ]->new_version ) ?
+                    (
+                        ! empty($transient_data->response[ $basename ]->new_version) ?
                         $transient_data->response[ $basename ]->new_version :
                         null
-                    ) : ( ! empty( $transient_data->response[ $basename ]['new_version'] ) ?
+                    ) : (
+                        ! empty($transient_data->response[ $basename ]['new_version']) ?
                         $transient_data->response[ $basename ]['new_version'] :
                         null
                     );
 
-                if ( $version == $new_version->version ) {
+                if ($version == $new_version->version) {
                     // The update data is already set.
                     return;
                 }
@@ -769,15 +787,15 @@
             // Remove the added filters.
             $this->remove_transient_filters();
 
-            $this->_update_details = $this->get_update_details( $new_version );
+            $this->_update_details = $this->get_update_details($new_version);
 
             // Set update data in transient.
             $transient_data->response[ $basename ] = $is_plugin ?
                 $this->_update_details :
                 (array) $this->_update_details;
 
-            if ( ! isset( $transient_data->checked ) ||
-                 ! is_array( $transient_data->checked )
+            if (! isset($transient_data->checked) ||
+                 ! is_array($transient_data->checked)
             ) {
                 $transient_data->checked = array();
             }
@@ -786,7 +804,7 @@
             $transient_data->checked[ $basename ] = $this->_fs->get_plugin_version();
             $transient_data->last_checked         = time();
 
-            set_site_transient( $transient_key, $transient_data );
+            set_site_transient($transient_key, $transient_data);
 
             $this->add_transient_filters();
         }
@@ -795,30 +813,31 @@
          * @author Leo Fajardo (@leorw)
          * @since 2.0.2
          */
-        function delete_update_data() {
+        public function delete_update_data()
+        {
             $this->_logger->entrance();
 
             $transient_key = "update_{$this->_fs->get_module_type()}s";
 
-            $transient_data = get_site_transient( $transient_key );
+            $transient_data = get_site_transient($transient_key);
 
             // Alias
             $basename = $this->_fs->get_plugin_basename();
 
-            if ( ! is_object( $transient_data ) ||
-                ! isset( $transient_data->response ) ||
-                 ! is_array( $transient_data->response ) ||
-                empty( $transient_data->response[ $basename ] )
+            if (! is_object($transient_data) ||
+                ! isset($transient_data->response) ||
+                 ! is_array($transient_data->response) ||
+                empty($transient_data->response[ $basename ])
             ) {
                 return;
             }
 
-            unset( $transient_data->response[ $basename ] );
+            unset($transient_data->response[ $basename ]);
 
             // Remove the added filters.
             $this->remove_transient_filters();
 
-            set_site_transient( $transient_key, $transient_data );
+            set_site_transient($transient_key, $transient_data);
 
             $this->add_transient_filters();
         }
@@ -834,29 +853,30 @@
          *
          * @return bool|mixed
          */
-        static function _fetch_plugin_info_from_repository( $action, $args ) {
+        public static function _fetch_plugin_info_from_repository($action, $args)
+        {
             $url = $http_url = 'http://api.wordpress.org/plugins/info/1.0/';
-            if ( $ssl = wp_http_supports( array( 'ssl' ) ) ) {
-                $url = set_url_scheme( $url, 'https' );
+            if ($ssl = wp_http_supports(array( 'ssl' ))) {
+                $url = set_url_scheme($url, 'https');
             }
 
             $args = array(
                 'timeout' => 15,
                 'body'    => array(
                     'action'  => $action,
-                    'request' => serialize( $args )
+                    'request' => serialize($args)
                 )
             );
 
-            $request = wp_remote_post( $url, $args );
+            $request = wp_remote_post($url, $args);
 
-            if ( is_wp_error( $request ) ) {
+            if (is_wp_error($request)) {
                 return false;
             }
 
-            $res = maybe_unserialize( wp_remote_retrieve_body( $request ) );
+            $res = maybe_unserialize(wp_remote_retrieve_body($request));
 
-            if ( ! is_object( $res ) && ! is_array( $res ) ) {
+            if (! is_object($res) && ! is_array($res)) {
                 return false;
             }
 
@@ -874,15 +894,16 @@
          *
          * @return array|null
          */
-        private function fetch_wp_org_module_translation_updates( $module_type, $slug ) {
+        private function fetch_wp_org_module_translation_updates($module_type, $slug)
+        {
             $plugin_data = $this->_fs->get_plugin_data();
 
-            $locales = array_values( get_available_languages() );
-            $locales = apply_filters( "{$module_type}_update_check_locales", $locales );
-            $locales = array_unique( $locales );
+            $locales = array_values(get_available_languages());
+            $locales = apply_filters("{$module_type}_update_check_locales", $locales);
+            $locales = array_unique($locales);
 
             $plugin_basename = $this->_fs->get_plugin_basename();
-            if ( 'themes' === $module_type ) {
+            if ('themes' === $module_type) {
                 $plugin_basename = $slug;
             }
 
@@ -895,21 +916,21 @@
                         array(
                             "{$module_type}" => array(
                                 $plugin_basename => array(
-                                    'Name'   => trim( str_replace( $this->_fs->get_plugin()->premium_suffix, '', $plugin_data['Name'] ) ),
+                                    'Name'   => trim(str_replace($this->_fs->get_plugin()->premium_suffix, '', $plugin_data['Name'])),
                                     'Author' => $plugin_data['Author'],
                                 )
                             )
                         )
                     ),
-                    'translations'    => json_encode( $this->get_installed_translations( $module_type, $slug ) ),
-                    'locale'          => json_encode( $locales )
+                    'translations'    => json_encode($this->get_installed_translations($module_type, $slug)),
+                    'locale'          => json_encode($locales)
                 ),
-                'user-agent' => ( 'WordPress/' . $wp_version . '; ' . home_url( '/' ) )
+                'user-agent' => ('WordPress/' . $wp_version . '; ' . home_url('/'))
             );
 
             $url = "http://api.wordpress.org/{$module_type}/update-check/1.1/";
-            if ( $ssl = wp_http_supports( array( 'ssl' ) ) ) {
-                $url = set_url_scheme( $url, 'https' );
+            if ($ssl = wp_http_supports(array( 'ssl' ))) {
+                $url = set_url_scheme($url, 'https');
             }
 
             $raw_response = Freemius::safe_remote_post(
@@ -920,17 +941,17 @@
                 false
             );
 
-            if ( is_wp_error( $raw_response ) ) {
+            if (is_wp_error($raw_response)) {
                 return null;
             }
 
-            $response = json_decode( wp_remote_retrieve_body( $raw_response ), true );
+            $response = json_decode(wp_remote_retrieve_body($raw_response), true);
 
-            if ( ! is_array( $response ) ) {
+            if (! is_array($response)) {
                 return null;
             }
 
-            if ( ! isset( $response['translations'] ) || empty( $response['translations'] ) ) {
+            if (! isset($response['translations']) || empty($response['translations'])) {
                 return null;
             }
 
@@ -946,50 +967,53 @@
          *
          * @return array
          */
-        private function get_installed_translations( $module_type, $slug ) {
-            if ( function_exists( 'wp_get_installed_translations' ) ) {
-                return wp_get_installed_translations( $module_type );
+        private function get_installed_translations($module_type, $slug)
+        {
+            if (function_exists('wp_get_installed_translations')) {
+                return wp_get_installed_translations($module_type);
             }
 
             $dir = "/{$module_type}";
 
-            if ( ! is_dir( WP_LANG_DIR . $dir ) )
+            if (! is_dir(WP_LANG_DIR . $dir)) {
                 return array();
+            }
 
-            $files = scandir( WP_LANG_DIR . $dir );
-            if ( ! $files )
+            $files = scandir(WP_LANG_DIR . $dir);
+            if (! $files) {
                 return array();
+            }
 
             $language_data = array();
 
-            foreach ( $files as $file ) {
-                if ( 0 !== strpos( $file, $slug ) ) {
+            foreach ($files as $file) {
+                if (0 !== strpos($file, $slug)) {
                     continue;
                 }
 
-                if ( '.' === $file[0] || is_dir( WP_LANG_DIR . "{$dir}/{$file}" ) ) {
+                if ('.' === $file[0] || is_dir(WP_LANG_DIR . "{$dir}/{$file}")) {
                     continue;
                 }
 
-                if ( substr( $file, -3 ) !== '.po' ) {
+                if (substr($file, -3) !== '.po') {
                     continue;
                 }
 
-                if ( ! preg_match( '/(?:(.+)-)?([a-z]{2,3}(?:_[A-Z]{2})?(?:_[a-z0-9]+)?).po/', $file, $match ) ) {
+                if (! preg_match('/(?:(.+)-)?([a-z]{2,3}(?:_[A-Z]{2})?(?:_[a-z0-9]+)?).po/', $file, $match)) {
                     continue;
                 }
 
-                if ( ! in_array( substr( $file, 0, -3 ) . '.mo', $files ) )  {
+                if (! in_array(substr($file, 0, -3) . '.mo', $files)) {
                     continue;
                 }
 
-                list( , $textdomain, $language ) = $match;
+                list(, $textdomain, $language) = $match;
 
-                if ( '' === $textdomain ) {
+                if ('' === $textdomain) {
                     $textdomain = 'default';
                 }
 
-                $language_data[ $textdomain ][ $language ] = wp_get_pomo_file_data( WP_LANG_DIR . "{$dir}/{$file}" );
+                $language_data[ $textdomain ][ $language ] = wp_get_pomo_file_data(WP_LANG_DIR . "{$dir}/{$file}");
             }
 
             return $language_data;
@@ -1009,11 +1033,12 @@
          *
          * @return object
          */
-        function plugins_api_filter( $data, $action = '', $args = null ) {
+        public function plugins_api_filter($data, $action = '', $args = null)
+        {
             $this->_logger->entrance();
 
-            if ( ( 'plugin_information' !== $action ) ||
-                 ! isset( $args->slug )
+            if (('plugin_information' !== $action) ||
+                 ! isset($args->slug)
             ) {
                 return $data;
             }
@@ -1022,23 +1047,23 @@
             $is_addon      = false;
             $addon_version = false;
 
-            if ( $this->_fs->get_slug() !== $args->slug ) {
-                $addon = $this->_fs->get_addon_by_slug( $args->slug );
+            if ($this->_fs->get_slug() !== $args->slug) {
+                $addon = $this->_fs->get_addon_by_slug($args->slug);
 
-                if ( ! is_object( $addon ) ) {
+                if (! is_object($addon)) {
                     return $data;
                 }
 
-                if ( $this->_fs->is_addon_activated( $addon->id ) ) {
-                    $addon_version = $this->_fs->get_addon_instance( $addon->id )->get_plugin_version();
-                } else if ( $this->_fs->is_addon_installed( $addon->id ) ) {
+                if ($this->_fs->is_addon_activated($addon->id)) {
+                    $addon_version = $this->_fs->get_addon_instance($addon->id)->get_plugin_version();
+                } elseif ($this->_fs->is_addon_installed($addon->id)) {
                     $addon_plugin_data = get_plugin_data(
-                        ( WP_PLUGIN_DIR . '/' . $this->_fs->get_addon_basename( $addon->id ) ),
+                        (WP_PLUGIN_DIR . '/' . $this->_fs->get_addon_basename($addon->id)),
                         false,
                         false
                     );
 
-                    if ( ! empty( $addon_plugin_data ) ) {
+                    if (! empty($addon_plugin_data)) {
                         $addon_version = $addon_plugin_data['Version'];
                     }
                 }
@@ -1047,14 +1072,14 @@
             }
 
             $plugin_in_repo = false;
-            if ( ! $is_addon ) {
+            if (! $is_addon) {
                 // Try to fetch info from .org repository.
-                $data = self::_fetch_plugin_info_from_repository( $action, $args );
+                $data = self::_fetch_plugin_info_from_repository($action, $args);
 
-                $plugin_in_repo = ( false !== $data );
+                $plugin_in_repo = (false !== $data);
             }
 
-            if ( ! $plugin_in_repo ) {
+            if (! $plugin_in_repo) {
                 $data = $args;
 
                 // Fetch as much as possible info from local files.
@@ -1078,20 +1103,20 @@ if ( !isset($info->error) ) {
                 $this->_fs->get_plugin_version();
 
             // Get plugin's newest update.
-            $new_version = $this->get_latest_download_details( $is_addon ? $addon->id : false, $plugin_version );
+            $new_version = $this->get_latest_download_details($is_addon ? $addon->id : false, $plugin_version);
 
-            if ( ! is_object( $new_version ) || empty( $new_version->version ) ) {
+            if (! is_object($new_version) || empty($new_version->version)) {
                 $data->version = $plugin_version;
             } else {
-                if ( $is_addon ) {
-                    $data->name    = $addon->title . ' ' . $this->_fs->get_text_inline( 'Add-On', 'addon' );
+                if ($is_addon) {
+                    $data->name    = $addon->title . ' ' . $this->_fs->get_text_inline('Add-On', 'addon');
                     $data->slug    = $addon->slug;
                     $data->url     = WP_FS__ADDRESS;
                     $data->package = $new_version->url;
                 }
 
-                if ( ! $plugin_in_repo ) {
-                    $data->last_updated = ! is_null( $new_version->updated ) ? $new_version->updated : $new_version->created;
+                if (! $plugin_in_repo) {
+                    $data->last_updated = ! is_null($new_version->updated) ? $new_version->updated : $new_version->created;
                     $data->requires     = $new_version->requires_platform_version;
                     $data->tested       = $new_version->tested_up_to_version;
                 }
@@ -1099,27 +1124,27 @@ if ( !isset($info->error) ) {
                 $data->version       = $new_version->version;
                 $data->download_link = $new_version->url;
 
-                if ( isset( $new_version->readme ) && is_object( $new_version->readme ) ) {
+                if (isset($new_version->readme) && is_object($new_version->readme)) {
                     $new_version_readme_data = $new_version->readme;
-                    if ( isset( $new_version_readme_data->sections ) ) {
+                    if (isset($new_version_readme_data->sections)) {
                         $new_version_readme_data->sections = (array) $new_version_readme_data->sections;
                     } else {
                         $new_version_readme_data->sections = array();
                     }
 
-                    if ( isset( $data->sections ) ) {
-                        if ( isset( $data->sections['screenshots'] ) ) {
+                    if (isset($data->sections)) {
+                        if (isset($data->sections['screenshots'])) {
                             $new_version_readme_data->sections['screenshots'] = $data->sections['screenshots'];
                         }
 
-                        if ( isset( $data->sections['reviews'] ) ) {
+                        if (isset($data->sections['reviews'])) {
                             $new_version_readme_data->sections['reviews'] = $data->sections['reviews'];
                         }
                     }
 
-                    if ( isset( $new_version_readme_data->banners ) ) {
+                    if (isset($new_version_readme_data->banners)) {
                         $new_version_readme_data->banners = (array) $new_version_readme_data->banners;
-                    } else if ( isset( $data->banners ) ) {
+                    } elseif (isset($data->banners)) {
                         $new_version_readme_data->banners = $data->banners;
                     }
 
@@ -1136,8 +1161,8 @@ if ( !isset($info->error) ) {
                         'homepage'
                     );
 
-                    foreach ( $wp_org_sections as $wp_org_section ) {
-                        if ( isset( $data->{$wp_org_section} ) ) {
+                    foreach ($wp_org_sections as $wp_org_section) {
+                        if (isset($data->{$wp_org_section})) {
                             $new_version_readme_data->{$wp_org_section} = $data->{$wp_org_section};
                         }
                     }
@@ -1159,8 +1184,9 @@ if ( !isset($info->error) ) {
          *
          * @return object
          */
-        private function get_latest_download_details( $addon_id = false, $newer_than = false, $fetch_readme = true ) {
-            return $this->_fs->_fetch_latest_version( $addon_id, true, WP_FS__TIME_24_HOURS_IN_SEC, $newer_than, $fetch_readme );
+        private function get_latest_download_details($addon_id = false, $newer_than = false, $fetch_readme = true)
+        {
+            return $this->_fs->_fetch_latest_version($addon_id, true, WP_FS__TIME_24_HOURS_IN_SEC, $newer_than, $fetch_readme);
         }
 
         /**
@@ -1172,8 +1198,9 @@ if ( !isset($info->error) ) {
          *
          * @return bool
          */
-        private function is_correct_folder_name() {
-            return ( $this->_fs->get_target_folder_name() == trim( dirname( $this->_fs->get_plugin_basename() ), '/\\' ) );
+        private function is_correct_folder_name()
+        {
+            return ($this->_fs->get_target_folder_name() == trim(dirname($this->_fs->get_plugin_basename()), '/\\'));
         }
 
         /**
@@ -1190,34 +1217,35 @@ if ( !isset($info->error) ) {
          *
          * @return bool
          */
-        function _maybe_update_folder_name( $response, $hook_extra, $result ) {
+        public function _maybe_update_folder_name($response, $hook_extra, $result)
+        {
             $basename = $this->_fs->get_plugin_basename();
 
-            if ( true !== $response ||
-                 empty( $hook_extra ) ||
-                 empty( $hook_extra['plugin'] ) ||
+            if (true !== $response ||
+                 empty($hook_extra) ||
+                 empty($hook_extra['plugin']) ||
                  $basename !== $hook_extra['plugin']
             ) {
                 return $response;
             }
 
-            $active_plugins_basenames = get_option( 'active_plugins' );
+            $active_plugins_basenames = get_option('active_plugins');
 
-            foreach ( $active_plugins_basenames as $key => $active_plugin_basename ) {
-                if ( $basename === $active_plugin_basename ) {
+            foreach ($active_plugins_basenames as $key => $active_plugin_basename) {
+                if ($basename === $active_plugin_basename) {
                     // Get filename including extension.
-                    $filename = basename( $basename );
+                    $filename = basename($basename);
 
                     $new_basename = plugin_basename(
-                        trailingslashit( $this->_fs->is_premium() ? $this->_fs->get_premium_slug() : $this->_fs->get_slug() ) .
+                        trailingslashit($this->_fs->is_premium() ? $this->_fs->get_premium_slug() : $this->_fs->get_slug()) .
                         $filename
                     );
 
                     // Verify that the expected correct path exists.
-                    if ( file_exists( fs_normalize_path( WP_PLUGIN_DIR . '/' . $new_basename ) ) ) {
+                    if (file_exists(fs_normalize_path(WP_PLUGIN_DIR . '/' . $new_basename))) {
                         // Override active plugin name.
                         $active_plugins_basenames[ $key ] = $new_basename;
-                        update_option( 'active_plugins', $active_plugins_basenames );
+                        update_option('active_plugins', $active_plugins_basenames);
                     }
 
                     break;
@@ -1254,52 +1282,53 @@ if ( !isset($info->error) ) {
          *
          * @return array
          */
-        function install_and_activate_plugin( $plugin_id = false ) {
-            if ( ! empty( $plugin_id ) && ! FS_Plugin::is_valid_id( $plugin_id ) ) {
+        public function install_and_activate_plugin($plugin_id = false)
+        {
+            if (! empty($plugin_id) && ! FS_Plugin::is_valid_id($plugin_id)) {
                 // Invalid plugin ID.
                 return array(
-                    'message' => $this->_fs->get_text_inline( 'Invalid module ID.', 'auto-install-error-invalid-id' ),
+                    'message' => $this->_fs->get_text_inline('Invalid module ID.', 'auto-install-error-invalid-id'),
                     'code'    => 'invalid_module_id',
                 );
             }
 
             $is_addon = false;
-            if ( FS_Plugin::is_valid_id( $plugin_id ) &&
+            if (FS_Plugin::is_valid_id($plugin_id) &&
                  $plugin_id != $this->_fs->get_id()
             ) {
-                $addon = $this->_fs->get_addon( $plugin_id );
+                $addon = $this->_fs->get_addon($plugin_id);
 
-                if ( ! is_object( $addon ) ) {
+                if (! is_object($addon)) {
                     // Invalid add-on ID.
                     return array(
-                        'message' => $this->_fs->get_text_inline( 'Invalid module ID.', 'auto-install-error-invalid-id' ),
+                        'message' => $this->_fs->get_text_inline('Invalid module ID.', 'auto-install-error-invalid-id'),
                         'code'    => 'invalid_module_id',
                     );
                 }
 
                 $slug          = $addon->slug;
                 $premium_slug  = $addon->premium_slug;
-                $title         = $addon->title . ' ' . $this->_fs->get_text_inline( 'Add-On', 'addon' );
+                $title         = $addon->title . ' ' . $this->_fs->get_text_inline('Add-On', 'addon');
 
                 $is_addon = true;
             } else {
                 $slug          = $this->_fs->get_slug();
                 $premium_slug  = $this->_fs->get_premium_slug();
                 $title         = $this->_fs->get_plugin_title() .
-                                 ( $this->_fs->is_addon() ? ' ' . $this->_fs->get_text_inline( 'Add-On', 'addon' ) : '' );
+                                 ($this->_fs->is_addon() ? ' ' . $this->_fs->get_text_inline('Add-On', 'addon') : '');
             }
 
-            if ( $this->is_premium_plugin_active( $plugin_id ) ) {
+            if ($this->is_premium_plugin_active($plugin_id)) {
                 // Premium version already activated.
                 return array(
                     'message' => $is_addon ?
-                        $this->_fs->get_text_inline( 'Premium add-on version already installed.', 'auto-install-error-premium-addon-activated' ) :
-                        $this->_fs->get_text_inline( 'Premium version already active.', 'auto-install-error-premium-activated' ),
+                        $this->_fs->get_text_inline('Premium add-on version already installed.', 'auto-install-error-premium-addon-activated') :
+                        $this->_fs->get_text_inline('Premium version already active.', 'auto-install-error-premium-activated'),
                     'code'    => 'premium_installed',
                 );
             }
 
-            $latest_version = $this->get_latest_download_details( $plugin_id, false, false );
+            $latest_version = $this->get_latest_download_details($plugin_id, false, false);
             $target_folder  = $premium_slug;
 
             // Prep variables for Plugin_Installer_Skin class.
@@ -1311,64 +1340,64 @@ if ( !isset($info->error) ) {
             $install_url = add_query_arg(
                 array(
                     'action' => 'install-plugin',
-                    'plugin' => urlencode( $slug ),
+                    'plugin' => urlencode($slug),
                 ),
                 'update.php'
             );
 
-            if ( ! class_exists( 'Plugin_Upgrader', false ) ) {
+            if (! class_exists('Plugin_Upgrader', false)) {
                 // Include required resources for the installation.
                 require_once ABSPATH . 'wp-admin/includes/class-wp-upgrader.php';
             }
 
             $skin_args = array(
                 'type'   => 'web',
-                'title'  => sprintf( $this->_fs->get_text_inline( 'Installing plugin: %s', 'installing-plugin-x' ), $title ),
-                'url'    => esc_url_raw( $install_url ),
+                'title'  => sprintf($this->_fs->get_text_inline('Installing plugin: %s', 'installing-plugin-x'), $title),
+                'url'    => esc_url_raw($install_url),
                 'nonce'  => 'install-plugin_' . $slug,
                 'plugin' => '',
                 'api'    => $api,
                 'extra'  => $extra,
             );
 
-//			$skin = new Automatic_Upgrader_Skin( $skin_args );
-//			$skin = new Plugin_Installer_Skin( $skin_args );
-            $skin = new WP_Ajax_Upgrader_Skin( $skin_args );
+            //			$skin = new Automatic_Upgrader_Skin( $skin_args );
+            //			$skin = new Plugin_Installer_Skin( $skin_args );
+            $skin = new WP_Ajax_Upgrader_Skin($skin_args);
 
             // Create a new instance of Plugin_Upgrader.
-            $upgrader = new Plugin_Upgrader( $skin );
+            $upgrader = new Plugin_Upgrader($skin);
 
             // Perform the action and install the plugin from the $source urldecode().
-            add_filter( 'upgrader_source_selection', array( 'FS_Plugin_Updater', '_maybe_adjust_source_dir' ), 1, 3 );
+            add_filter('upgrader_source_selection', array( 'FS_Plugin_Updater', '_maybe_adjust_source_dir' ), 1, 3);
 
-            $install_result = $upgrader->install( $source );
+            $install_result = $upgrader->install($source);
 
-            remove_filter( 'upgrader_source_selection', array( 'FS_Plugin_Updater', '_maybe_adjust_source_dir' ), 1 );
+            remove_filter('upgrader_source_selection', array( 'FS_Plugin_Updater', '_maybe_adjust_source_dir' ), 1);
 
-            if ( is_wp_error( $install_result ) ) {
+            if (is_wp_error($install_result)) {
                 return array(
                     'message' => $install_result->get_error_message(),
                     'code'    => $install_result->get_error_code(),
                 );
-            } elseif ( is_wp_error( $skin->result ) ) {
+            } elseif (is_wp_error($skin->result)) {
                 return array(
                     'message' => $skin->result->get_error_message(),
                     'code'    => $skin->result->get_error_code(),
                 );
-            } elseif ( $skin->get_errors()->get_error_code() ) {
+            } elseif ($skin->get_errors()->get_error_code()) {
                 return array(
                     'message' => $skin->get_error_messages(),
                     'code'    => 'unknown',
                 );
-            } elseif ( is_null( $install_result ) ) {
+            } elseif (is_null($install_result)) {
                 global $wp_filesystem;
 
                 $error_code    = 'unable_to_connect_to_filesystem';
-                $error_message = $this->_fs->get_text_inline( 'Unable to connect to the filesystem. Please confirm your credentials.' );
+                $error_message = $this->_fs->get_text_inline('Unable to connect to the filesystem. Please confirm your credentials.');
 
                 // Pass through the error from WP_Filesystem if one was raised.
-                if ( $wp_filesystem instanceof WP_Filesystem_Base &&
-                     is_wp_error( $wp_filesystem->errors ) &&
+                if ($wp_filesystem instanceof WP_Filesystem_Base &&
+                     is_wp_error($wp_filesystem->errors) &&
                      $wp_filesystem->errors->get_error_code()
                 ) {
                     $error_message = $wp_filesystem->errors->get_error_message();
@@ -1384,9 +1413,9 @@ if ( !isset($info->error) ) {
             $plugin_activate = $upgrader->plugin_info();
 
             // Try to activate the plugin.
-            $activation_result = $this->try_activate_plugin( $plugin_activate );
+            $activation_result = $this->try_activate_plugin($plugin_activate);
 
-            if ( is_wp_error( $activation_result ) ) {
+            if (is_wp_error($activation_result)) {
                 return array(
                     'message' => $activation_result->get_error_message(),
                     'code'    => $activation_result->get_error_code(),
@@ -1407,10 +1436,11 @@ if ( !isset($info->error) ) {
          *
          * @return bool|WP_Error
          */
-        protected function try_activate_plugin( $file_path ) {
-            $activate = activate_plugin( $file_path, '', $this->_fs->is_network_active() );
+        protected function try_activate_plugin($file_path)
+        {
+            $activate = activate_plugin($file_path, '', $this->_fs->is_network_active());
 
-            return is_wp_error( $activate ) ?
+            return is_wp_error($activate) ?
                 $activate :
                 true;
         }
@@ -1425,12 +1455,13 @@ if ( !isset($info->error) ) {
          *
          * @return bool
          */
-        private function is_premium_plugin_active( $plugin_id = false ) {
-            if ( $plugin_id != $this->_fs->get_id() ) {
-                return $this->_fs->is_addon_activated( $plugin_id, true );
+        private function is_premium_plugin_active($plugin_id = false)
+        {
+            if ($plugin_id != $this->_fs->get_id()) {
+                return $this->_fs->is_addon_activated($plugin_id, true);
             }
 
-            return is_plugin_active( $this->_fs->premium_plugin_basename() );
+            return is_plugin_active($this->_fs->premium_plugin_basename());
         }
 
         /**
@@ -1444,10 +1475,11 @@ if ( !isset($info->error) ) {
          *
          * @return bool|WP_Error
          */
-        static function _store_basename_for_source_adjustment( $response, $hook_extra ) {
-            if ( isset( $hook_extra['plugin'] ) ) {
+        public static function _store_basename_for_source_adjustment($response, $hook_extra)
+        {
+            if (isset($hook_extra['plugin'])) {
                 self::$_upgrade_basename = $hook_extra['plugin'];
-            } else if ( isset( $hook_extra['theme'] ) ) {
+            } elseif (isset($hook_extra['theme'])) {
                 self::$_upgrade_basename = $hook_extra['theme'];
             } else {
                 self::$_upgrade_basename = null;
@@ -1475,8 +1507,9 @@ if ( !isset($info->error) ) {
          *
          * @return string|WP_Error
          */
-        static function _maybe_adjust_source_dir( $source, $remote_source, $upgrader ) {
-            if ( ! is_object( $GLOBALS['wp_filesystem'] ) ) {
+        public static function _maybe_adjust_source_dir($source, $remote_source, $upgrader)
+        {
+            if (! is_object($GLOBALS['wp_filesystem'])) {
                 return $source;
             }
 
@@ -1484,20 +1517,20 @@ if ( !isset($info->error) ) {
             $is_theme = false;
 
             // Figure out what the slug is supposed to be.
-            if ( isset( $upgrader->skin->options['extra'] ) ) {
+            if (isset($upgrader->skin->options['extra'])) {
                 // Set by the auto-install logic.
                 $desired_slug = $upgrader->skin->options['extra']['slug'];
-            } else if ( ! empty( $basename ) ) {
+            } elseif (! empty($basename)) {
                 /**
                  * If it doesn't end with ".php", it's a theme.
                  *
                  * @author Leo Fajardo (@leorw)
                  * @since 2.2.1
                  */
-                $is_theme = ( ! fs_ends_with( $basename, '.php' ) );
+                $is_theme = (! fs_ends_with($basename, '.php'));
 
-                $desired_slug = ( ! $is_theme ) ?
-                    dirname( $basename ) :
+                $desired_slug = (! $is_theme) ?
+                    dirname($basename) :
                     // Theme slug
                     $basename;
             } else {
@@ -1505,7 +1538,7 @@ if ( !isset($info->error) ) {
                 return $source;
             }
 
-            if ( is_multisite() ) {
+            if (is_multisite()) {
                 /**
                  * If we are running in a multisite environment and the product is not network activated,
                  * the instance will not exist anyway. Therefore, try to update the source if necessary
@@ -1513,7 +1546,7 @@ if ( !isset($info->error) ) {
                  *
                  * @author Vova Feldman
                  */
-            } else if ( ! empty( $basename ) ) {
+            } elseif (! empty($basename)) {
                 $fs = Freemius::get_instance_by_file(
                     $basename,
                     $is_theme ?
@@ -1521,7 +1554,7 @@ if ( !isset($info->error) ) {
                         WP_FS__MODULE_TYPE_PLUGIN
                 );
 
-                if ( ! is_object( $fs ) ) {
+                if (! is_object($fs)) {
                     /**
                      * If the Freemius instance does not exist on a non-multisite network environment, it means that:
                      *  1. The product is not powered by Freemius; OR
@@ -1534,19 +1567,19 @@ if ( !isset($info->error) ) {
                 }
             }
 
-            $subdir_name = untrailingslashit( str_replace( trailingslashit( $remote_source ), '', $source ) );
+            $subdir_name = untrailingslashit(str_replace(trailingslashit($remote_source), '', $source));
 
-            if ( ! empty( $subdir_name ) && $subdir_name !== $desired_slug ) {
-                $from_path = untrailingslashit( $source );
-                $to_path   = trailingslashit( $remote_source ) . $desired_slug;
+            if (! empty($subdir_name) && $subdir_name !== $desired_slug) {
+                $from_path = untrailingslashit($source);
+                $to_path   = trailingslashit($remote_source) . $desired_slug;
 
-                if ( true === $GLOBALS['wp_filesystem']->move( $from_path, $to_path ) ) {
-                    return trailingslashit( $to_path );
+                if (true === $GLOBALS['wp_filesystem']->move($from_path, $to_path)) {
+                    return trailingslashit($to_path);
                 }
 
                 return new WP_Error(
                     'rename_failed',
-                    fs_text_inline( 'The remote plugin package does not contain a folder with the desired slug and renaming did not work.', 'module-package-rename-failure' ),
+                    fs_text_inline('The remote plugin package does not contain a folder with the desired slug and renaming did not work.', 'module-package-rename-failure'),
                     array(
                         'found'    => $subdir_name,
                         'expected' => $desired_slug
diff --git a/freemius/includes/class-fs-security.php b/freemius/includes/class-fs-security.php
index 4535aa21f29cc8105e5e22ce9bcfcb8f6a709d25..918f42a14eb18e889b1f05f81745bff9713f93f2 100644
--- a/freemius/includes/class-fs-security.php
+++ b/freemius/includes/class-fs-security.php
@@ -1,85 +1,90 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.3
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.3
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	define( 'WP_FS__SECURITY_PARAMS_PREFIX', 's_' );
+    define('WP_FS__SECURITY_PARAMS_PREFIX', 's_');
 
-	/**
-	 * Class FS_Security
-	 */
-	class FS_Security {
-		/**
-		 * @var FS_Security
-		 * @since 1.0.3
-		 */
-		private static $_instance;
-		/**
-		 * @var FS_Logger
-		 * @since 1.0.3
-		 */
-		private static $_logger;
+    /**
+     * Class FS_Security
+     */
+    class FS_Security
+    {
+        /**
+         * @var FS_Security
+         * @since 1.0.3
+         */
+        private static $_instance;
+        /**
+         * @var FS_Logger
+         * @since 1.0.3
+         */
+        private static $_logger;
 
-		/**
-		 * @return \FS_Security
-		 */
-		public static function instance() {
-			if ( ! isset( self::$_instance ) ) {
-				self::$_instance = new FS_Security();
-				self::$_logger   = FS_Logger::get_logger(
-					WP_FS__SLUG,
-					WP_FS__DEBUG_SDK,
-					WP_FS__ECHO_DEBUG_SDK
-				);
-			}
+        /**
+         * @return \FS_Security
+         */
+        public static function instance()
+        {
+            if (! isset(self::$_instance)) {
+                self::$_instance = new FS_Security();
+                self::$_logger   = FS_Logger::get_logger(
+                    WP_FS__SLUG,
+                    WP_FS__DEBUG_SDK,
+                    WP_FS__ECHO_DEBUG_SDK
+                );
+            }
 
-			return self::$_instance;
-		}
+            return self::$_instance;
+        }
 
-		private function __construct() {
-		}
+        private function __construct()
+        {
+        }
 
-		/**
-		 * @param \FS_Scope_Entity $entity
-		 * @param int              $timestamp
-		 * @param string           $action
-		 *
-		 * @return string
-		 */
-		function get_secure_token( FS_Scope_Entity $entity, $timestamp, $action = '' ) {
-			return md5(
-				$timestamp .
-				$entity->id .
-				$entity->secret_key .
-				$entity->public_key .
-				$action
-			);
-		}
+        /**
+         * @param \FS_Scope_Entity $entity
+         * @param int              $timestamp
+         * @param string           $action
+         *
+         * @return string
+         */
+        public function get_secure_token(FS_Scope_Entity $entity, $timestamp, $action = '')
+        {
+            return md5(
+                $timestamp .
+                $entity->id .
+                $entity->secret_key .
+                $entity->public_key .
+                $action
+            );
+        }
 
-		/**
-		 * @param \FS_Scope_Entity $entity
-		 * @param int|bool         $timestamp
-		 * @param string           $action
-		 *
-		 * @return array
-		 */
-		function get_context_params( FS_Scope_Entity $entity, $timestamp = false, $action = '' ) {
-			if ( false === $timestamp ) {
-				$timestamp = time();
-			}
+        /**
+         * @param \FS_Scope_Entity $entity
+         * @param int|bool         $timestamp
+         * @param string           $action
+         *
+         * @return array
+         */
+        public function get_context_params(FS_Scope_Entity $entity, $timestamp = false, $action = '')
+        {
+            if (false === $timestamp) {
+                $timestamp = time();
+            }
 
-			return array(
-				's_ctx_type'   => $entity->get_type(),
-				's_ctx_id'     => $entity->id,
-				's_ctx_ts'     => $timestamp,
-				's_ctx_secure' => $this->get_secure_token( $entity, $timestamp, $action ),
-			);
-		}
-	}
+            return array(
+                's_ctx_type'   => $entity->get_type(),
+                's_ctx_id'     => $entity->id,
+                's_ctx_ts'     => $timestamp,
+                's_ctx_secure' => $this->get_secure_token($entity, $timestamp, $action),
+            );
+        }
+    }
diff --git a/freemius/includes/class-fs-storage.php b/freemius/includes/class-fs-storage.php
index 187a01121ada0fb572ad139b6961fdf52ac329af..a1f64698aff95eaacbd69cd0756ca656586f4b25 100644
--- a/freemius/includes/class-fs-storage.php
+++ b/freemius/includes/class-fs-storage.php
@@ -6,7 +6,7 @@
      * @since       1.2.3
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
@@ -19,7 +19,8 @@
      * @property int    $network_install_blog_id
      * @property object $sync_cron
      */
-    class FS_Storage {
+    class FS_Storage
+    {
         /**
          * @var FS_Storage[]
          */
@@ -80,11 +81,12 @@
          *
          * @return FS_Storage
          */
-        static function instance( $module_type, $slug ) {
+        public static function instance($module_type, $slug)
+        {
             $key = $module_type . ':' . $slug;
 
-            if ( ! isset( self::$_instances[ $key ] ) ) {
-                self::$_instances[ $key ] = new FS_Storage( $module_type, $slug );
+            if (! isset(self::$_instances[ $key ])) {
+                self::$_instances[ $key ] = new FS_Storage($module_type, $slug);
             }
 
             return self::$_instances[ $key ];
@@ -96,17 +98,18 @@
          * @param string $module_type
          * @param string $slug
          */
-        private function __construct( $module_type, $slug ) {
+        private function __construct($module_type, $slug)
+        {
             $this->_module_type  = $module_type;
             $this->_module_slug  = $slug;
             $this->_is_multisite = is_multisite();
 
-            if ( $this->_is_multisite ) {
+            if ($this->_is_multisite) {
                 $this->_blog_id         = get_current_blog_id();
-                $this->_network_storage = FS_Key_Value_Storage::instance( $module_type . '_data', $slug, true );
+                $this->_network_storage = FS_Key_Value_Storage::instance($module_type . '_data', $slug, true);
             }
 
-            $this->_storage = FS_Key_Value_Storage::instance( $module_type . '_data', $slug, $this->_blog_id );
+            $this->_storage = FS_Key_Value_Storage::instance($module_type . '_data', $slug, $this->_blog_id);
         }
 
         /**
@@ -118,7 +121,8 @@
          * @param bool $is_network_active
          * @param bool $is_delegated_connection
          */
-        function set_network_active( $is_network_active = true, $is_delegated_connection = false ) {
+        public function set_network_active($is_network_active = true, $is_delegated_connection = false)
+        {
             $this->_is_network_active       = $is_network_active;
             $this->_is_delegated_connection = $is_delegated_connection;
         }
@@ -131,8 +135,9 @@
          *
          * @param int $blog_id
          */
-        function set_site_blog_context( $blog_id ) {
-            $this->_storage = $this->get_site_storage( $blog_id );
+        public function set_site_blog_context($blog_id)
+        {
+            $this->_storage = $this->get_site_storage($blog_id);
             $this->_blog_id = $blog_id;
         }
 
@@ -144,12 +149,13 @@
          * @param null|bool|int $network_level_or_blog_id When an integer, use the given blog storage. When `true` use the multisite storage (if there's a network). When `false`, use the current context blog storage. When `null`, the decision which storage to use (MS vs. Current S) will be handled internally and determined based on the $option (based on self::$_BINARY_MAP).
          * @param bool          $flush
          */
-        function store( $key, $value, $network_level_or_blog_id = null, $flush = true ) {
-            if ( $this->should_use_network_storage( $key, $network_level_or_blog_id ) ) {
-                $this->_network_storage->store( $key, $value, $flush );
+        public function store($key, $value, $network_level_or_blog_id = null, $flush = true)
+        {
+            if ($this->should_use_network_storage($key, $network_level_or_blog_id)) {
+                $this->_network_storage->store($key, $value, $flush);
             } else {
-                $storage = $this->get_site_storage( $network_level_or_blog_id );
-                $storage->store( $key, $value, $flush );
+                $storage = $this->get_site_storage($network_level_or_blog_id);
+                $storage->store($key, $value, $flush);
             }
         }
 
@@ -160,20 +166,21 @@
          * @param string[]      $exceptions Set of keys to keep and not clear.
          * @param int|null|bool $network_level_or_blog_id
          */
-        function clear_all( $store = true, $exceptions = array(), $network_level_or_blog_id = null ) {
-            if ( ! $this->_is_multisite ||
+        public function clear_all($store = true, $exceptions = array(), $network_level_or_blog_id = null)
+        {
+            if (! $this->_is_multisite ||
                  false === $network_level_or_blog_id ||
-                 is_null( $network_level_or_blog_id ) ||
-                 is_numeric( $network_level_or_blog_id )
+                 is_null($network_level_or_blog_id) ||
+                 is_numeric($network_level_or_blog_id)
             ) {
-                $storage = $this->get_site_storage( $network_level_or_blog_id );
-                $storage->clear_all( $store, $exceptions );
+                $storage = $this->get_site_storage($network_level_or_blog_id);
+                $storage->clear_all($store, $exceptions);
             }
 
-            if ( $this->_is_multisite &&
-                 ( true === $network_level_or_blog_id || is_null( $network_level_or_blog_id ) )
+            if ($this->_is_multisite &&
+                 (true === $network_level_or_blog_id || is_null($network_level_or_blog_id))
             ) {
-                $this->_network_storage->clear_all( $store, $exceptions );
+                $this->_network_storage->clear_all($store, $exceptions);
             }
         }
 
@@ -184,12 +191,13 @@
          * @param bool          $store
          * @param null|bool|int $network_level_or_blog_id When an integer, use the given blog storage. When `true` use the multisite storage (if there's a network). When `false`, use the current context blog storage. When `null`, the decision which storage to use (MS vs. Current S) will be handled internally and determined based on the $option (based on self::$_BINARY_MAP).
          */
-        function remove( $key, $store = true, $network_level_or_blog_id = null ) {
-            if ( $this->should_use_network_storage( $key, $network_level_or_blog_id ) ) {
-                $this->_network_storage->remove( $key, $store );
+        public function remove($key, $store = true, $network_level_or_blog_id = null)
+        {
+            if ($this->should_use_network_storage($key, $network_level_or_blog_id)) {
+                $this->_network_storage->remove($key, $store);
             } else {
-                $storage = $this->get_site_storage( $network_level_or_blog_id );
-                $storage->remove( $key, $store );
+                $storage = $this->get_site_storage($network_level_or_blog_id);
+                $storage->remove($key, $store);
             }
         }
 
@@ -202,13 +210,14 @@
          *
          * @return mixed
          */
-        function get( $key, $default = false, $network_level_or_blog_id = null ) {
-            if ( $this->should_use_network_storage( $key, $network_level_or_blog_id ) ) {
-                return $this->_network_storage->get( $key, $default );
+        public function get($key, $default = false, $network_level_or_blog_id = null)
+        {
+            if ($this->should_use_network_storage($key, $network_level_or_blog_id)) {
+                return $this->_network_storage->get($key, $default);
             } else {
-                $storage = $this->get_site_storage( $network_level_or_blog_id );
+                $storage = $this->get_site_storage($network_level_or_blog_id);
 
-                return $storage->get( $key, $default );
+                return $storage->get($key, $default);
             }
         }
 
@@ -226,15 +235,16 @@
          *
          * @param bool|int|null $network_level_or_blog_id
          */
-        function save( $network_level_or_blog_id = null ) {
-            if ( $this->_is_network_active &&
-                 ( true === $network_level_or_blog_id || is_null( $network_level_or_blog_id ) )
+        public function save($network_level_or_blog_id = null)
+        {
+            if ($this->_is_network_active &&
+                 (true === $network_level_or_blog_id || is_null($network_level_or_blog_id))
             ) {
                 $this->_network_storage->save();
             }
 
-            if ( ! $this->_is_network_active || true !== $network_level_or_blog_id ) {
-                $storage = $this->get_site_storage( $network_level_or_blog_id );
+            if (! $this->_is_network_active || true !== $network_level_or_blog_id) {
+                $storage = $this->get_site_storage($network_level_or_blog_id);
                 $storage->save();
             }
         }
@@ -245,7 +255,8 @@
          *
          * @return string
          */
-        function get_module_slug() {
+        public function get_module_slug()
+        {
             return $this->_module_slug;
         }
 
@@ -255,7 +266,8 @@
          *
          * @return string
          */
-        function get_module_type() {
+        public function get_module_type()
+        {
             return $this->_module_type;
         }
 
@@ -269,25 +281,26 @@
          * @author Vova Feldman (@svovaf)
          * @since  2.0.0
          */
-        function migrate_to_network() {
-            if ( ! $this->_is_multisite ) {
+        public function migrate_to_network()
+        {
+            if (! $this->_is_multisite) {
                 return;
             }
 
             $updated = false;
 
-            if ( ! isset( self::$_NETWORK_OPTIONS_MAP ) ) {
+            if (! isset(self::$_NETWORK_OPTIONS_MAP)) {
                 self::load_network_options_map();
             }
 
-            foreach ( self::$_NETWORK_OPTIONS_MAP as $option => $storage_level ) {
-                if ( ! $this->is_multisite_option( $option ) ) {
+            foreach (self::$_NETWORK_OPTIONS_MAP as $option => $storage_level) {
+                if (! $this->is_multisite_option($option)) {
                     continue;
                 }
 
-                if ( isset( $this->_storage->{$option} ) && ! isset( $this->_network_storage->{$option} ) ) {
+                if (isset($this->_storage->{$option}) && ! isset($this->_network_storage->{$option})) {
                     // Migrate option to the network storage.
-                    $this->_network_storage->store( $option, $this->_storage->{$option}, false );
+                    $this->_network_storage->store($option, $this->_storage->{$option}, false);
 
                     /**
                      * Remove the option from site level storage.
@@ -306,7 +319,7 @@
                 }
             }
 
-            if ( ! $updated ) {
+            if (! $updated) {
                 return;
             }
 
@@ -333,7 +346,8 @@
          * @author Vova Feldman (@svovaf)
          * @since  2.0.0
          */
-        private static function load_network_options_map() {
+        private static function load_network_options_map()
+        {
             self::$_NETWORK_OPTIONS_MAP = array(
                 // Network level options.
                 'affiliate_application_data'   => 0,
@@ -406,36 +420,37 @@
          *
          * @return bool|mixed
          */
-        private function is_multisite_option( $key ) {
-            if ( ! isset( self::$_NETWORK_OPTIONS_MAP ) ) {
+        private function is_multisite_option($key)
+        {
+            if (! isset(self::$_NETWORK_OPTIONS_MAP)) {
                 self::load_network_options_map();
             }
 
-            if ( ! isset( self::$_NETWORK_OPTIONS_MAP[ $key ] ) ) {
+            if (! isset(self::$_NETWORK_OPTIONS_MAP[ $key ])) {
                 // Option not found -> use site level storage.
                 return false;
             }
 
-            if ( 0 === self::$_NETWORK_OPTIONS_MAP[ $key ] ) {
+            if (0 === self::$_NETWORK_OPTIONS_MAP[ $key ]) {
                 // Option found and set to always use the network level storage on a multisite.
                 return true;
             }
 
-            if ( 3 === self::$_NETWORK_OPTIONS_MAP[ $key ] ) {
+            if (3 === self::$_NETWORK_OPTIONS_MAP[ $key ]) {
                 // Option found and set to always use the site level storage on a multisite.
                 return false;
             }
 
-            if ( ! $this->_is_network_active ) {
+            if (! $this->_is_network_active) {
                 return false;
             }
 
-            if ( 1 === self::$_NETWORK_OPTIONS_MAP[ $key ] ) {
+            if (1 === self::$_NETWORK_OPTIONS_MAP[ $key ]) {
                 // Network activated.
                 return true;
             }
 
-            if ( 2 === self::$_NETWORK_OPTIONS_MAP[ $key ] && ! $this->_is_delegated_connection ) {
+            if (2 === self::$_NETWORK_OPTIONS_MAP[ $key ] && ! $this->_is_delegated_connection) {
                 // Network activated and not delegated.
                 return true;
             }
@@ -451,24 +466,25 @@
          *
          * @return bool
          */
-        private function should_use_network_storage( $key, $network_level_or_blog_id = null ) {
-            if ( ! $this->_is_multisite ) {
+        private function should_use_network_storage($key, $network_level_or_blog_id = null)
+        {
+            if (! $this->_is_multisite) {
                 // Not a multisite environment.
                 return false;
             }
 
-            if ( is_numeric( $network_level_or_blog_id ) ) {
+            if (is_numeric($network_level_or_blog_id)) {
                 // Explicitly asked to use a specified blog storage.
                 return false;
             }
 
-            if ( is_bool( $network_level_or_blog_id ) ) {
+            if (is_bool($network_level_or_blog_id)) {
                 // Explicitly specified whether should use the network or blog level storage.
                 return $network_level_or_blog_id;
             }
 
             // Determine which storage to use based on the option.
-            return $this->is_multisite_option( $key );
+            return $this->is_multisite_option($key);
         }
 
         /**
@@ -479,8 +495,9 @@
          *
          * @return \FS_Key_Value_Storage
          */
-        private function get_site_storage( $blog_id = 0 ) {
-            if ( ! is_numeric( $blog_id ) ||
+        private function get_site_storage($blog_id = 0)
+        {
+            if (! is_numeric($blog_id) ||
                  $blog_id == $this->_blog_id ||
                  0 == $blog_id
             ) {
@@ -500,33 +517,37 @@
         #region Magic methods
         #--------------------------------------------------------------------------------
 
-        function __set( $k, $v ) {
-            if ( $this->should_use_network_storage( $k ) ) {
+        public function __set($k, $v)
+        {
+            if ($this->should_use_network_storage($k)) {
                 $this->_network_storage->{$k} = $v;
             } else {
                 $this->_storage->{$k} = $v;
             }
         }
 
-        function __isset( $k ) {
-            return $this->should_use_network_storage( $k ) ?
-                isset( $this->_network_storage->{$k} ) :
-                isset( $this->_storage->{$k} );
+        public function __isset($k)
+        {
+            return $this->should_use_network_storage($k) ?
+                isset($this->_network_storage->{$k}) :
+                isset($this->_storage->{$k});
         }
 
-        function __unset( $k ) {
-            if ( $this->should_use_network_storage( $k ) ) {
-                unset( $this->_network_storage->{$k} );
+        public function __unset($k)
+        {
+            if ($this->should_use_network_storage($k)) {
+                unset($this->_network_storage->{$k});
             } else {
-                unset( $this->_storage->{$k} );
+                unset($this->_storage->{$k});
             }
         }
 
-        function __get( $k ) {
-            return $this->should_use_network_storage( $k ) ?
+        public function __get($k)
+        {
+            return $this->should_use_network_storage($k) ?
                 $this->_network_storage->{$k} :
                 $this->_storage->{$k};
         }
 
         #endregion
-    }
\ No newline at end of file
+    }
diff --git a/freemius/includes/class-fs-user-lock.php b/freemius/includes/class-fs-user-lock.php
index 842cbba5ecae0c788f6b5846f3a5fd837cc1f44e..384be78b91f4c1f689bd1a4dc82676af565725c8 100644
--- a/freemius/includes/class-fs-user-lock.php
+++ b/freemius/includes/class-fs-user-lock.php
@@ -6,14 +6,15 @@
      * @since       2.1.0
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
     /**
      * Class FS_User_Lock
      */
-    class FS_User_Lock {
+    class FS_User_Lock
+    {
         /**
          * @var int
          */
@@ -38,8 +39,9 @@
          *
          * @return FS_User_Lock
          */
-        static function instance() {
-            if ( ! isset( self::$_instance ) ) {
+        public static function instance()
+        {
+            if (! isset(self::$_instance)) {
                 self::$_instance = new self();
             }
 
@@ -48,9 +50,10 @@
 
         #endregion
 
-        private function __construct() {
+        private function __construct()
+        {
             $this->_wp_user_id = Freemius::get_current_wp_user_id();
-            $this->_thread_id  = mt_rand( 0, 32000 );
+            $this->_thread_id  = mt_rand(0, 32000);
         }
 
 
@@ -64,16 +67,17 @@
          *
          * @return bool TRUE if successfully acquired lock.
          */
-        function try_lock( $expiration = 0 ) {
-            if ( $this->is_locked() ) {
+        public function try_lock($expiration = 0)
+        {
+            if ($this->is_locked()) {
                 // Already locked.
                 return false;
             }
 
-            set_site_transient( "locked_{$this->_wp_user_id}", $this->_thread_id, $expiration );
+            set_site_transient("locked_{$this->_wp_user_id}", $this->_thread_id, $expiration);
 
-            if ( $this->has_lock() ) {
-                set_site_transient( "locked_{$this->_wp_user_id}", true, $expiration );
+            if ($this->has_lock()) {
+                set_site_transient("locked_{$this->_wp_user_id}", true, $expiration);
 
                 return true;
             }
@@ -89,8 +93,9 @@
          *
          * @param int $expiration
          */
-        function lock( $expiration = 0 ) {
-            set_site_transient( "locked_{$this->_wp_user_id}", true, $expiration );
+        public function lock($expiration = 0)
+        {
+            set_site_transient("locked_{$this->_wp_user_id}", true, $expiration);
         }
 
         /**
@@ -101,8 +106,9 @@
          *
          * @return bool
          */
-        function is_locked() {
-            return ( false !== get_site_transient( "locked_{$this->_wp_user_id}" ) );
+        public function is_locked()
+        {
+            return (false !== get_site_transient("locked_{$this->_wp_user_id}"));
         }
 
         /**
@@ -111,8 +117,9 @@
          * @author Vova Feldman (@svovaf)
          * @since  2.1.0
          */
-        function unlock() {
-            delete_site_transient( "locked_{$this->_wp_user_id}" );
+        public function unlock()
+        {
+            delete_site_transient("locked_{$this->_wp_user_id}");
         }
 
         /**
@@ -120,7 +127,8 @@
          *
          * @return bool
          */
-        private function has_lock() {
-            return ( $this->_thread_id == get_site_transient( "locked_{$this->_wp_user_id}" ) );
+        private function has_lock()
+        {
+            return ($this->_thread_id == get_site_transient("locked_{$this->_wp_user_id}"));
         }
-    }
\ No newline at end of file
+    }
diff --git a/freemius/includes/customizer/class-fs-customizer-support-section.php b/freemius/includes/customizer/class-fs-customizer-support-section.php
index 3a9300df8c796d6332db17ed8b5d18ddeb3b12a7..83272139a02cd538d2de1cc9ecf77a27fa8c7636 100644
--- a/freemius/includes/customizer/class-fs-customizer-support-section.php
+++ b/freemius/includes/customizer/class-fs-customizer-support-section.php
@@ -1,84 +1,87 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.2.2.7
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.2.2.7
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	/**
-	 * Class Zerif_Customizer_Theme_Info_Main
-	 *
-	 * @since  1.0.0
-	 * @access public
-	 */
-	class FS_Customizer_Support_Section extends WP_Customize_Section {
+    /**
+     * Class Zerif_Customizer_Theme_Info_Main
+     *
+     * @since  1.0.0
+     * @access public
+     */
+    class FS_Customizer_Support_Section extends WP_Customize_Section
+    {
+        public function __construct($manager, $id, $args = array())
+        {
+            $manager->register_section_type('FS_Customizer_Support_Section');
 
-		function __construct( $manager, $id, $args = array() ) {
-			$manager->register_section_type( 'FS_Customizer_Support_Section' );
+            parent::__construct($manager, $id, $args);
+        }
 
-			parent::__construct( $manager, $id, $args );
-		}
+        /**
+         * The type of customize section being rendered.
+         *
+         * @since  1.0.0
+         * @access public
+         * @var    string
+         */
+        public $type = 'freemius-support-section';
 
-		/**
-		 * The type of customize section being rendered.
-		 *
-		 * @since  1.0.0
-		 * @access public
-		 * @var    string
-		 */
-		public $type = 'freemius-support-section';
+        /**
+         * @var Freemius
+         */
+        public $fs = null;
 
-		/**
-		 * @var Freemius
-		 */
-		public $fs = null;
+        /**
+         * Add custom parameters to pass to the JS via JSON.
+         *
+         * @since  1.0.0
+         */
+        public function json()
+        {
+            $json = parent::json();
 
-		/**
-		 * Add custom parameters to pass to the JS via JSON.
-		 *
-		 * @since  1.0.0
-		 */
-		public function json() {
-			$json = parent::json();
+            $is_contact_visible = $this->fs->is_page_visible('contact');
+            $is_support_visible = $this->fs->is_page_visible('support');
 
-			$is_contact_visible = $this->fs->is_page_visible( 'contact' );
-			$is_support_visible = $this->fs->is_page_visible( 'support' );
+            $json['theme_title'] = $this->fs->get_plugin_name();
 
-			$json['theme_title'] = $this->fs->get_plugin_name();
+            if ($is_contact_visible && $is_support_visible) {
+                $json['theme_title'] .= ' ' . $this->fs->get_text_inline('Support', 'support');
+            }
 
-			if ( $is_contact_visible && $is_support_visible ) {
-				$json['theme_title'] .= ' ' . $this->fs->get_text_inline( 'Support', 'support' );
-			}
+            if ($is_contact_visible) {
+                $json['contact'] = array(
+                    'label' => $this->fs->get_text_inline('Contact Us', 'contact-us'),
+                    'url'   => $this->fs->contact_url(),
+                );
+            }
 
-			if ( $is_contact_visible ) {
-				$json['contact'] = array(
-					'label' => $this->fs->get_text_inline( 'Contact Us', 'contact-us' ),
-					'url'   => $this->fs->contact_url(),
-				);
-			}
+            if ($is_support_visible) {
+                $json['support'] = array(
+                    'label' => $this->fs->get_text_inline('Support Forum', 'support-forum'),
+                    'url'   => $this->fs->get_support_forum_url()
+                );
+            }
 
-			if ( $is_support_visible ) {
-				$json['support'] = array(
-					'label' => $this->fs->get_text_inline( 'Support Forum', 'support-forum' ),
-					'url'   => $this->fs->get_support_forum_url()
-				);
-			}
+            return $json;
+        }
 
-			return $json;
-		}
-
-		/**
-		 * Outputs the Underscore.js template.
-		 *
-		 * @since  1.0.0
-		 */
-		protected function render_template() {
-			?>
+        /**
+         * Outputs the Underscore.js template.
+         *
+         * @since  1.0.0
+         */
+        protected function render_template()
+        {
+            ?>
 			<li id="fs_customizer_support"
 			    class="accordion-section control-section control-section-{{ data.type }} cannot-expand">
 				<h3 class="accordion-section-title">
@@ -98,5 +101,5 @@
 				</h3>
 			</li>
 			<?php
-		}
-	}
\ No newline at end of file
+        }
+    }
diff --git a/freemius/includes/customizer/class-fs-customizer-upsell-control.php b/freemius/includes/customizer/class-fs-customizer-upsell-control.php
index 94dc430b2a147b90afc0eae23da8b7fa11feae5f..b9888d232b3df6321ed3f4b022b6e960fb4608fe 100644
--- a/freemius/includes/customizer/class-fs-customizer-upsell-control.php
+++ b/freemius/includes/customizer/class-fs-customizer-upsell-control.php
@@ -1,121 +1,125 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.2.2.7
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	/**
-	 * Class FS_Customizer_Upsell_Control
-	 */
-	class FS_Customizer_Upsell_Control extends WP_Customize_Control {
-
-		/**
-		 * Control type
-		 *
-		 * @var string control type
-		 */
-		public $type = 'freemius-upsell-control';
-
-		/**
-		 * @var Freemius
-		 */
-		public $fs = null;
-
-		/**
-		 * @param WP_Customize_Manager $manager the customize manager class.
-		 * @param string               $id      id.
-		 * @param array                $args    customizer manager parameters.
-		 */
-		public function __construct( WP_Customize_Manager $manager, $id, array $args ) {
-			$manager->register_control_type( 'FS_Customizer_Upsell_Control' );
-
-			parent::__construct( $manager, $id, $args );
-		}
-
-		/**
-		 * Enqueue resources for the control.
-		 */
-		public function enqueue() {
-			fs_enqueue_local_style( 'fs_customizer', 'customizer.css' );
-		}
-
-		/**
-		 * Json conversion
-		 */
-		public function to_json() {
-			$pricing_cta = esc_html( $this->fs->get_pricing_cta_label() ) . '&nbsp;&nbsp;' . ( is_rtl() ? '&#x2190;' : '&#x27a4;' );
-
-			parent::to_json();
-
-			$this->json['button_text'] = $pricing_cta;
-			$this->json['button_url']  = $this->fs->is_in_trial_promotion() ?
-				$this->fs->get_trial_url() :
-				$this->fs->get_upgrade_url();
-
-			$api = FS_Plugin::is_valid_id( $this->fs->get_bundle_id() ) ?
-				$this->fs->get_api_bundle_scope() :
-				$this->fs->get_api_plugin_scope();
-
-			// Load features.
-			$pricing = $api->get( $this->fs->add_show_pending( "pricing.json" ) );
-
-			if ( $this->fs->is_api_result_object( $pricing, 'plans' ) ) {
-				// Add support features.
-				if ( is_array( $pricing->plans ) && 0 < count( $pricing->plans ) ) {
-					$support_features = array(
-						'kb'                 => 'Help Center',
-						'forum'              => 'Support Forum',
-						'email'              => 'Priority Email Support',
-						'phone'              => 'Phone Support',
-						'skype'              => 'Skype Support',
-						'is_success_manager' => 'Personal Success Manager',
-					);
-
-					for ( $i = 0, $len = count( $pricing->plans ); $i < $len; $i ++ ) {
-						if ( 'free' == $pricing->plans[$i]->name ) {
-							continue;
-						}
-
-						if ( ! isset( $pricing->plans[ $i ]->features ) ||
-                            ! is_array( $pricing->plans[ $i ]->features ) ) {
-							$pricing->plans[$i]->features = array();
-						}
-
-						foreach ( $support_features as $key => $label ) {
-							$key = ( 'is_success_manager' !== $key ) ?
-								"support_{$key}" :
-								$key;
-
-							if ( ! empty( $pricing->plans[ $i ]->{$key} ) ) {
-
-								$support_feature        = new stdClass();
-								$support_feature->title = $label;
-
-								$pricing->plans[ $i ]->features[] = $support_feature;
-							}
-						}
-					}
-				}
-			}
-
-			$this->json['plans'] = $pricing->plans;
-
-			$this->json['strings'] = array(
-				'plan' => $this->fs->get_text_x_inline( 'Plan', 'as product pricing plan', 'plan' ),
-			);
-		}
-
-		/**
-		 * Control content
-		 */
-		public function content_template() {
-			?>
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.2.2.7
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    /**
+     * Class FS_Customizer_Upsell_Control
+     */
+    class FS_Customizer_Upsell_Control extends WP_Customize_Control
+    {
+
+        /**
+         * Control type
+         *
+         * @var string control type
+         */
+        public $type = 'freemius-upsell-control';
+
+        /**
+         * @var Freemius
+         */
+        public $fs = null;
+
+        /**
+         * @param WP_Customize_Manager $manager the customize manager class.
+         * @param string               $id      id.
+         * @param array                $args    customizer manager parameters.
+         */
+        public function __construct(WP_Customize_Manager $manager, $id, array $args)
+        {
+            $manager->register_control_type('FS_Customizer_Upsell_Control');
+
+            parent::__construct($manager, $id, $args);
+        }
+
+        /**
+         * Enqueue resources for the control.
+         */
+        public function enqueue()
+        {
+            fs_enqueue_local_style('fs_customizer', 'customizer.css');
+        }
+
+        /**
+         * Json conversion
+         */
+        public function to_json()
+        {
+            $pricing_cta = esc_html($this->fs->get_pricing_cta_label()) . '&nbsp;&nbsp;' . (is_rtl() ? '&#x2190;' : '&#x27a4;');
+
+            parent::to_json();
+
+            $this->json['button_text'] = $pricing_cta;
+            $this->json['button_url']  = $this->fs->is_in_trial_promotion() ?
+                $this->fs->get_trial_url() :
+                $this->fs->get_upgrade_url();
+
+            $api = FS_Plugin::is_valid_id($this->fs->get_bundle_id()) ?
+                $this->fs->get_api_bundle_scope() :
+                $this->fs->get_api_plugin_scope();
+
+            // Load features.
+            $pricing = $api->get($this->fs->add_show_pending("pricing.json"));
+
+            if ($this->fs->is_api_result_object($pricing, 'plans')) {
+                // Add support features.
+                if (is_array($pricing->plans) && 0 < count($pricing->plans)) {
+                    $support_features = array(
+                        'kb'                 => 'Help Center',
+                        'forum'              => 'Support Forum',
+                        'email'              => 'Priority Email Support',
+                        'phone'              => 'Phone Support',
+                        'skype'              => 'Skype Support',
+                        'is_success_manager' => 'Personal Success Manager',
+                    );
+
+                    for ($i = 0, $len = count($pricing->plans); $i < $len; $i ++) {
+                        if ('free' == $pricing->plans[$i]->name) {
+                            continue;
+                        }
+
+                        if (! isset($pricing->plans[ $i ]->features) ||
+                            ! is_array($pricing->plans[ $i ]->features)) {
+                            $pricing->plans[$i]->features = array();
+                        }
+
+                        foreach ($support_features as $key => $label) {
+                            $key = ('is_success_manager' !== $key) ?
+                                "support_{$key}" :
+                                $key;
+
+                            if (! empty($pricing->plans[ $i ]->{$key})) {
+                                $support_feature        = new stdClass();
+                                $support_feature->title = $label;
+
+                                $pricing->plans[ $i ]->features[] = $support_feature;
+                            }
+                        }
+                    }
+                }
+            }
+
+            $this->json['plans'] = $pricing->plans;
+
+            $this->json['strings'] = array(
+                'plan' => $this->fs->get_text_x_inline('Plan', 'as product pricing plan', 'plan'),
+            );
+        }
+
+        /**
+         * Control content
+         */
+        public function content_template()
+        {
+            ?>
 			<div id="fs_customizer_upsell">
 				<# if ( data.plans ) { #>
 					<ul class="fs-customizer-plans">
@@ -157,5 +161,6 @@
 					</ul>
 				<# } #>
 			</div>
-		<?php }
-	}
\ No newline at end of file
+		<?php
+        }
+    }
diff --git a/freemius/includes/customizer/index.php b/freemius/includes/customizer/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/includes/customizer/index.php
+++ b/freemius/includes/customizer/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/includes/debug/class-fs-debug-bar-panel.php b/freemius/includes/debug/class-fs-debug-bar-panel.php
index 0b7969d0882554741f6bac5ca0c4492a116fe612..5552d96419ccb70430b1d293968f09fc251d4ab9 100644
--- a/freemius/includes/debug/class-fs-debug-bar-panel.php
+++ b/freemius/includes/debug/class-fs-debug-bar-panel.php
@@ -1,64 +1,69 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.1.7.3
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.1.7.3
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	/**
-	 * Extends Debug Bar plugin by adding a panel to show all Freemius API requests.
-	 *
-	 * @author Vova Feldman (@svovaf)
-	 * @since  1.1.7.3
-	 *
-	 * Class Freemius_Debug_Bar_Panel
-	 */
-	class Freemius_Debug_Bar_Panel extends Debug_Bar_Panel {
-		function init() {
-			$this->title( 'Freemius' );
-		}
+    /**
+     * Extends Debug Bar plugin by adding a panel to show all Freemius API requests.
+     *
+     * @author Vova Feldman (@svovaf)
+     * @since  1.1.7.3
+     *
+     * Class Freemius_Debug_Bar_Panel
+     */
+    class Freemius_Debug_Bar_Panel extends Debug_Bar_Panel
+    {
+        public function init()
+        {
+            $this->title('Freemius');
+        }
 
-		static function requests_count() {
-			if ( class_exists( 'Freemius_Api_WordPress' ) ) {
-				$logger = Freemius_Api_WordPress::GetLogger();
-			} else {
-				$logger = array();
-			}
+        public static function requests_count()
+        {
+            if (class_exists('Freemius_Api_WordPress')) {
+                $logger = Freemius_Api_WordPress::GetLogger();
+            } else {
+                $logger = array();
+            }
 
-			return number_format( count( $logger ) );
-		}
+            return number_format(count($logger));
+        }
 
-		static function total_time() {
-			if ( class_exists( 'Freemius_Api_WordPress' ) ) {
-				$logger = Freemius_Api_WordPress::GetLogger();
-			} else {
-				$logger = array();
-			}
+        public static function total_time()
+        {
+            if (class_exists('Freemius_Api_WordPress')) {
+                $logger = Freemius_Api_WordPress::GetLogger();
+            } else {
+                $logger = array();
+            }
 
-			$total_time = .0;
-			foreach ( $logger as $l ) {
-				$total_time += $l['total'];
-			}
+            $total_time = .0;
+            foreach ($logger as $l) {
+                $total_time += $l['total'];
+            }
 
-			return number_format( 100 * $total_time, 2 ) . ' ' . fs_text_x_inline( 'ms', 'milliseconds' );
-		}
+            return number_format(100 * $total_time, 2) . ' ' . fs_text_x_inline('ms', 'milliseconds');
+        }
 
-		function render() {
-			?>
+        public function render()
+        {
+            ?>
 			<div id='debug-bar-php'>
-				<?php fs_require_template( '/debug/api-calls.php' ) ?>
+				<?php fs_require_template('/debug/api-calls.php') ?>
 				<br>
-				<?php fs_require_template( '/debug/scheduled-crons.php' ) ?>
+				<?php fs_require_template('/debug/scheduled-crons.php') ?>
 				<br>
-				<?php fs_require_template( '/debug/plugins-themes-sync.php' ) ?>
+				<?php fs_require_template('/debug/plugins-themes-sync.php') ?>
 				<br>
-				<?php fs_require_template( '/debug/logger.php' ) ?>
+				<?php fs_require_template('/debug/logger.php') ?>
 			</div>
 		<?php
-		}
-	}
+        }
+    }
diff --git a/freemius/includes/debug/debug-bar-start.php b/freemius/includes/debug/debug-bar-start.php
index e783fd690759037644123e95836ebe0372f0efb2..4f0454df8606cacc11732d96deedccc6ab5c119c 100644
--- a/freemius/includes/debug/debug-bar-start.php
+++ b/freemius/includes/debug/debug-bar-start.php
@@ -1,52 +1,54 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.1.7.3
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.1.7.3
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	if ( ! WP_FS__DEBUG_SDK ) {
-		return;
-	}
+    if (! WP_FS__DEBUG_SDK) {
+        return;
+    }
 
-	/**
-	 * Initialize Freemius custom debug panels.
-	 *
-	 * @param array $panels Debug bar panels objects
-	 *
-	 * @return array Debug bar panels with your custom panels
-	 */
-	function fs_custom_panels_init( $panels ) {
-		if ( class_exists( 'Debug_Bar_Panel' ) ) {
-			if ( FS_API__LOGGER_ON ) {
-				require_once dirname( __FILE__ ) . '/class-fs-debug-bar-panel.php';
-				$panels[] = new Freemius_Debug_Bar_Panel();
-			}
-		}
+    /**
+     * Initialize Freemius custom debug panels.
+     *
+     * @param array $panels Debug bar panels objects
+     *
+     * @return array Debug bar panels with your custom panels
+     */
+    function fs_custom_panels_init($panels)
+    {
+        if (class_exists('Debug_Bar_Panel')) {
+            if (FS_API__LOGGER_ON) {
+                require_once dirname(__FILE__) . '/class-fs-debug-bar-panel.php';
+                $panels[] = new Freemius_Debug_Bar_Panel();
+            }
+        }
 
-		return $panels;
-	}
+        return $panels;
+    }
 
-	function fs_custom_status_init( $statuses ) {
-		if ( class_exists( 'Debug_Bar_Panel' ) ) {
-			if ( FS_API__LOGGER_ON ) {
-				require_once dirname( __FILE__ ) . '/class-fs-debug-bar-panel.php';
-				$statuses[] = array(
-					'fs_api_requests',
-					fs_text_inline( 'Freemius API' ),
-					Freemius_Debug_Bar_Panel::requests_count() . ' ' . fs_text_inline( 'Requests' ) .
-					' (' . Freemius_Debug_Bar_Panel::total_time() . ')'
-				);
-			}
-		}
+    function fs_custom_status_init($statuses)
+    {
+        if (class_exists('Debug_Bar_Panel')) {
+            if (FS_API__LOGGER_ON) {
+                require_once dirname(__FILE__) . '/class-fs-debug-bar-panel.php';
+                $statuses[] = array(
+                    'fs_api_requests',
+                    fs_text_inline('Freemius API'),
+                    Freemius_Debug_Bar_Panel::requests_count() . ' ' . fs_text_inline('Requests') .
+                    ' (' . Freemius_Debug_Bar_Panel::total_time() . ')'
+                );
+            }
+        }
 
-		return $statuses;
-	}
+        return $statuses;
+    }
 
-	add_filter( 'debug_bar_panels', 'fs_custom_panels_init' );
-	add_filter( 'debug_bar_statuses', 'fs_custom_status_init' );
\ No newline at end of file
+    add_filter('debug_bar_panels', 'fs_custom_panels_init');
+    add_filter('debug_bar_statuses', 'fs_custom_status_init');
diff --git a/freemius/includes/debug/index.php b/freemius/includes/debug/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/includes/debug/index.php
+++ b/freemius/includes/debug/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/includes/entities/class-fs-affiliate-terms.php b/freemius/includes/entities/class-fs-affiliate-terms.php
index 6dab87f41f94ca096faed1d19a8474a934ac4c90..149ab632dafe27615ff8540f04f16c7c2f8fd9a0 100644
--- a/freemius/includes/entities/class-fs-affiliate-terms.php
+++ b/freemius/includes/entities/class-fs-affiliate-terms.php
@@ -1,16 +1,17 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.2.3
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.2.3
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	class FS_AffiliateTerms extends FS_Scope_Entity {
+    class FS_AffiliateTerms extends FS_Scope_Entity
+    {
 
         #region Properties
 
@@ -59,12 +60,12 @@
          * @var string Required default target link, e.g.: pricing page.
          */
         public $default_url;
-		/**
-		 * @var string One of the following: 'all', 'new_customer', 'new_user'.
-		 *             If 'all' - reward for any user type.
-		 *             If 'new_customer' - reward only for new customers.
-		 *             If 'new_user' - reward only for new users.
-		 */
+        /**
+         * @var string One of the following: 'all', 'new_customer', 'new_user'.
+         *             If 'all' - reward for any user type.
+         *             If 'new_customer' - reward only for new customers.
+         *             If 'new_user' - reward only for new users.
+         */
         public $reward_customer_type;
         /**
          * @var int Defaults to `0` (affiliate only on directly affiliated links). `null` if an affiliate will get
@@ -92,11 +93,11 @@
          *
          * @return string
          */
-        function get_formatted_commission()
+        public function get_formatted_commission()
         {
-            return ( 'dollar' === $this->commission_type ) ?
-                ( '$' . $this->commission ) :
-                ( $this->commission . '%' );
+            return ('dollar' === $this->commission_type) ?
+                ('$' . $this->commission) :
+                ($this->commission . '%');
         }
 
         /**
@@ -104,8 +105,9 @@
          *
          * @return bool
          */
-        function has_lifetime_commission() {
-            return ( 0 !== $this->future_payments_days );
+        public function has_lifetime_commission()
+        {
+            return (0 !== $this->future_payments_days);
         }
 
         /**
@@ -113,8 +115,9 @@
          *
          * @return bool
          */
-        function is_session_cookie() {
-            return ( 0 == $this->cookie_days );
+        public function is_session_cookie()
+        {
+            return (0 == $this->cookie_days);
         }
 
         /**
@@ -122,7 +125,8 @@
          *
          * @return bool
          */
-        function has_renewals_commission() {
-            return ( is_null( $this->commission_renewals_days ) || $this->commission_renewals_days > 0 );
+        public function has_renewals_commission()
+        {
+            return (is_null($this->commission_renewals_days) || $this->commission_renewals_days > 0);
         }
-    }
\ No newline at end of file
+    }
diff --git a/freemius/includes/entities/class-fs-affiliate.php b/freemius/includes/entities/class-fs-affiliate.php
index cdae3661d64eb488087c5324004b302fb115388d..1ed65dff40d7bd65811f85b72e26492572dd0027 100644
--- a/freemius/includes/entities/class-fs-affiliate.php
+++ b/freemius/includes/entities/class-fs-affiliate.php
@@ -1,16 +1,17 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.2.3
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.2.3
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	class FS_Affiliate extends FS_Scope_Entity {
+    class FS_Affiliate extends FS_Scope_Entity
+    {
 
         #region Properties
 
@@ -42,8 +43,9 @@
          *
          * @return bool
          */
-        function is_active() {
-            return ( 'active' === $this->status );
+        public function is_active()
+        {
+            return ('active' === $this->status);
         }
 
         /**
@@ -51,8 +53,9 @@
          *
          * @return bool
          */
-        function is_pending() {
-            return ( 'pending' === $this->status );
+        public function is_pending()
+        {
+            return ('pending' === $this->status);
         }
 
         /**
@@ -60,8 +63,9 @@
          *
          * @return bool
          */
-        function is_suspended() {
-            return ( 'suspended' === $this->status );
+        public function is_suspended()
+        {
+            return ('suspended' === $this->status);
         }
 
         /**
@@ -69,8 +73,9 @@
          *
          * @return bool
          */
-        function is_rejected() {
-            return ( 'rejected' === $this->status );
+        public function is_rejected()
+        {
+            return ('rejected' === $this->status);
         }
 
         /**
@@ -78,7 +83,8 @@
          *
          * @return bool
          */
-        function is_blocked() {
-            return ( 'blocked' === $this->status );
+        public function is_blocked()
+        {
+            return ('blocked' === $this->status);
         }
-	}
\ No newline at end of file
+    }
diff --git a/freemius/includes/entities/class-fs-billing.php b/freemius/includes/entities/class-fs-billing.php
index bf684017956c2d813f4463b384a8db25bc35985c..819d8945b734809cd862f4c143561e6eca1100a6 100644
--- a/freemius/includes/entities/class-fs-billing.php
+++ b/freemius/includes/entities/class-fs-billing.php
@@ -1,95 +1,98 @@
 <?php
-	/**
-	 * @package     Freemius for EDD Add-On
-	 * @copyright   Copyright (c) 2016, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.0
-	 */
+    /**
+     * @package     Freemius for EDD Add-On
+     * @copyright   Copyright (c) 2016, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.0
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	class FS_Billing extends FS_Entity {
+    class FS_Billing extends FS_Entity
+    {
 
-		#region Properties
+        #region Properties
 
-		/**
-		 * @var int
-		 */
-		public $entity_id;
-		/**
-		 * @var string (Enum) Linked entity type. One of: developer, plugin, user, install
-		 */
-		public $entity_type;
-		/**
-		 * @var string
-		 */
-		public $business_name;
-		/**
-		 * @var string
-		 */
-		public $first;
-		/**
-		 * @var string
-		 */
-		public $last;
-		/**
-		 * @var string
-		 */
-		public $email;
-		/**
-		 * @var string
-		 */
-		public $phone;
-		/**
-		 * @var string
-		 */
-		public $website;
-		/**
-		 * @var string Tax or VAT ID.
-		 */
-		public $tax_id;
-		/**
-		 * @var string
-		 */
-		public $address_street;
-		/**
-		 * @var string
-		 */
-		public $address_apt;
-		/**
-		 * @var string
-		 */
-		public $address_city;
-		/**
-		 * @var string
-		 */
-		public $address_country;
-		/**
-		 * @var string Two chars country code.
-		 */
-		public $address_country_code;
-		/**
-		 * @var string
-		 */
-		public $address_state;
-		/**
-		 * @var number Numeric ZIP code (cab be with leading zeros).
-		 */
-		public $address_zip;
+        /**
+         * @var int
+         */
+        public $entity_id;
+        /**
+         * @var string (Enum) Linked entity type. One of: developer, plugin, user, install
+         */
+        public $entity_type;
+        /**
+         * @var string
+         */
+        public $business_name;
+        /**
+         * @var string
+         */
+        public $first;
+        /**
+         * @var string
+         */
+        public $last;
+        /**
+         * @var string
+         */
+        public $email;
+        /**
+         * @var string
+         */
+        public $phone;
+        /**
+         * @var string
+         */
+        public $website;
+        /**
+         * @var string Tax or VAT ID.
+         */
+        public $tax_id;
+        /**
+         * @var string
+         */
+        public $address_street;
+        /**
+         * @var string
+         */
+        public $address_apt;
+        /**
+         * @var string
+         */
+        public $address_city;
+        /**
+         * @var string
+         */
+        public $address_country;
+        /**
+         * @var string Two chars country code.
+         */
+        public $address_country_code;
+        /**
+         * @var string
+         */
+        public $address_state;
+        /**
+         * @var number Numeric ZIP code (cab be with leading zeros).
+         */
+        public $address_zip;
 
-		#endregion Properties
+        #endregion Properties
 
 
-		/**
-		 * @param object|bool $event
-		 */
-		function __construct( $event = false ) {
-			parent::__construct( $event );
-		}
+        /**
+         * @param object|bool $event
+         */
+        public function __construct($event = false)
+        {
+            parent::__construct($event);
+        }
 
-		static function get_type() {
-			return 'billing';
-		}
-	}
\ No newline at end of file
+        public static function get_type()
+        {
+            return 'billing';
+        }
+    }
diff --git a/freemius/includes/entities/class-fs-entity.php b/freemius/includes/entities/class-fs-entity.php
index ce281f45daf061d0df42841e2bab22ecc0a5bf57..cfec8e87f7c01945be3a64d842d20c69347355fc 100644
--- a/freemius/includes/entities/class-fs-entity.php
+++ b/freemius/includes/entities/class-fs-entity.php
@@ -1,151 +1,159 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.3
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	/**
-	 * Get object's public variables.
-	 *
-	 * @author Vova Feldman (@svovaf)
-	 * @since  1.0.0
-	 *
-	 * @param object $object
-	 *
-	 * @return array
-	 */
-	function fs_get_object_public_vars( $object ) {
-		return get_object_vars( $object );
-	}
-
-	class FS_Entity {
-		/**
-		 * @var number
-		 */
-		public $id;
-		/**
-		 * @var string Datetime value in 'YYYY-MM-DD HH:MM:SS' format.
-		 */
-		public $updated;
-		/**
-		 * @var string Datetime value in 'YYYY-MM-DD HH:MM:SS' format.
-		 */
-		public $created;
-
-		/**
-		 * @param bool|object $entity
-		 */
-		function __construct( $entity = false ) {
-            if ( ! ( $entity instanceof stdClass ) && ! ( $entity instanceof FS_Entity ) ) {
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.3
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    /**
+     * Get object's public variables.
+     *
+     * @author Vova Feldman (@svovaf)
+     * @since  1.0.0
+     *
+     * @param object $object
+     *
+     * @return array
+     */
+    function fs_get_object_public_vars($object)
+    {
+        return get_object_vars($object);
+    }
+
+    class FS_Entity
+    {
+        /**
+         * @var number
+         */
+        public $id;
+        /**
+         * @var string Datetime value in 'YYYY-MM-DD HH:MM:SS' format.
+         */
+        public $updated;
+        /**
+         * @var string Datetime value in 'YYYY-MM-DD HH:MM:SS' format.
+         */
+        public $created;
+
+        /**
+         * @param bool|object $entity
+         */
+        public function __construct($entity = false)
+        {
+            if (! ($entity instanceof stdClass) && ! ($entity instanceof FS_Entity)) {
                 return;
             }
 
-			$props = fs_get_object_public_vars( $this );
-
-			foreach ( $props as $key => $def_value ) {
-				$this->{$key} = isset( $entity->{$key} ) ?
-					$entity->{$key} :
-					$def_value;
-			}
-		}
-
-		static function get_type() {
-			return 'type';
-		}
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.6
-		 *
-		 * @param FS_Entity $entity1
-		 * @param FS_Entity $entity2
-		 *
-		 * @return bool
-		 */
-		static function equals( $entity1, $entity2 ) {
-			if ( is_null( $entity1 ) && is_null( $entity2 ) ) {
-				return true;
-			} else if ( is_object( $entity1 ) && is_object( $entity2 ) ) {
-				return ( $entity1->id == $entity2->id );
-			} else if ( is_object( $entity1 ) ) {
-				return is_null( $entity1->id );
-			} else {
-				return is_null( $entity2->id );
-			}
-		}
-
-		private $_is_updated = false;
-
-		/**
-		 * Update object property.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.9
-		 *
-		 * @param  string|array[string]mixed $key
-		 * @param string|bool $val
-		 *
-		 * @return bool
-		 */
-		function update( $key, $val = false ) {
-			if ( ! is_array( $key ) ) {
-				$key = array( $key => $val );
-			}
-
-			$is_updated = false;
-
-			foreach ( $key as $k => $v ) {
-				if ( $this->{$k} === $v ) {
-					continue;
-				}
-
-				if ( ( is_string( $this->{$k} ) && is_numeric( $v ) ||
-				       ( is_numeric( $this->{$k} ) && is_string( $v ) ) ) &&
-				     $this->{$k} == $v
-				) {
-					continue;
-				}
-
-				// Update value.
-				$this->{$k} = $v;
-
-				$is_updated = true;
-			}
-
-			$this->_is_updated = $is_updated;
-
-			return $is_updated;
-		}
-
-		/**
-		 * Checks if entity was updated.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.9
-		 *
-		 * @return bool
-		 */
-		function is_updated() {
-			return $this->_is_updated;
-		}
-
-		/**
-		 * @param $id
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.2
-		 *
-		 * @return bool
-		 */
-		static function is_valid_id($id){
-			return is_numeric($id);
-		}
+            $props = fs_get_object_public_vars($this);
+
+            foreach ($props as $key => $def_value) {
+                $this->{$key} = isset($entity->{$key}) ?
+                    $entity->{$key} :
+                    $def_value;
+            }
+        }
+
+        public static function get_type()
+        {
+            return 'type';
+        }
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.6
+         *
+         * @param FS_Entity $entity1
+         * @param FS_Entity $entity2
+         *
+         * @return bool
+         */
+        public static function equals($entity1, $entity2)
+        {
+            if (is_null($entity1) && is_null($entity2)) {
+                return true;
+            } elseif (is_object($entity1) && is_object($entity2)) {
+                return ($entity1->id == $entity2->id);
+            } elseif (is_object($entity1)) {
+                return is_null($entity1->id);
+            } else {
+                return is_null($entity2->id);
+            }
+        }
+
+        private $_is_updated = false;
+
+        /**
+         * Update object property.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.9
+         *
+         * @param  string|array[string]mixed $key
+         * @param string|bool $val
+         *
+         * @return bool
+         */
+        public function update($key, $val = false)
+        {
+            if (! is_array($key)) {
+                $key = array( $key => $val );
+            }
+
+            $is_updated = false;
+
+            foreach ($key as $k => $v) {
+                if ($this->{$k} === $v) {
+                    continue;
+                }
+
+                if ((is_string($this->{$k}) && is_numeric($v) ||
+                       (is_numeric($this->{$k}) && is_string($v))) &&
+                     $this->{$k} == $v
+                ) {
+                    continue;
+                }
+
+                // Update value.
+                $this->{$k} = $v;
+
+                $is_updated = true;
+            }
+
+            $this->_is_updated = $is_updated;
+
+            return $is_updated;
+        }
+
+        /**
+         * Checks if entity was updated.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.9
+         *
+         * @return bool
+         */
+        public function is_updated()
+        {
+            return $this->_is_updated;
+        }
+
+        /**
+         * @param $id
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.2
+         *
+         * @return bool
+         */
+        public static function is_valid_id($id)
+        {
+            return is_numeric($id);
+        }
 
         /**
          * @author Leo Fajardo (@leorw)
@@ -153,7 +161,8 @@
          *
          * @return string
          */
-        public static function get_class_name() {
+        public static function get_class_name()
+        {
             return get_called_class();
         }
-	}
\ No newline at end of file
+    }
diff --git a/freemius/includes/entities/class-fs-payment.php b/freemius/includes/entities/class-fs-payment.php
index 8e357663726744a4f420d6b3ee9638aa3d347251..8c89d19bfa8c7dd28e3bda9b9b4dab622be87200 100644
--- a/freemius/includes/entities/class-fs-payment.php
+++ b/freemius/includes/entities/class-fs-payment.php
@@ -6,11 +6,12 @@
      * @since       1.0.0
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
-    class FS_Payment extends FS_Entity {
+    class FS_Payment extends FS_Entity
+    {
 
         #region Properties
 
@@ -89,11 +90,13 @@
         /**
          * @param object|bool $payment
          */
-        function __construct( $payment = false ) {
-            parent::__construct( $payment );
+        public function __construct($payment = false)
+        {
+            parent::__construct($payment);
         }
 
-        static function get_type() {
+        public static function get_type()
+        {
             return 'payment';
         }
 
@@ -103,8 +106,9 @@
          *
          * @return bool
          */
-        function is_refund() {
-            return ( parent::is_valid_id( $this->bound_payment_id ) && 0 > $this->gross );
+        public function is_refund()
+        {
+            return (parent::is_valid_id($this->bound_payment_id) && 0 > $this->gross);
         }
 
         /**
@@ -115,8 +119,9 @@
          *
          * @return bool
          */
-        function is_migrated() {
-            return ( 0 != $this->source );
+        public function is_migrated()
+        {
+            return (0 != $this->source);
         }
 
         /**
@@ -130,13 +135,13 @@
          *
          * @return string
          */
-        function formatted_gross()
+        public function formatted_gross()
         {
             return (
-                ( $this->gross < 0 ? '-' : '' ) .
+                ($this->gross < 0 ? '-' : '') .
                 $this->get_symbol() .
-                number_format( abs( $this->gross ), 2, '.', ',' ) . ' ' .
-                strtoupper( $this->currency )
+                number_format(abs($this->gross), 2, '.', ',') . ' ' .
+                strtoupper($this->currency)
             );
         }
 
@@ -145,7 +150,7 @@
          *
          * @var array<string,string>
          */
-        static $CURRENCY_2_SYMBOL;
+        public static $CURRENCY_2_SYMBOL;
 
         /**
          * @author Leo Fajardo (@leorw)
@@ -153,8 +158,9 @@
          *
          * @return string
          */
-        private function get_symbol() {
-            if ( ! isset( self::$CURRENCY_2_SYMBOL ) ) {
+        private function get_symbol()
+        {
+            if (! isset(self::$CURRENCY_2_SYMBOL)) {
                 // Lazy load.
                 self::$CURRENCY_2_SYMBOL = array(
                     self::CURRENCY_USD => '$',
@@ -165,4 +171,4 @@
 
             return self::$CURRENCY_2_SYMBOL[ $this->currency ];
         }
-    }
\ No newline at end of file
+    }
diff --git a/freemius/includes/entities/class-fs-plugin-info.php b/freemius/includes/entities/class-fs-plugin-info.php
index f5465349d2c650703aec3a4c21416dac455c3c5e..93d5dbeb6b984d0fdcc593f56cd075e04c0fe4bd 100644
--- a/freemius/includes/entities/class-fs-plugin-info.php
+++ b/freemius/includes/entities/class-fs-plugin-info.php
@@ -1,34 +1,37 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.3
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.3
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	class FS_Plugin_Info extends FS_Entity {
-		public $plugin_id;
-		public $description;
-		public $short_description;
-		public $banner_url;
-		public $card_banner_url;
-		public $selling_point_0;
-		public $selling_point_1;
-		public $selling_point_2;
-		public $screenshots;
+    class FS_Plugin_Info extends FS_Entity
+    {
+        public $plugin_id;
+        public $description;
+        public $short_description;
+        public $banner_url;
+        public $card_banner_url;
+        public $selling_point_0;
+        public $selling_point_1;
+        public $selling_point_2;
+        public $screenshots;
 
-		/**
-		 * @param stdClass|bool $plugin_info
-		 */
-		function __construct( $plugin_info = false ) {
-			parent::__construct( $plugin_info );
-		}
+        /**
+         * @param stdClass|bool $plugin_info
+         */
+        public function __construct($plugin_info = false)
+        {
+            parent::__construct($plugin_info);
+        }
 
-		static function get_type() {
-			return 'plugin';
-		}
-	}
\ No newline at end of file
+        public static function get_type()
+        {
+            return 'plugin';
+        }
+    }
diff --git a/freemius/includes/entities/class-fs-plugin-license.php b/freemius/includes/entities/class-fs-plugin-license.php
index e945e51ed337559af6c11b2616ab0350a07a9440..a89ee2672f9483ba492abd389a2471ac5042d3f7 100644
--- a/freemius/includes/entities/class-fs-plugin-license.php
+++ b/freemius/includes/entities/class-fs-plugin-license.php
@@ -6,14 +6,15 @@
      * @since       1.0.5
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
     /**
      * Class FS_Plugin_License
      */
-    class FS_Plugin_License extends FS_Entity {
+    class FS_Plugin_License extends FS_Entity
+    {
 
         #region Properties
 
@@ -105,8 +106,9 @@
         /**
          * @param stdClass|bool $license
          */
-        function __construct( $license = false ) {
-            parent::__construct( $license );
+        public function __construct($license = false)
+        {
+            parent::__construct($license);
         }
 
         /**
@@ -114,7 +116,8 @@
          *
          * @return string
          */
-        static function get_type() {
+        public static function get_type()
+        {
             return 'license';
         }
 
@@ -126,16 +129,17 @@
          *
          * @return int
          */
-        function left() {
-            if ( ! $this->is_features_enabled() ) {
+        public function left()
+        {
+            if (! $this->is_features_enabled()) {
                 return 0;
             }
 
-            if ( $this->is_unlimited() ) {
+            if ($this->is_unlimited()) {
                 return 999;
             }
 
-            return ( $this->quota - $this->activated - ( $this->is_free_localhost ? 0 : $this->activated_local ) );
+            return ($this->quota - $this->activated - ($this->is_free_localhost ? 0 : $this->activated_local));
         }
 
         /**
@@ -146,8 +150,9 @@
          *
          * @return bool
          */
-        function is_single_site() {
-            return ( is_numeric( $this->quota ) && 1 == $this->quota );
+        public function is_single_site()
+        {
+            return (is_numeric($this->quota) && 1 == $this->quota);
         }
 
         /**
@@ -156,8 +161,9 @@
          *
          * @return bool
          */
-        function is_expired() {
-            return ! $this->is_lifetime() && ( strtotime( $this->expiration ) < WP_FS__SCRIPT_START_TIME );
+        public function is_expired()
+        {
+            return ! $this->is_lifetime() && (strtotime($this->expiration) < WP_FS__SCRIPT_START_TIME);
         }
 
         /**
@@ -168,7 +174,8 @@
          *
          * @return bool
          */
-        function is_valid() {
+        public function is_valid()
+        {
             return ! $this->is_expired();
         }
 
@@ -178,8 +185,9 @@
          *
          * @return bool
          */
-        function is_lifetime() {
-            return is_null( $this->expiration );
+        public function is_lifetime()
+        {
+            return is_null($this->expiration);
         }
 
         /**
@@ -188,8 +196,9 @@
          *
          * @return bool
          */
-        function is_unlimited() {
-            return is_null( $this->quota );
+        public function is_unlimited()
+        {
+            return is_null($this->quota);
         }
 
         /**
@@ -202,17 +211,18 @@
          *
          * @return bool
          */
-        function is_utilized( $is_localhost = null ) {
-            if ( is_null( $is_localhost ) ) {
+        public function is_utilized($is_localhost = null)
+        {
+            if (is_null($is_localhost)) {
                 $is_localhost = WP_FS__IS_LOCALHOST_FOR_SERVER;
             }
 
-            if ( $this->is_unlimited() ) {
+            if ($this->is_unlimited()) {
                 return false;
             }
 
-            return ! ( $this->is_free_localhost && $is_localhost ) &&
-                   ( $this->quota <= $this->activated + ( $this->is_free_localhost ? 0 : $this->activated_local ) );
+            return ! ($this->is_free_localhost && $is_localhost) &&
+                   ($this->quota <= $this->activated + ($this->is_free_localhost ? 0 : $this->activated_local));
         }
 
         /**
@@ -225,8 +235,9 @@
          *
          * @return bool
          */
-        function can_activate( $is_localhost = null ) {
-            return ! $this->is_utilized( $is_localhost ) && $this->is_features_enabled();
+        public function can_activate($is_localhost = null)
+        {
+            return ! $this->is_utilized($is_localhost) && $this->is_features_enabled();
         }
 
         /**
@@ -240,8 +251,9 @@
          *
          * @return bool
          */
-        function can_activate_bulk( $production_count, $localhost_count ) {
-            if ( $this->is_unlimited() ) {
+        public function can_activate_bulk($production_count, $localhost_count)
+        {
+            if ($this->is_unlimited()) {
                 return true;
             }
 
@@ -250,7 +262,7 @@
              * possible to activate on ALL of them, do the activation. If it's not possible to activate on ALL of them,
              * do NOT activate on any of them.
              */
-            return ( $this->quota >= $this->activated + $production_count + ( $this->is_free_localhost ? 0 : $this->activated_local + $localhost_count ) );
+            return ($this->quota >= $this->activated + $production_count + ($this->is_free_localhost ? 0 : $this->activated_local + $localhost_count));
         }
 
         /**
@@ -259,8 +271,9 @@
          *
          * @return bool
          */
-        function is_active() {
-            return ( ! $this->is_cancelled );
+        public function is_active()
+        {
+            return (! $this->is_cancelled);
         }
 
         /**
@@ -274,8 +287,9 @@
          *
          * @return bool
          */
-        function is_features_enabled() {
-            return $this->is_active() && ( ! $this->is_block_features || ! $this->is_expired() );
+        public function is_features_enabled()
+        {
+            return $this->is_active() && (! $this->is_block_features || ! $this->is_expired());
         }
 
         /**
@@ -288,15 +302,17 @@
          *
          * @return bool
          */
-        function is_first_payment_pending() {
-            return ( WP_FS__TIME_24_HOURS_IN_SEC >= strtotime( $this->expiration ) - strtotime( $this->created ) );
+        public function is_first_payment_pending()
+        {
+            return (WP_FS__TIME_24_HOURS_IN_SEC >= strtotime($this->expiration) - strtotime($this->created));
         }
 
         /**
          * @return int
          */
-        function total_activations() {
-            return ( $this->activated + $this->activated_local );
+        public function total_activations()
+        {
+            return ($this->activated + $this->activated_local);
         }
 
         /**
@@ -305,8 +321,9 @@
          *
          * @return string
          */
-        function get_html_escaped_masked_secret_key() {
-            return self::mask_secret_key_for_html( $this->secret_key );
+        public function get_html_escaped_masked_secret_key()
+        {
+            return self::mask_secret_key_for_html($this->secret_key);
         }
 
         /**
@@ -317,14 +334,15 @@
          *
          * @return string
          */
-        static function mask_secret_key_for_html( $secret_key ) {
+        public static function mask_secret_key_for_html($secret_key)
+        {
             return (
                 // Initial 6 chars - sk_ABC
-                htmlspecialchars( substr( $secret_key, 0, 6 ) ) .
+                htmlspecialchars(substr($secret_key, 0, 6)) .
                 // Masking
-                str_pad( '', ( strlen( $secret_key ) - 9 ) * 6, '&bull;' ) .
+                str_pad('', (strlen($secret_key) - 9) * 6, '&bull;') .
                 // Last 3 chars.
-                htmlspecialchars( substr( $secret_key, - 3 ) )
+                htmlspecialchars(substr($secret_key, - 3))
             );
         }
     }
diff --git a/freemius/includes/entities/class-fs-plugin-plan.php b/freemius/includes/entities/class-fs-plugin-plan.php
index 00a0d747b5e0e27d01c8e5dd6142ea86881335c7..952a78e696451c163a3103cb7ac3dc35c62297e4 100644
--- a/freemius/includes/entities/class-fs-plugin-plan.php
+++ b/freemius/includes/entities/class-fs-plugin-plan.php
@@ -1,145 +1,151 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.5
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.5
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	/**
-	 * Class FS_Plugin_Plan
-	 *
-	 * @property FS_Pricing[] $pricing
-	 */
-	class FS_Plugin_Plan extends FS_Entity {
+    /**
+     * Class FS_Plugin_Plan
+     *
+     * @property FS_Pricing[] $pricing
+     */
+    class FS_Plugin_Plan extends FS_Entity
+    {
 
-		#region Properties
+        #region Properties
 
-		/**
-		 * @var number
-		 */
-		public $plugin_id;
-		/**
-		 * @var string
-		 */
-		public $name;
-		/**
-		 * @var string
-		 */
-		public $title;
-		/**
-		 * @var string
-		 */
-		public $description;
-		/**
-		 * @var bool Defaults to true. If true, allow unlimited localhost installs with the same license.
-		 */
-		public $is_free_localhost;
-		/**
-		 * @var bool Defaults to true. If false, don't block features after license expiry - only block updates and
-		 *      support.
-		 */
-		public $is_block_features;
-		/**
-		 * @var int
-		 */
-		public $license_type;
-		/**
-		 * @var bool
-		 */
-		public $is_https_support;
-		/**
-		 * @var int Trial days.
-		 */
-		public $trial_period;
-		/**
-		 * @var string If true, require payment for trial.
-		 */
-		public $is_require_subscription;
-		/**
-		 * @var string Knowledge Base URL.
-		 */
-		public $support_kb;
-		/**
-		 * @var string Support Forum URL.
-		 */
-		public $support_forum;
-		/**
-		 * @var string Support email address.
-		 */
-		public $support_email;
-		/**
-		 * @var string Support phone.
-		 */
-		public $support_phone;
-		/**
-		 * @var string Support skype username.
-		 */
-		public $support_skype;
-		/**
-		 * @var bool Is personal success manager supported with the plan.
-		 */
-		public $is_success_manager;
-		/**
-		 * @var bool Is featured plan.
-		 */
-		public $is_featured;
+        /**
+         * @var number
+         */
+        public $plugin_id;
+        /**
+         * @var string
+         */
+        public $name;
+        /**
+         * @var string
+         */
+        public $title;
+        /**
+         * @var string
+         */
+        public $description;
+        /**
+         * @var bool Defaults to true. If true, allow unlimited localhost installs with the same license.
+         */
+        public $is_free_localhost;
+        /**
+         * @var bool Defaults to true. If false, don't block features after license expiry - only block updates and
+         *      support.
+         */
+        public $is_block_features;
+        /**
+         * @var int
+         */
+        public $license_type;
+        /**
+         * @var bool
+         */
+        public $is_https_support;
+        /**
+         * @var int Trial days.
+         */
+        public $trial_period;
+        /**
+         * @var string If true, require payment for trial.
+         */
+        public $is_require_subscription;
+        /**
+         * @var string Knowledge Base URL.
+         */
+        public $support_kb;
+        /**
+         * @var string Support Forum URL.
+         */
+        public $support_forum;
+        /**
+         * @var string Support email address.
+         */
+        public $support_email;
+        /**
+         * @var string Support phone.
+         */
+        public $support_phone;
+        /**
+         * @var string Support skype username.
+         */
+        public $support_skype;
+        /**
+         * @var bool Is personal success manager supported with the plan.
+         */
+        public $is_success_manager;
+        /**
+         * @var bool Is featured plan.
+         */
+        public $is_featured;
 
-		#endregion Properties
+        #endregion Properties
 
-		/**
-		 * @param object|bool $plan
-		 */
-		function __construct( $plan = false ) {
-			parent::__construct( $plan );
+        /**
+         * @param object|bool $plan
+         */
+        public function __construct($plan = false)
+        {
+            parent::__construct($plan);
 
-			if ( is_object( $plan ) ) {
-				$this->name = strtolower( $plan->name );
-			}
-		}
+            if (is_object($plan)) {
+                $this->name = strtolower($plan->name);
+            }
+        }
 
-		static function get_type() {
-			return 'plan';
-		}
+        public static function get_type()
+        {
+            return 'plan';
+        }
 
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.9
-		 *
-		 * @return bool
-		 */
-		function is_free() {
-			return ( 'free' === $this->name );
-		}
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.9
+         *
+         * @return bool
+         */
+        public function is_free()
+        {
+            return ('free' === $this->name);
+        }
 
-		/**
-		 * Checks if this plan supports "Technical Support".
-		 *
-		 * @author Leo Fajardo (leorw)
-		 * @since 1.2.0
-		 *
-		 * @return bool
-		 */
-		function has_technical_support() {
-			return ( ! empty( $this->support_email ) ||
-			     ! empty( $this->support_skype ) ||
-			     ! empty( $this->support_phone ) ||
-			     ! empty( $this->is_success_manager )
-			);
-		}
+        /**
+         * Checks if this plan supports "Technical Support".
+         *
+         * @author Leo Fajardo (leorw)
+         * @since 1.2.0
+         *
+         * @return bool
+         */
+        public function has_technical_support()
+        {
+            return (! empty($this->support_email) ||
+                 ! empty($this->support_skype) ||
+                 ! empty($this->support_phone) ||
+                 ! empty($this->is_success_manager)
+            );
+        }
 
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.9
-		 *
-		 * @return bool
-		 */
-		function has_trial() {
-			return ! $this->is_free() &&
-			       is_numeric( $this->trial_period ) && ( $this->trial_period > 0 );
-		}
-	}
\ No newline at end of file
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.9
+         *
+         * @return bool
+         */
+        public function has_trial()
+        {
+            return ! $this->is_free() &&
+                   is_numeric($this->trial_period) && ($this->trial_period > 0);
+        }
+    }
diff --git a/freemius/includes/entities/class-fs-plugin-tag.php b/freemius/includes/entities/class-fs-plugin-tag.php
index 739e9c8f31bb4a41bdfc2f044d484456ab400392..e638ccc7ff3949bf2a1d1b9ceb63825e92ee55b9 100644
--- a/freemius/includes/entities/class-fs-plugin-tag.php
+++ b/freemius/includes/entities/class-fs-plugin-tag.php
@@ -1,24 +1,25 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2018, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       2.0.0
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2018, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       2.0.0
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	class FS_Plugin_Tag extends FS_Entity {
+    class FS_Plugin_Tag extends FS_Entity
+    {
         /**
          * @var string
          */
-		public $version;
+        public $version;
         /**
          * @var string
          */
-		public $url;
+        public $url;
         /**
          * @var string
          */
@@ -40,13 +41,15 @@
          */
         public $release_mode;
 
-		function __construct( $tag = false ) {
-			parent::__construct( $tag );
-		}
+        public function __construct($tag = false)
+        {
+            parent::__construct($tag);
+        }
 
-		static function get_type() {
-			return 'tag';
-		}
+        public static function get_type()
+        {
+            return 'tag';
+        }
 
         /**
          * @author Leo Fajardo (@leorw)
@@ -54,7 +57,8 @@
          *
          * @return bool
          */
-		function is_beta() {
-		    return ( 'beta' === $this->release_mode );
+        public function is_beta()
+        {
+            return ('beta' === $this->release_mode);
         }
-	}
\ No newline at end of file
+    }
diff --git a/freemius/includes/entities/class-fs-plugin.php b/freemius/includes/entities/class-fs-plugin.php
index 2bc039aa2cb410c15c71e203a32b5480613cde40..90e99418c03cc8b6ec1e2abe48a1e11f4920a786 100644
--- a/freemius/includes/entities/class-fs-plugin.php
+++ b/freemius/includes/entities/class-fs-plugin.php
@@ -6,11 +6,12 @@
      * @since       1.0.3
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
-    class FS_Plugin extends FS_Scope_Entity {
+    class FS_Plugin extends FS_Scope_Entity
+    {
         /**
          * @since 1.0.6
          * @var null|number
@@ -112,22 +113,23 @@
         /**
          * @param stdClass|bool $plugin
          */
-        function __construct( $plugin = false ) {
-            parent::__construct( $plugin );
+        public function __construct($plugin = false)
+        {
+            parent::__construct($plugin);
 
             $this->is_premium = false;
             $this->is_live    = true;
 
-            if ( empty( $this->premium_slug ) && ! empty( $plugin->slug ) ) {
+            if (empty($this->premium_slug) && ! empty($plugin->slug)) {
                 $this->premium_slug = "{$this->slug}-premium";
             }
 
-            if ( empty( $this->premium_suffix ) ) {
+            if (empty($this->premium_suffix)) {
                 $this->premium_suffix = '(Premium)';
             }
 
-            if ( isset( $plugin->info ) && is_object( $plugin->info ) ) {
-                $this->info = new FS_Plugin_Info( $plugin->info );
+            if (isset($plugin->info) && is_object($plugin->info)) {
+                $this->info = new FS_Plugin_Info($plugin->info);
             }
         }
 
@@ -139,8 +141,9 @@
          *
          * @return bool
          */
-        function is_addon() {
-            return isset( $this->parent_plugin_id ) && is_numeric( $this->parent_plugin_id );
+        public function is_addon()
+        {
+            return isset($this->parent_plugin_id) && is_numeric($this->parent_plugin_id);
         }
 
         /**
@@ -149,11 +152,13 @@
          *
          * @return bool
          */
-        function has_affiliate_program() {
-            return ( ! empty( $this->affiliate_moderation ) );
+        public function has_affiliate_program()
+        {
+            return (! empty($this->affiliate_moderation));
         }
 
-        static function get_type() {
+        public static function get_type()
+        {
             return 'plugin';
         }
-    }
\ No newline at end of file
+    }
diff --git a/freemius/includes/entities/class-fs-pricing.php b/freemius/includes/entities/class-fs-pricing.php
index 5404fe5e0511b474db517cc0cf23b2203783ba20..857499837074b9986610c746514ec1fdc2bd97d6 100644
--- a/freemius/includes/entities/class-fs-pricing.php
+++ b/freemius/includes/entities/class-fs-pricing.php
@@ -1,39 +1,40 @@
 <?php
-	/**
-	 * @package     Freemius for EDD Add-On
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.0
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	class FS_Pricing extends FS_Entity {
-
-		#region Properties
-
-		/**
-		 * @var number
-		 */
-		public $plan_id;
-		/**
-		 * @var int
-		 */
-		public $licenses;
-		/**
-		 * @var null|float
-		 */
-		public $monthly_price;
-		/**
-		 * @var null|float
-		 */
-		public $annual_price;
-		/**
-		 * @var null|float
-		 */
-		public $lifetime_price;
+    /**
+     * @package     Freemius for EDD Add-On
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.0
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    class FS_Pricing extends FS_Entity
+    {
+
+        #region Properties
+
+        /**
+         * @var number
+         */
+        public $plan_id;
+        /**
+         * @var int
+         */
+        public $licenses;
+        /**
+         * @var null|float
+         */
+        public $monthly_price;
+        /**
+         * @var null|float
+         */
+        public $annual_price;
+        /**
+         * @var null|float
+         */
+        public $lifetime_price;
         /**
          * @author Leo Fajardo (@leorw)
          * @since 2.3.1
@@ -42,108 +43,117 @@
          */
         public $currency;
 
-		#endregion Properties
-
-		/**
-		 * @param object|bool $pricing
-		 */
-		function __construct( $pricing = false ) {
-			parent::__construct( $pricing );
-		}
-
-		static function get_type() {
-			return 'pricing';
-		}
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.8
-		 *
-		 * @return bool
-		 */
-		function has_monthly() {
-			return ( is_numeric( $this->monthly_price ) && $this->monthly_price > 0 );
-		}
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.8
-		 *
-		 * @return bool
-		 */
-		function has_annual() {
-			return ( is_numeric( $this->annual_price ) && $this->annual_price > 0 );
-		}
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.8
-		 *
-		 * @return bool
-		 */
-		function has_lifetime() {
-			return ( is_numeric( $this->lifetime_price ) && $this->lifetime_price > 0 );
-		}
-
-		/**
-		 * Check if unlimited licenses pricing.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.8
-		 *
-		 * @return bool
-		 */
-		function is_unlimited() {
-			return is_null( $this->licenses );
-		}
-
-
-		/**
-		 * Check if pricing has more than one billing cycle.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.8
-		 *
-		 * @return bool
-		 */
-		function is_multi_cycle() {
-			$cycles = 0;
-			if ( $this->has_monthly() ) {
-				$cycles ++;
-			}
-			if ( $this->has_annual() ) {
-				$cycles ++;
-			}
-			if ( $this->has_lifetime() ) {
-				$cycles ++;
-			}
-
-			return $cycles > 1;
-		}
-
-		/**
-		 * Get annual over monthly discount.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.8
-		 *
-		 * @return int
-		 */
-		function annual_discount_percentage() {
-			return floor( $this->annual_savings() / ( $this->monthly_price * 12 * ( $this->is_unlimited() ? 1 : $this->licenses ) ) * 100 );
-		}
-
-		/**
-		 * Get annual over monthly savings.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.8
-		 *
-		 * @return float
-		 */
-		function annual_savings() {
-			return ( $this->monthly_price * 12 - $this->annual_price ) * ( $this->is_unlimited() ? 1 : $this->licenses );
-		}
+        #endregion Properties
+
+        /**
+         * @param object|bool $pricing
+         */
+        public function __construct($pricing = false)
+        {
+            parent::__construct($pricing);
+        }
+
+        public static function get_type()
+        {
+            return 'pricing';
+        }
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.8
+         *
+         * @return bool
+         */
+        public function has_monthly()
+        {
+            return (is_numeric($this->monthly_price) && $this->monthly_price > 0);
+        }
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.8
+         *
+         * @return bool
+         */
+        public function has_annual()
+        {
+            return (is_numeric($this->annual_price) && $this->annual_price > 0);
+        }
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.8
+         *
+         * @return bool
+         */
+        public function has_lifetime()
+        {
+            return (is_numeric($this->lifetime_price) && $this->lifetime_price > 0);
+        }
+
+        /**
+         * Check if unlimited licenses pricing.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.8
+         *
+         * @return bool
+         */
+        public function is_unlimited()
+        {
+            return is_null($this->licenses);
+        }
+
+
+        /**
+         * Check if pricing has more than one billing cycle.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.8
+         *
+         * @return bool
+         */
+        public function is_multi_cycle()
+        {
+            $cycles = 0;
+            if ($this->has_monthly()) {
+                $cycles ++;
+            }
+            if ($this->has_annual()) {
+                $cycles ++;
+            }
+            if ($this->has_lifetime()) {
+                $cycles ++;
+            }
+
+            return $cycles > 1;
+        }
+
+        /**
+         * Get annual over monthly discount.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.8
+         *
+         * @return int
+         */
+        public function annual_discount_percentage()
+        {
+            return floor($this->annual_savings() / ($this->monthly_price * 12 * ($this->is_unlimited() ? 1 : $this->licenses)) * 100);
+        }
+
+        /**
+         * Get annual over monthly savings.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.8
+         *
+         * @return float
+         */
+        public function annual_savings()
+        {
+            return ($this->monthly_price * 12 - $this->annual_price) * ($this->is_unlimited() ? 1 : $this->licenses);
+        }
 
         /**
          * @author Leo Fajardo (@leorw)
@@ -151,7 +161,8 @@
          *
          * @return bool
          */
-        function is_usd() {
-            return ( 'usd' === $this->currency );
+        public function is_usd()
+        {
+            return ('usd' === $this->currency);
         }
-	}
\ No newline at end of file
+    }
diff --git a/freemius/includes/entities/class-fs-scope-entity.php b/freemius/includes/entities/class-fs-scope-entity.php
index 6b831074e71e50ca4db5d57285815f293be6d814..fd0a54af8b7fbdf594e06b1fa23356fe5998ffb8 100644
--- a/freemius/includes/entities/class-fs-scope-entity.php
+++ b/freemius/includes/entities/class-fs-scope-entity.php
@@ -1,29 +1,31 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.4
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.4
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	class FS_Scope_Entity extends FS_Entity {
-		/**
-		 * @var string
-		 */
-		public $public_key;
-		/**
-		 * @var string
-		 */
-		public $secret_key;
+    class FS_Scope_Entity extends FS_Entity
+    {
+        /**
+         * @var string
+         */
+        public $public_key;
+        /**
+         * @var string
+         */
+        public $secret_key;
 
-		/**
-		 * @param bool|stdClass $scope_entity
-		 */
-		function __construct( $scope_entity = false ) {
-			parent::__construct( $scope_entity );
-		}
-	}
\ No newline at end of file
+        /**
+         * @param bool|stdClass $scope_entity
+         */
+        public function __construct($scope_entity = false)
+        {
+            parent::__construct($scope_entity);
+        }
+    }
diff --git a/freemius/includes/entities/class-fs-site.php b/freemius/includes/entities/class-fs-site.php
index 984d8f9a9b7429e040f1382c799e6a8d0d413a2b..799350cd9f409cc85ff2e4d088155baa3f51c401 100644
--- a/freemius/includes/entities/class-fs-site.php
+++ b/freemius/includes/entities/class-fs-site.php
@@ -6,11 +6,12 @@
      * @since       1.0.3
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
-    class FS_Site extends FS_Scope_Entity {
+    class FS_Site extends FS_Scope_Entity
+    {
         /**
          * @var number
          */
@@ -114,19 +115,21 @@
         /**
          * @param stdClass|bool $site
          */
-        function __construct( $site = false ) {
-            parent::__construct( $site );
+        public function __construct($site = false)
+        {
+            parent::__construct($site);
 
-            if ( is_object( $site ) ) {
+            if (is_object($site)) {
                 $this->plan_id = $site->plan_id;
             }
 
-            if ( ! is_bool( $this->is_disconnected ) ) {
+            if (! is_bool($this->is_disconnected)) {
                 $this->is_disconnected = false;
             }
         }
 
-        static function get_type() {
+        public static function get_type()
+        {
             return 'install';
         }
 
@@ -138,64 +141,66 @@
          *
          * @return bool
          */
-        static function is_localhost_by_address( $url ) {
-            if ( false !== strpos( $url, '127.0.0.1' ) ||
-                 false !== strpos( $url, 'localhost' )
+        public static function is_localhost_by_address($url)
+        {
+            if (false !== strpos($url, '127.0.0.1') ||
+                 false !== strpos($url, 'localhost')
             ) {
                 return true;
             }
 
-            if ( ! fs_starts_with( $url, 'http' ) ) {
+            if (! fs_starts_with($url, 'http')) {
                 $url = 'http://' . $url;
             }
 
-            $url_parts = parse_url( $url );
+            $url_parts = parse_url($url);
 
             $subdomain = $url_parts['host'];
 
             return (
                 // Starts with.
-                fs_starts_with( $subdomain, 'local.' ) ||
-                fs_starts_with( $subdomain, 'dev.' ) ||
-                fs_starts_with( $subdomain, 'test.' ) ||
-                fs_starts_with( $subdomain, 'stage.' ) ||
-                fs_starts_with( $subdomain, 'staging.' ) ||
+                fs_starts_with($subdomain, 'local.') ||
+                fs_starts_with($subdomain, 'dev.') ||
+                fs_starts_with($subdomain, 'test.') ||
+                fs_starts_with($subdomain, 'stage.') ||
+                fs_starts_with($subdomain, 'staging.') ||
 
                 // Ends with.
-                fs_ends_with( $subdomain, '.dev' ) ||
-                fs_ends_with( $subdomain, '.test' ) ||
-                fs_ends_with( $subdomain, '.staging' ) ||
-                fs_ends_with( $subdomain, '.local' ) ||
-                fs_ends_with( $subdomain, '.example' ) ||
-                fs_ends_with( $subdomain, '.invalid' ) ||
+                fs_ends_with($subdomain, '.dev') ||
+                fs_ends_with($subdomain, '.test') ||
+                fs_ends_with($subdomain, '.staging') ||
+                fs_ends_with($subdomain, '.local') ||
+                fs_ends_with($subdomain, '.example') ||
+                fs_ends_with($subdomain, '.invalid') ||
                 // GoDaddy test/dev.
-                fs_ends_with( $subdomain, '.myftpupload.com' ) ||
+                fs_ends_with($subdomain, '.myftpupload.com') ||
                 // ngrok tunneling.
-                fs_ends_with( $subdomain, '.ngrok.io' ) ||
+                fs_ends_with($subdomain, '.ngrok.io') ||
                 // wpsandbox.
-                fs_ends_with( $subdomain, '.wpsandbox.pro' ) ||
+                fs_ends_with($subdomain, '.wpsandbox.pro') ||
                 // SiteGround staging.
-                fs_starts_with( $subdomain, 'staging' ) ||
+                fs_starts_with($subdomain, 'staging') ||
                 // WPEngine staging.
-                fs_ends_with( $subdomain, '.staging.wpengine.com' ) ||
-                fs_ends_with( $subdomain, '.dev.wpengine.com' ) ||
-                fs_ends_with( $subdomain, '.wpengine.com' ) ||
+                fs_ends_with($subdomain, '.staging.wpengine.com') ||
+                fs_ends_with($subdomain, '.dev.wpengine.com') ||
+                fs_ends_with($subdomain, '.wpengine.com') ||
                 // Pantheon
-                ( fs_ends_with( $subdomain, 'pantheonsite.io' ) &&
-                  ( fs_starts_with( $subdomain, 'test-' ) || fs_starts_with( $subdomain, 'dev-' ) ) ) ||
+                (fs_ends_with($subdomain, 'pantheonsite.io') &&
+                  (fs_starts_with($subdomain, 'test-') || fs_starts_with($subdomain, 'dev-'))) ||
                 // Cloudways
-                fs_ends_with( $subdomain, '.cloudwaysapps.com' ) ||
+                fs_ends_with($subdomain, '.cloudwaysapps.com') ||
                 // Kinsta
-                ( fs_starts_with( $subdomain, 'staging-' ) && ( fs_ends_with( $subdomain, '.kinsta.com' ) || fs_ends_with( $subdomain, '.kinsta.cloud' ) ) ) ||
+                (fs_starts_with($subdomain, 'staging-') && (fs_ends_with($subdomain, '.kinsta.com') || fs_ends_with($subdomain, '.kinsta.cloud'))) ||
                 // DesktopServer
-                fs_ends_with( $subdomain, '.dev.cc' ) ||
+                fs_ends_with($subdomain, '.dev.cc') ||
                 // Pressable
-                fs_ends_with( $subdomain, '.mystagingwebsite.com' )
+                fs_ends_with($subdomain, '.mystagingwebsite.com')
             );
         }
 
-        function is_localhost() {
-            return ( WP_FS__IS_LOCALHOST_FOR_SERVER || self::is_localhost_by_address( $this->url ) );
+        public function is_localhost()
+        {
+            return (WP_FS__IS_LOCALHOST_FOR_SERVER || self::is_localhost_by_address($this->url));
         }
 
         /**
@@ -206,8 +211,9 @@
          *
          * @return bool
          */
-        function is_trial() {
-            return is_numeric( $this->trial_plan_id ) && ( strtotime( $this->trial_ends ) > WP_FS__SCRIPT_START_TIME );
+        public function is_trial()
+        {
+            return is_numeric($this->trial_plan_id) && (strtotime($this->trial_ends) > WP_FS__SCRIPT_START_TIME);
         }
 
         /**
@@ -218,8 +224,9 @@
          *
          * @return bool
          */
-        function is_trial_utilized() {
-            return is_numeric( $this->trial_plan_id );
+        public function is_trial_utilized()
+        {
+            return is_numeric($this->trial_plan_id);
         }
 
         /**
@@ -228,8 +235,9 @@
          *
          * @return bool
          */
-        function is_tracking_allowed() {
-            return ( true !== $this->is_disconnected );
+        public function is_tracking_allowed()
+        {
+            return (true !== $this->is_disconnected);
         }
 
         /**
@@ -238,7 +246,8 @@
          *
          * @return bool
          */
-        function is_tracking_prohibited() {
+        public function is_tracking_prohibited()
+        {
             return ! $this->is_tracking_allowed();
         }
 
@@ -247,7 +256,8 @@
          *
          * @return bool
          */
-        function is_beta() {
-            return ( isset( $this->is_beta ) && true === $this->is_beta );
+        public function is_beta()
+        {
+            return (isset($this->is_beta) && true === $this->is_beta);
         }
-    }
\ No newline at end of file
+    }
diff --git a/freemius/includes/entities/class-fs-subscription.php b/freemius/includes/entities/class-fs-subscription.php
index 3556fbd3035b0c4e596483cf505f92d2b066049c..ad475ac2082b5e153c66cf16a2b14d23f8d5a421 100644
--- a/freemius/includes/entities/class-fs-subscription.php
+++ b/freemius/includes/entities/class-fs-subscription.php
@@ -6,11 +6,12 @@
      * @since       1.0.9
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
-    class FS_Subscription extends FS_Entity {
+    class FS_Subscription extends FS_Entity
+    {
 
         #region Properties
 
@@ -86,11 +87,13 @@
         /**
          * @param object|bool $subscription
          */
-        function __construct( $subscription = false ) {
-            parent::__construct( $subscription );
+        public function __construct($subscription = false)
+        {
+            parent::__construct($subscription);
         }
 
-        static function get_type() {
+        public static function get_type()
+        {
             return 'subscription';
         }
 
@@ -102,14 +105,15 @@
          *
          * @return bool
          */
-        function is_active() {
-            if ( $this->is_canceled() ) {
+        public function is_active()
+        {
+            if ($this->is_canceled()) {
                 return false;
             }
 
             return (
-                ! empty( $this->next_payment ) &&
-                strtotime( $this->next_payment ) > WP_FS__SCRIPT_START_TIME
+                ! empty($this->next_payment) &&
+                strtotime($this->next_payment) > WP_FS__SCRIPT_START_TIME
             );
         }
 
@@ -119,8 +123,9 @@
          *
          * @return bool
          */
-        function is_canceled() {
-            return ! is_null( $this->canceled_at );
+        public function is_canceled()
+        {
+            return ! is_null($this->canceled_at);
         }
 
         /**
@@ -133,15 +138,17 @@
          *
          * @return bool
          */
-        function is_first_payment_pending() {
-            return ( WP_FS__TIME_24_HOURS_IN_SEC >= strtotime( $this->next_payment ) - strtotime( $this->created ) );
+        public function is_first_payment_pending()
+        {
+            return (WP_FS__TIME_24_HOURS_IN_SEC >= strtotime($this->next_payment) - strtotime($this->created));
         }
 
         /**
          * @author Vova Feldman (@svovaf)
          * @since  1.1.7
          */
-        function has_trial() {
-            return ! is_null( $this->trial_ends );
+        public function has_trial()
+        {
+            return ! is_null($this->trial_ends);
         }
-    }
\ No newline at end of file
+    }
diff --git a/freemius/includes/entities/class-fs-user.php b/freemius/includes/entities/class-fs-user.php
index a329e879435a63de634585c2d86a1c93b7067107..4c8af542dca00e9b5cdfc5a2eec5519f6092210f 100644
--- a/freemius/includes/entities/class-fs-user.php
+++ b/freemius/includes/entities/class-fs-user.php
@@ -1,62 +1,67 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.3
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	class FS_User extends FS_Scope_Entity {
-
-		#region Properties
-
-		/**
-		 * @var string
-		 */
-		public $email;
-		/**
-		 * @var string
-		 */
-		public $first;
-		/**
-		 * @var string
-		 */
-		public $last;
-		/**
-		 * @var bool
-		 */
-		public $is_verified;
-		/**
-		 * @var string|null
-		 */
-		public $customer_id;
-		/**
-		 * @var float
-		 */
-		public $gross;
-
-		#endregion Properties
-
-		/**
-		 * @param object|bool $user
-		 */
-		function __construct( $user = false ) {
-			parent::__construct( $user );
-		}
-
-		function get_name() {
-			return trim( ucfirst( trim( is_string( $this->first ) ? $this->first : '' ) ) . ' ' . ucfirst( trim( is_string( $this->last ) ? $this->last : '' ) ) );
-		}
-
-		function is_verified() {
-			return ( isset( $this->is_verified ) && true === $this->is_verified );
-		}
-
-		static function get_type() {
-			return 'user';
-		}
-	}
\ No newline at end of file
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.3
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    class FS_User extends FS_Scope_Entity
+    {
+
+        #region Properties
+
+        /**
+         * @var string
+         */
+        public $email;
+        /**
+         * @var string
+         */
+        public $first;
+        /**
+         * @var string
+         */
+        public $last;
+        /**
+         * @var bool
+         */
+        public $is_verified;
+        /**
+         * @var string|null
+         */
+        public $customer_id;
+        /**
+         * @var float
+         */
+        public $gross;
+
+        #endregion Properties
+
+        /**
+         * @param object|bool $user
+         */
+        public function __construct($user = false)
+        {
+            parent::__construct($user);
+        }
+
+        public function get_name()
+        {
+            return trim(ucfirst(trim(is_string($this->first) ? $this->first : '')) . ' ' . ucfirst(trim(is_string($this->last) ? $this->last : '')));
+        }
+
+        public function is_verified()
+        {
+            return (isset($this->is_verified) && true === $this->is_verified);
+        }
+
+        public static function get_type()
+        {
+            return 'user';
+        }
+    }
diff --git a/freemius/includes/entities/index.php b/freemius/includes/entities/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/includes/entities/index.php
+++ b/freemius/includes/entities/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/includes/fs-core-functions.php b/freemius/includes/fs-core-functions.php
index 0eafb6810649a902fda4a8a5dfad728df44efd66..76961c80d685e2317e50efd72e35941d29be493f 100644
--- a/freemius/includes/fs-core-functions.php
+++ b/freemius/includes/fs-core-functions.php
@@ -6,55 +6,63 @@
      * @since       1.0.3
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
-    if ( ! function_exists( 'fs_dummy' ) ) {
-        function fs_dummy() {
+    if (! function_exists('fs_dummy')) {
+        function fs_dummy()
+        {
         }
     }
 
     /* Url.
     --------------------------------------------------------------------------------------------*/
-    if ( ! function_exists( 'fs_get_url_daily_cache_killer' ) ) {
-        function fs_get_url_daily_cache_killer() {
-            return date( '\YY\Mm\Dd' );
+    if (! function_exists('fs_get_url_daily_cache_killer')) {
+        function fs_get_url_daily_cache_killer()
+        {
+            return date('\YY\Mm\Dd');
         }
     }
 
     /* Templates / Views.
     --------------------------------------------------------------------------------------------*/
-    if ( ! function_exists( 'fs_get_template_path' ) ) {
-        function fs_get_template_path( $path ) {
-            return WP_FS__DIR_TEMPLATES . '/' . trim( $path, '/' );
+    if (! function_exists('fs_get_template_path')) {
+        function fs_get_template_path($path)
+        {
+            return WP_FS__DIR_TEMPLATES . '/' . trim($path, '/');
         }
 
-        function fs_include_template( $path, &$params = null ) {
+        function fs_include_template($path, &$params = null)
+        {
             $VARS = &$params;
-            include fs_get_template_path( $path );
+            include fs_get_template_path($path);
         }
 
-        function fs_include_once_template( $path, &$params = null ) {
+        function fs_include_once_template($path, &$params = null)
+        {
             $VARS = &$params;
-            include_once fs_get_template_path( $path );
+            include_once fs_get_template_path($path);
         }
 
-        function fs_require_template( $path, &$params = null ) {
+        function fs_require_template($path, &$params = null)
+        {
             $VARS = &$params;
-            require fs_get_template_path( $path );
+            require fs_get_template_path($path);
         }
 
-        function fs_require_once_template( $path, &$params = null ) {
+        function fs_require_once_template($path, &$params = null)
+        {
             $VARS = &$params;
-            require_once fs_get_template_path( $path );
+            require_once fs_get_template_path($path);
         }
 
-        function fs_get_template( $path, &$params = null ) {
+        function fs_get_template($path, &$params = null)
+        {
             ob_start();
 
             $VARS = &$params;
-            require fs_get_template_path( $path );
+            require fs_get_template_path($path);
 
             return ob_get_clean();
         }
@@ -63,7 +71,7 @@
     /* Scripts and styles including.
     --------------------------------------------------------------------------------------------*/
 
-    if ( ! function_exists( 'fs_asset_url' ) ) {
+    if (! function_exists('fs_asset_url')) {
         /**
          * Generates an absolute URL to the given path. This function ensures that the URL will be correct whether the asset
          * is inside a plugin's folder or a theme's folder.
@@ -84,26 +92,27 @@
          *
          * @return string Asset's URL.
          */
-        function fs_asset_url( $asset_abs_path ) {
-            $wp_content_dir = fs_normalize_path( WP_CONTENT_DIR );
-            $asset_abs_path = fs_normalize_path( $asset_abs_path );
+        function fs_asset_url($asset_abs_path)
+        {
+            $wp_content_dir = fs_normalize_path(WP_CONTENT_DIR);
+            $asset_abs_path = fs_normalize_path($asset_abs_path);
 
-            if ( 0 === strpos( $asset_abs_path, $wp_content_dir ) ) {
+            if (0 === strpos($asset_abs_path, $wp_content_dir)) {
                 // Handle both theme and plugin assets located in the standard directories.
-                $asset_rel_path = str_replace( $wp_content_dir, '', $asset_abs_path );
-                $asset_url      = content_url( fs_normalize_path( $asset_rel_path ) );
+                $asset_rel_path = str_replace($wp_content_dir, '', $asset_abs_path);
+                $asset_url      = content_url(fs_normalize_path($asset_rel_path));
             } else {
-                $wp_plugins_dir = fs_normalize_path( WP_PLUGIN_DIR );
-                if ( 0 === strpos( $asset_abs_path, $wp_plugins_dir ) ) {
+                $wp_plugins_dir = fs_normalize_path(WP_PLUGIN_DIR);
+                if (0 === strpos($asset_abs_path, $wp_plugins_dir)) {
                     // Try to handle plugin assets that may be located in a non-standard plugins directory.
-                    $asset_rel_path = str_replace( $wp_plugins_dir, '', $asset_abs_path );
-                    $asset_url      = plugins_url( fs_normalize_path( $asset_rel_path ) );
+                    $asset_rel_path = str_replace($wp_plugins_dir, '', $asset_abs_path);
+                    $asset_url      = plugins_url(fs_normalize_path($asset_rel_path));
                 } else {
                     // Try to handle theme assets that may be located in a non-standard themes directory.
                     $active_theme_stylesheet = get_stylesheet();
-                    $wp_themes_dir           = fs_normalize_path( trailingslashit( get_theme_root( $active_theme_stylesheet ) ) );
-                    $asset_rel_path          = str_replace( $wp_themes_dir, '', fs_normalize_path( $asset_abs_path ) );
-                    $asset_url               = trailingslashit( get_theme_root_uri( $active_theme_stylesheet ) ) . fs_normalize_path( $asset_rel_path );
+                    $wp_themes_dir           = fs_normalize_path(trailingslashit(get_theme_root($active_theme_stylesheet)));
+                    $asset_rel_path          = str_replace($wp_themes_dir, '', fs_normalize_path($asset_abs_path));
+                    $asset_url               = trailingslashit(get_theme_root_uri($active_theme_stylesheet)) . fs_normalize_path($asset_rel_path);
                 }
             }
 
@@ -111,21 +120,24 @@
         }
     }
 
-    if ( ! function_exists( 'fs_enqueue_local_style' ) ) {
-        function fs_enqueue_local_style( $handle, $path, $deps = array(), $ver = false, $media = 'all' ) {
-            wp_enqueue_style( $handle, fs_asset_url( WP_FS__DIR_CSS . '/' . trim( $path, '/' ) ), $deps, $ver, $media );
+    if (! function_exists('fs_enqueue_local_style')) {
+        function fs_enqueue_local_style($handle, $path, $deps = array(), $ver = false, $media = 'all')
+        {
+            wp_enqueue_style($handle, fs_asset_url(WP_FS__DIR_CSS . '/' . trim($path, '/')), $deps, $ver, $media);
         }
     }
 
-    if ( ! function_exists( 'fs_enqueue_local_script' ) ) {
-        function fs_enqueue_local_script( $handle, $path, $deps = array(), $ver = false, $in_footer = 'all' ) {
-            wp_enqueue_script( $handle, fs_asset_url( WP_FS__DIR_JS . '/' . trim( $path, '/' ) ), $deps, $ver, $in_footer );
+    if (! function_exists('fs_enqueue_local_script')) {
+        function fs_enqueue_local_script($handle, $path, $deps = array(), $ver = false, $in_footer = 'all')
+        {
+            wp_enqueue_script($handle, fs_asset_url(WP_FS__DIR_JS . '/' . trim($path, '/')), $deps, $ver, $in_footer);
         }
     }
 
-    if ( ! function_exists( 'fs_img_url' ) ) {
-        function fs_img_url( $path, $img_dir = WP_FS__DIR_IMG ) {
-            return ( fs_asset_url( $img_dir . '/' . trim( $path, '/' ) ) );
+    if (! function_exists('fs_img_url')) {
+        function fs_img_url($path, $img_dir = WP_FS__DIR_IMG)
+        {
+            return (fs_asset_url($img_dir . '/' . trim($path, '/')));
         }
     }
 
@@ -133,7 +145,7 @@
     #region Request handlers.
     #--------------------------------------------------------------------------------
 
-    if ( ! function_exists( 'fs_request_get' ) ) {
+    if (! function_exists('fs_request_get')) {
         /**
          * A helper method to fetch GET/POST user input with an optional default value when the input is not set.
          * @author Vova Feldman (@svovaf)
@@ -146,24 +158,25 @@
          *
          * @return mixed
          */
-        function fs_request_get( $key, $def = false, $type = false ) {
-            if ( is_string( $type ) ) {
-                $type = strtolower( $type );
+        function fs_request_get($key, $def = false, $type = false)
+        {
+            if (is_string($type)) {
+                $type = strtolower($type);
             }
 
             /**
              * Note to WordPress.org Reviewers:
              *  This is a helper method to fetch GET/POST user input with an optional default value when the input is not set. The actual sanitization is done in the scope of the function's usage.
              */
-            switch ( $type ) {
+            switch ($type) {
                 case 'post':
-                    $value = isset( $_POST[ $key ] ) ? $_POST[ $key ] : $def;
+                    $value = isset($_POST[ $key ]) ? $_POST[ $key ] : $def;
                     break;
                 case 'get':
-                    $value = isset( $_GET[ $key ] ) ? $_GET[ $key ] : $def;
+                    $value = isset($_GET[ $key ]) ? $_GET[ $key ] : $def;
                     break;
                 default:
-                    $value = isset( $_REQUEST[ $key ] ) ? $_REQUEST[ $key ] : $def;
+                    $value = isset($_REQUEST[ $key ]) ? $_REQUEST[ $key ] : $def;
                     break;
             }
 
@@ -171,13 +184,14 @@
         }
     }
 
-    if ( ! function_exists( 'fs_request_has' ) ) {
-        function fs_request_has( $key ) {
-            return isset( $_REQUEST[ $key ] );
+    if (! function_exists('fs_request_has')) {
+        function fs_request_has($key)
+        {
+            return isset($_REQUEST[ $key ]);
         }
     }
 
-    if ( ! function_exists( 'fs_request_get_bool' ) ) {
+    if (! function_exists('fs_request_get_bool')) {
         /**
          * A helper method to fetch GET/POST user boolean input with an optional default value when the input is not set.
          *
@@ -188,27 +202,28 @@
          *
          * @return bool|mixed
          */
-        function fs_request_get_bool( $key, $def = false ) {
-            $val = fs_request_get( $key, null );
+        function fs_request_get_bool($key, $def = false)
+        {
+            $val = fs_request_get($key, null);
 
-            if ( is_null( $val ) ) {
+            if (is_null($val)) {
                 return $def;
             }
 
-            if ( is_bool( $val ) ) {
+            if (is_bool($val)) {
                 return $val;
-            } else if ( is_numeric( $val ) ) {
-                if ( 1 == $val ) {
+            } elseif (is_numeric($val)) {
+                if (1 == $val) {
                     return true;
-                } else if ( 0 == $val ) {
+                } elseif (0 == $val) {
                     return false;
                 }
-            } else if ( is_string( $val ) ) {
-                $val = strtolower( $val );
+            } elseif (is_string($val)) {
+                $val = strtolower($val);
 
-                if ( 'true' === $val ) {
+                if ('true' === $val) {
                     return true;
-                } else if ( 'false' === $val ) {
+                } elseif ('false' === $val) {
                     return false;
                 }
             }
@@ -217,29 +232,32 @@
         }
     }
 
-    if ( ! function_exists( 'fs_request_is_post' ) ) {
-        function fs_request_is_post() {
-            return ( 'post' === strtolower( $_SERVER['REQUEST_METHOD'] ) );
+    if (! function_exists('fs_request_is_post')) {
+        function fs_request_is_post()
+        {
+            return ('post' === strtolower($_SERVER['REQUEST_METHOD']));
         }
     }
 
-    if ( ! function_exists( 'fs_request_is_get' ) ) {
-        function fs_request_is_get() {
-            return ( 'get' === strtolower( $_SERVER['REQUEST_METHOD'] ) );
+    if (! function_exists('fs_request_is_get')) {
+        function fs_request_is_get()
+        {
+            return ('get' === strtolower($_SERVER['REQUEST_METHOD']));
         }
     }
 
-    if ( ! function_exists( 'fs_get_action' ) ) {
-        function fs_get_action( $action_key = 'action' ) {
-            if ( ! empty( $_REQUEST[ $action_key ] ) && is_string( $_REQUEST[ $action_key ] ) ) {
-                return strtolower( $_REQUEST[ $action_key ] );
+    if (! function_exists('fs_get_action')) {
+        function fs_get_action($action_key = 'action')
+        {
+            if (! empty($_REQUEST[ $action_key ]) && is_string($_REQUEST[ $action_key ])) {
+                return strtolower($_REQUEST[ $action_key ]);
             }
 
-            if ( 'action' == $action_key ) {
+            if ('action' == $action_key) {
                 $action_key = 'fs_action';
 
-                if ( ! empty( $_REQUEST[ $action_key ] ) && is_string( $_REQUEST[ $action_key ] ) ) {
-                    return strtolower( $_REQUEST[ $action_key ] );
+                if (! empty($_REQUEST[ $action_key ]) && is_string($_REQUEST[ $action_key ])) {
+                    return strtolower($_REQUEST[ $action_key ]);
                 }
             }
 
@@ -247,13 +265,14 @@
         }
     }
 
-    if ( ! function_exists( 'fs_request_is_action' ) ) {
-        function fs_request_is_action( $action, $action_key = 'action' ) {
-            return ( strtolower( $action ) === fs_get_action( $action_key ) );
+    if (! function_exists('fs_request_is_action')) {
+        function fs_request_is_action($action, $action_key = 'action')
+        {
+            return (strtolower($action) === fs_get_action($action_key));
         }
     }
 
-    if ( ! function_exists( 'fs_request_is_action_secure' ) ) {
+    if (! function_exists('fs_request_is_action_secure')) {
         /**
          * @author Vova Feldman (@svovaf)
          * @since  1.0.0
@@ -271,16 +290,16 @@
             $action_key = 'action',
             $nonce_key = 'nonce'
         ) {
-            if ( strtolower( $action ) !== fs_get_action( $action_key ) ) {
+            if (strtolower($action) !== fs_get_action($action_key)) {
                 return false;
             }
 
-            $nonce = ! empty( $_REQUEST[ $nonce_key ] ) ?
+            $nonce = ! empty($_REQUEST[ $nonce_key ]) ?
                 $_REQUEST[ $nonce_key ] :
                 '';
 
-            if ( empty( $nonce ) ||
-                 ( false === wp_verify_nonce( $nonce, $action ) )
+            if (empty($nonce) ||
+                 (false === wp_verify_nonce($nonce, $action))
             ) {
                 return false;
             }
@@ -291,13 +310,14 @@
 
     #endregion
 
-    if ( ! function_exists( 'fs_is_plugin_page' ) ) {
-        function fs_is_plugin_page( $page_slug ) {
-            return ( is_admin() && $page_slug === fs_request_get( 'page' ) );
+    if (! function_exists('fs_is_plugin_page')) {
+        function fs_is_plugin_page($page_slug)
+        {
+            return (is_admin() && $page_slug === fs_request_get('page'));
         }
     }
 
-    if ( ! function_exists( 'fs_get_raw_referer' ) ) {
+    if (! function_exists('fs_get_raw_referer')) {
         /**
          * Retrieves unvalidated referer from '_wp_http_referer' or HTTP referer.
          *
@@ -307,14 +327,15 @@
          *
          * @return string|false Referer URL on success, false on failure.
          */
-        function fs_get_raw_referer() {
-            if ( function_exists( 'wp_get_raw_referer' ) ) {
+        function fs_get_raw_referer()
+        {
+            if (function_exists('wp_get_raw_referer')) {
                 return wp_get_raw_referer();
             }
-            if ( ! empty( $_REQUEST['_wp_http_referer'] ) ) {
-                return wp_unslash( $_REQUEST['_wp_http_referer'] );
-            } else if ( ! empty( $_SERVER['HTTP_REFERER'] ) ) {
-                return wp_unslash( $_SERVER['HTTP_REFERER'] );
+            if (! empty($_REQUEST['_wp_http_referer'])) {
+                return wp_unslash($_REQUEST['_wp_http_referer']);
+            } elseif (! empty($_SERVER['HTTP_REFERER'])) {
+                return wp_unslash($_SERVER['HTTP_REFERER']);
             }
 
             return false;
@@ -323,7 +344,7 @@
 
     /* Core UI.
     --------------------------------------------------------------------------------------------*/
-    if ( ! function_exists( 'fs_ui_action_button' ) ) {
+    if (! function_exists('fs_ui_action_button')) {
         /**
          * @param number      $module_id
          * @param string      $page
@@ -368,7 +389,7 @@
         }
     }
 
-    if ( ! function_exists( 'fs_ui_get_action_button' ) ) {
+    if (! function_exists('fs_ui_get_action_button')) {
         /**
          * @author Vova Feldman (@svovaf)
          * @since  1.1.7
@@ -401,43 +422,47 @@
             $method = 'GET'
         ) {
             // Prepend icon (if set).
-            $title = ( is_string( $icon_class ) ? '<i class="' . $icon_class . '"></i> ' : '' ) . $title;
+            $title = (is_string($icon_class) ? '<i class="' . $icon_class . '"></i> ' : '') . $title;
 
-            if ( is_string( $confirmation ) ) {
-                return sprintf( '<form action="%s" method="%s"><input type="hidden" name="fs_action" value="%s">%s<a href="#" class="%s" onclick="if (confirm(\'%s\')) this.parentNode.submit(); return false;">%s</a></form>',
-                    freemius( $module_id )->_get_admin_page_url( $page, $params ),
+            if (is_string($confirmation)) {
+                return sprintf(
+                    '<form action="%s" method="%s"><input type="hidden" name="fs_action" value="%s">%s<a href="#" class="%s" onclick="if (confirm(\'%s\')) this.parentNode.submit(); return false;">%s</a></form>',
+                    freemius($module_id)->_get_admin_page_url($page, $params),
                     $method,
                     $action,
-                    wp_nonce_field( $action, '_wpnonce', true, false ),
-                    'button' . ( ! empty( $button_class ) ? ' ' . $button_class : '' ) . ( $is_primary ? ' button-primary' : '' ) . ( $is_small ? ' button-small' : '' ),
+                    wp_nonce_field($action, '_wpnonce', true, false),
+                    'button' . (! empty($button_class) ? ' ' . $button_class : '') . ($is_primary ? ' button-primary' : '') . ($is_small ? ' button-small' : ''),
                     $confirmation,
                     $title
                 );
-            } else if ( 'GET' !== strtoupper( $method ) ) {
-                return sprintf( '<form action="%s" method="%s"><input type="hidden" name="fs_action" value="%s">%s<a href="#" class="%s" onclick="this.parentNode.submit(); return false;">%s</a></form>',
-                    freemius( $module_id )->_get_admin_page_url( $page, $params ),
+            } elseif ('GET' !== strtoupper($method)) {
+                return sprintf(
+                    '<form action="%s" method="%s"><input type="hidden" name="fs_action" value="%s">%s<a href="#" class="%s" onclick="this.parentNode.submit(); return false;">%s</a></form>',
+                    freemius($module_id)->_get_admin_page_url($page, $params),
                     $method,
                     $action,
-                    wp_nonce_field( $action, '_wpnonce', true, false ),
-                    'button' . ( ! empty( $button_class ) ? ' ' . $button_class : '' ) . ( $is_primary ? ' button-primary' : '' ) . ( $is_small ? ' button-small' : '' ),
+                    wp_nonce_field($action, '_wpnonce', true, false),
+                    'button' . (! empty($button_class) ? ' ' . $button_class : '') . ($is_primary ? ' button-primary' : '') . ($is_small ? ' button-small' : ''),
                     $title
                 );
             } else {
-                return sprintf( '<a href="%s" class="%s">%s</a></form>',
-                    wp_nonce_url( freemius( $module_id )->_get_admin_page_url( $page, array_merge( $params, array( 'fs_action' => $action ) ) ), $action ),
-                    'button' . ( ! empty( $button_class ) ? ' ' . $button_class : '' ) . ( $is_primary ? ' button-primary' : '' ) . ( $is_small ? ' button-small' : '' ),
+                return sprintf(
+                    '<a href="%s" class="%s">%s</a></form>',
+                    wp_nonce_url(freemius($module_id)->_get_admin_page_url($page, array_merge($params, array( 'fs_action' => $action ))), $action),
+                    'button' . (! empty($button_class) ? ' ' . $button_class : '') . ($is_primary ? ' button-primary' : '') . ($is_small ? ' button-small' : ''),
                     $title
                 );
             }
         }
 
-        function fs_ui_action_link( $module_id, $page, $action, $title, $params = array() ) {
+        function fs_ui_action_link($module_id, $page, $action, $title, $params = array())
+        {
             ?><a class=""
-                 href="<?php echo wp_nonce_url( freemius( $module_id )->_get_admin_page_url( $page, array_merge( $params, array( 'fs_action' => $action ) ) ), $action ) ?>"><?php echo $title ?></a><?php
+                 href="<?php echo wp_nonce_url(freemius($module_id)->_get_admin_page_url($page, array_merge($params, array( 'fs_action' => $action ))), $action) ?>"><?php echo $title ?></a><?php
         }
     }
 
-    if ( ! function_exists( 'fs_get_entity' ) ) {
+    if (! function_exists('fs_get_entity')) {
         /**
          * @author Leo Fajardo (@leorw)
          * @since 2.3.1
@@ -447,16 +472,17 @@
          *
          * @return FS_Plugin|FS_User|FS_Site|FS_Plugin_License|FS_Plugin_Plan|FS_Plugin_Tag|FS_Subscription
          */
-        function fs_get_entity( $entity, $class ) {
-            if ( ! is_object( $entity ) || $entity instanceof $class ) {
+        function fs_get_entity($entity, $class)
+        {
+            if (! is_object($entity) || $entity instanceof $class) {
                 return $entity;
             }
 
-            return new $class( $entity );
+            return new $class($entity);
         }
     }
 
-    if ( ! function_exists( 'fs_get_entities' ) ) {
+    if (! function_exists('fs_get_entities')) {
         /**
          * @author Leo Fajardo (@leorw)
          * @since 2.3.1
@@ -466,15 +492,16 @@
          *
          * @return FS_Plugin[]|FS_User[]|FS_Site[]|FS_Plugin_License[]|FS_Plugin_Plan[]|FS_Plugin_Tag[]|FS_Subscription[]
          */
-        function fs_get_entities( $entities, $class_name ) {
-            if ( ! is_array( $entities ) || empty( $entities ) ) {
+        function fs_get_entities($entities, $class_name)
+        {
+            if (! is_array($entities) || empty($entities)) {
                 return $entities;
             }
 
             // Get first element.
-            $first_array_element = reset( $entities );
+            $first_array_element = reset($entities);
 
-            if ( $first_array_element instanceof $class_name ) {
+            if ($first_array_element instanceof $class_name) {
                 /**
                  * If the first element of the array is an instance of the context class, assume that all other
                  * elements are instances of the class.
@@ -483,12 +510,12 @@
             }
 
             if (
-                is_array( $first_array_element ) &&
-                ! empty( $first_array_element )
+                is_array($first_array_element) &&
+                ! empty($first_array_element)
             ) {
-                $first_array_element = reset( $first_array_element );
+                $first_array_element = reset($first_array_element);
 
-                if ( $first_array_element instanceof $class_name ) {
+                if ($first_array_element instanceof $class_name) {
                     /**
                      * If the first element of the `$entities` array is an array whose first element is an instance of the
                      * context class, assume that all other objects are instances of the class.
@@ -497,11 +524,11 @@
                 }
             }
 
-            foreach ( $entities as $key => $entities_or_entity ) {
-                if ( is_array( $entities_or_entity ) ) {
-                    $entities[ $key ] = fs_get_entities( $entities_or_entity, $class_name );
+            foreach ($entities as $key => $entities_or_entity) {
+                if (is_array($entities_or_entity)) {
+                    $entities[ $key ] = fs_get_entities($entities_or_entity, $class_name);
                 } else {
-                    $entities[ $key ] = fs_get_entity( $entities_or_entity, $class_name );
+                    $entities[ $key ] = fs_get_entity($entities_or_entity, $class_name);
                 }
             }
 
@@ -509,7 +536,7 @@
         }
     }
 
-    if ( ! function_exists( 'fs_nonce_url' ) ) {
+    if (! function_exists('fs_nonce_url')) {
         /**
          * Retrieve URL with nonce added to URL query.
          *
@@ -526,12 +553,13 @@
          *
          * @return string Escaped URL with nonce action added.
          */
-        function fs_nonce_url( $actionurl, $action = - 1, $name = '_wpnonce' ) {
-            return add_query_arg( $name, wp_create_nonce( $action ), $actionurl );
+        function fs_nonce_url($actionurl, $action = - 1, $name = '_wpnonce')
+        {
+            return add_query_arg($name, wp_create_nonce($action), $actionurl);
         }
     }
 
-    if ( ! function_exists( 'fs_starts_with' ) ) {
+    if (! function_exists('fs_starts_with')) {
         /**
          * Check if string starts with.
          *
@@ -543,14 +571,15 @@
          *
          * @return bool
          */
-        function fs_starts_with( $haystack, $needle ) {
-            $length = strlen( $needle );
+        function fs_starts_with($haystack, $needle)
+        {
+            $length = strlen($needle);
 
-            return ( substr( $haystack, 0, $length ) === $needle );
+            return (substr($haystack, 0, $length) === $needle);
         }
     }
 
-    if ( ! function_exists( 'fs_ends_with' ) ) {
+    if (! function_exists('fs_ends_with')) {
         /**
          * Check if string ends with.
          *
@@ -562,33 +591,35 @@
          *
          * @return bool
          */
-        function fs_ends_with( $haystack, $needle ) {
-            $length = strlen( $needle );
+        function fs_ends_with($haystack, $needle)
+        {
+            $length = strlen($needle);
             $start  = $length * - 1; // negative
 
-            return ( substr( $haystack, $start ) === $needle );
+            return (substr($haystack, $start) === $needle);
         }
     }
 
-    if ( ! function_exists( 'fs_strip_url_protocol' ) ) {
-        function fs_strip_url_protocol( $url ) {
-            if ( ! fs_starts_with( $url, 'http' ) ) {
+    if (! function_exists('fs_strip_url_protocol')) {
+        function fs_strip_url_protocol($url)
+        {
+            if (! fs_starts_with($url, 'http')) {
                 return $url;
             }
 
-            $protocol_pos = strpos( $url, '://' );
+            $protocol_pos = strpos($url, '://');
 
-            if ( $protocol_pos > 5 ) {
+            if ($protocol_pos > 5) {
                 return $url;
             }
 
-            return substr( $url, $protocol_pos + 3 );
+            return substr($url, $protocol_pos + 3);
         }
     }
 
     #region Url Canonization ------------------------------------------------------------------
 
-    if ( ! function_exists( 'fs_canonize_url' ) ) {
+    if (! function_exists('fs_canonize_url')) {
         /**
          * @author Vova Feldman (@svovaf)
          * @since  1.1.3
@@ -599,25 +630,26 @@
          *
          * @return string
          */
-        function fs_canonize_url( $url, $omit_host = false, $ignore_params = array() ) {
-            $parsed_url = parse_url( strtolower( $url ) );
+        function fs_canonize_url($url, $omit_host = false, $ignore_params = array())
+        {
+            $parsed_url = parse_url(strtolower($url));
 
-//		if ( ! isset( $parsed_url['host'] ) ) {
-//			return $url;
-//		}
+            //		if ( ! isset( $parsed_url['host'] ) ) {
+            //			return $url;
+            //		}
 
-            $canonical = ( ( $omit_host || ! isset( $parsed_url['host'] ) ) ? '' : $parsed_url['host'] ) . $parsed_url['path'];
+            $canonical = (($omit_host || ! isset($parsed_url['host'])) ? '' : $parsed_url['host']) . $parsed_url['path'];
 
-            if ( isset( $parsed_url['query'] ) ) {
-                parse_str( $parsed_url['query'], $queryString );
-                $canonical .= '?' . fs_canonize_query_string( $queryString, $ignore_params );
+            if (isset($parsed_url['query'])) {
+                parse_str($parsed_url['query'], $queryString);
+                $canonical .= '?' . fs_canonize_query_string($queryString, $ignore_params);
             }
 
             return $canonical;
         }
     }
 
-    if ( ! function_exists( 'fs_canonize_query_string' ) ) {
+    if (! function_exists('fs_canonize_query_string')) {
         /**
          * @author Vova Feldman (@svovaf)
          * @since  1.1.3
@@ -628,36 +660,37 @@
          *
          * @return string
          */
-        function fs_canonize_query_string( array $params, array &$ignore_params, $params_prefix = false ) {
-            if ( ! is_array( $params ) || 0 === count( $params ) ) {
+        function fs_canonize_query_string(array $params, array &$ignore_params, $params_prefix = false)
+        {
+            if (! is_array($params) || 0 === count($params)) {
                 return '';
             }
 
             // Url encode both keys and values
-            $keys   = fs_urlencode_rfc3986( array_keys( $params ) );
-            $values = fs_urlencode_rfc3986( array_values( $params ) );
-            $params = array_combine( $keys, $values );
+            $keys   = fs_urlencode_rfc3986(array_keys($params));
+            $values = fs_urlencode_rfc3986(array_values($params));
+            $params = array_combine($keys, $values);
 
             // Parameters are sorted by name, using lexicographical byte value ordering.
             // Ref: Spec: 9.1.1 (1)
-            uksort( $params, 'strcmp' );
+            uksort($params, 'strcmp');
 
             $pairs = array();
-            foreach ( $params as $parameter => $value ) {
-                $lower_param = strtolower( $parameter );
+            foreach ($params as $parameter => $value) {
+                $lower_param = strtolower($parameter);
 
                 // Skip ignore params.
-                if ( in_array( $lower_param, $ignore_params ) ||
-                     ( false !== $params_prefix && fs_starts_with( $lower_param, $params_prefix ) )
+                if (in_array($lower_param, $ignore_params) ||
+                     (false !== $params_prefix && fs_starts_with($lower_param, $params_prefix))
                 ) {
                     continue;
                 }
 
-                if ( is_array( $value ) ) {
+                if (is_array($value)) {
                     // If two or more parameters share the same name, they are sorted by their value
                     // Ref: Spec: 9.1.1 (1)
-                    natsort( $value );
-                    foreach ( $value as $duplicate_value ) {
+                    natsort($value);
+                    foreach ($value as $duplicate_value) {
                         $pairs[] = $lower_param . '=' . $duplicate_value;
                     }
                 } else {
@@ -665,15 +698,15 @@
                 }
             }
 
-            if ( 0 === count( $pairs ) ) {
+            if (0 === count($pairs)) {
                 return '';
             }
 
-            return implode( "&", $pairs );
+            return implode("&", $pairs);
         }
     }
 
-    if ( ! function_exists( 'fs_urlencode_rfc3986' ) ) {
+    if (! function_exists('fs_urlencode_rfc3986')) {
         /**
          * @author Vova Feldman (@svovaf)
          * @since  1.1.3
@@ -682,11 +715,12 @@
          *
          * @return array|mixed|string
          */
-        function fs_urlencode_rfc3986( $input ) {
-            if ( is_array( $input ) ) {
-                return array_map( 'fs_urlencode_rfc3986', $input );
-            } else if ( is_scalar( $input ) ) {
-                return str_replace( '+', ' ', str_replace( '%7E', '~', rawurlencode( $input ) ) );
+        function fs_urlencode_rfc3986($input)
+        {
+            if (is_array($input)) {
+                return array_map('fs_urlencode_rfc3986', $input);
+            } elseif (is_scalar($input)) {
+                return str_replace('+', ' ', str_replace('%7E', '~', rawurlencode($input)));
             }
 
             return '';
@@ -695,7 +729,7 @@
 
     #endregion Url Canonization ------------------------------------------------------------------
 
-    if ( ! function_exists( 'fs_download_image' ) ) {
+    if (! function_exists('fs_download_image')) {
         /**
          * @author Vova Feldman (@svovaf)
          *
@@ -706,28 +740,29 @@
          *
          * @return bool Is successfully downloaded.
          */
-        function fs_download_image( $from, $to ) {
-            $dir = dirname( $to );
+        function fs_download_image($from, $to)
+        {
+            $dir = dirname($to);
 
-            if ( 'direct' !== get_filesystem_method( array(), $dir ) ) {
+            if ('direct' !== get_filesystem_method(array(), $dir)) {
                 return false;
             }
 
-            if ( ! class_exists( 'WP_Filesystem_Direct' ) ) {
+            if (! class_exists('WP_Filesystem_Direct')) {
                 require_once ABSPATH . 'wp-admin/includes/class-wp-filesystem-base.php';
                 require_once ABSPATH . 'wp-admin/includes/class-wp-filesystem-direct.php';
             }
 
-            $fs      = new WP_Filesystem_Direct( '' );
-            $tmpfile = download_url( $from );
+            $fs      = new WP_Filesystem_Direct('');
+            $tmpfile = download_url($from);
 
-            if ( $tmpfile instanceof WP_Error ) {
+            if ($tmpfile instanceof WP_Error) {
                 // Issue downloading the file.
                 return false;
             }
 
-            $fs->copy( $tmpfile, $to );
-            $fs->delete( $tmpfile );
+            $fs->copy($tmpfile, $to);
+            $fs->delete($tmpfile);
 
             return true;
         }
@@ -736,7 +771,7 @@
     /* General Utilities
     --------------------------------------------------------------------------------------------*/
 
-    if ( ! function_exists( 'fs_sort_by_priority' ) ) {
+    if (! function_exists('fs_sort_by_priority')) {
         /**
          * Sorts an array by the value of the priority key.
          *
@@ -748,21 +783,22 @@
          *
          * @return int
          */
-        function fs_sort_by_priority( $a, $b ) {
+        function fs_sort_by_priority($a, $b)
+        {
 
             // If b has a priority and a does not, b wins.
-            if ( ! isset( $a['priority'] ) && isset( $b['priority'] ) ) {
+            if (! isset($a['priority']) && isset($b['priority'])) {
                 return 1;
             } // If b has a priority and a does not, b wins.
-            elseif ( isset( $a['priority'] ) && ! isset( $b['priority'] ) ) {
+            elseif (isset($a['priority']) && ! isset($b['priority'])) {
                 return - 1;
             } // If neither has a priority or both priorities are equal its a tie.
-            elseif ( ( ! isset( $a['priority'] ) && ! isset( $b['priority'] ) ) || $a['priority'] === $b['priority'] ) {
+            elseif ((! isset($a['priority']) && ! isset($b['priority'])) || $a['priority'] === $b['priority']) {
                 return 0;
             }
 
             // If both have priority return the winner.
-            return ( $a['priority'] < $b['priority'] ) ? - 1 : 1;
+            return ($a['priority'] < $b['priority']) ? - 1 : 1;
         }
     }
 
@@ -770,7 +806,7 @@
     #region Localization
     #--------------------------------------------------------------------------------
 
-    if ( ! function_exists( 'fs_text' ) ) {
+    if (! function_exists('fs_text')) {
         /**
          * Retrieve a translated text by key.
          *
@@ -784,35 +820,36 @@
          *
          * @global       $fs_text , $fs_text_overrides
          */
-        function fs_text( $key, $slug = 'freemius' ) {
+        function fs_text($key, $slug = 'freemius')
+        {
             global $fs_text,
                    $fs_module_info_text,
                    $fs_text_overrides;
 
-            if ( isset( $fs_text_overrides[ $slug ] ) ) {
-                if ( isset( $fs_text_overrides[ $slug ][ $key ] ) ) {
+            if (isset($fs_text_overrides[ $slug ])) {
+                if (isset($fs_text_overrides[ $slug ][ $key ])) {
                     return $fs_text_overrides[ $slug ][ $key ];
                 }
 
-                $lower_key = strtolower( $key );
-                if ( isset( $fs_text_overrides[ $slug ][ $lower_key ] ) ) {
+                $lower_key = strtolower($key);
+                if (isset($fs_text_overrides[ $slug ][ $lower_key ])) {
                     return $fs_text_overrides[ $slug ][ $lower_key ];
                 }
             }
 
-            if ( ! isset( $fs_text ) ) {
-                $dir = defined( 'WP_FS__DIR_INCLUDES' ) ?
+            if (! isset($fs_text)) {
+                $dir = defined('WP_FS__DIR_INCLUDES') ?
                     WP_FS__DIR_INCLUDES :
-                    dirname( __FILE__ );
+                    dirname(__FILE__);
 
                 require_once $dir . '/i18n.php';
             }
 
-            if ( isset( $fs_text[ $key ] ) ) {
+            if (isset($fs_text[ $key ])) {
                 return $fs_text[ $key ];
             }
 
-            if ( isset( $fs_module_info_text[ $key ] ) ) {
+            if (isset($fs_module_info_text[ $key ])) {
                 return $fs_module_info_text[ $key ];
             }
 
@@ -836,13 +873,14 @@
          *
          * @global       $fs_text_overrides
          */
-        function _fs_text_x_inline( $text, $context, $key = '', $slug = 'freemius' ) {
-            list( $text, $text_domain ) = fs_text_and_domain( $text, $key, $slug );
+        function _fs_text_x_inline($text, $context, $key = '', $slug = 'freemius')
+        {
+            list($text, $text_domain) = fs_text_and_domain($text, $key, $slug);
 
             // Avoid misleading Theme Check warning.
             $fn = 'translate_with_gettext_context';
 
-            return $fn( $text, $context, $text_domain );
+            return $fn($text, $context, $text_domain);
         }
 
         #endregion
@@ -862,8 +900,9 @@
          *
          * @global       $fs_text_overrides
          */
-        function fs_text_x_inline( $text, $context, $key = '', $slug = 'freemius' ) {
-            return _fs_text_x_inline( $text, $context, $key, $slug );
+        function fs_text_x_inline($text, $context, $key = '', $slug = 'freemius')
+        {
+            return _fs_text_x_inline($text, $context, $key, $slug);
         }
 
         /**
@@ -875,8 +914,9 @@
          * @param string $key
          * @param string $slug
          */
-        function fs_echo( $key, $slug = 'freemius' ) {
-            echo fs_text( $key, $slug );
+        function fs_echo($key, $slug = 'freemius')
+        {
+            echo fs_text($key, $slug);
         }
 
         /**
@@ -889,8 +929,9 @@
          * @param string $key  String key for overrides.
          * @param string $slug Module slug for overrides.
          */
-        function fs_echo_inline( $text, $key = '', $slug = 'freemius' ) {
-            echo _fs_text_inline( $text, $key, $slug );
+        function fs_echo_inline($text, $key = '', $slug = 'freemius')
+        {
+            echo _fs_text_inline($text, $key, $slug);
         }
 
         /**
@@ -904,12 +945,13 @@
          * @param string $key     String key for overrides.
          * @param string $slug    Module slug for overrides.
          */
-        function fs_echo_x_inline( $text, $context, $key = '', $slug = 'freemius' ) {
-            echo _fs_text_x_inline( $text, $context, $key, $slug );
+        function fs_echo_x_inline($text, $context, $key = '', $slug = 'freemius')
+        {
+            echo _fs_text_x_inline($text, $context, $key, $slug);
         }
     }
 
-    if ( ! function_exists( 'fs_text_override' ) ) {
+    if (! function_exists('fs_text_override')) {
         /**
          * Get a translatable text override if exists, or `false`.
          *
@@ -922,26 +964,27 @@
          *
          * @return string|false
          */
-        function fs_text_override( $text, $key, $slug ) {
+        function fs_text_override($text, $key, $slug)
+        {
             global $fs_text_overrides;
 
             /**
              * Check if string is overridden.
              */
-            if ( ! isset( $fs_text_overrides[ $slug ] ) ) {
+            if (! isset($fs_text_overrides[ $slug ])) {
                 return false;
             }
 
-            if ( empty( $key ) ) {
-                $key = strtolower( str_replace( ' ', '-', $text ) );
+            if (empty($key)) {
+                $key = strtolower(str_replace(' ', '-', $text));
             }
 
-            if ( isset( $fs_text_overrides[ $slug ][ $key ] ) ) {
+            if (isset($fs_text_overrides[ $slug ][ $key ])) {
                 return $fs_text_overrides[ $slug ][ $key ];
             }
 
-            $lower_key = strtolower( $key );
-            if ( isset( $fs_text_overrides[ $slug ][ $lower_key ] ) ) {
+            $lower_key = strtolower($key);
+            if (isset($fs_text_overrides[ $slug ][ $lower_key ])) {
                 return $fs_text_overrides[ $slug ][ $lower_key ];
             }
 
@@ -949,7 +992,7 @@
         }
     }
 
-    if ( ! function_exists( 'fs_text_and_domain' ) ) {
+    if (! function_exists('fs_text_and_domain')) {
         /**
          * Get a translatable text and its text domain.
          *
@@ -964,10 +1007,11 @@
          *
          * @return string[]
          */
-        function fs_text_and_domain( $text, $key, $slug ) {
-            $override = fs_text_override( $text, $key, $slug );
+        function fs_text_and_domain($text, $key, $slug)
+        {
+            $override = fs_text_override($text, $key, $slug);
 
-            if ( false === $override ) {
+            if (false === $override) {
                 // No override, use FS text domain.
                 $text_domain = 'freemius';
             } else {
@@ -981,7 +1025,7 @@
         }
     }
 
-    if ( ! function_exists( '_fs_text_inline' ) ) {
+    if (! function_exists('_fs_text_inline')) {
         /**
          * Retrieve an inline translated text by key.
          *
@@ -996,17 +1040,18 @@
          *
          * @global       $fs_text_overrides
          */
-        function _fs_text_inline( $text, $key = '', $slug = 'freemius' ) {
-            list( $text, $text_domain ) = fs_text_and_domain( $text, $key, $slug );
+        function _fs_text_inline($text, $key = '', $slug = 'freemius')
+        {
+            list($text, $text_domain) = fs_text_and_domain($text, $key, $slug);
 
             // Avoid misleading Theme Check warning.
             $fn = 'translate';
 
-            return $fn( $text, $text_domain );
+            return $fn($text, $text_domain);
         }
     }
 
-    if ( ! function_exists( 'fs_text_inline' ) ) {
+    if (! function_exists('fs_text_inline')) {
         /**
          * Retrieve an inline translated text by key.
          *
@@ -1021,12 +1066,13 @@
          *
          * @global       $fs_text_overrides
          */
-        function fs_text_inline( $text, $key = '', $slug = 'freemius' ) {
-            return _fs_text_inline( $text, $key, $slug );
+        function fs_text_inline($text, $key = '', $slug = 'freemius')
+        {
+            return _fs_text_inline($text, $key, $slug);
         }
     }
 
-    if ( ! function_exists( 'fs_esc_attr' ) ) {
+    if (! function_exists('fs_esc_attr')) {
         /**
          * @author Vova Feldman
          * @since  1.2.1.6
@@ -1036,12 +1082,13 @@
          *
          * @return string
          */
-        function fs_esc_attr( $key, $slug ) {
-            return esc_attr( fs_text( $key, $slug ) );
+        function fs_esc_attr($key, $slug)
+        {
+            return esc_attr(fs_text($key, $slug));
         }
     }
 
-    if ( ! function_exists( 'fs_esc_attr_inline' ) ) {
+    if (! function_exists('fs_esc_attr_inline')) {
         /**
          * @author Vova Feldman (@svovaf)
          * @since  1.2.3
@@ -1052,12 +1099,13 @@
          *
          * @return string
          */
-        function fs_esc_attr_inline( $text, $key = '', $slug = 'freemius' ) {
-            return esc_attr( _fs_text_inline( $text, $key, $slug ) );
+        function fs_esc_attr_inline($text, $key = '', $slug = 'freemius')
+        {
+            return esc_attr(_fs_text_inline($text, $key, $slug));
         }
     }
 
-    if ( ! function_exists( 'fs_esc_attr_x_inline' ) ) {
+    if (! function_exists('fs_esc_attr_x_inline')) {
         /**
          * @author Vova Feldman (@svovaf)
          * @since  1.2.3
@@ -1069,12 +1117,13 @@
          *
          * @return string
          */
-        function fs_esc_attr_x_inline( $text, $context, $key = '', $slug = 'freemius' ) {
-            return esc_attr( _fs_text_x_inline( $text, $context, $key, $slug ) );
+        function fs_esc_attr_x_inline($text, $context, $key = '', $slug = 'freemius')
+        {
+            return esc_attr(_fs_text_x_inline($text, $context, $key, $slug));
         }
     }
 
-    if ( ! function_exists( 'fs_esc_attr_echo' ) ) {
+    if (! function_exists('fs_esc_attr_echo')) {
         /**
          * @author Vova Feldman
          * @since  1.2.1.6
@@ -1082,12 +1131,13 @@
          * @param string $key
          * @param string $slug
          */
-        function fs_esc_attr_echo( $key, $slug ) {
-            echo esc_attr( fs_text( $key, $slug ) );
+        function fs_esc_attr_echo($key, $slug)
+        {
+            echo esc_attr(fs_text($key, $slug));
         }
     }
 
-    if ( ! function_exists( 'fs_esc_attr_echo_inline' ) ) {
+    if (! function_exists('fs_esc_attr_echo_inline')) {
         /**
          * @author Vova Feldman (@svovaf)
          * @since  1.2.3
@@ -1096,12 +1146,13 @@
          * @param string $key  String key for overrides.
          * @param string $slug Module slug for overrides.
          */
-        function fs_esc_attr_echo_inline( $text, $key = '', $slug = 'freemius' ) {
-            echo esc_attr( _fs_text_inline( $text, $key, $slug ) );
+        function fs_esc_attr_echo_inline($text, $key = '', $slug = 'freemius')
+        {
+            echo esc_attr(_fs_text_inline($text, $key, $slug));
         }
     }
 
-    if ( ! function_exists( 'fs_esc_js' ) ) {
+    if (! function_exists('fs_esc_js')) {
         /**
          * @author Vova Feldman
          * @since  1.2.1.6
@@ -1111,12 +1162,13 @@
          *
          * @return string
          */
-        function fs_esc_js( $key, $slug ) {
-            return esc_js( fs_text( $key, $slug ) );
+        function fs_esc_js($key, $slug)
+        {
+            return esc_js(fs_text($key, $slug));
         }
     }
 
-    if ( ! function_exists( 'fs_esc_js_inline' ) ) {
+    if (! function_exists('fs_esc_js_inline')) {
         /**
          * @author Vova Feldman (@svovaf)
          * @since  1.2.3
@@ -1127,12 +1179,13 @@
          *
          * @return string
          */
-        function fs_esc_js_inline( $text, $key = '', $slug = 'freemius' ) {
-            return esc_js( _fs_text_inline( $text, $key, $slug ) );
+        function fs_esc_js_inline($text, $key = '', $slug = 'freemius')
+        {
+            return esc_js(_fs_text_inline($text, $key, $slug));
         }
     }
 
-    if ( ! function_exists( 'fs_esc_js_x_inline' ) ) {
+    if (! function_exists('fs_esc_js_x_inline')) {
         /**
          * @author Vova Feldman (@svovaf)
          * @since  1.2.3
@@ -1144,12 +1197,13 @@
          *
          * @return string
          */
-        function fs_esc_js_x_inline( $text, $context, $key = '', $slug = 'freemius' ) {
-            return esc_js( _fs_text_x_inline( $text, $context, $key, $slug ) );
+        function fs_esc_js_x_inline($text, $context, $key = '', $slug = 'freemius')
+        {
+            return esc_js(_fs_text_x_inline($text, $context, $key, $slug));
         }
     }
 
-    if ( ! function_exists( 'fs_esc_js_echo_x_inline' ) ) {
+    if (! function_exists('fs_esc_js_echo_x_inline')) {
         /**
          * @author Vova Feldman (@svovaf)
          * @since  1.2.3
@@ -1161,12 +1215,13 @@
          *
          * @return string
          */
-        function fs_esc_js_echo_x_inline( $text, $context, $key = '', $slug = 'freemius' ) {
-            echo esc_js( _fs_text_x_inline( $text, $context, $key, $slug ) );
+        function fs_esc_js_echo_x_inline($text, $context, $key = '', $slug = 'freemius')
+        {
+            echo esc_js(_fs_text_x_inline($text, $context, $key, $slug));
         }
     }
 
-    if ( ! function_exists( 'fs_esc_js_echo' ) ) {
+    if (! function_exists('fs_esc_js_echo')) {
         /**
          * @author Vova Feldman
          * @since  1.2.1.6
@@ -1174,12 +1229,13 @@
          * @param string $key
          * @param string $slug
          */
-        function fs_esc_js_echo( $key, $slug ) {
-            echo esc_js( fs_text( $key, $slug ) );
+        function fs_esc_js_echo($key, $slug)
+        {
+            echo esc_js(fs_text($key, $slug));
         }
     }
 
-    if ( ! function_exists( 'fs_esc_js_echo_inline' ) ) {
+    if (! function_exists('fs_esc_js_echo_inline')) {
         /**
          * @author Vova Feldman (@svovaf)
          * @since  1.2.3
@@ -1188,12 +1244,13 @@
          * @param string $key  String key for overrides.
          * @param string $slug Module slug for overrides.
          */
-        function fs_esc_js_echo_inline( $text, $key = '', $slug = 'freemius' ) {
-            echo esc_js( _fs_text_inline( $text, $key, $slug ) );
+        function fs_esc_js_echo_inline($text, $key = '', $slug = 'freemius')
+        {
+            echo esc_js(_fs_text_inline($text, $key, $slug));
         }
     }
 
-    if ( ! function_exists( 'fs_json_encode_echo' ) ) {
+    if (! function_exists('fs_json_encode_echo')) {
         /**
          * @author Vova Feldman
          * @since  1.2.1.6
@@ -1201,12 +1258,13 @@
          * @param string $key
          * @param string $slug
          */
-        function fs_json_encode_echo( $key, $slug ) {
-            echo json_encode( fs_text( $key, $slug ) );
+        function fs_json_encode_echo($key, $slug)
+        {
+            echo json_encode(fs_text($key, $slug));
         }
     }
 
-    if ( ! function_exists( 'fs_json_encode_echo_inline' ) ) {
+    if (! function_exists('fs_json_encode_echo_inline')) {
         /**
          * @author Vova Feldman (@svovaf)
          * @since  1.2.3
@@ -1215,12 +1273,13 @@
          * @param string $key  String key for overrides.
          * @param string $slug Module slug for overrides.
          */
-        function fs_json_encode_echo_inline( $text, $key = '', $slug = 'freemius' ) {
-            echo json_encode( _fs_text_inline( $text, $key, $slug ) );
+        function fs_json_encode_echo_inline($text, $key = '', $slug = 'freemius')
+        {
+            echo json_encode(_fs_text_inline($text, $key, $slug));
         }
     }
 
-    if ( ! function_exists( 'fs_esc_html' ) ) {
+    if (! function_exists('fs_esc_html')) {
         /**
          * @author Vova Feldman
          * @since  1.2.1.6
@@ -1230,12 +1289,13 @@
          *
          * @return string
          */
-        function fs_esc_html( $key, $slug ) {
-            return esc_html( fs_text( $key, $slug ) );
+        function fs_esc_html($key, $slug)
+        {
+            return esc_html(fs_text($key, $slug));
         }
     }
 
-    if ( ! function_exists( 'fs_esc_html_inline' ) ) {
+    if (! function_exists('fs_esc_html_inline')) {
         /**
          * @author Vova Feldman (@svovaf)
          * @since  1.2.3
@@ -1246,12 +1306,13 @@
          *
          * @return string
          */
-        function fs_esc_html_inline( $text, $key = '', $slug = 'freemius' ) {
-            return esc_html( _fs_text_inline( $text, $key, $slug ) );
+        function fs_esc_html_inline($text, $key = '', $slug = 'freemius')
+        {
+            return esc_html(_fs_text_inline($text, $key, $slug));
         }
     }
 
-    if ( ! function_exists( 'fs_esc_html_x_inline' ) ) {
+    if (! function_exists('fs_esc_html_x_inline')) {
         /**
          * @author Vova Feldman (@svovaf)
          * @since  1.2.3
@@ -1263,12 +1324,13 @@
          *
          * @return string
          */
-        function fs_esc_html_x_inline( $text, $context, $key = '', $slug = 'freemius' ) {
-            return esc_html( _fs_text_x_inline( $text, $context, $key, $slug ) );
+        function fs_esc_html_x_inline($text, $context, $key = '', $slug = 'freemius')
+        {
+            return esc_html(_fs_text_x_inline($text, $context, $key, $slug));
         }
     }
 
-    if ( ! function_exists( 'fs_esc_html_echo_x_inline' ) ) {
+    if (! function_exists('fs_esc_html_echo_x_inline')) {
         /**
          * @author Vova Feldman (@svovaf)
          * @since  1.2.3
@@ -1278,12 +1340,13 @@
          * @param string $key     String key for overrides.
          * @param string $slug    Module slug for overrides.
          */
-        function fs_esc_html_echo_x_inline( $text, $context, $key = '', $slug = 'freemius' ) {
-            echo esc_html( _fs_text_x_inline( $text, $context, $key, $slug ) );
+        function fs_esc_html_echo_x_inline($text, $context, $key = '', $slug = 'freemius')
+        {
+            echo esc_html(_fs_text_x_inline($text, $context, $key, $slug));
         }
     }
 
-    if ( ! function_exists( 'fs_esc_html_echo' ) ) {
+    if (! function_exists('fs_esc_html_echo')) {
         /**
          * @author Vova Feldman
          * @since  1.2.1.6
@@ -1291,12 +1354,13 @@
          * @param string $key
          * @param string $slug
          */
-        function fs_esc_html_echo( $key, $slug ) {
-            echo esc_html( fs_text( $key, $slug ) );
+        function fs_esc_html_echo($key, $slug)
+        {
+            echo esc_html(fs_text($key, $slug));
         }
     }
 
-    if ( ! function_exists( 'fs_esc_html_echo_inline' ) ) {
+    if (! function_exists('fs_esc_html_echo_inline')) {
         /**
          * @author Vova Feldman (@svovaf)
          * @since  1.2.3
@@ -1305,12 +1369,13 @@
          * @param string $key  String key for overrides.
          * @param string $slug Module slug for overrides.
          */
-        function fs_esc_html_echo_inline( $text, $key = '', $slug = 'freemius' ) {
-            echo esc_html( _fs_text_inline( $text, $key, $slug ) );
+        function fs_esc_html_echo_inline($text, $key = '', $slug = 'freemius')
+        {
+            echo esc_html(_fs_text_inline($text, $key, $slug));
         }
     }
 
-    if ( ! function_exists( 'fs_override_i18n' ) ) {
+    if (! function_exists('fs_override_i18n')) {
         /**
          * Override default i18n text phrases.
          *
@@ -1322,14 +1387,15 @@
          *
          * @global $fs_text_overrides
          */
-        function fs_override_i18n( array $key_value, $slug = 'freemius' ) {
+        function fs_override_i18n(array $key_value, $slug = 'freemius')
+        {
             global $fs_text_overrides;
 
-            if ( ! isset( $fs_text_overrides[ $slug ] ) ) {
+            if (! isset($fs_text_overrides[ $slug ])) {
                 $fs_text_overrides[ $slug ] = array();
             }
 
-            foreach ( $key_value as $key => $value ) {
+            foreach ($key_value as $key => $value) {
                 $fs_text_overrides[ $slug ][ $key ] = $value;
             }
         }
@@ -1341,20 +1407,21 @@
     #region Multisite Network
     #--------------------------------------------------------------------------------
 
-    if ( ! function_exists( 'fs_is_plugin_uninstall' ) ) {
+    if (! function_exists('fs_is_plugin_uninstall')) {
         /**
          * @author Vova Feldman (@svovaf)
          * @since  2.0.0
          */
-        function fs_is_plugin_uninstall() {
+        function fs_is_plugin_uninstall()
+        {
             return (
-                defined( 'WP_UNINSTALL_PLUGIN' ) ||
-                ( 0 < did_action( 'update_option_uninstall_plugins' ) )
+                defined('WP_UNINSTALL_PLUGIN') ||
+                (0 < did_action('update_option_uninstall_plugins'))
             );
         }
     }
 
-    if ( ! function_exists( 'fs_is_network_admin' ) ) {
+    if (! function_exists('fs_is_network_admin')) {
         /**
          * Unlike is_network_admin(), this one will also work properly when
          * the context execution is WP AJAX handler, and during plugin
@@ -1363,15 +1430,16 @@
          * @author Vova Feldman (@svovaf)
          * @since  2.0.0
          */
-        function fs_is_network_admin() {
+        function fs_is_network_admin()
+        {
             return (
                 WP_FS__IS_NETWORK_ADMIN ||
-                ( is_multisite() && fs_is_plugin_uninstall() )
+                (is_multisite() && fs_is_plugin_uninstall())
             );
         }
     }
 
-    if ( ! function_exists( 'fs_is_blog_admin' ) ) {
+    if (! function_exists('fs_is_blog_admin')) {
         /**
          * Unlike is_blog_admin(), this one will also work properly when
          * the context execution is WP AJAX handler, and during plugin
@@ -1380,17 +1448,18 @@
          * @author Vova Feldman (@svovaf)
          * @since  2.0.0
          */
-        function fs_is_blog_admin() {
+        function fs_is_blog_admin()
+        {
             return (
                 WP_FS__IS_BLOG_ADMIN ||
-                ( ! is_multisite() && fs_is_plugin_uninstall() )
+                (! is_multisite() && fs_is_plugin_uninstall())
             );
         }
     }
 
     #endregion
 
-    if ( ! function_exists( 'fs_apply_filter' ) ) {
+    if (! function_exists('fs_apply_filter')) {
         /**
          * Apply filter for specific plugin.
          *
@@ -1405,12 +1474,16 @@
          *
          * @uses   apply_filters()
          */
-        function fs_apply_filter( $module_unique_affix, $tag, $value ) {
+        function fs_apply_filter($module_unique_affix, $tag, $value)
+        {
             $args = func_get_args();
 
-            return call_user_func_array( 'apply_filters', array_merge(
-                    array( "fs_{$tag}_{$module_unique_affix}" ),
-                    array_slice( $args, 2 ) )
+            return call_user_func_array(
+                'apply_filters',
+                array_merge(
+                array( "fs_{$tag}_{$module_unique_affix}" ),
+                array_slice($args, 2)
+            )
             );
         }
-    }
\ No newline at end of file
+    }
diff --git a/freemius/includes/fs-essential-functions.php b/freemius/includes/fs-essential-functions.php
index 76a3ef86a6c003787d4b04ffb21832df68a995d9..37a901a8692823f1dd0ffdb5a4e9f1dda5fbd06a 100644
--- a/freemius/includes/fs-essential-functions.php
+++ b/freemius/includes/fs-essential-functions.php
@@ -1,382 +1,392 @@
 <?php
-	/**
-	 * IMPORTANT:
-	 *      This file will be loaded based on the order of the plugins/themes load.
-	 *      If there's a theme and a plugin using Freemius, the plugin's essential
-	 *      file will always load first.
-	 *
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.1.5
-	 */
-
-	if ( ! function_exists( 'fs_normalize_path' ) ) {
-		if ( function_exists( 'wp_normalize_path' ) ) {
-			/**
-			 * Normalize a filesystem path.
-			 *
-			 * Replaces backslashes with forward slashes for Windows systems, and ensures
-			 * no duplicate slashes exist.
-			 *
-			 * @param string $path Path to normalize.
-			 *
-			 * @return string Normalized path.
-			 */
-			function fs_normalize_path( $path ) {
-				return wp_normalize_path( $path );
-			}
-		} else {
-			function fs_normalize_path( $path ) {
-				$path = str_replace( '\\', '/', $path );
-				$path = preg_replace( '|/+|', '/', $path );
-
-				return $path;
-			}
-		}
-	}
-
-    require_once dirname( __FILE__ ) . '/supplements/fs-essential-functions-2.2.1.php';
-
-	#region Core Redirect (copied from BuddyPress) -----------------------------------------
-
-	if ( ! function_exists( 'fs_redirect' ) ) {
-		/**
-		 * Redirects to another page, with a workaround for the IIS Set-Cookie bug.
-		 *
-		 * @link  http://support.microsoft.com/kb/q176113/
-		 * @since 1.5.1
-		 * @uses  apply_filters() Calls 'wp_redirect' hook on $location and $status.
-		 *
-		 * @param string $location The path to redirect to.
-		 * @param bool   $exit     If true, exit after redirect (Since 1.2.1.5).
-		 * @param int    $status   Status code to use.
-		 *
-		 * @return bool False if $location is not set
-		 */
-		function fs_redirect( $location, $exit = true, $status = 302 ) {
-			global $is_IIS;
-
-			$file = '';
-			$line = '';
-			if ( headers_sent($file, $line) ) {
-				if ( WP_FS__DEBUG_SDK && class_exists( 'FS_Admin_Notices' ) ) {
-					$notices = FS_Admin_Notices::instance( 'global' );
-
-					$notices->add( "Freemius failed to redirect the page because the headers have been already sent from line <b><code>{$line}</code></b> in file <b><code>{$file}</code></b>. If it's unexpected, it usually happens due to invalid space and/or EOL character(s).", 'Oops...', 'error' );
-				}
-
-				return false;
-			}
-
-			if ( defined( 'DOING_AJAX' ) ) {
-				// Don't redirect on AJAX calls.
-				return false;
-			}
-
-			if ( ! $location ) // allows the wp_redirect filter to cancel a redirect
-			{
-				return false;
-			}
-
-			$location = fs_sanitize_redirect( $location );
-
-			if ( $is_IIS ) {
-				header( "Refresh: 0;url=$location" );
-			} else {
-				if ( php_sapi_name() != 'cgi-fcgi' ) {
-					status_header( $status );
-				} // This causes problems on IIS and some FastCGI setups
-				header( "Location: $location" );
-			}
-
-			if ( $exit ) {
-				exit();
-			}
-
-			return true;
-		}
-
-		if ( ! function_exists( 'fs_sanitize_redirect' ) ) {
-			/**
-			 * Sanitizes a URL for use in a redirect.
-			 *
-			 * @since 2.3
-			 *
-			 * @param string $location
-			 *
-			 * @return string redirect-sanitized URL
-			 */
-			function fs_sanitize_redirect( $location ) {
-				$location = preg_replace( '|[^a-z0-9-~+_.?#=&;,/:%!]|i', '', $location );
-				$location = fs_kses_no_null( $location );
-
-				// remove %0d and %0a from location
-				$strip = array( '%0d', '%0a' );
-				$found = true;
-				while ( $found ) {
-					$found = false;
-					foreach ( (array) $strip as $val ) {
-						while ( strpos( $location, $val ) !== false ) {
-							$found    = true;
-							$location = str_replace( $val, '', $location );
-						}
-					}
-				}
-
-				return $location;
-			}
-		}
-
-		if ( ! function_exists( 'fs_kses_no_null' ) ) {
-			/**
-			 * Removes any NULL characters in $string.
-			 *
-			 * @since 1.0.0
-			 *
-			 * @param string $string
-			 *
-			 * @return string
-			 */
-			function fs_kses_no_null( $string ) {
-				$string = preg_replace( '/\0+/', '', $string );
-				$string = preg_replace( '/(\\\\0)+/', '', $string );
-
-				return $string;
-			}
-		}
-	}
-
-	#endregion Core Redirect (copied from BuddyPress) -----------------------------------------
-
-	if ( ! function_exists( '__fs' ) ) {
-		global $fs_text_overrides;
-
-		if ( ! isset( $fs_text_overrides ) ) {
-			$fs_text_overrides = array();
-		}
-
-		/**
-		 * Retrieve a translated text by key.
-		 *
-		 * @deprecated Use `fs_text()` instead since methods starting with `__` trigger warnings in Php 7.
+    /**
+     * IMPORTANT:
+     *      This file will be loaded based on the order of the plugins/themes load.
+     *      If there's a theme and a plugin using Freemius, the plugin's essential
+     *      file will always load first.
+     *
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.1.5
+     */
+
+    if (! function_exists('fs_normalize_path')) {
+        if (function_exists('wp_normalize_path')) {
+            /**
+             * Normalize a filesystem path.
+             *
+             * Replaces backslashes with forward slashes for Windows systems, and ensures
+             * no duplicate slashes exist.
+             *
+             * @param string $path Path to normalize.
+             *
+             * @return string Normalized path.
+             */
+            function fs_normalize_path($path)
+            {
+                return wp_normalize_path($path);
+            }
+        } else {
+            function fs_normalize_path($path)
+            {
+                $path = str_replace('\\', '/', $path);
+                $path = preg_replace('|/+|', '/', $path);
+
+                return $path;
+            }
+        }
+    }
+
+    require_once dirname(__FILE__) . '/supplements/fs-essential-functions-2.2.1.php';
+
+    #region Core Redirect (copied from BuddyPress) -----------------------------------------
+
+    if (! function_exists('fs_redirect')) {
+        /**
+         * Redirects to another page, with a workaround for the IIS Set-Cookie bug.
+         *
+         * @link  http://support.microsoft.com/kb/q176113/
+         * @since 1.5.1
+         * @uses  apply_filters() Calls 'wp_redirect' hook on $location and $status.
+         *
+         * @param string $location The path to redirect to.
+         * @param bool   $exit     If true, exit after redirect (Since 1.2.1.5).
+         * @param int    $status   Status code to use.
+         *
+         * @return bool False if $location is not set
+         */
+        function fs_redirect($location, $exit = true, $status = 302)
+        {
+            global $is_IIS;
+
+            $file = '';
+            $line = '';
+            if (headers_sent($file, $line)) {
+                if (WP_FS__DEBUG_SDK && class_exists('FS_Admin_Notices')) {
+                    $notices = FS_Admin_Notices::instance('global');
+
+                    $notices->add("Freemius failed to redirect the page because the headers have been already sent from line <b><code>{$line}</code></b> in file <b><code>{$file}</code></b>. If it's unexpected, it usually happens due to invalid space and/or EOL character(s).", 'Oops...', 'error');
+                }
+
+                return false;
+            }
+
+            if (defined('DOING_AJAX')) {
+                // Don't redirect on AJAX calls.
+                return false;
+            }
+
+            if (! $location) { // allows the wp_redirect filter to cancel a redirect
+                return false;
+            }
+
+            $location = fs_sanitize_redirect($location);
+
+            if ($is_IIS) {
+                header("Refresh: 0;url=$location");
+            } else {
+                if (php_sapi_name() != 'cgi-fcgi') {
+                    status_header($status);
+                } // This causes problems on IIS and some FastCGI setups
+                header("Location: $location");
+            }
+
+            if ($exit) {
+                exit();
+            }
+
+            return true;
+        }
+
+        if (! function_exists('fs_sanitize_redirect')) {
+            /**
+             * Sanitizes a URL for use in a redirect.
+             *
+             * @since 2.3
+             *
+             * @param string $location
+             *
+             * @return string redirect-sanitized URL
+             */
+            function fs_sanitize_redirect($location)
+            {
+                $location = preg_replace('|[^a-z0-9-~+_.?#=&;,/:%!]|i', '', $location);
+                $location = fs_kses_no_null($location);
+
+                // remove %0d and %0a from location
+                $strip = array( '%0d', '%0a' );
+                $found = true;
+                while ($found) {
+                    $found = false;
+                    foreach ((array) $strip as $val) {
+                        while (strpos($location, $val) !== false) {
+                            $found    = true;
+                            $location = str_replace($val, '', $location);
+                        }
+                    }
+                }
+
+                return $location;
+            }
+        }
+
+        if (! function_exists('fs_kses_no_null')) {
+            /**
+             * Removes any NULL characters in $string.
+             *
+             * @since 1.0.0
+             *
+             * @param string $string
+             *
+             * @return string
+             */
+            function fs_kses_no_null($string)
+            {
+                $string = preg_replace('/\0+/', '', $string);
+                $string = preg_replace('/(\\\\0)+/', '', $string);
+
+                return $string;
+            }
+        }
+    }
+
+    #endregion Core Redirect (copied from BuddyPress) -----------------------------------------
+
+    if (! function_exists('__fs')) {
+        global $fs_text_overrides;
+
+        if (! isset($fs_text_overrides)) {
+            $fs_text_overrides = array();
+        }
+
+        /**
+         * Retrieve a translated text by key.
+         *
+         * @deprecated Use `fs_text()` instead since methods starting with `__` trigger warnings in Php 7.
          * @todo Remove this method in the future.
-		 *
-		 * @author     Vova Feldman (@svovaf)
-		 * @since      1.1.4
-		 *
-		 * @param string $key
-		 * @param string $slug
-		 *
-		 * @return string
-		 *
-		 * @global       $fs_text, $fs_text_overrides
-		 */
-		function __fs( $key, $slug = 'freemius' ) {
-            _deprecated_function( __FUNCTION__, '2.0.0', 'fs_text()' );
-
-			global $fs_text,
-			       $fs_module_info_text,
-			       $fs_text_overrides;
-
-			if ( isset( $fs_text_overrides[ $slug ] ) ) {
-				if ( isset( $fs_text_overrides[ $slug ][ $key ] ) ) {
-					return $fs_text_overrides[ $slug ][ $key ];
-				}
-
-				$lower_key = strtolower( $key );
-				if ( isset( $fs_text_overrides[ $slug ][ $lower_key ] ) ) {
-					return $fs_text_overrides[ $slug ][ $lower_key ];
-				}
-			}
-
-			if ( ! isset( $fs_text ) ) {
-				$dir = defined( 'WP_FS__DIR_INCLUDES' ) ?
-					WP_FS__DIR_INCLUDES :
-					dirname( __FILE__ );
-
-				require_once $dir . '/i18n.php';
-			}
-
-			if ( isset( $fs_text[ $key ] ) ) {
-				return $fs_text[ $key ];
-			}
-
-			if ( isset( $fs_module_info_text[ $key ] ) ) {
-				return $fs_module_info_text[ $key ];
-			}
-
-			return $key;
-		}
-
-		/**
-		 * Output a translated text by key.
-		 *
-		 * @deprecated Use `fs_echo()` instead for consistency with `fs_text()`.
-		 *
+         *
+         * @author     Vova Feldman (@svovaf)
+         * @since      1.1.4
+         *
+         * @param string $key
+         * @param string $slug
+         *
+         * @return string
+         *
+         * @global       $fs_text, $fs_text_overrides
+         */
+        function __fs($key, $slug = 'freemius')
+        {
+            _deprecated_function(__FUNCTION__, '2.0.0', 'fs_text()');
+
+            global $fs_text,
+                   $fs_module_info_text,
+                   $fs_text_overrides;
+
+            if (isset($fs_text_overrides[ $slug ])) {
+                if (isset($fs_text_overrides[ $slug ][ $key ])) {
+                    return $fs_text_overrides[ $slug ][ $key ];
+                }
+
+                $lower_key = strtolower($key);
+                if (isset($fs_text_overrides[ $slug ][ $lower_key ])) {
+                    return $fs_text_overrides[ $slug ][ $lower_key ];
+                }
+            }
+
+            if (! isset($fs_text)) {
+                $dir = defined('WP_FS__DIR_INCLUDES') ?
+                    WP_FS__DIR_INCLUDES :
+                    dirname(__FILE__);
+
+                require_once $dir . '/i18n.php';
+            }
+
+            if (isset($fs_text[ $key ])) {
+                return $fs_text[ $key ];
+            }
+
+            if (isset($fs_module_info_text[ $key ])) {
+                return $fs_module_info_text[ $key ];
+            }
+
+            return $key;
+        }
+
+        /**
+         * Output a translated text by key.
+         *
+         * @deprecated Use `fs_echo()` instead for consistency with `fs_text()`.
+         *
          * @todo Remove this method in the future.
          *
-		 * @author     Vova Feldman (@svovaf)
-		 * @since      1.1.4
-		 *
-		 * @param string $key
-		 * @param string $slug
-		 */
-		function _efs( $key, $slug = 'freemius' ) {
-			fs_echo( $key, $slug );
-		}
-	}
-
-	if ( ! function_exists( 'fs_get_ip' ) ) {
-		/**
-		 * Get client IP.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.2
-		 *
-		 * @return string|null
-		 */
-		function fs_get_ip() {
-			$fields = array(
-				'HTTP_CF_CONNECTING_IP',
-				'HTTP_CLIENT_IP',
-				'HTTP_X_FORWARDED_FOR',
-				'HTTP_X_FORWARDED',
-				'HTTP_FORWARDED_FOR',
-				'HTTP_FORWARDED',
-				'REMOTE_ADDR',
-			);
-
-			foreach ( $fields as $ip_field ) {
-				if ( ! empty( $_SERVER[ $ip_field ] ) ) {
-					return $_SERVER[ $ip_field ];
-				}
-			}
-
-			return null;
-		}
-	}
-
-	/**
-	 * Leverage backtrace to find caller plugin main file path.
-	 *
-	 * @author Vova Feldman (@svovaf)
-	 * @since  1.0.6
-	 *
-	 * @return string
-	 */
-	function fs_find_caller_plugin_file() {
-		/**
-		 * All the code below will be executed once on activation.
-		 * If the user changes the main plugin's file name, the file_exists()
-		 * will catch it.
-		 */
-		if ( ! function_exists( 'get_plugins' ) ) {
-			require_once ABSPATH . 'wp-admin/includes/plugin.php';
-		}
-
-		$all_plugins       = fs_get_plugins( true );
-		$all_plugins_paths = array();
-
-		// Get active plugin's main files real full names (might be symlinks).
-		foreach ( $all_plugins as $relative_path => $data ) {
-			$all_plugins_paths[] = fs_normalize_path( realpath( WP_PLUGIN_DIR . '/' . $relative_path ) );
-		}
-
-		$plugin_file = null;
-		for ( $i = 1, $bt = debug_backtrace(), $len = count( $bt ); $i < $len; $i ++ ) {
-			if ( empty( $bt[ $i ]['file'] ) ) {
-				continue;
-			}
-
-			if ( in_array( fs_normalize_path( $bt[ $i ]['file'] ), $all_plugins_paths ) ) {
-				$plugin_file = $bt[ $i ]['file'];
-				break;
-			}
-		}
-
-		if ( is_null( $plugin_file ) ) {
-			// Throw an error to the developer in case of some edge case dev environment.
-			wp_die(
-				'Freemius SDK couldn\'t find the plugin\'s main file. Please contact sdk@freemius.com with the current error.',
-				'Error',
-				array( 'back_link' => true )
-			);
-		}
-
-		return $plugin_file;
-	}
-
-	require_once dirname( __FILE__ ) . '/supplements/fs-essential-functions-1.1.7.1.php';
-
-	/**
-	 * Update SDK newest version reference.
-	 *
-	 * @author Vova Feldman (@svovaf)
-	 * @since  1.1.6
-	 *
-	 * @param string      $sdk_relative_path
-	 * @param string|bool $plugin_file
-	 *
-	 * @global            $fs_active_plugins
-	 */
-	function fs_update_sdk_newest_version( $sdk_relative_path, $plugin_file = false ) {
-		/**
-		 * If there is a plugin running an older version of FS (1.2.1 or below), the `fs_update_sdk_newest_version()`
-		 * function in the older version will be used instead of this one. But since the older version is using
-		 * the `is_plugin_active` function to check if a plugin is active, passing the theme's `plugin_path` to the
-		 * `is_plugin_active` function will return false since the path is not a plugin path, so `in_activation` will be
-		 * `true` for theme modules and the upgrading of the SDK version to 1.2.2 or newer version will work fine.
-		 *
-		 * Future versions that will call this function will use the proper logic here instead of just relying on the
-		 * `is_plugin_active` function to fail for themes.
-		 *
-		 * @author Leo Fajardo (@leorw)
-		 * @since  1.2.2
-		 */
-
-		global $fs_active_plugins;
-
-		$newest_sdk = $fs_active_plugins->plugins[ $sdk_relative_path ];
-
-		if ( ! is_string( $plugin_file ) ) {
-			$plugin_file = plugin_basename( fs_find_caller_plugin_file() );
-		}
-
-		if ( ! isset( $newest_sdk->type ) || 'theme' !== $newest_sdk->type ) {
-            if ( ! function_exists( 'is_plugin_active' ) ) {
+         * @author     Vova Feldman (@svovaf)
+         * @since      1.1.4
+         *
+         * @param string $key
+         * @param string $slug
+         */
+        function _efs($key, $slug = 'freemius')
+        {
+            fs_echo($key, $slug);
+        }
+    }
+
+    if (! function_exists('fs_get_ip')) {
+        /**
+         * Get client IP.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.2
+         *
+         * @return string|null
+         */
+        function fs_get_ip()
+        {
+            $fields = array(
+                'HTTP_CF_CONNECTING_IP',
+                'HTTP_CLIENT_IP',
+                'HTTP_X_FORWARDED_FOR',
+                'HTTP_X_FORWARDED',
+                'HTTP_FORWARDED_FOR',
+                'HTTP_FORWARDED',
+                'REMOTE_ADDR',
+            );
+
+            foreach ($fields as $ip_field) {
+                if (! empty($_SERVER[ $ip_field ])) {
+                    return $_SERVER[ $ip_field ];
+                }
+            }
+
+            return null;
+        }
+    }
+
+    /**
+     * Leverage backtrace to find caller plugin main file path.
+     *
+     * @author Vova Feldman (@svovaf)
+     * @since  1.0.6
+     *
+     * @return string
+     */
+    function fs_find_caller_plugin_file()
+    {
+        /**
+         * All the code below will be executed once on activation.
+         * If the user changes the main plugin's file name, the file_exists()
+         * will catch it.
+         */
+        if (! function_exists('get_plugins')) {
+            require_once ABSPATH . 'wp-admin/includes/plugin.php';
+        }
+
+        $all_plugins       = fs_get_plugins(true);
+        $all_plugins_paths = array();
+
+        // Get active plugin's main files real full names (might be symlinks).
+        foreach ($all_plugins as $relative_path => $data) {
+            $all_plugins_paths[] = fs_normalize_path(realpath(WP_PLUGIN_DIR . '/' . $relative_path));
+        }
+
+        $plugin_file = null;
+        for ($i = 1, $bt = debug_backtrace(), $len = count($bt); $i < $len; $i ++) {
+            if (empty($bt[ $i ]['file'])) {
+                continue;
+            }
+
+            if (in_array(fs_normalize_path($bt[ $i ]['file']), $all_plugins_paths)) {
+                $plugin_file = $bt[ $i ]['file'];
+                break;
+            }
+        }
+
+        if (is_null($plugin_file)) {
+            // Throw an error to the developer in case of some edge case dev environment.
+            wp_die(
+                'Freemius SDK couldn\'t find the plugin\'s main file. Please contact sdk@freemius.com with the current error.',
+                'Error',
+                array( 'back_link' => true )
+            );
+        }
+
+        return $plugin_file;
+    }
+
+    require_once dirname(__FILE__) . '/supplements/fs-essential-functions-1.1.7.1.php';
+
+    /**
+     * Update SDK newest version reference.
+     *
+     * @author Vova Feldman (@svovaf)
+     * @since  1.1.6
+     *
+     * @param string      $sdk_relative_path
+     * @param string|bool $plugin_file
+     *
+     * @global            $fs_active_plugins
+     */
+    function fs_update_sdk_newest_version($sdk_relative_path, $plugin_file = false)
+    {
+        /**
+         * If there is a plugin running an older version of FS (1.2.1 or below), the `fs_update_sdk_newest_version()`
+         * function in the older version will be used instead of this one. But since the older version is using
+         * the `is_plugin_active` function to check if a plugin is active, passing the theme's `plugin_path` to the
+         * `is_plugin_active` function will return false since the path is not a plugin path, so `in_activation` will be
+         * `true` for theme modules and the upgrading of the SDK version to 1.2.2 or newer version will work fine.
+         *
+         * Future versions that will call this function will use the proper logic here instead of just relying on the
+         * `is_plugin_active` function to fail for themes.
+         *
+         * @author Leo Fajardo (@leorw)
+         * @since  1.2.2
+         */
+
+        global $fs_active_plugins;
+
+        $newest_sdk = $fs_active_plugins->plugins[ $sdk_relative_path ];
+
+        if (! is_string($plugin_file)) {
+            $plugin_file = plugin_basename(fs_find_caller_plugin_file());
+        }
+
+        if (! isset($newest_sdk->type) || 'theme' !== $newest_sdk->type) {
+            if (! function_exists('is_plugin_active')) {
                 require_once ABSPATH . 'wp-admin/includes/plugin.php';
             }
 
-            $in_activation = ( ! is_plugin_active( $plugin_file ) );
-		} else {
-			$theme         = wp_get_theme();
-			$in_activation = ( $newest_sdk->plugin_path == $theme->stylesheet );
-		}
-
-		$fs_active_plugins->newest = (object) array(
-			'plugin_path'   => $plugin_file,
-			'sdk_path'      => $sdk_relative_path,
-			'version'       => $newest_sdk->version,
-			'in_activation' => $in_activation,
-			'timestamp'     => time(),
-		);
-
-		// Update DB with latest SDK version and path.
-		update_option( 'fs_active_plugins', $fs_active_plugins );
-	}
-
-	/**
-	 * Reorder the plugins load order so the plugin with the newest Freemius SDK is loaded first.
-	 *
-	 * @author Vova Feldman (@svovaf)
-	 * @since  1.1.6
-	 *
-	 * @return bool Was plugin order changed. Return false if plugin was loaded first anyways.
-	 *
-	 * @global $fs_active_plugins
-	 */
-	function fs_newest_sdk_plugin_first() {
+            $in_activation = (! is_plugin_active($plugin_file));
+        } else {
+            $theme         = wp_get_theme();
+            $in_activation = ($newest_sdk->plugin_path == $theme->stylesheet);
+        }
+
+        $fs_active_plugins->newest = (object) array(
+            'plugin_path'   => $plugin_file,
+            'sdk_path'      => $sdk_relative_path,
+            'version'       => $newest_sdk->version,
+            'in_activation' => $in_activation,
+            'timestamp'     => time(),
+        );
+
+        // Update DB with latest SDK version and path.
+        update_option('fs_active_plugins', $fs_active_plugins);
+    }
+
+    /**
+     * Reorder the plugins load order so the plugin with the newest Freemius SDK is loaded first.
+     *
+     * @author Vova Feldman (@svovaf)
+     * @since  1.1.6
+     *
+     * @return bool Was plugin order changed. Return false if plugin was loaded first anyways.
+     *
+     * @global $fs_active_plugins
+     */
+    function fs_newest_sdk_plugin_first()
+    {
         global $fs_active_plugins;
 
         /**
@@ -387,15 +397,15 @@
 
         $newest_sdk_plugin_path = $fs_active_plugins->newest->plugin_path;
 
-        $active_plugins         = get_option( 'active_plugins', array() );
+        $active_plugins         = get_option('active_plugins', array());
         $updated_active_plugins = array( $newest_sdk_plugin_path );
 
         $plugin_found  = false;
         $is_first_path = true;
 
-        foreach ( $active_plugins as $key => $plugin_path ) {
-            if ( $plugin_path === $newest_sdk_plugin_path ) {
-                if ( $is_first_path ) {
+        foreach ($active_plugins as $key => $plugin_path) {
+            if ($plugin_path === $newest_sdk_plugin_path) {
+                if ($is_first_path) {
                     // if it's the first plugin already, no need to continue
                     return false;
                 }
@@ -408,36 +418,36 @@
 
             $updated_active_plugins[] = $plugin_path;
 
-            if ( $is_first_path ) {
+            if ($is_first_path) {
                 $is_first_path = false;
             }
         }
 
-        if ( $plugin_found ) {
-            update_option( 'active_plugins', $updated_active_plugins );
+        if ($plugin_found) {
+            update_option('active_plugins', $updated_active_plugins);
 
             return true;
         }
 
-        if ( is_multisite() ) {
+        if (is_multisite()) {
             // Plugin is network active.
-            $network_active_plugins = get_site_option( 'active_sitewide_plugins', array() );
+            $network_active_plugins = get_site_option('active_sitewide_plugins', array());
 
-            if ( isset( $network_active_plugins[ $newest_sdk_plugin_path ] ) ) {
-                reset( $network_active_plugins );
-                if ( $newest_sdk_plugin_path === key( $network_active_plugins ) ) {
+            if (isset($network_active_plugins[ $newest_sdk_plugin_path ])) {
+                reset($network_active_plugins);
+                if ($newest_sdk_plugin_path === key($network_active_plugins)) {
                     // Plugin is already activated first on the network level.
                     return false;
                 } else {
                     $time = $network_active_plugins[ $newest_sdk_plugin_path ];
 
                     // Remove plugin from its current position.
-                    unset( $network_active_plugins[ $newest_sdk_plugin_path ] );
+                    unset($network_active_plugins[ $newest_sdk_plugin_path ]);
 
                     // Set it to be included first.
                     $network_active_plugins = array( $newest_sdk_plugin_path => $time ) + $network_active_plugins;
 
-                    update_site_option( 'active_sitewide_plugins', $network_active_plugins );
+                    update_site_option('active_sitewide_plugins', $network_active_plugins);
 
                     return true;
                 }
@@ -447,54 +457,55 @@
         return false;
     }
 
-	/**
-	 * Go over all Freemius SDKs in the system and find and "remember"
-	 * the newest SDK which is associated with an active plugin.
-	 *
-	 * @author Vova Feldman (@svovaf)
-	 * @since  1.1.6
-	 *
-	 * @global $fs_active_plugins
-	 */
-	function fs_fallback_to_newest_active_sdk() {
-		global $fs_active_plugins;
-
-		/**
-		 * @var object $newest_sdk_data
-		 */
-		$newest_sdk_data = null;
-		$newest_sdk_path = null;
-
-		foreach ( $fs_active_plugins->plugins as $sdk_relative_path => $data ) {
-			if ( is_null( $newest_sdk_data ) || version_compare( $data->version, $newest_sdk_data->version, '>' )
-			) {
-				// If plugin inactive or SDK starter file doesn't exist, remove SDK reference.
-				if ( 'plugin' === $data->type ) {
-					$is_module_active = is_plugin_active( $data->plugin_path );
-				} else {
-					$active_theme     = wp_get_theme();
-					$is_module_active = ( $data->plugin_path === $active_theme->get_template() );
-				}
-
-				$is_sdk_exists = file_exists( fs_normalize_path( WP_PLUGIN_DIR . '/' . $sdk_relative_path . '/start.php' ) );
-
-				if ( ! $is_module_active || ! $is_sdk_exists ) {
-					unset( $fs_active_plugins->plugins[ $sdk_relative_path ] );
-
-					// No need to store the data since it will be stored in fs_update_sdk_newest_version()
-					// or explicitly with update_option().
-				} else {
-					$newest_sdk_data = $data;
-					$newest_sdk_path = $sdk_relative_path;
-				}
-			}
-		}
-
-		if ( is_null( $newest_sdk_data ) ) {
-			// Couldn't find any SDK reference.
-			$fs_active_plugins = new stdClass();
-			update_option( 'fs_active_plugins', $fs_active_plugins );
-		} else {
-			fs_update_sdk_newest_version( $newest_sdk_path, $newest_sdk_data->plugin_path );
-		}
-	}
\ No newline at end of file
+    /**
+     * Go over all Freemius SDKs in the system and find and "remember"
+     * the newest SDK which is associated with an active plugin.
+     *
+     * @author Vova Feldman (@svovaf)
+     * @since  1.1.6
+     *
+     * @global $fs_active_plugins
+     */
+    function fs_fallback_to_newest_active_sdk()
+    {
+        global $fs_active_plugins;
+
+        /**
+         * @var object $newest_sdk_data
+         */
+        $newest_sdk_data = null;
+        $newest_sdk_path = null;
+
+        foreach ($fs_active_plugins->plugins as $sdk_relative_path => $data) {
+            if (is_null($newest_sdk_data) || version_compare($data->version, $newest_sdk_data->version, '>')
+            ) {
+                // If plugin inactive or SDK starter file doesn't exist, remove SDK reference.
+                if ('plugin' === $data->type) {
+                    $is_module_active = is_plugin_active($data->plugin_path);
+                } else {
+                    $active_theme     = wp_get_theme();
+                    $is_module_active = ($data->plugin_path === $active_theme->get_template());
+                }
+
+                $is_sdk_exists = file_exists(fs_normalize_path(WP_PLUGIN_DIR . '/' . $sdk_relative_path . '/start.php'));
+
+                if (! $is_module_active || ! $is_sdk_exists) {
+                    unset($fs_active_plugins->plugins[ $sdk_relative_path ]);
+
+                // No need to store the data since it will be stored in fs_update_sdk_newest_version()
+                    // or explicitly with update_option().
+                } else {
+                    $newest_sdk_data = $data;
+                    $newest_sdk_path = $sdk_relative_path;
+                }
+            }
+        }
+
+        if (is_null($newest_sdk_data)) {
+            // Couldn't find any SDK reference.
+            $fs_active_plugins = new stdClass();
+            update_option('fs_active_plugins', $fs_active_plugins);
+        } else {
+            fs_update_sdk_newest_version($newest_sdk_path, $newest_sdk_data->plugin_path);
+        }
+    }
diff --git a/freemius/includes/fs-plugin-info-dialog.php b/freemius/includes/fs-plugin-info-dialog.php
index bcfce99e892a8c77e1a68cda3a8402a03d5b07d3..755b8f594a208fffc28e5cd18adbc66e2339b828 100644
--- a/freemius/includes/fs-plugin-info-dialog.php
+++ b/freemius/includes/fs-plugin-info-dialog.php
@@ -6,7 +6,7 @@
      * @since       1.0.6
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
@@ -16,7 +16,8 @@
      * @author Vova Feldman (@svovaf)
      * @since  1.1.7
      */
-    class FS_Plugin_Info_Dialog {
+    class FS_Plugin_Info_Dialog
+    {
         /**
          * @since 1.1.7
          *
@@ -54,22 +55,25 @@
          */
         private $status;
 
-        function __construct( Freemius $fs ) {
+        public function __construct(Freemius $fs)
+        {
             $this->_fs = $fs;
 
-            $this->_logger = FS_Logger::get_logger( WP_FS__SLUG . '_' . $fs->get_slug() . '_info', WP_FS__DEBUG_SDK, WP_FS__ECHO_DEBUG_SDK );
+            $this->_logger = FS_Logger::get_logger(WP_FS__SLUG . '_' . $fs->get_slug() . '_info', WP_FS__DEBUG_SDK, WP_FS__ECHO_DEBUG_SDK);
 
             // Remove default plugin information action.
-            remove_all_actions( 'install_plugins_pre_plugin-information' );
+            remove_all_actions('install_plugins_pre_plugin-information');
 
             // Override action with custom plugins function for add-ons.
-            add_action( 'install_plugins_pre_plugin-information', array( &$this, 'install_plugin_information' ) );
+            add_action('install_plugins_pre_plugin-information', array( &$this, 'install_plugin_information' ));
 
             // Override request for plugin information for Add-ons.
             add_filter(
                 'fs_plugins_api',
                 array( &$this, '_get_addon_info_filter' ),
-                WP_FS__DEFAULT_PRIORITY, 3 );
+                WP_FS__DEFAULT_PRIORITY,
+                3
+            );
         }
 
         /**
@@ -84,26 +88,27 @@
          *
          * @return array|null
          */
-        function _get_addon_info_filter( $data, $action = '', $args = null ) {
+        public function _get_addon_info_filter($data, $action = '', $args = null)
+        {
             $this->_logger->entrance();
 
-            $parent_plugin_id = fs_request_get( 'parent_plugin_id', $this->_fs->get_id() );
+            $parent_plugin_id = fs_request_get('parent_plugin_id', $this->_fs->get_id());
 
-            if ( $this->_fs->get_id() != $parent_plugin_id ||
-                 ( 'plugin_information' !== $action ) ||
-                 ! isset( $args->slug )
+            if ($this->_fs->get_id() != $parent_plugin_id ||
+                 ('plugin_information' !== $action) ||
+                 ! isset($args->slug)
             ) {
                 return $data;
             }
 
             // Find add-on by slug.
-            $selected_addon = $this->_fs->get_addon_by_slug( $args->slug, WP_FS__DEV_MODE );
+            $selected_addon = $this->_fs->get_addon_by_slug($args->slug, WP_FS__DEV_MODE);
 
-            if ( false === $selected_addon ) {
+            if (false === $selected_addon) {
                 return $data;
             }
 
-            if ( ! isset( $selected_addon->info ) ) {
+            if (! isset($selected_addon->info)) {
                 // Setup some default info.
                 $selected_addon->info                  = new stdClass();
                 $selected_addon->info->selling_point_0 = 'Selling Point 1';
@@ -112,7 +117,7 @@
                 $selected_addon->info->description     = '<p>Tell your users all about your add-on</p>';
             }
 
-            fs_enqueue_local_style( 'fs_addons', '/admin/add-ons.css' );
+            fs_enqueue_local_style('fs_addons', '/admin/add-ons.css');
 
             $data = $args;
 
@@ -124,33 +129,33 @@
             $has_features = false;
             $plans        = false;
 
-            $result = $this->_fs->get_api_plugin_scope()->get( $this->_fs->add_show_pending( "/addons/{$selected_addon->id}/pricing.json?type=visible" ) );
+            $result = $this->_fs->get_api_plugin_scope()->get($this->_fs->add_show_pending("/addons/{$selected_addon->id}/pricing.json?type=visible"));
 
-            if ( ! isset( $result->error ) ) {
+            if (! isset($result->error)) {
                 $plans = $result->plans;
 
-                if ( is_array( $plans ) ) {
-                    for ( $i = 0, $len = count( $plans ); $i < $len; $i ++ ) {
-                        $pricing  = isset( $plans[ $i ]->pricing ) ? $plans[ $i ]->pricing : null;
-                        $features = isset( $plans[ $i ]->features ) ? $plans[ $i ]->features : null;
+                if (is_array($plans)) {
+                    for ($i = 0, $len = count($plans); $i < $len; $i ++) {
+                        $pricing  = isset($plans[ $i ]->pricing) ? $plans[ $i ]->pricing : null;
+                        $features = isset($plans[ $i ]->features) ? $plans[ $i ]->features : null;
 
-                        $plans[ $i ] = new FS_Plugin_Plan( $plans[ $i ] );
+                        $plans[ $i ] = new FS_Plugin_Plan($plans[ $i ]);
                         $plan        = $plans[ $i ];
 
-                        if ( 'free' == $plans[ $i ]->name ||
-                             ! is_array( $pricing ) ||
-                             0 == count( $pricing )
+                        if ('free' == $plans[ $i ]->name ||
+                             ! is_array($pricing) ||
+                             0 == count($pricing)
                         ) {
                             $has_free_plan = true;
                         }
 
-                        if ( is_array( $pricing ) && 0 < count( $pricing ) ) {
+                        if (is_array($pricing) && 0 < count($pricing)) {
                             $filtered_pricing = array();
 
-                            foreach ( $pricing as $prices ) {
-                                $prices = new FS_Pricing( $prices );
+                            foreach ($pricing as $prices) {
+                                $prices = new FS_Pricing($prices);
 
-                                if ( ! $prices->is_usd() ) {
+                                if (! $prices->is_usd()) {
                                     /**
                                      * Skip non-USD pricing.
                                      *
@@ -160,15 +165,15 @@
                                     continue;
                                 }
 
-                                if ( ( $prices->has_monthly() && $prices->monthly_price > 1.0 ) ||
-                                     ( $prices->has_annual() && $prices->annual_price > 1.0 ) ||
-                                     ( $prices->has_lifetime() && $prices->lifetime_price > 1.0 )
+                                if (($prices->has_monthly() && $prices->monthly_price > 1.0) ||
+                                     ($prices->has_annual() && $prices->annual_price > 1.0) ||
+                                     ($prices->has_lifetime() && $prices->lifetime_price > 1.0)
                                 ) {
                                     $filtered_pricing[] = $prices;
                                 }
                             }
 
-                            if ( ! empty( $filtered_pricing ) ) {
+                            if (! empty($filtered_pricing)) {
                                 $has_paid_plan = true;
 
                                 $plan->pricing = $filtered_pricing;
@@ -177,7 +182,7 @@
                             }
                         }
 
-                        if ( is_array( $features ) && 0 < count( $features ) ) {
+                        if (is_array($features) && 0 < count($features)) {
                             $plan->features = $features;
 
                             $has_features = true;
@@ -188,9 +193,10 @@
 
             $latest = null;
 
-            if ( ! $has_paid_plan && $selected_addon->is_wp_org_compliant ) {
+            if (! $has_paid_plan && $selected_addon->is_wp_org_compliant) {
                 $repo_data = FS_Plugin_Updater::_fetch_plugin_info_from_repository(
-                    'plugin_information', (object) array(
+                    'plugin_information',
+                    (object) array(
                     'slug'   => $selected_addon->slug,
                     'is_ssl' => is_ssl(),
                     'fields' => array(
@@ -199,9 +205,10 @@
                         'downloaded'      => false,
                         'active_installs' => true
                     )
-                ) );
+                )
+                );
 
-                if ( ! empty( $repo_data ) ) {
+                if (! empty($repo_data)) {
                     $data                 = $repo_data;
                     $data->wp_org_missing = false;
                 } else {
@@ -212,24 +219,24 @@
                     $data->wp_org_missing = true;
                 }
 
-                $data->fs_missing = ( ! $has_free_plan || $data->wp_org_missing );
+                $data->fs_missing = (! $has_free_plan || $data->wp_org_missing);
             } else {
                 $data->has_purchased_license = false;
                 $data->wp_org_missing        = false;
 
                 $fs_addon              = null;
                 $current_addon_version = false;
-                if ( $this->_fs->is_addon_activated( $selected_addon->id ) ) {
-                    $fs_addon              = $this->_fs->get_addon_instance( $selected_addon->id );
+                if ($this->_fs->is_addon_activated($selected_addon->id)) {
+                    $fs_addon              = $this->_fs->get_addon_instance($selected_addon->id);
                     $current_addon_version = $fs_addon->get_plugin_version();
-                } else if ( $this->_fs->is_addon_installed( $selected_addon->id ) ) {
+                } elseif ($this->_fs->is_addon_installed($selected_addon->id)) {
                     $addon_plugin_data = get_plugin_data(
-                        ( WP_PLUGIN_DIR . '/' . $this->_fs->get_addon_basename( $selected_addon->id ) ),
+                        (WP_PLUGIN_DIR . '/' . $this->_fs->get_addon_basename($selected_addon->id)),
                         false,
                         false
                     );
 
-                    if ( ! empty( $addon_plugin_data ) ) {
+                    if (! empty($addon_plugin_data)) {
                         $current_addon_version = $addon_plugin_data['Version'];
                     }
                 }
@@ -242,22 +249,22 @@
                     $current_addon_version
                 );
 
-                if ( $has_paid_plan ) {
-                    $blog_id           = fs_request_get( 'fs_blog_id' );
-                    $has_valid_blog_id = is_numeric( $blog_id );
+                if ($has_paid_plan) {
+                    $blog_id           = fs_request_get('fs_blog_id');
+                    $has_valid_blog_id = is_numeric($blog_id);
 
-                    if ( $has_valid_blog_id ) {
-                        switch_to_blog( $blog_id );
+                    if ($has_valid_blog_id) {
+                        switch_to_blog($blog_id);
                     }
 
                     $data->checkout_link = $this->_fs->checkout_url(
                         WP_FS__PERIOD_ANNUALLY,
                         false,
                         array(),
-                        ( $has_valid_blog_id ? false : null )
+                        ($has_valid_blog_id ? false : null)
                     );
 
-                    if ( $has_valid_blog_id ) {
+                    if ($has_valid_blog_id) {
                         restore_current_blog();
                     }
                 }
@@ -268,24 +275,24 @@
                  * @author Leo Fajardo (@leorw)
                  * @since 2.4.1
                  */
-                if ( is_object( $fs_addon ) ) {
+                if (is_object($fs_addon)) {
                     $data->has_purchased_license = $fs_addon->has_active_valid_license();
                 } else {
                     $account_addons = $this->_fs->get_account_addons();
-                    if ( ! empty( $account_addons ) && in_array( $selected_addon->id, $account_addons ) ) {
+                    if (! empty($account_addons) && in_array($selected_addon->id, $account_addons)) {
                         $data->has_purchased_license = true;
                     }
                 }
 
-                if ( $has_free_plan || $data->has_purchased_license ) {
-                    $data->download_link = $this->_fs->_get_latest_download_local_url( $selected_addon->id );
+                if ($has_free_plan || $data->has_purchased_license) {
+                    $data->download_link = $this->_fs->_get_latest_download_local_url($selected_addon->id);
                 }
 
                 $data->fs_missing = (
                     false === $latest &&
                     (
-                        empty( $selected_addon->premium_releases_count ) ||
-                        ! ( $selected_addon->premium_releases_count > 0 )
+                        empty($selected_addon->premium_releases_count) ||
+                        ! ($selected_addon->premium_releases_count > 0)
                     )
                 );
 
@@ -293,26 +300,26 @@
                 $plugin_local_data = $this->_fs->get_plugin_data();
                 $data->author      = $plugin_local_data['Author'];
 
-                if ( ! empty( $selected_addon->info->banner_url ) ) {
+                if (! empty($selected_addon->info->banner_url)) {
                     $data->banners = array(
                         'low' => $selected_addon->info->banner_url,
                     );
                 }
 
-                if ( ! empty( $selected_addon->info->screenshots ) ) {
+                if (! empty($selected_addon->info->screenshots)) {
                     $view_vars                     = array(
                         'screenshots' => $selected_addon->info->screenshots,
                         'plugin'      => $selected_addon,
                     );
-                    $data->sections['screenshots'] = fs_get_template( '/plugin-info/screenshots.php', $view_vars );
+                    $data->sections['screenshots'] = fs_get_template('/plugin-info/screenshots.php', $view_vars);
                 }
 
-                if ( is_object( $latest ) ) {
+                if (is_object($latest)) {
                     $data->version      = $latest->version;
                     $data->last_updated = $latest->created;
                     $data->requires     = $latest->requires_platform_version;
                     $data->tested       = $latest->tested_up_to_version;
-                } else if ( ! empty( $current_addon_version ) ) {
+                } elseif (! empty($current_addon_version)) {
                     $data->version = $current_addon_version;
                 } else {
                     // Add dummy version.
@@ -325,27 +332,27 @@
             $data->name = $selected_addon->title;
             $view_vars  = array( 'plugin' => $selected_addon );
 
-            if ( is_object( $latest ) && isset( $latest->readme ) && is_object( $latest->readme ) ) {
+            if (is_object($latest) && isset($latest->readme) && is_object($latest->readme)) {
                 $latest_version_readme_data = $latest->readme;
-                if ( isset( $latest_version_readme_data->sections ) ) {
+                if (isset($latest_version_readme_data->sections)) {
                     $data->sections = (array) $latest_version_readme_data->sections;
                 } else {
                     $data->sections = array();
                 }
             }
 
-            $data->sections['description'] = fs_get_template( '/plugin-info/description.php', $view_vars );
+            $data->sections['description'] = fs_get_template('/plugin-info/description.php', $view_vars);
 
-            if ( $has_pricing ) {
+            if ($has_pricing) {
                 // Add plans to data.
                 $data->plans = $plans;
 
-                if ( $has_features ) {
+                if ($has_features) {
                     $view_vars                  = array(
                         'plans'  => $plans,
                         'plugin' => $selected_addon,
                     );
-                    $data->sections['features'] = fs_get_template( '/plugin-info/features.php', $view_vars );
+                    $data->sections['features'] = fs_get_template('/plugin-info/features.php', $view_vars);
                 }
             }
 
@@ -356,7 +363,7 @@
             $data->premium_slug        = $selected_addon->premium_slug;
             $data->addon_id            = $selected_addon->id;
 
-            if ( ! isset( $data->has_purchased_license ) ) {
+            if (! isset($data->has_purchased_license)) {
                 $data->has_purchased_license = false;
             }
 
@@ -371,29 +378,30 @@
          *
          * @return string
          */
-        private function get_billing_cycle( FS_Plugin_Plan $plan ) {
+        private function get_billing_cycle(FS_Plugin_Plan $plan)
+        {
             $billing_cycle = null;
 
-            if ( 1 === count( $plan->pricing ) && 1 == $plan->pricing[0]->licenses ) {
+            if (1 === count($plan->pricing) && 1 == $plan->pricing[0]->licenses) {
                 $pricing = $plan->pricing[0];
-                if ( isset( $pricing->annual_price ) ) {
+                if (isset($pricing->annual_price)) {
                     $billing_cycle = 'annual';
-                } else if ( isset( $pricing->monthly_price ) ) {
+                } elseif (isset($pricing->monthly_price)) {
                     $billing_cycle = 'monthly';
-                } else if ( isset( $pricing->lifetime_price ) ) {
+                } elseif (isset($pricing->lifetime_price)) {
                     $billing_cycle = 'lifetime';
                 }
             } else {
-                foreach ( $plan->pricing as $pricing ) {
-                    if ( isset( $pricing->annual_price ) ) {
+                foreach ($plan->pricing as $pricing) {
+                    if (isset($pricing->annual_price)) {
                         $billing_cycle = 'annual';
-                    } else if ( isset( $pricing->monthly_price ) ) {
+                    } elseif (isset($pricing->monthly_price)) {
                         $billing_cycle = 'monthly';
-                    } else if ( isset( $pricing->lifetime_price ) ) {
+                    } elseif (isset($pricing->lifetime_price)) {
                         $billing_cycle = 'lifetime';
                     }
 
-                    if ( ! is_null( $billing_cycle ) ) {
+                    if (! is_null($billing_cycle)) {
                         break;
                     }
                 }
@@ -411,13 +419,14 @@
          *
          * @return float|null|string
          */
-        private function get_price_tag( FS_Plugin_Plan $plan, FS_Pricing $pricing ) {
+        private function get_price_tag(FS_Plugin_Plan $plan, FS_Pricing $pricing)
+        {
             $price_tag = '';
-            if ( isset( $pricing->annual_price ) ) {
-                $price_tag = $pricing->annual_price . ( $plan->is_block_features ? ' / year' : '' );
-            } else if ( isset( $pricing->monthly_price ) ) {
+            if (isset($pricing->annual_price)) {
+                $price_tag = $pricing->annual_price . ($plan->is_block_features ? ' / year' : '');
+            } elseif (isset($pricing->monthly_price)) {
                 $price_tag = $pricing->monthly_price . ' / mo';
-            } else if ( isset( $pricing->lifetime_price ) ) {
+            } elseif (isset($pricing->lifetime_price)) {
                 $price_tag = $pricing->lifetime_price;
             }
 
@@ -433,15 +442,16 @@
          *
          * @return string
          */
-        private function get_actions_dropdown( $api, $plan = null ) {
-            $this->actions = isset( $this->actions ) ?
+        private function get_actions_dropdown($api, $plan = null)
+        {
+            $this->actions = isset($this->actions) ?
                 $this->actions :
-                $this->get_plugin_actions( $api );
+                $this->get_plugin_actions($api);
 
             $actions = $this->actions;
 
-            $checkout_cta = $this->get_checkout_cta( $api, $plan );
-            if ( ! empty( $checkout_cta ) ) {
+            $checkout_cta = $this->get_checkout_cta($api, $plan);
+            if (! empty($checkout_cta)) {
                 /**
                  * If there's no license yet, make the checkout button the main CTA. Otherwise, make it the last item in
                  * the actions dropdown.
@@ -449,25 +459,23 @@
                  * @author Leo Fajardo (@leorw)
                  * @since 2.3.0
                  */
-                if ( ! $api->has_purchased_license ) {
-                    array_unshift( $actions, $checkout_cta );
+                if (! $api->has_purchased_license) {
+                    array_unshift($actions, $checkout_cta);
                 } else {
                     $actions[] = $checkout_cta;
                 }
             }
 
-            if ( empty( $actions ) ) {
+            if (empty($actions)) {
                 return '';
             }
 
-            $total_actions = count( $actions );
-            if ( 1 === $total_actions ) {
+            $total_actions = count($actions);
+            if (1 === $total_actions) {
                 return $actions[0];
             }
 
-            ob_start();
-
-            ?>
+            ob_start(); ?>
             <div class="fs-cta fs-dropdown">
                 <div class="button-group">
                     <?php
@@ -476,8 +484,8 @@
                     <div class="button button-primary fs-dropdown-arrow-button">
                         <span class="fs-dropdown-arrow"></span>
                         <ul class="fs-dropdown-list" style="display: none">
-                            <?php for ( $i = 1; $i < $total_actions; $i ++ ) : ?>
-                                <li><?php echo str_replace( 'button button-primary', '', $actions[ $i ] ) ?></li>
+                            <?php for ($i = 1; $i < $total_actions; $i ++) : ?>
+                                <li><?php echo str_replace('button button-primary', '', $actions[ $i ]) ?></li>
                             <?php endfor ?>
                         </ul>
                     </div>
@@ -497,54 +505,56 @@
          *
          * @return string
          */
-        private function get_checkout_cta( $api, $plan = null ) {
-            if ( empty( $api->checkout_link ) ||
-                 ! isset( $api->plans ) ||
-                 ! is_array( $api->plans ) ||
-                 0 == count( $api->plans )
+        private function get_checkout_cta($api, $plan = null)
+        {
+            if (empty($api->checkout_link) ||
+                 ! isset($api->plans) ||
+                 ! is_array($api->plans) ||
+                 0 == count($api->plans)
             ) {
                 return '';
             }
 
-            if ( is_null( $plan ) ) {
-                foreach ( $api->plans as $p ) {
-                    if ( ! empty( $p->pricing ) ) {
+            if (is_null($plan)) {
+                foreach ($api->plans as $p) {
+                    if (! empty($p->pricing)) {
                         $plan = $p;
                         break;
                     }
                 }
             }
 
-            $blog_id           = fs_request_get( 'fs_blog_id' );
-            $has_valid_blog_id = is_numeric( $blog_id );
+            $blog_id           = fs_request_get('fs_blog_id');
+            $has_valid_blog_id = is_numeric($blog_id);
 
-            if ( $has_valid_blog_id ) {
-                switch_to_blog( $blog_id );
+            if ($has_valid_blog_id) {
+                switch_to_blog($blog_id);
             }
 
             $addon_checkout_url = $this->_fs->addon_checkout_url(
                 $plan->plugin_id,
                 $plan->pricing[0]->id,
-                $this->get_billing_cycle( $plan ),
+                $this->get_billing_cycle($plan),
                 $plan->has_trial(),
-                ( $has_valid_blog_id ? false : null )
+                ($has_valid_blog_id ? false : null)
             );
 
-            if ( $has_valid_blog_id ) {
+            if ($has_valid_blog_id) {
                 restore_current_blog();
             }
 
             return '<a class="button button-primary fs-checkout-button right" href="' . $addon_checkout_url . '" target="_parent">' .
-                   esc_html( ! $plan->has_trial() ?
+                   esc_html(
+                       ! $plan->has_trial() ?
                        (
                            $api->has_purchased_license ?
-                               fs_text_inline( 'Purchase More', 'purchase-more', $api->slug ) :
-                               fs_text_x_inline( 'Purchase', 'verb', 'purchase', $api->slug )
+                               fs_text_inline('Purchase More', 'purchase-more', $api->slug) :
+                               fs_text_x_inline('Purchase', 'verb', 'purchase', $api->slug)
                        ) :
                        sprintf(
                        /* translators: %s: N-days trial */
-                           fs_text_inline( 'Start my free %s', 'start-free-x', $api->slug ),
-                           $this->get_trial_period( $plan )
+                           fs_text_inline('Start my free %s', 'start-free-x', $api->slug),
+                           $this->get_trial_period($plan)
                        )
                    ) .
                    '</a>';
@@ -558,32 +568,33 @@
          *
          * @return string[]
          */
-        private function get_plugin_actions( $api ) {
-            $this->status = isset( $this->status ) ?
+        private function get_plugin_actions($api)
+        {
+            $this->status = isset($this->status) ?
                 $this->status :
-                install_plugin_install_status( $api );
+                install_plugin_install_status($api);
 
-            $is_update_available = ( 'update_available' === $this->status['status'] );
+            $is_update_available = ('update_available' === $this->status['status']);
 
-            if ( $is_update_available && empty( $this->status['url'] ) ) {
+            if ($is_update_available && empty($this->status['url'])) {
                 return array();
             }
 
-            $blog_id = fs_request_get( 'fs_blog_id' );
+            $blog_id = fs_request_get('fs_blog_id');
 
-            $active_plugins_directories_map = Freemius::get_active_plugins_directories_map( $blog_id );
+            $active_plugins_directories_map = Freemius::get_active_plugins_directories_map($blog_id);
 
             $actions = array();
 
-            $is_addon_activated = $this->_fs->is_addon_activated( $api->slug );
+            $is_addon_activated = $this->_fs->is_addon_activated($api->slug);
             $fs_addon           = null;
 
             $is_free_installed    = null;
             $is_premium_installed = null;
 
-            $has_installed_version = ( 'install' !== $this->status['status'] );
+            $has_installed_version = ('install' !== $this->status['status']);
 
-            if ( ! $api->has_paid_plan && ! $api->has_purchased_license ) {
+            if (! $api->has_paid_plan && ! $api->has_purchased_license) {
                 /**
                  * Free-only add-on.
                  *
@@ -592,7 +603,7 @@
                  */
                 $is_free_installed    = $has_installed_version;
                 $is_premium_installed = false;
-            } else if ( ! $api->has_free_plan ) {
+            } elseif (! $api->has_free_plan) {
                 /**
                  * Premium-only add-on.
                  *
@@ -608,52 +619,52 @@
                  * @author Leo Fajardo (@leorw)
                  * @since 2.3.0
                  */
-                if ( ! $has_installed_version ) {
+                if (! $has_installed_version) {
                     $is_free_installed    = false;
                     $is_premium_installed = false;
                 } else {
                     $fs_addon = $is_addon_activated ?
-                        $this->_fs->get_addon_instance( $api->slug ) :
+                        $this->_fs->get_addon_instance($api->slug) :
                         null;
 
-                    if ( is_object( $fs_addon ) ) {
-                        if ( $fs_addon->is_premium() ) {
+                    if (is_object($fs_addon)) {
+                        if ($fs_addon->is_premium()) {
                             $is_premium_installed = true;
                         } else {
                             $is_free_installed = true;
                         }
                     }
 
-                    if ( is_null( $is_free_installed ) ) {
-                        $is_free_installed = file_exists( fs_normalize_path( WP_PLUGIN_DIR . "/{$api->slug}/{$api->slug}.php" ) );
-                        if ( ! $is_free_installed ) {
+                    if (is_null($is_free_installed)) {
+                        $is_free_installed = file_exists(fs_normalize_path(WP_PLUGIN_DIR . "/{$api->slug}/{$api->slug}.php"));
+                        if (! $is_free_installed) {
                             /**
                              * Check if there's a plugin installed in a directory named `$api->slug`.
                              *
                              * @author Leo Fajardo (@leorw)
                              * @since 2.3.0
                              */
-                            $installed_plugins = get_plugins( '/' . $api->slug );
-                            $is_free_installed = ( ! empty( $installed_plugins ) );
+                            $installed_plugins = get_plugins('/' . $api->slug);
+                            $is_free_installed = (! empty($installed_plugins));
                         }
                     }
 
-                    if ( is_null( $is_premium_installed ) ) {
-                        $is_premium_installed = file_exists( fs_normalize_path( WP_PLUGIN_DIR . "/{$api->premium_slug}/{$api->slug}.php" ) );
-                        if ( ! $is_premium_installed ) {
+                    if (is_null($is_premium_installed)) {
+                        $is_premium_installed = file_exists(fs_normalize_path(WP_PLUGIN_DIR . "/{$api->premium_slug}/{$api->slug}.php"));
+                        if (! $is_premium_installed) {
                             /**
                              * Check if there's a plugin installed in a directory named `$api->premium_slug`.
                              *
                              * @author Leo Fajardo (@leorw)
                              * @since 2.3.0
                              */
-                            $installed_plugins    = get_plugins( '/' . $api->premium_slug );
-                            $is_premium_installed = ( ! empty( $installed_plugins ) );
+                            $installed_plugins    = get_plugins('/' . $api->premium_slug);
+                            $is_premium_installed = (! empty($installed_plugins));
                         }
                     }
                 }
 
-                $has_installed_version = ( $is_free_installed || $is_premium_installed );
+                $has_installed_version = ($is_free_installed || $is_premium_installed);
             }
 
             $this->status['is_free_installed']    = $is_free_installed;
@@ -668,12 +679,12 @@
             $can_download_premium_version       = false;
             $can_activate_premium_version       = false;
 
-            if ( ! $api->has_purchased_license ) {
-                if ( $api->has_free_plan ) {
-                    if ( $has_installed_version ) {
-                        if ( $is_update_available ) {
+            if (! $api->has_purchased_license) {
+                if ($api->has_free_plan) {
+                    if ($has_installed_version) {
+                        if ($is_update_available) {
                             $can_install_free_version_update = true;
-                        } else if ( ! $is_premium_installed && ! isset( $active_plugins_directories_map[ dirname( $this->status['file'] ) ] ) ) {
+                        } elseif (! $is_premium_installed && ! isset($active_plugins_directories_map[ dirname($this->status['file']) ])) {
                             $can_activate_free_version = true;
                         }
                     } else {
@@ -689,24 +700,24 @@
                     }
                 }
             } else {
-                if ( ! is_object( $fs_addon ) && $is_addon_activated ) {
-                    $fs_addon = $this->_fs->get_addon_instance( $api->slug );
+                if (! is_object($fs_addon) && $is_addon_activated) {
+                    $fs_addon = $this->_fs->get_addon_instance($api->slug);
                 }
 
                 $can_download_premium_version = true;
 
-                if ( ! isset( $active_plugins_directories_map[ dirname( $this->status['file'] ) ] ) ) {
-                    if ( $is_premium_installed ) {
-                        $can_activate_premium_version = ( ! $is_addon_activated || ! $fs_addon->is_premium() );
-                    } else if ( $is_free_installed ) {
-                        $can_activate_free_version = ( ! $is_addon_activated );
+                if (! isset($active_plugins_directories_map[ dirname($this->status['file']) ])) {
+                    if ($is_premium_installed) {
+                        $can_activate_premium_version = (! $is_addon_activated || ! $fs_addon->is_premium());
+                    } elseif ($is_free_installed) {
+                        $can_activate_free_version = (! $is_addon_activated);
                     }
                 }
 
-                if ( $this->_fs->is_premium() || ! $this->_fs->is_org_repo_compliant() ) {
-                    if ( $is_update_available ) {
+                if ($this->_fs->is_premium() || ! $this->_fs->is_org_repo_compliant()) {
+                    if ($is_update_available) {
                         $can_install_premium_version_update = true;
-                    } else if ( ! $is_premium_installed ) {
+                    } elseif (! $is_premium_installed) {
                         $can_install_premium_version = true;
                     }
                 }
@@ -716,7 +727,7 @@
                 $can_install_premium_version ||
                 $can_install_premium_version_update
             ) {
-                if ( is_numeric( $blog_id ) ) {
+                if (is_numeric($blog_id)) {
                     /**
                      * Replace the network status URL with a blog admin–based status URL if the `Add-Ons` page is loaded
                      * from a specific blog admin page (when `fs_blog_id` is valid) in order for plugin installation/update
@@ -725,7 +736,7 @@
                      * @author Leo Fajardo (@leorw)
                      * @since 2.3.0
                      */
-                    $this->status['url'] = self::get_blog_status_url( $blog_id, $this->status['url'], $this->status['status'] );
+                    $this->status['url'] = self::get_blog_status_url($blog_id, $this->status['url'], $this->status['status']);
                 }
 
                 /**
@@ -735,24 +746,24 @@
                  * @author Leo Fajardo (@leorw)
                  * @since 2.3.0
                  */
-                $this->status['url'] = str_replace( '?', '?fs_allow_updater_and_dialog=true&amp;', $this->status['url'] );
+                $this->status['url'] = str_replace('?', '?fs_allow_updater_and_dialog=true&amp;', $this->status['url']);
             }
 
-            if ( $can_install_free_version_update || $can_install_premium_version_update ) {
+            if ($can_install_free_version_update || $can_install_premium_version_update) {
                 $actions[] = $this->get_cta(
-                    ( $can_install_free_version_update ?
-                        fs_esc_html_inline( 'Install Free Version Update Now', 'install-free-version-update-now', $api->slug ) :
-                        fs_esc_html_inline( 'Install Update Now', 'install-update-now', $api->slug ) ),
+                    ($can_install_free_version_update ?
+                        fs_esc_html_inline('Install Free Version Update Now', 'install-free-version-update-now', $api->slug) :
+                        fs_esc_html_inline('Install Update Now', 'install-update-now', $api->slug)),
                     true,
                     false,
                     $this->status['url'],
                     '_parent'
                 );
-            } else if ( $can_install_free_version || $can_install_premium_version ) {
+            } elseif ($can_install_free_version || $can_install_premium_version) {
                 $actions[] = $this->get_cta(
-                    ( $can_install_free_version ?
-                        fs_esc_html_inline( 'Install Free Version Now', 'install-free-version-now', $api->slug ) :
-                        fs_esc_html_inline( 'Install Now', 'install-now', $api->slug ) ),
+                    ($can_install_free_version ?
+                        fs_esc_html_inline('Install Free Version Now', 'install-free-version-now', $api->slug) :
+                        fs_esc_html_inline('Install Now', 'install-now', $api->slug)),
                     true,
                     false,
                     $this->status['url'],
@@ -763,41 +774,41 @@
             $download_latest_action = '';
 
             if (
-                ! empty( $api->download_link ) &&
-                ( $can_download_free_version || $can_download_premium_version )
+                ! empty($api->download_link) &&
+                ($can_download_free_version || $can_download_premium_version)
             ) {
                 $download_latest_action = $this->get_cta(
-                    ( $can_download_free_version ?
-                        fs_esc_html_x_inline( 'Download Latest Free Version', 'as download latest version', 'download-latest-free-version', $api->slug ) :
-                        fs_esc_html_x_inline( 'Download Latest', 'as download latest version', 'download-latest', $api->slug ) ),
+                    ($can_download_free_version ?
+                        fs_esc_html_x_inline('Download Latest Free Version', 'as download latest version', 'download-latest-free-version', $api->slug) :
+                        fs_esc_html_x_inline('Download Latest', 'as download latest version', 'download-latest', $api->slug)),
                     true,
                     false,
-                    esc_url( $api->download_link )
+                    esc_url($api->download_link)
                 );
             }
 
-            if ( ! $can_activate_free_version && ! $can_activate_premium_version ) {
-                if ( ! empty( $download_latest_action ) ) {
+            if (! $can_activate_free_version && ! $can_activate_premium_version) {
+                if (! empty($download_latest_action)) {
                     $actions[] = $download_latest_action;
                 }
             } else {
                 $activate_action = sprintf(
                     '<a class="button button-primary edit" href="%s" title="%s" target="_parent">%s</a>',
-                    wp_nonce_url( ( is_numeric( $blog_id ) ? trailingslashit( get_admin_url( $blog_id ) ) : '' ) . 'plugins.php?action=activate&amp;plugin=' . $this->status['file'], 'activate-plugin_' . $this->status['file'] ),
-                    fs_esc_attr_inline( 'Activate this add-on', 'activate-this-addon', $api->slug ),
+                    wp_nonce_url((is_numeric($blog_id) ? trailingslashit(get_admin_url($blog_id)) : '') . 'plugins.php?action=activate&amp;plugin=' . $this->status['file'], 'activate-plugin_' . $this->status['file']),
+                    fs_esc_attr_inline('Activate this add-on', 'activate-this-addon', $api->slug),
                     $can_activate_free_version ?
-                        fs_text_inline( 'Activate Free Version', 'activate-free', $api->slug ) :
-                        fs_text_inline( 'Activate', 'activate', $api->slug )
+                        fs_text_inline('Activate Free Version', 'activate-free', $api->slug) :
+                        fs_text_inline('Activate', 'activate', $api->slug)
                 );
 
-                if ( ! $can_download_premium_version && ! empty( $download_latest_action ) ) {
+                if (! $can_download_premium_version && ! empty($download_latest_action)) {
                     $actions[] = $download_latest_action;
 
                     $download_latest_action = '';
                 }
 
-                if ( $can_install_premium_version || $can_install_premium_version_update ) {
-                    if ( $can_download_premium_version && ! empty( $download_latest_action ) ) {
+                if ($can_install_premium_version || $can_install_premium_version_update) {
+                    if ($can_download_premium_version && ! empty($download_latest_action)) {
                         $actions[] = $download_latest_action;
 
                         $download_latest_action = '';
@@ -805,10 +816,10 @@
 
                     $actions[] = $activate_action;
                 } else {
-                    array_unshift( $actions, $activate_action );
+                    array_unshift($actions, $activate_action);
                 }
 
-                if ( ! empty ($download_latest_action ) ) {
+                if (! empty($download_latest_action)) {
                     $actions[] = $download_latest_action;
                 }
             }
@@ -828,28 +839,29 @@
          *
          * @return string
          */
-        private static function get_blog_status_url( $blog_id, $network_status_url, $status ) {
-            if ( ! in_array( $status, array( 'install', 'update_available' ) ) ) {
+        private static function get_blog_status_url($blog_id, $network_status_url, $status)
+        {
+            if (! in_array($status, array( 'install', 'update_available' ))) {
                 return $network_status_url;
             }
 
-            $action = ( 'install' === $status ) ?
+            $action = ('install' === $status) ?
                 'install-plugin' :
                 'upgrade-plugin';
 
-            $query = parse_url( $network_status_url, PHP_URL_QUERY );
-            if ( empty( $query ) ) {
+            $query = parse_url($network_status_url, PHP_URL_QUERY);
+            if (empty($query)) {
                 return $network_status_url;
             }
 
-            parse_str( html_entity_decode( $query ), $url_params );
-            if ( empty( $url_params ) || ! isset( $url_params['plugin'] ) ) {
+            parse_str(html_entity_decode($query), $url_params);
+            if (empty($url_params) || ! isset($url_params['plugin'])) {
                 return $network_status_url;
             }
 
             $plugin = $url_params['plugin'];
 
-            return wp_nonce_url( get_admin_url( $blog_id,"update.php?action={$action}&plugin={$plugin}"), "{$action}_{$plugin}");
+            return wp_nonce_url(get_admin_url($blog_id, "update.php?action={$action}&plugin={$plugin}"), "{$action}_{$plugin}");
         }
 
         /**
@@ -875,23 +887,23 @@
         ) {
             $classes = array();
 
-            if ( ! $is_primary ) {
+            if (! $is_primary) {
                 $classes[] = 'left';
             } else {
                 $classes[] = 'button-primary';
                 $classes[] = 'right';
             }
 
-            if ( $is_disabled ) {
+            if ($is_disabled) {
                 $classes[] = 'disabled';
             }
 
-            $rel = ( '_blank' === $target ) ? ' rel="noopener noreferrer"' : '';
+            $rel = ('_blank' === $target) ? ' rel="noopener noreferrer"' : '';
 
             return sprintf(
                 '<a %s class="button %s">%s</a>',
-                empty( $href ) ? '' : 'href="' . $href . '" target="' . $target . '"' . $rel,
-                implode( ' ', $classes ),
+                empty($href) ? '' : 'href="' . $href . '" target="' . $target . '"' . $rel,
+                implode(' ', $classes),
                 $label
             );
         }
@@ -904,10 +916,11 @@
          *
          * @return string
          */
-        private function get_trial_period( $plan ) {
+        private function get_trial_period($plan)
+        {
             $trial_period = (int) $plan->trial_period;
 
-            switch ( $trial_period ) {
+            switch ($trial_period) {
                 case 30:
                     return 'month';
                 case 60:
@@ -925,15 +938,16 @@
          * @author Vova Feldman (@svovaf)
          * @since  1.0.6
          */
-        function install_plugin_information() {
+        public function install_plugin_information()
+        {
             global $tab;
 
-            if ( empty( $_REQUEST['plugin'] ) ) {
+            if (empty($_REQUEST['plugin'])) {
                 return;
             }
 
             $args = array(
-                'slug'   => wp_unslash( $_REQUEST['plugin'] ),
+                'slug'   => wp_unslash($_REQUEST['plugin']),
                 'is_ssl' => is_ssl(),
                 'fields' => array(
                     'banners'         => true,
@@ -943,22 +957,22 @@
                 )
             );
 
-            if ( is_array( $args ) ) {
+            if (is_array($args)) {
                 $args = (object) $args;
             }
 
-            if ( ! isset( $args->per_page ) ) {
+            if (! isset($args->per_page)) {
                 $args->per_page = 24;
             }
 
-            if ( ! isset( $args->locale ) ) {
+            if (! isset($args->locale)) {
                 $args->locale = get_locale();
             }
 
-            $api = apply_filters( 'fs_plugins_api', false, 'plugin_information', $args );
+            $api = apply_filters('fs_plugins_api', false, 'plugin_information', $args);
 
-            if ( is_wp_error( $api ) ) {
-                wp_die( $api );
+            if (is_wp_error($api)) {
+                wp_die($api);
             }
 
             $plugins_allowedtags = array(
@@ -999,58 +1013,57 @@
             );
 
             $plugins_section_titles = array(
-                'description'  => fs_text_x_inline( 'Description', 'Plugin installer section title', 'description', $api->slug ),
-                'installation' => fs_text_x_inline( 'Installation', 'Plugin installer section title', 'installation', $api->slug ),
-                'faq'          => fs_text_x_inline( 'FAQ', 'Plugin installer section title', 'faq', $api->slug ),
-                'screenshots'  => fs_text_inline( 'Screenshots', 'screenshots', $api->slug ),
-                'changelog'    => fs_text_x_inline( 'Changelog', 'Plugin installer section title', 'changelog', $api->slug ),
-                'reviews'      => fs_text_x_inline( 'Reviews', 'Plugin installer section title', 'reviews', $api->slug ),
-                'other_notes'  => fs_text_x_inline( 'Other Notes', 'Plugin installer section title', 'other-notes', $api->slug ),
+                'description'  => fs_text_x_inline('Description', 'Plugin installer section title', 'description', $api->slug),
+                'installation' => fs_text_x_inline('Installation', 'Plugin installer section title', 'installation', $api->slug),
+                'faq'          => fs_text_x_inline('FAQ', 'Plugin installer section title', 'faq', $api->slug),
+                'screenshots'  => fs_text_inline('Screenshots', 'screenshots', $api->slug),
+                'changelog'    => fs_text_x_inline('Changelog', 'Plugin installer section title', 'changelog', $api->slug),
+                'reviews'      => fs_text_x_inline('Reviews', 'Plugin installer section title', 'reviews', $api->slug),
+                'other_notes'  => fs_text_x_inline('Other Notes', 'Plugin installer section title', 'other-notes', $api->slug),
             );
 
             // Sanitize HTML
-//		foreach ( (array) $api->sections as $section_name => $content ) {
-//			$api->sections[$section_name] = wp_kses( $content, $plugins_allowedtags );
-//		}
+            //		foreach ( (array) $api->sections as $section_name => $content ) {
+            //			$api->sections[$section_name] = wp_kses( $content, $plugins_allowedtags );
+            //		}
 
-            foreach ( array( 'version', 'author', 'requires', 'tested', 'homepage', 'downloaded', 'slug' ) as $key ) {
-                if ( isset( $api->$key ) ) {
-                    $api->$key = wp_kses( $api->$key, $plugins_allowedtags );
+            foreach (array( 'version', 'author', 'requires', 'tested', 'homepage', 'downloaded', 'slug' ) as $key) {
+                if (isset($api->$key)) {
+                    $api->$key = wp_kses($api->$key, $plugins_allowedtags);
                 }
             }
 
             // Add after $api->slug is ready.
-            $plugins_section_titles['features'] = fs_text_x_inline( 'Features & Pricing', 'Plugin installer section title', 'features-and-pricing', $api->slug );
+            $plugins_section_titles['features'] = fs_text_x_inline('Features & Pricing', 'Plugin installer section title', 'features-and-pricing', $api->slug);
 
-            $_tab = esc_attr( $tab );
+            $_tab = esc_attr($tab);
 
-            $section = isset( $_REQUEST['section'] ) ? wp_unslash( $_REQUEST['section'] ) : 'description'; // Default to the Description tab, Do not translate, API returns English.
-            if ( empty( $section ) || ! isset( $api->sections[ $section ] ) ) {
-                $section_titles = array_keys( (array) $api->sections );
-                $section        = array_shift( $section_titles );
+            $section = isset($_REQUEST['section']) ? wp_unslash($_REQUEST['section']) : 'description'; // Default to the Description tab, Do not translate, API returns English.
+            if (empty($section) || ! isset($api->sections[ $section ])) {
+                $section_titles = array_keys((array) $api->sections);
+                $section        = array_shift($section_titles);
             }
 
-            iframe_header( fs_text_inline( 'Plugin Install', 'plugin-install', $api->slug ) );
+            iframe_header(fs_text_inline('Plugin Install', 'plugin-install', $api->slug));
 
             $_with_banner = '';
 
-//	var_dump($api->banners);
-            if ( ! empty( $api->banners ) && ( ! empty( $api->banners['low'] ) || ! empty( $api->banners['high'] ) ) ) {
+            //	var_dump($api->banners);
+            if (! empty($api->banners) && (! empty($api->banners['low']) || ! empty($api->banners['high']))) {
                 $_with_banner = 'with-banner';
-                $low          = empty( $api->banners['low'] ) ? $api->banners['high'] : $api->banners['low'];
-                $high         = empty( $api->banners['high'] ) ? $api->banners['low'] : $api->banners['high'];
-                ?>
+                $low          = empty($api->banners['low']) ? $api->banners['high'] : $api->banners['low'];
+                $high         = empty($api->banners['high']) ? $api->banners['low'] : $api->banners['high']; ?>
                 <style type="text/css">
                     #plugin-information-title.with-banner
                     {
-                        background-image: url( <?php echo esc_url( $low ); ?> );
+                        background-image: url( <?php echo esc_url($low); ?> );
                     }
 
                     @media only screen and ( -webkit-min-device-pixel-ratio: 1.5 )
                     {
                         #plugin-information-title.with-banner
                         {
-                            background-image: url( <?php echo esc_url( $high ); ?> );
+                            background-image: url( <?php echo esc_url($high); ?> );
                         }
                     }
                 </style>
@@ -1061,114 +1074,110 @@
             echo "<div id='{$_tab}-title' class='{$_with_banner}'><div class='vignette'></div><h2>{$api->name}</h2></div>";
             echo "<div id='{$_tab}-tabs' class='{$_with_banner}'>\n";
 
-            foreach ( (array) $api->sections as $section_name => $content ) {
-                if ( 'reviews' === $section_name && ( empty( $api->ratings ) || 0 === array_sum( (array) $api->ratings ) ) ) {
+            foreach ((array) $api->sections as $section_name => $content) {
+                if ('reviews' === $section_name && (empty($api->ratings) || 0 === array_sum((array) $api->ratings))) {
                     continue;
                 }
 
-                if ( isset( $plugins_section_titles[ $section_name ] ) ) {
+                if (isset($plugins_section_titles[ $section_name ])) {
                     $title = $plugins_section_titles[ $section_name ];
                 } else {
-                    $title = ucwords( str_replace( '_', ' ', $section_name ) );
+                    $title = ucwords(str_replace('_', ' ', $section_name));
                 }
 
-                $class       = ( $section_name === $section ) ? ' class="current"' : '';
-                $href        = add_query_arg( array( 'tab' => $tab, 'section' => $section_name ) );
-                $href        = esc_url( $href );
-                $san_section = esc_attr( $section_name );
-                echo "\t<a name='$san_section' href='$href' $class>" . esc_html( $title ) . "</a>\n";
+                $class       = ($section_name === $section) ? ' class="current"' : '';
+                $href        = add_query_arg(array( 'tab' => $tab, 'section' => $section_name ));
+                $href        = esc_url($href);
+                $san_section = esc_attr($section_name);
+                echo "\t<a name='$san_section' href='$href' $class>" . esc_html($title) . "</a>\n";
             }
 
-            echo "</div>\n";
-
-            ?>
+            echo "</div>\n"; ?>
         <div id="<?php echo $_tab; ?>-content" class='<?php echo $_with_banner; ?>'>
             <div class="fyi">
-                <?php if ( $api->is_paid ) : ?>
-                    <?php if ( isset( $api->plans ) ) : ?>
+                <?php if ($api->is_paid) : ?>
+                    <?php if (isset($api->plans)) : ?>
                         <div class="plugin-information-pricing">
-                        <?php foreach ( $api->plans as $plan ) : ?>
+                        <?php foreach ($api->plans as $plan) : ?>
                             <?php
-                            if ( empty( $plan->pricing ) ) {
+                            if (empty($plan->pricing)) {
                                 continue;
                             }
 
-                            /**
-                             * @var FS_Plugin_Plan $plan
-                             */
-                            ?>
+            /**
+             * @var FS_Plugin_Plan $plan
+             */ ?>
                             <?php $first_pricing = $plan->pricing[0] ?>
                             <?php $is_multi_cycle = $first_pricing->is_multi_cycle() ?>
-                            <div class="fs-plan<?php if ( ! $is_multi_cycle ) {
-                                echo ' fs-single-cycle';
-                            } ?>" data-plan-id="<?php echo $plan->id ?>">
-                                <h3 data-plan="<?php echo $plan->id ?>"><?php echo esc_html( sprintf( fs_text_x_inline( '%s Plan', 'e.g. Professional Plan', 'x-plan', $api->slug ), $plan->title ) ) ?></h3>
+                            <div class="fs-plan<?php if (! $is_multi_cycle) {
+                echo ' fs-single-cycle';
+            } ?>" data-plan-id="<?php echo $plan->id ?>">
+                                <h3 data-plan="<?php echo $plan->id ?>"><?php echo esc_html(sprintf(fs_text_x_inline('%s Plan', 'e.g. Professional Plan', 'x-plan', $api->slug), $plan->title)) ?></h3>
                                 <?php $has_annual = $first_pricing->has_annual() ?>
                                 <?php $has_monthly = $first_pricing->has_monthly() ?>
                                 <div class="nav-tab-wrapper">
                                     <?php $billing_cycles = array( 'monthly', 'annual', 'lifetime' ) ?>
                                     <?php $i = 0;
-                                        foreach ( $billing_cycles as $cycle ) : ?>
+            foreach ($billing_cycles as $cycle) : ?>
                                             <?php $prop = "{$cycle}_price";
-                                            if ( isset( $first_pricing->{$prop} ) ) : ?>
-                                                <?php $is_featured = ( 'annual' === $cycle && $is_multi_cycle ) ?>
+            if (isset($first_pricing->{$prop})) : ?>
+                                                <?php $is_featured = ('annual' === $cycle && $is_multi_cycle) ?>
                                                 <?php
                                                 $prices = array();
-                                                foreach ( $plan->pricing as $pricing ) {
-                                                    if ( isset( $pricing->{$prop} ) ) {
-                                                        $prices[] = array(
+            foreach ($plan->pricing as $pricing) {
+                if (isset($pricing->{$prop})) {
+                    $prices[] = array(
                                                             'id'       => $pricing->id,
                                                             'licenses' => $pricing->licenses,
                                                             'price'    => $pricing->{$prop}
                                                         );
-                                                    }
-                                                }
-                                                ?>
+                }
+            } ?>
                                                 <a class="nav-tab" data-billing-cycle="<?php echo $cycle ?>"
-                                                   data-pricing="<?php echo esc_attr( json_encode( $prices ) ) ?>">
-                                                    <?php if ( $is_featured ) : ?>
+                                                   data-pricing="<?php echo esc_attr(json_encode($prices)) ?>">
+                                                    <?php if ($is_featured) : ?>
                                                         <label>
-                                                            &#9733; <?php fs_esc_html_echo_x_inline( 'Best', 'e.g. the best product', 'best', $api->slug ) ?>
+                                                            &#9733; <?php fs_esc_html_echo_x_inline('Best', 'e.g. the best product', 'best', $api->slug) ?>
                                                             &#9733;</label>
                                                     <?php endif ?>
                                                     <?php
-                                                        switch ( $cycle ) {
+                                                        switch ($cycle) {
                                                             case 'monthly':
-                                                                fs_esc_html_echo_x_inline( 'Monthly', 'as every month', 'monthly', $api->slug );
+                                                                fs_esc_html_echo_x_inline('Monthly', 'as every month', 'monthly', $api->slug);
                                                                 break;
                                                             case 'annual':
-                                                                fs_esc_html_echo_x_inline( 'Annual', 'as once a year', 'annual', $api->slug );
+                                                                fs_esc_html_echo_x_inline('Annual', 'as once a year', 'annual', $api->slug);
                                                                 break;
                                                             case 'lifetime':
-                                                                fs_esc_html_echo_inline( 'Lifetime', 'lifetime', $api->slug );
+                                                                fs_esc_html_echo_inline('Lifetime', 'lifetime', $api->slug);
                                                                 break;
-                                                        }
-                                                    ?>
+                                                        } ?>
                                                 </a>
                                             <?php endif ?>
-                                            <?php $i ++; endforeach ?>
-                                    <?php wp_enqueue_script( 'jquery' ) ?>
+                                            <?php $i ++;
+            endforeach ?>
+                                    <?php wp_enqueue_script('jquery') ?>
                                     <script type="text/javascript">
                                         (function ($, undef) {
                                             var
                                                 _formatBillingFrequency = function (cycle) {
                                                     switch (cycle) {
                                                         case 'monthly':
-                                                            return '<?php printf( fs_text_x_inline( 'Billed %s', 'e.g. billed monthly', 'billed-x', $api->slug ), fs_text_x_inline( 'Monthly', 'as every month', 'monthly', $api->slug ) ) ?>';
+                                                            return '<?php printf(fs_text_x_inline('Billed %s', 'e.g. billed monthly', 'billed-x', $api->slug), fs_text_x_inline('Monthly', 'as every month', 'monthly', $api->slug)) ?>';
                                                         case 'annual':
-                                                            return '<?php printf( fs_text_x_inline( 'Billed %s', 'e.g. billed monthly', 'billed-x', $api->slug ), fs_text_x_inline( 'Annually', 'as once a year', 'annually', $api->slug ) ) ?>';
+                                                            return '<?php printf(fs_text_x_inline('Billed %s', 'e.g. billed monthly', 'billed-x', $api->slug), fs_text_x_inline('Annually', 'as once a year', 'annually', $api->slug)) ?>';
                                                         case 'lifetime':
-                                                            return '<?php printf( fs_text_x_inline( 'Billed %s', 'e.g. billed monthly', 'billed-x', $api->slug ), fs_text_x_inline( 'Once', 'as once a year', 'once', $api->slug ) ) ?>';
+                                                            return '<?php printf(fs_text_x_inline('Billed %s', 'e.g. billed monthly', 'billed-x', $api->slug), fs_text_x_inline('Once', 'as once a year', 'once', $api->slug)) ?>';
                                                     }
                                                 },
                                                 _formatLicensesTitle    = function (pricing) {
                                                     switch (pricing.licenses) {
                                                         case 1:
-                                                            return '<?php fs_esc_attr_echo_inline( 'Single Site License', 'license-single-site', $api->slug ) ?>';
+                                                            return '<?php fs_esc_attr_echo_inline('Single Site License', 'license-single-site', $api->slug) ?>';
                                                         case null:
-                                                            return '<?php fs_esc_attr_echo_inline( 'Unlimited Licenses', 'license-unlimited', $api->slug ) ?>';
+                                                            return '<?php fs_esc_attr_echo_inline('Unlimited Licenses', 'license-unlimited', $api->slug) ?>';
                                                         default:
-                                                            return '<?php fs_esc_attr_echo_inline( 'Up to %s Sites', 'license-x-sites', $api->slug ) ?>'.replace('%s', pricing.licenses);
+                                                            return '<?php fs_esc_attr_echo_inline('Up to %s Sites', 'license-x-sites', $api->slug) ?>'.replace('%s', pricing.licenses);
                                                     }
                                                 },
                                                 _formatPrice            = function (pricing, cycle, multipleLicenses) {
@@ -1178,14 +1187,14 @@
                                                     var priceCycle;
                                                     switch (cycle) {
                                                         case 'monthly':
-                                                            priceCycle = ' / <?php fs_echo_x_inline( 'mo', 'as monthly period', 'mo', $api->slug ) ?>';
+                                                            priceCycle = ' / <?php fs_echo_x_inline('mo', 'as monthly period', 'mo', $api->slug) ?>';
                                                             break;
                                                         case 'lifetime':
                                                             priceCycle = '';
                                                             break;
                                                         case 'annual':
                                                         default:
-                                                            priceCycle = ' / <?php fs_echo_x_inline( 'year', 'as annual period', 'year', $api->slug ) ?>';
+                                                            priceCycle = ' / <?php fs_echo_x_inline('year', 'as annual period', 'year', $api->slug) ?>';
                                                             break;
                                                     }
 
@@ -1196,12 +1205,12 @@
                                                     return _formatLicensesTitle(pricing) + ' - <var class="fs-price">$' + pricing.price + priceCycle + '</var>';
                                                 },
                                                 _checkoutUrl            = function (plan, pricing, cycle) {
-                                                    return '<?php echo esc_url_raw( remove_query_arg( 'billing_cycle', add_query_arg( array( 'plugin_id' => $plan->plugin_id ), $api->checkout_link ) ) ) ?>' +
+                                                    return '<?php echo esc_url_raw(remove_query_arg('billing_cycle', add_query_arg(array( 'plugin_id' => $plan->plugin_id ), $api->checkout_link))) ?>' +
                                                         '&plan_id=' + plan +
                                                         '&pricing_id=' + pricing +
-                                                        '&billing_cycle=' + cycle<?php if ( $plan->has_trial() ) {
-                                                        echo " + '&trial=true'";
-                                                    }?>;
+                                                        '&billing_cycle=' + cycle<?php if ($plan->has_trial()) {
+                echo " + '&trial=true'";
+            } ?>;
                                                 },
                                                 _updateCtaUrl           = function (plan, pricing, cycle) {
                                                     $('.plugin-information-pricing .fs-checkout-button, #plugin-information-footer .fs-checkout-button').attr('href', _checkoutUrl(plan, pricing, cycle));
@@ -1239,7 +1248,7 @@
 
                                                     // Render licenses prices.
                                                     if (1 == pricing.length) {
-                                                        html = '<li><label><?php echo fs_esc_attr_x_inline( 'Price', 'noun', 'price', $api->slug ) ?>: ' + _formatPrice(pricing[0], billingCycle, false) + '</label></li>';
+                                                        html = '<li><label><?php echo fs_esc_attr_x_inline('Price', 'noun', 'price', $api->slug) ?>: ' + _formatPrice(pricing[0], billingCycle, false) + '</label></li>';
                                                     } else {
                                                         for (var i = 0; i < pricing.length; i++) {
                                                             html += '<li><label><input name="pricing-<?php echo $plan->id ?>" type="radio" value="' + pricing[i].id + '">' + _formatPrice(pricing[i], billingCycle) + '</label></li>';
@@ -1269,7 +1278,7 @@
                                                     }
                                                 });
 
-                                                <?php if ( $has_annual ) : ?>
+                                                <?php if ($has_annual) : ?>
                                                 // Select annual by default.
                                                 $plan.find('.nav-tab[data-billing-cycle=annual]').click();
                                                 <?php else : ?>
@@ -1282,25 +1291,27 @@
                                 </div>
                                 <div class="fs-pricing-body">
                                     <span class="fs-billing-frequency"></span>
-                                    <?php $annual_discount = ( $has_annual && $has_monthly ) ? $plan->pricing[0]->annual_discount_percentage() : 0 ?>
-                                    <?php if ( $annual_discount > 0 ) : ?>
+                                    <?php $annual_discount = ($has_annual && $has_monthly) ? $plan->pricing[0]->annual_discount_percentage() : 0 ?>
+                                    <?php if ($annual_discount > 0) : ?>
                                         <span
                                             class="fs-annual-discount"><?php printf(
                                             /* translators: %s: Discount (e.g. discount of $5 or 10%) */
-                                                fs_esc_html_inline( 'Save %s', 'save-x', $api->slug ), $annual_discount . '%' ) ?></span>
+                                                fs_esc_html_inline('Save %s', 'save-x', $api->slug),
+                $annual_discount . '%'
+            ) ?></span>
                                     <?php endif ?>
                                     <ul class="fs-licenses">
                                     </ul>
-                                    <?php echo $this->get_actions_dropdown( $api, $plan ) ?>
+                                    <?php echo $this->get_actions_dropdown($api, $plan) ?>
                                     <div style="clear:both"></div>
-                                    <?php if ( $plan->has_trial() ) : ?>
-                                        <?php $trial_period = $this->get_trial_period( $plan ) ?>
+                                    <?php if ($plan->has_trial()) : ?>
+                                        <?php $trial_period = $this->get_trial_period($plan) ?>
                                         <ul class="fs-trial-terms">
                                             <li>
-                                                <i class="dashicons dashicons-yes"></i><?php echo esc_html( sprintf( fs_text_inline( 'No commitment for %s - cancel anytime', 'no-commitment-x', $api->slug ), $trial_period ) ) ?>
+                                                <i class="dashicons dashicons-yes"></i><?php echo esc_html(sprintf(fs_text_inline('No commitment for %s - cancel anytime', 'no-commitment-x', $api->slug), $trial_period)) ?>
                                             </li>
                                             <li>
-                                                <i class="dashicons dashicons-yes"></i><?php printf( esc_html( fs_text_inline( 'After your free %s, pay as little as %s', 'after-x-pay-as-little-y', $api->slug ) ), $trial_period, '<var class="fs-price">' . $this->get_price_tag( $plan, $plan->pricing[0] ) . '</var>' ) ?>
+                                                <i class="dashicons dashicons-yes"></i><?php printf(esc_html(fs_text_inline('After your free %s, pay as little as %s', 'after-x-pay-as-little-y', $api->slug)), $trial_period, '<var class="fs-price">' . $this->get_price_tag($plan, $plan->pricing[0]) . '</var>') ?>
                                             </li>
                                         </ul>
                                     <?php endif ?>
@@ -1311,206 +1322,210 @@
                     <?php endif ?>
                 <?php endif ?>
                 <div>
-                    <h3><?php fs_echo_inline( 'Details', 'details', $api->slug ) ?></h3>
+                    <h3><?php fs_echo_inline('Details', 'details', $api->slug) ?></h3>
                     <ul>
-                        <?php if ( ! empty( $api->version ) ) { ?>
+                        <?php if (! empty($api->version)) { ?>
                             <li>
-                                <strong><?php fs_esc_html_echo_x_inline( 'Version', 'product version', 'version', $api->slug ); ?>
+                                <strong><?php fs_esc_html_echo_x_inline('Version', 'product version', 'version', $api->slug); ?>
                                     :</strong> <?php echo $api->version; ?></li>
                             <?php
                         }
-                            if ( ! empty( $api->author ) ) {
-                                ?>
+            if (! empty($api->author)) {
+                ?>
                                 <li>
-                                    <strong><?php fs_echo_x_inline( 'Author', 'as the plugin author', 'author', $api->slug ); ?>
-                                        :</strong> <?php echo links_add_target( $api->author, '_blank' ); ?>
+                                    <strong><?php fs_echo_x_inline('Author', 'as the plugin author', 'author', $api->slug); ?>
+                                        :</strong> <?php echo links_add_target($api->author, '_blank'); ?>
                                 </li>
                                 <?php
-                            }
-                            if ( ! empty( $api->last_updated ) ) {
-                                ?>
-                                <li><strong><?php fs_echo_inline( 'Last Updated', 'last-updated', $api->slug ); ?>
+            }
+            if (! empty($api->last_updated)) {
+                ?>
+                                <li><strong><?php fs_echo_inline('Last Updated', 'last-updated', $api->slug); ?>
                                         :</strong> <span
                                         title="<?php echo $api->last_updated; ?>">
-				<?php echo esc_html( sprintf(
+				<?php echo esc_html(sprintf(
                 /* translators: %s: time period (e.g. "2 hours" ago) */
-                    fs_text_x_inline( '%s ago', 'x-ago', $api->slug ),
-                    human_time_diff( strtotime( $api->last_updated ) )
-                ) ) ?>
+                    fs_text_x_inline('%s ago', 'x-ago', $api->slug),
+                    human_time_diff(strtotime($api->last_updated))
+                )) ?>
 			</span></li>
                                 <?php
-                            }
-                            if ( ! empty( $api->requires ) ) {
-                                ?>
+            }
+            if (! empty($api->requires)) {
+                ?>
                                 <li>
-                                    <strong><?php fs_esc_html_echo_inline( 'Requires WordPress Version', 'requires-wordpress-version', $api->slug ) ?>
-                                        :</strong> <?php echo esc_html( sprintf( fs_text_inline( '%s or higher', 'x-or-higher', $api->slug ), $api->requires ) ) ?>
+                                    <strong><?php fs_esc_html_echo_inline('Requires WordPress Version', 'requires-wordpress-version', $api->slug) ?>
+                                        :</strong> <?php echo esc_html(sprintf(fs_text_inline('%s or higher', 'x-or-higher', $api->slug), $api->requires)) ?>
                                 </li>
                                 <?php
-                            }
-                            if ( ! empty( $api->tested ) ) {
-                                ?>
+            }
+            if (! empty($api->tested)) {
+                ?>
                                 <li>
-                                    <strong><?php fs_esc_html_echo_inline( 'Compatible up to', 'compatible-up-to', $api->slug ); ?>
+                                    <strong><?php fs_esc_html_echo_inline('Compatible up to', 'compatible-up-to', $api->slug); ?>
                                         :</strong> <?php echo $api->tested; ?>
                                 </li>
                                 <?php
-                            }
-                            if ( ! empty( $api->downloaded ) ) {
-                                ?>
+            }
+            if (! empty($api->downloaded)) {
+                ?>
                                 <li>
-                                    <strong><?php fs_esc_html_echo_inline( 'Downloaded', 'downloaded', $api->slug ) ?>
-                                        :</strong> <?php echo esc_html( sprintf(
-                                        ( ( 1 == $api->downloaded ) ?
+                                    <strong><?php fs_esc_html_echo_inline('Downloaded', 'downloaded', $api->slug) ?>
+                                        :</strong> <?php echo esc_html(sprintf(
+                    (
+                                            (1 == $api->downloaded) ?
                                             /* translators: %s: 1 or One (Number of times downloaded) */
-                                            fs_text_inline( '%s time', 'x-time', $api->slug ) :
+                                            fs_text_inline('%s time', 'x-time', $api->slug) :
                                             /* translators: %s: Number of times downloaded */
-                                            fs_text_inline( '%s times', 'x-times', $api->slug )
+                                            fs_text_inline('%s times', 'x-times', $api->slug)
                                         ),
-                                        number_format_i18n( $api->downloaded )
-                                    ) ); ?>
+                    number_format_i18n($api->downloaded)
+                )); ?>
                                 </li>
                                 <?php
-                            }
-                            if ( ! empty( $api->slug ) && true == $api->is_wp_org_compliant ) {
-                                ?>
+            }
+            if (! empty($api->slug) && true == $api->is_wp_org_compliant) {
+                ?>
                                 <li><a target="_blank"
                                        rel="noopener noreferrer"
-                                       href="https://wordpress.org/plugins/<?php echo $api->slug; ?>/"><?php fs_esc_html_echo_inline( 'WordPress.org Plugin Page', 'wp-org-plugin-page', $api->slug ) ?>
+                                       href="https://wordpress.org/plugins/<?php echo $api->slug; ?>/"><?php fs_esc_html_echo_inline('WordPress.org Plugin Page', 'wp-org-plugin-page', $api->slug) ?>
                                         &#187;</a>
                                 </li>
                                 <?php
-                            }
-                            if ( ! empty( $api->homepage ) ) {
-                                ?>
+            }
+            if (! empty($api->homepage)) {
+                ?>
                                 <li><a target="_blank"
                                        rel="noopener noreferrer"
-                                       href="<?php echo esc_url( $api->homepage ); ?>"><?php fs_esc_html_echo_inline( 'Plugin Homepage', 'plugin-homepage', $api->slug ) ?>
+                                       href="<?php echo esc_url($api->homepage); ?>"><?php fs_esc_html_echo_inline('Plugin Homepage', 'plugin-homepage', $api->slug) ?>
                                         &#187;</a>
                                 </li>
                                 <?php
-                            }
-                            if ( ! empty( $api->donate_link ) && empty( $api->contributors ) ) {
-                                ?>
+            }
+            if (! empty($api->donate_link) && empty($api->contributors)) {
+                ?>
                                 <li><a target="_blank"
                                        rel="noopener noreferrer"
-                                       href="<?php echo esc_url( $api->donate_link ); ?>"><?php fs_esc_html_echo_inline( 'Donate to this plugin', 'donate-to-plugin', $api->slug ) ?>
+                                       href="<?php echo esc_url($api->donate_link); ?>"><?php fs_esc_html_echo_inline('Donate to this plugin', 'donate-to-plugin', $api->slug) ?>
                                         &#187;</a>
                                 </li>
-                            <?php } ?>
+                            <?php
+            } ?>
                     </ul>
                 </div>
-                <?php if ( ! empty( $api->rating ) ) { ?>
-                    <h3><?php fs_echo_inline( 'Average Rating', 'average-rating', $api->slug ); ?></h3>
-                    <?php wp_star_rating( array(
+                <?php if (! empty($api->rating)) { ?>
+                    <h3><?php fs_echo_inline('Average Rating', 'average-rating', $api->slug); ?></h3>
+                    <?php wp_star_rating(array(
                         'rating' => $api->rating,
                         'type'   => 'percent',
                         'number' => $api->num_ratings
-                    ) ); ?>
-                    <small>(<?php echo esc_html( sprintf(
-                            fs_text_inline( 'based on %s', 'based-on-x', $api->slug ),
-                            sprintf(
-                                ( ( 1 == $api->num_ratings ) ?
+                    )); ?>
+                    <small>(<?php echo esc_html(sprintf(
+                        fs_text_inline('based on %s', 'based-on-x', $api->slug),
+                        sprintf(
+                                (
+                                    (1 == $api->num_ratings) ?
                                     /* translators: %s: 1 or One */
-                                    fs_text_inline( '%s rating', 'x-rating', $api->slug ) :
+                                    fs_text_inline('%s rating', 'x-rating', $api->slug) :
                                     /* translators: %s: Number larger than 1 */
-                                    fs_text_inline( '%s ratings', 'x-ratings', $api->slug )
+                                    fs_text_inline('%s ratings', 'x-ratings', $api->slug)
                                 ),
-                                number_format_i18n( $api->num_ratings )
-                            ) ) ) ?>)
+                                number_format_i18n($api->num_ratings)
+                            )
+                    )) ?>)
                     </small>
                     <?php
                 }
 
-                    if ( ! empty( $api->ratings ) && array_sum( (array) $api->ratings ) > 0 ) {
-                        foreach ( $api->ratings as $key => $ratecount ) {
-                            // Avoid div-by-zero.
-                            $_rating     = $api->num_ratings ? ( $ratecount / $api->num_ratings ) : 0;
-                            $stars_label = sprintf(
-                                ( ( 1 == $key ) ?
+            if (! empty($api->ratings) && array_sum((array) $api->ratings) > 0) {
+                foreach ($api->ratings as $key => $ratecount) {
+                    // Avoid div-by-zero.
+                    $_rating     = $api->num_ratings ? ($ratecount / $api->num_ratings) : 0;
+                    $stars_label = sprintf(
+                        (
+                                    (1 == $key) ?
                                     /* translators: %s: 1 or One */
-                                    fs_text_inline( '%s star', 'x-star', $api->slug ) :
+                                    fs_text_inline('%s star', 'x-star', $api->slug) :
                                     /* translators: %s: Number larger than 1 */
-                                    fs_text_inline( '%s stars', 'x-stars', $api->slug )
+                                    fs_text_inline('%s stars', 'x-stars', $api->slug)
                                 ),
-                                number_format_i18n( $key )
-                            );
-                            ?>
+                        number_format_i18n($key)
+                    ); ?>
                             <div class="counter-container">
                               <span class="counter-label"><a
                                 href="https://wordpress.org/support/view/plugin-reviews/<?php echo $api->slug; ?>?filter=<?php echo $key; ?>"
                                 target="_blank"
                                 rel="noopener noreferrer"
-                                title="<?php echo esc_attr( sprintf(
+                                title="<?php echo esc_attr(sprintf(
                                   /* translators: %s: # of stars (e.g. 5 stars) */
-                                  fs_text_inline( 'Click to see reviews that provided a rating of %s', 'click-to-reviews', $api->slug ),
-                                  $stars_label
-                                ) ) ?>"><?php echo $stars_label ?></a></span>
+                                  fs_text_inline('Click to see reviews that provided a rating of %s', 'click-to-reviews', $api->slug),
+                                $stars_label
+                            )) ?>"><?php echo $stars_label ?></a></span>
                                 <span class="counter-back">
                                 <span class="counter-bar" style="width: <?php echo absint(92 * $_rating); ?>px;"></span>
                               </span>
-                              <span class="counter-count"><?php echo number_format_i18n( $ratecount ); ?></span>
+                              <span class="counter-count"><?php echo number_format_i18n($ratecount); ?></span>
                             </div>
                             <?php
-                        }
-                    }
-                    if ( ! empty( $api->contributors ) ) {
-                        ?>
-                        <h3><?php fs_echo_inline( 'Contributors', 'contributors', $api->slug ); ?></h3>
+                }
+            }
+            if (! empty($api->contributors)) {
+                ?>
+                        <h3><?php fs_echo_inline('Contributors', 'contributors', $api->slug); ?></h3>
                         <ul class="contributors">
                             <?php
-                                foreach ( (array) $api->contributors as $contrib_username => $contrib_profile ) {
-                                    if ( empty( $contrib_username ) && empty( $contrib_profile ) ) {
+                                foreach ((array) $api->contributors as $contrib_username => $contrib_profile) {
+                                    if (empty($contrib_username) && empty($contrib_profile)) {
                                         continue;
                                     }
-                                    if ( empty( $contrib_username ) ) {
-                                        $contrib_username = preg_replace( '/^.+\/(.+)\/?$/', '\1', $contrib_profile );
+                                    if (empty($contrib_username)) {
+                                        $contrib_username = preg_replace('/^.+\/(.+)\/?$/', '\1', $contrib_profile);
                                     }
-                                    $contrib_username = sanitize_user( $contrib_username );
-                                    if ( empty( $contrib_profile ) ) {
+                                    $contrib_username = sanitize_user($contrib_username);
+                                    if (empty($contrib_profile)) {
                                         echo "<li><img src='https://wordpress.org/grav-redirect.php?user={$contrib_username}&amp;s=36' width='18' height='18' />{$contrib_username}</li>";
                                     } else {
                                         echo "<li><a href='{$contrib_profile}' target='_blank' rel='noopener noreferrer'><img src='https://wordpress.org/grav-redirect.php?user={$contrib_username}&amp;s=36' width='18' height='18' />{$contrib_username}</a></li>";
                                     }
-                                }
-                            ?>
+                                } ?>
                         </ul>
-                        <?php if ( ! empty( $api->donate_link ) ) { ?>
+                        <?php if (! empty($api->donate_link)) { ?>
                             <a target="_blank"
                                rel="noopener noreferrer"
-                               href="<?php echo esc_url( $api->donate_link ); ?>"><?php fs_echo_inline( 'Donate to this plugin', 'donate-to-plugin', $api->slug ) ?>
+                               href="<?php echo esc_url($api->donate_link); ?>"><?php fs_echo_inline('Donate to this plugin', 'donate-to-plugin', $api->slug) ?>
                                 &#187;</a>
                         <?php } ?>
-                    <?php } ?>
+                    <?php
+            } ?>
             </div>
             <div id="section-holder" class="wrap">
             <?php
-            if ( ! empty( $api->tested ) && version_compare( substr( $GLOBALS['wp_version'], 0, strlen( $api->tested ) ), $api->tested, '>' ) ) {
-                echo '<div class="notice notice-warning"><p>' . '<strong>' . fs_text_inline( 'Warning', 'warning', $api->slug ) . ':</strong> ' . fs_text_inline( 'This plugin has not been tested with your current version of WordPress.', 'not-tested-warning', $api->slug ) . '</p></div>';
-            } else if ( ! empty( $api->requires ) && version_compare( substr( $GLOBALS['wp_version'], 0, strlen( $api->requires ) ), $api->requires, '<' ) ) {
-                echo '<div class="notice notice-warning"><p>' . '<strong>' . fs_text_inline( 'Warning', 'warning', $api->slug ) . ':</strong> ' . fs_text_inline( 'This plugin has not been marked as compatible with your version of WordPress.', 'not-compatible-warning', $api->slug ) . '</p></div>';
+            if (! empty($api->tested) && version_compare(substr($GLOBALS['wp_version'], 0, strlen($api->tested)), $api->tested, '>')) {
+                echo '<div class="notice notice-warning"><p>' . '<strong>' . fs_text_inline('Warning', 'warning', $api->slug) . ':</strong> ' . fs_text_inline('This plugin has not been tested with your current version of WordPress.', 'not-tested-warning', $api->slug) . '</p></div>';
+            } elseif (! empty($api->requires) && version_compare(substr($GLOBALS['wp_version'], 0, strlen($api->requires)), $api->requires, '<')) {
+                echo '<div class="notice notice-warning"><p>' . '<strong>' . fs_text_inline('Warning', 'warning', $api->slug) . ':</strong> ' . fs_text_inline('This plugin has not been marked as compatible with your version of WordPress.', 'not-compatible-warning', $api->slug) . '</p></div>';
             }
 
-            foreach ( (array) $api->sections as $section_name => $content ) {
-                $content = links_add_base_url( $content, 'https://wordpress.org/plugins/' . $api->slug . '/' );
-                $content = links_add_target( $content, '_blank' );
+            foreach ((array) $api->sections as $section_name => $content) {
+                $content = links_add_base_url($content, 'https://wordpress.org/plugins/' . $api->slug . '/');
+                $content = links_add_target($content, '_blank');
 
-                $san_section = esc_attr( $section_name );
+                $san_section = esc_attr($section_name);
 
-                $display = ( $section_name === $section ) ? 'block' : 'none';
+                $display = ($section_name === $section) ? 'block' : 'none';
 
-                if ( 'description' === $section_name &&
-                     ( ( $api->is_wp_org_compliant && $api->wp_org_missing ) ||
-                       ( ! $api->is_wp_org_compliant && $api->fs_missing ) )
+                if ('description' === $section_name &&
+                     (($api->is_wp_org_compliant && $api->wp_org_missing) ||
+                       (! $api->is_wp_org_compliant && $api->fs_missing))
                 ) {
                     $missing_notice = array(
                         'type'    => 'error',
-                        'id'      => md5( microtime() ),
+                        'id'      => md5(microtime()),
                         'message' => $api->is_paid ?
-                            fs_text_inline( 'Paid add-on must be deployed to Freemius.', 'paid-addon-not-deployed', $api->slug ) :
-                            fs_text_inline( 'Add-on must be deployed to WordPress.org or Freemius.', 'free-addon-not-deployed', $api->slug ),
+                            fs_text_inline('Paid add-on must be deployed to Freemius.', 'paid-addon-not-deployed', $api->slug) :
+                            fs_text_inline('Add-on must be deployed to WordPress.org or Freemius.', 'free-addon-not-deployed', $api->slug),
                     );
-                    fs_require_template( 'admin-notice.php', $missing_notice );
+                    fs_require_template('admin-notice.php', $missing_notice);
                 }
                 echo "\t<div id='section-{$san_section}' class='section' style='display: {$display};'>\n";
                 echo $content;
@@ -1522,33 +1537,32 @@
             echo "<div id='$tab-footer'>\n";
 
             if (
-                ! empty( $api->download_link ) &&
-                ! empty( $this->status ) &&
-                in_array( $this->status['status'], array( 'newer_installed', 'latest_installed' ) )
+                ! empty($api->download_link) &&
+                ! empty($this->status) &&
+                in_array($this->status['status'], array( 'newer_installed', 'latest_installed' ))
             ) {
-                if ( 'newer_installed' === $this->status['status'] ) {
+                if ('newer_installed' === $this->status['status']) {
                     echo $this->get_cta(
-                        ( $this->status['is_premium_installed'] ?
-                            esc_html( sprintf( fs_text_inline( 'Newer Version (%s) Installed', 'newer-installed', $api->slug ), $this->status['version'] ) ) :
-                            esc_html( sprintf( fs_text_inline( 'Newer Free Version (%s) Installed', 'newer-free-installed', $api->slug ), $this->status['version'] ) ) ),
+                        ($this->status['is_premium_installed'] ?
+                            esc_html(sprintf(fs_text_inline('Newer Version (%s) Installed', 'newer-installed', $api->slug), $this->status['version'])) :
+                            esc_html(sprintf(fs_text_inline('Newer Free Version (%s) Installed', 'newer-free-installed', $api->slug), $this->status['version']))),
                         false,
                         true
                     );
                 } else {
                     echo $this->get_cta(
-                        ( $this->status['is_premium_installed'] ?
-                            fs_esc_html_inline( 'Latest Version Installed', 'latest-installed', $api->slug ) :
-                            fs_esc_html_inline( 'Latest Free Version Installed', 'latest-free-installed', $api->slug ) ),
+                        ($this->status['is_premium_installed'] ?
+                            fs_esc_html_inline('Latest Version Installed', 'latest-installed', $api->slug) :
+                            fs_esc_html_inline('Latest Free Version Installed', 'latest-free-installed', $api->slug)),
                         false,
                         true
                     );
                 }
             }
 
-            echo $this->get_actions_dropdown( $api, null );
+            echo $this->get_actions_dropdown($api, null);
 
-            echo "</div>\n";
-            ?>
+            echo "</div>\n"; ?>
             <script type="text/javascript">
                 ( function( $, undef ) {
                     var $dropdowns = $( '.fs-dropdown' );
diff --git a/freemius/includes/i18n.php b/freemius/includes/i18n.php
index 34270f7fac25788bb85db20bbe95e11d38812694..1c28daf22b7355e5181cc6bcbf4f52332832e29b 100644
--- a/freemius/includes/i18n.php
+++ b/freemius/includes/i18n.php
@@ -1,605 +1,627 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.1.4
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.1.4
      *
      * @deprecated  This file is no longer in use. It's still in the project for backward compatibility.
-	 */
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	require_once dirname( __FILE__ ) . '/l10n.php';
+    require_once dirname(__FILE__) . '/l10n.php';
 
-	/**
-	 * All strings can now be overridden.
-	 *
-	 * For example, if we want to override:
-	 *      'you-are-step-away' => 'You are just one step away - %s',
-	 *
-	 * We can use the filter:
-	 *      fs_override_i18n( array(
-	 *          'opt-in-connect' => __( "Yes - I'm in!", '{your-text_domain}' ),
-	 *          'skip'           => __( 'Not today', '{your-text_domain}' ),
-	 *      ), '{plugin_slug}' );
-	 *
-	 * Or with the Freemius instance:
-	 *
-	 *      my_freemius->override_i18n( array(
-	 *          'opt-in-connect' => __( "Yes - I'm in!", '{your-text_domain}' ),
-	 *          'skip'           => __( 'Not today', '{your-text_domain}' ),
-	 *      ) );
-	 */
-	global $fs_text;
+    /**
+     * All strings can now be overridden.
+     *
+     * For example, if we want to override:
+     *      'you-are-step-away' => 'You are just one step away - %s',
+     *
+     * We can use the filter:
+     *      fs_override_i18n( array(
+     *          'opt-in-connect' => __( "Yes - I'm in!", '{your-text_domain}' ),
+     *          'skip'           => __( 'Not today', '{your-text_domain}' ),
+     *      ), '{plugin_slug}' );
+     *
+     * Or with the Freemius instance:
+     *
+     *      my_freemius->override_i18n( array(
+     *          'opt-in-connect' => __( "Yes - I'm in!", '{your-text_domain}' ),
+     *          'skip'           => __( 'Not today', '{your-text_domain}' ),
+     *      ) );
+     */
+    global $fs_text;
 
-	$fs_text = array(
-		'account'                       => _fs_text( 'Account' ),
-		'addon'                         => _fs_text( 'Add-On' ),
-		'contact-us'                    => _fs_text( 'Contact Us' ),
-		'contact-support'               => _fs_text( 'Contact Support' ),
-		'change-ownership'              => _fs_text( 'Change Ownership' ),
-		'support'                       => _fs_text( 'Support' ),
-		'support-forum'                 => _fs_text( 'Support Forum' ),
-		'add-ons'                       => _fs_text( 'Add-Ons' ),
-		'upgrade'                       => _fs_x( 'Upgrade', 'verb' ),
-		'awesome'                       => _fs_text( 'Awesome' ),
-		'pricing'                       => _fs_x( 'Pricing', 'noun' ),
-		'price'                         => _fs_x( 'Price', 'noun' ),
-		'unlimited-updates'             => _fs_text( 'Unlimited Updates' ),
-		'downgrade'                     => _fs_x( 'Downgrade', 'verb' ),
-		'cancel-subscription'           => _fs_x( 'Cancel Subscription', 'verb' ),
-		'cancel-trial'                  => _fs_text( 'Cancel Trial' ),
-		'free-trial'                    => _fs_text( 'Free Trial' ),
-		'start-free-x'                  => _fs_text( 'Start my free %s' ),
-		'no-commitment-x'               => _fs_text( 'No commitment for %s - cancel anytime' ),
-		'after-x-pay-as-little-y'       => _fs_text( 'After your free %s, pay as little as %s' ),
-		'details'                       => _fs_text( 'Details' ),
-		'account-details'               => _fs_text( 'Account Details' ),
-		'delete'                        => _fs_x( 'Delete', 'verb' ),
-		'show'                          => _fs_x( 'Show', 'verb' ),
-		'hide'                          => _fs_x( 'Hide', 'verb' ),
-		'edit'                          => _fs_x( 'Edit', 'verb' ),
-		'update'                        => _fs_x( 'Update', 'verb' ),
-		'date'                          => _fs_text( 'Date' ),
-		'amount'                        => _fs_text( 'Amount' ),
-		'invoice'                       => _fs_text( 'Invoice' ),
-		'billing'                       => _fs_text( 'Billing' ),
-		'payments'                      => _fs_text( 'Payments' ),
-		'delete-account'                => _fs_text( 'Delete Account' ),
-		'dismiss'                       => _fs_x( 'Dismiss', 'as close a window' ),
-		'plan'                          => _fs_x( 'Plan', 'as product pricing plan' ),
-		'change-plan'                   => _fs_text( 'Change Plan' ),
-		'download-x-version'            => _fs_x( 'Download %s Version', 'as download professional version' ),
-		'download-x-version-now'        => _fs_x( 'Download %s version now', 'as download professional version now' ),
-		'download-latest'               => _fs_x( 'Download Latest', 'as download latest version' ),
-		'you-have-x-license'            => _fs_x( 'You have a %s license.', 'E.g. you have a professional license.' ),
-		'new'                           => _fs_text( 'New' ),
-		'free'                          => _fs_text( 'Free' ),
-		'trial'                         => _fs_x( 'Trial', 'as trial plan' ),
-		'start-trial'                   => _fs_x( 'Start Trial', 'as starting a trial plan' ),
-		'purchase'                      => _fs_x( 'Purchase', 'verb' ),
-		'purchase-license'              => _fs_text( 'Purchase License' ),
-		'buy'                           => _fs_x( 'Buy', 'verb' ),
-		'buy-license'                   => _fs_text( 'Buy License' ),
-		'license-single-site'           => _fs_text( 'Single Site License' ),
-		'license-unlimited'             => _fs_text( 'Unlimited Licenses' ),
-		'license-x-sites'               => _fs_text( 'Up to %s Sites' ),
-		'renew-license-now'             => _fs_text( '%sRenew your license now%s to access version %s security & feature updates, and support.' ),
-		'ask-for-upgrade-email-address' => _fs_text( "Enter the email address you've used for the upgrade below and we will resend you the license key." ),
-		'x-plan'                        => _fs_x( '%s Plan', 'e.g. Professional Plan' ),
-		'you-are-step-away'             => _fs_text( 'You are just one step away - %s' ),
-		'activate-x-now'                => _fs_x( 'Complete "%s" Activation Now',
-			'%s - plugin name. As complete "Jetpack" activation now' ),
-		'few-plugin-tweaks'             => _fs_text( 'We made a few tweaks to the %s, %s' ),
-		'optin-x-now'                   => _fs_text( 'Opt in to make "%s" better!' ),
-		'error'                         => _fs_text( 'Error' ),
-		'failed-finding-main-path'      => _fs_text( 'Freemius SDK couldn\'t find the plugin\'s main file. Please contact sdk@freemius.com with the current error.' ),
-        'learn-more'                    => _fs_text( 'Learn more' ),
-        'license_not_whitelabeled'      => _fs_text( "Is this your client's site? %s if you wish to hide sensitive info like your billing address and invoices from the WP Admin."),
-        'license_whitelabeled'          => _fs_text( 'Your %s license was flagged as white-labeled to hide sensitive information from the WP Admin (e.g. your billing address and invoices). If you ever wish to revert it back, you can easily do it through your %s. If this was a mistake you can also %s.'),
+    $fs_text = array(
+        'account'                       => _fs_text('Account'),
+        'addon'                         => _fs_text('Add-On'),
+        'contact-us'                    => _fs_text('Contact Us'),
+        'contact-support'               => _fs_text('Contact Support'),
+        'change-ownership'              => _fs_text('Change Ownership'),
+        'support'                       => _fs_text('Support'),
+        'support-forum'                 => _fs_text('Support Forum'),
+        'add-ons'                       => _fs_text('Add-Ons'),
+        'upgrade'                       => _fs_x('Upgrade', 'verb'),
+        'awesome'                       => _fs_text('Awesome'),
+        'pricing'                       => _fs_x('Pricing', 'noun'),
+        'price'                         => _fs_x('Price', 'noun'),
+        'unlimited-updates'             => _fs_text('Unlimited Updates'),
+        'downgrade'                     => _fs_x('Downgrade', 'verb'),
+        'cancel-subscription'           => _fs_x('Cancel Subscription', 'verb'),
+        'cancel-trial'                  => _fs_text('Cancel Trial'),
+        'free-trial'                    => _fs_text('Free Trial'),
+        'start-free-x'                  => _fs_text('Start my free %s'),
+        'no-commitment-x'               => _fs_text('No commitment for %s - cancel anytime'),
+        'after-x-pay-as-little-y'       => _fs_text('After your free %s, pay as little as %s'),
+        'details'                       => _fs_text('Details'),
+        'account-details'               => _fs_text('Account Details'),
+        'delete'                        => _fs_x('Delete', 'verb'),
+        'show'                          => _fs_x('Show', 'verb'),
+        'hide'                          => _fs_x('Hide', 'verb'),
+        'edit'                          => _fs_x('Edit', 'verb'),
+        'update'                        => _fs_x('Update', 'verb'),
+        'date'                          => _fs_text('Date'),
+        'amount'                        => _fs_text('Amount'),
+        'invoice'                       => _fs_text('Invoice'),
+        'billing'                       => _fs_text('Billing'),
+        'payments'                      => _fs_text('Payments'),
+        'delete-account'                => _fs_text('Delete Account'),
+        'dismiss'                       => _fs_x('Dismiss', 'as close a window'),
+        'plan'                          => _fs_x('Plan', 'as product pricing plan'),
+        'change-plan'                   => _fs_text('Change Plan'),
+        'download-x-version'            => _fs_x('Download %s Version', 'as download professional version'),
+        'download-x-version-now'        => _fs_x('Download %s version now', 'as download professional version now'),
+        'download-latest'               => _fs_x('Download Latest', 'as download latest version'),
+        'you-have-x-license'            => _fs_x('You have a %s license.', 'E.g. you have a professional license.'),
+        'new'                           => _fs_text('New'),
+        'free'                          => _fs_text('Free'),
+        'trial'                         => _fs_x('Trial', 'as trial plan'),
+        'start-trial'                   => _fs_x('Start Trial', 'as starting a trial plan'),
+        'purchase'                      => _fs_x('Purchase', 'verb'),
+        'purchase-license'              => _fs_text('Purchase License'),
+        'buy'                           => _fs_x('Buy', 'verb'),
+        'buy-license'                   => _fs_text('Buy License'),
+        'license-single-site'           => _fs_text('Single Site License'),
+        'license-unlimited'             => _fs_text('Unlimited Licenses'),
+        'license-x-sites'               => _fs_text('Up to %s Sites'),
+        'renew-license-now'             => _fs_text('%sRenew your license now%s to access version %s security & feature updates, and support.'),
+        'ask-for-upgrade-email-address' => _fs_text("Enter the email address you've used for the upgrade below and we will resend you the license key."),
+        'x-plan'                        => _fs_x('%s Plan', 'e.g. Professional Plan'),
+        'you-are-step-away'             => _fs_text('You are just one step away - %s'),
+        'activate-x-now'                => _fs_x(
+            'Complete "%s" Activation Now',
+            '%s - plugin name. As complete "Jetpack" activation now'
+        ),
+        'few-plugin-tweaks'             => _fs_text('We made a few tweaks to the %s, %s'),
+        'optin-x-now'                   => _fs_text('Opt in to make "%s" better!'),
+        'error'                         => _fs_text('Error'),
+        'failed-finding-main-path'      => _fs_text('Freemius SDK couldn\'t find the plugin\'s main file. Please contact sdk@freemius.com with the current error.'),
+        'learn-more'                    => _fs_text('Learn more'),
+        'license_not_whitelabeled'      => _fs_text("Is this your client's site? %s if you wish to hide sensitive info like your billing address and invoices from the WP Admin."),
+        'license_whitelabeled'          => _fs_text('Your %s license was flagged as white-labeled to hide sensitive information from the WP Admin (e.g. your billing address and invoices). If you ever wish to revert it back, you can easily do it through your %s. If this was a mistake you can also %s.'),
 
-		#region Affiliation
-        'affiliation'                        => _fs_text( 'Affiliation' ),
-        'affiliate'                          => _fs_text( 'Affiliate' ),
-        'affiliate-tracking'                 => _fs_text( '%s tracking cookie after the first visit to maximize earnings potential.' ),
-        'renewals-commission'                => _fs_text( 'Get commission for automated subscription renewals.' ),
-        'affiliate-application-accepted'     => _fs_text( "Your affiliate application for %s has been accepted! Log in to your affiliate area at: %s." ),
-        'affiliate-application-thank-you'    => _fs_text( "Thank you for applying for our affiliate program, we'll review your details during the next 14 days and will get back to you with further information." ),
-        'affiliate-application-rejected'     => _fs_text( "Thank you for applying for our affiliate program, unfortunately, we've decided at this point to reject your application. Please try again in 30 days." ),
-        'affiliate-account-suspended'        => _fs_text( 'Your affiliation account was temporarily suspended.' ),
-        'affiliate-account-blocked'          => _fs_text( 'Due to violation of our affiliation terms, we decided to temporarily block your affiliation account. If you have any questions, please contact support.' ),
-        'become-an-ambassador'               => _fs_text( 'Like the %s? Become our ambassador and earn cash ;-)' ),
-        'become-an-ambassador-admin-notice'  => _fs_text( 'Hey there, did you know that %s has an affiliate program? If you like the %s you can become our ambassador and earn some cash!' ),
-        'refer-new-customers'                => _fs_text( 'Refer new customers to our %s and earn %s commission on each successful sale you refer!' ),
-        'program-summary'                    => _fs_text( 'Program Summary' ),
-        'commission-on-new-license-purchase' => _fs_text( '%s commission when a customer purchases a new license.' ),
-        'unlimited-commissions'              => _fs_text( 'Unlimited commissions.' ),
-        'minimum-payout-amount'              => _fs_text( '%s minimum payout amount.' ),
-        'payouts-unit-and-processing'        => _fs_text( 'Payouts are in USD and processed monthly via PayPal.' ),
-        'commission-payment'                 => _fs_text( 'As we reserve 30 days for potential refunds, we only pay commissions that are older than 30 days.' ),
-        'become-an-affiliate'                => _fs_text( 'Become an affiliate' ),
-        'apply-to-become-an-affiliate'       => _fs_text( 'Apply to become an affiliate' ),
-        'full-name'                          => _fs_text( 'Full name' ),
-        'paypal-account-email-address'       => _fs_text( 'PayPal account email address' ),
-        'promotion-methods'                  => _fs_text( 'Promotion methods' ),
-        'social-media'                       => _fs_text( 'Social media (Facebook, Twitter, etc.)' ),
-        'mobile-apps'                        => _fs_text( 'Mobile apps' ),
-        'statistics-information-field-label' => _fs_text( 'Website, email, and social media statistics (optional)' ),
-        'statistics-information-field-desc'  => _fs_text( 'Please feel free to provide any relevant website or social media statistics, e.g. monthly unique site visits, number of email subscribers, followers, etc. (we will keep this information confidential).' ),
-        'promotion-method-desc-field-label'  => _fs_text( 'How will you promote us?' ),
-        'promotion-method-desc-field-desc'   => _fs_text( 'Please provide details on how you intend to promote %s (please be as specific as possible).' ),
-        'domain-field-label'                 => _fs_text( 'Where are you going to promote the %s?' ),
-        'domain-field-desc'                  => _fs_text( 'Enter the domain of your website or other websites from where you plan to promote the %s.' ),
-        'extra-domain-fields-label'          => _fs_text( 'Extra Domains' ),
-        'extra-domain-fields-desc'           => _fs_text( 'Extra domains where you will be marketing the product from.' ),
-        'add-another-domain'                 => _fs_text( 'Add another domain' ),
-        'remove'                             => _fs_x( 'Remove', 'Remove domain' ),
-        'email-address-is-required'          => _fs_text( 'Email address is required.' ),
-        'domain-is-required'                 => _fs_text( 'Domain is required.' ),
-        'invalid-domain'                     => _fs_text( 'Invalid domain' ),
-        'paypal-email-address-is-required'   => _fs_text( 'PayPal email address is required.' ),
-        'processing'                         => _fs_text( 'Processing...' ),
-        'non-expiring'                       => _fs_text( 'Non-expiring' ),
-        'account-is-pending-activation'      => _fs_text( 'Account is pending activation.' ),
+        #region Affiliation
+        'affiliation'                        => _fs_text('Affiliation'),
+        'affiliate'                          => _fs_text('Affiliate'),
+        'affiliate-tracking'                 => _fs_text('%s tracking cookie after the first visit to maximize earnings potential.'),
+        'renewals-commission'                => _fs_text('Get commission for automated subscription renewals.'),
+        'affiliate-application-accepted'     => _fs_text("Your affiliate application for %s has been accepted! Log in to your affiliate area at: %s."),
+        'affiliate-application-thank-you'    => _fs_text("Thank you for applying for our affiliate program, we'll review your details during the next 14 days and will get back to you with further information."),
+        'affiliate-application-rejected'     => _fs_text("Thank you for applying for our affiliate program, unfortunately, we've decided at this point to reject your application. Please try again in 30 days."),
+        'affiliate-account-suspended'        => _fs_text('Your affiliation account was temporarily suspended.'),
+        'affiliate-account-blocked'          => _fs_text('Due to violation of our affiliation terms, we decided to temporarily block your affiliation account. If you have any questions, please contact support.'),
+        'become-an-ambassador'               => _fs_text('Like the %s? Become our ambassador and earn cash ;-)'),
+        'become-an-ambassador-admin-notice'  => _fs_text('Hey there, did you know that %s has an affiliate program? If you like the %s you can become our ambassador and earn some cash!'),
+        'refer-new-customers'                => _fs_text('Refer new customers to our %s and earn %s commission on each successful sale you refer!'),
+        'program-summary'                    => _fs_text('Program Summary'),
+        'commission-on-new-license-purchase' => _fs_text('%s commission when a customer purchases a new license.'),
+        'unlimited-commissions'              => _fs_text('Unlimited commissions.'),
+        'minimum-payout-amount'              => _fs_text('%s minimum payout amount.'),
+        'payouts-unit-and-processing'        => _fs_text('Payouts are in USD and processed monthly via PayPal.'),
+        'commission-payment'                 => _fs_text('As we reserve 30 days for potential refunds, we only pay commissions that are older than 30 days.'),
+        'become-an-affiliate'                => _fs_text('Become an affiliate'),
+        'apply-to-become-an-affiliate'       => _fs_text('Apply to become an affiliate'),
+        'full-name'                          => _fs_text('Full name'),
+        'paypal-account-email-address'       => _fs_text('PayPal account email address'),
+        'promotion-methods'                  => _fs_text('Promotion methods'),
+        'social-media'                       => _fs_text('Social media (Facebook, Twitter, etc.)'),
+        'mobile-apps'                        => _fs_text('Mobile apps'),
+        'statistics-information-field-label' => _fs_text('Website, email, and social media statistics (optional)'),
+        'statistics-information-field-desc'  => _fs_text('Please feel free to provide any relevant website or social media statistics, e.g. monthly unique site visits, number of email subscribers, followers, etc. (we will keep this information confidential).'),
+        'promotion-method-desc-field-label'  => _fs_text('How will you promote us?'),
+        'promotion-method-desc-field-desc'   => _fs_text('Please provide details on how you intend to promote %s (please be as specific as possible).'),
+        'domain-field-label'                 => _fs_text('Where are you going to promote the %s?'),
+        'domain-field-desc'                  => _fs_text('Enter the domain of your website or other websites from where you plan to promote the %s.'),
+        'extra-domain-fields-label'          => _fs_text('Extra Domains'),
+        'extra-domain-fields-desc'           => _fs_text('Extra domains where you will be marketing the product from.'),
+        'add-another-domain'                 => _fs_text('Add another domain'),
+        'remove'                             => _fs_x('Remove', 'Remove domain'),
+        'email-address-is-required'          => _fs_text('Email address is required.'),
+        'domain-is-required'                 => _fs_text('Domain is required.'),
+        'invalid-domain'                     => _fs_text('Invalid domain'),
+        'paypal-email-address-is-required'   => _fs_text('PayPal email address is required.'),
+        'processing'                         => _fs_text('Processing...'),
+        'non-expiring'                       => _fs_text('Non-expiring'),
+        'account-is-pending-activation'      => _fs_text('Account is pending activation.'),
         #endregion Affiliation
 
-		#region Account
-		'expiration'                   => _fs_x( 'Expiration', 'as expiration date' ),
-		'license'                      => _fs_x( 'License', 'as software license' ),
-		'not-verified'                 => _fs_text( 'not verified' ),
-		'verify-email'                 => _fs_text( 'Verify Email' ),
-		'expires-in'                   => _fs_x( 'Expires in %s', 'e.g. expires in 2 months' ),
-		'renews-in'                    => _fs_x( 'Auto renews in %s', 'e.g. auto renews in 2 months' ),
-		'no-expiration'                => _fs_text( 'No expiration' ),
-		'expired'                      => _fs_text( 'Expired' ),
-		'cancelled'                    => _fs_text( 'Cancelled' ),
-		'in-x'                         => _fs_x( 'In %s', 'e.g. In 2 hours' ),
-		'x-ago'                        => _fs_x( '%s ago', 'e.g. 2 min ago' ),
-		/* translators: %s: Version number (e.g. 4.6 or higher) */
-		'x-or-higher'                  => _fs_text( '%s or higher' ),
-		'version'                      => _fs_x( 'Version', 'as plugin version' ),
-		'name'                         => _fs_text( 'Name' ),
-		'email'                        => _fs_text( 'Email' ),
-		'email-address'                => _fs_text( 'Email address' ),
-		'verified'                     => _fs_text( 'Verified' ),
-		'module'                       => _fs_text( 'Module' ),
-		'module-type'                  => _fs_text( 'Module Type' ),
-		'plugin'                       => _fs_text( 'Plugin' ),
-		'plugins'                      => _fs_text( 'Plugins' ),
-		'theme'                        => _fs_text( 'Theme' ),
-		'themes'                       => _fs_text( 'Themes' ),
-		'path'                         => _fs_x( 'Path', 'as file/folder path' ),
-		'title'                        => _fs_text( 'Title' ),
-		'free-version'                 => _fs_text( 'Free version' ),
-		'premium-version'              => _fs_text( 'Premium version' ),
-		'slug'                         => _fs_x( 'Slug', 'as WP plugin slug' ),
-		'id'                           => _fs_text( 'ID' ),
-		'users'                        => _fs_text( 'Users' ),
-		'module-installs'              => _fs_text( '%s Installs' ),
-		'sites'                        => _fs_x( 'Sites', 'like websites' ),
-		'user-id'                      => _fs_text( 'User ID' ),
-		'site-id'                      => _fs_text( 'Site ID' ),
-		'public-key'                   => _fs_text( 'Public Key' ),
-		'secret-key'                   => _fs_text( 'Secret Key' ),
-		'no-secret'                    => _fs_x( 'No Secret', 'as secret encryption key missing' ),
-		'no-id'                        => _fs_text( 'No ID' ),
-		'sync-license'                 => _fs_x( 'Sync License', 'as synchronize license' ),
-		'sync'                         => _fs_x( 'Sync', 'as synchronize' ),
-		'activate-license'             => _fs_text( 'Activate License' ),
-		'activate-free-version'        => _fs_text( 'Activate Free Version' ),
-		'activate-license-message'     => _fs_text( 'Please enter the license key that you received in the email right after the purchase:' ),
-		'activating-license'           => _fs_text( 'Activating license...' ),
-		'change-license'               => _fs_text( 'Change License' ),
-		'update-license'               => _fs_text( 'Update License' ),
-		'deactivate-license'           => _fs_text( 'Deactivate License' ),
-		'activate'                     => _fs_text( 'Activate' ),
-		'deactivate'                   => _fs_text( 'Deactivate' ),
-		'skip-deactivate'              => _fs_text( 'Skip & Deactivate' ),
-		'skip-and-x'                   => _fs_text( 'Skip & %s' ),
-		'no-deactivate'                => _fs_text( 'No - just deactivate' ),
-		'yes-do-your-thing'            => _fs_text( 'Yes - do your thing' ),
-		'active'                       => _fs_x( 'Active', 'active mode' ),
-		'is-active'                    => _fs_x( 'Is Active', 'is active mode?' ),
-		'install-now'                  => _fs_text( 'Install Now' ),
-		'install-update-now'           => _fs_text( 'Install Update Now' ),
-		'more-information-about-x'     => _fs_text( 'More information about %s' ),
-		'localhost'                    => _fs_text( 'Localhost' ),
-		'activate-x-plan'              => _fs_x( 'Activate %s Plan', 'as activate Professional plan' ),
-		'x-left'                       => _fs_x( '%s left', 'as 5 licenses left' ),
-		'last-license'                 => _fs_text( 'Last license' ),
-		'what-is-your-x'               => _fs_text( 'What is your %s?' ),
-		'activate-this-addon'          => _fs_text( 'Activate this add-on' ),
-		'deactivate-license-confirm'   => _fs_text( 'Deactivating your license will block all premium features, but will enable you to activate the license on another site. Are you sure you want to proceed?' ),
-		'delete-account-x-confirm'     => _fs_text( 'Deleting the account will automatically deactivate your %s plan license so you can use it on other sites. If you want to terminate the recurring payments as well, click the "Cancel" button, and first "Downgrade" your account. Are you sure you would like to continue with the deletion?' ),
-		'delete-account-confirm'       => _fs_text( 'Deletion is not temporary. Only delete if you no longer want to use this %s anymore. Are you sure you would like to continue with the deletion?' ),
-		'downgrade-x-confirm'          => _fs_text( 'Downgrading your plan will immediately stop all future recurring payments and your %s plan license will expire in %s.' ),
-		'cancel-trial-confirm'         => _fs_text( 'Cancelling the trial will immediately block access to all premium features. Are you sure?' ),
-		'after-downgrade-non-blocking' => _fs_text( 'You can still enjoy all %s features but you will not have access to %s security & feature updates, nor support.' ),
-		'after-downgrade-blocking'     => _fs_text( 'Once your license expires you can still use the Free version but you will NOT have access to the %s features.' ),
-		'proceed-confirmation'         => _fs_text( 'Are you sure you want to proceed?' ),
-		#endregion Account
+        #region Account
+        'expiration'                   => _fs_x('Expiration', 'as expiration date'),
+        'license'                      => _fs_x('License', 'as software license'),
+        'not-verified'                 => _fs_text('not verified'),
+        'verify-email'                 => _fs_text('Verify Email'),
+        'expires-in'                   => _fs_x('Expires in %s', 'e.g. expires in 2 months'),
+        'renews-in'                    => _fs_x('Auto renews in %s', 'e.g. auto renews in 2 months'),
+        'no-expiration'                => _fs_text('No expiration'),
+        'expired'                      => _fs_text('Expired'),
+        'cancelled'                    => _fs_text('Cancelled'),
+        'in-x'                         => _fs_x('In %s', 'e.g. In 2 hours'),
+        'x-ago'                        => _fs_x('%s ago', 'e.g. 2 min ago'),
+        /* translators: %s: Version number (e.g. 4.6 or higher) */
+        'x-or-higher'                  => _fs_text('%s or higher'),
+        'version'                      => _fs_x('Version', 'as plugin version'),
+        'name'                         => _fs_text('Name'),
+        'email'                        => _fs_text('Email'),
+        'email-address'                => _fs_text('Email address'),
+        'verified'                     => _fs_text('Verified'),
+        'module'                       => _fs_text('Module'),
+        'module-type'                  => _fs_text('Module Type'),
+        'plugin'                       => _fs_text('Plugin'),
+        'plugins'                      => _fs_text('Plugins'),
+        'theme'                        => _fs_text('Theme'),
+        'themes'                       => _fs_text('Themes'),
+        'path'                         => _fs_x('Path', 'as file/folder path'),
+        'title'                        => _fs_text('Title'),
+        'free-version'                 => _fs_text('Free version'),
+        'premium-version'              => _fs_text('Premium version'),
+        'slug'                         => _fs_x('Slug', 'as WP plugin slug'),
+        'id'                           => _fs_text('ID'),
+        'users'                        => _fs_text('Users'),
+        'module-installs'              => _fs_text('%s Installs'),
+        'sites'                        => _fs_x('Sites', 'like websites'),
+        'user-id'                      => _fs_text('User ID'),
+        'site-id'                      => _fs_text('Site ID'),
+        'public-key'                   => _fs_text('Public Key'),
+        'secret-key'                   => _fs_text('Secret Key'),
+        'no-secret'                    => _fs_x('No Secret', 'as secret encryption key missing'),
+        'no-id'                        => _fs_text('No ID'),
+        'sync-license'                 => _fs_x('Sync License', 'as synchronize license'),
+        'sync'                         => _fs_x('Sync', 'as synchronize'),
+        'activate-license'             => _fs_text('Activate License'),
+        'activate-free-version'        => _fs_text('Activate Free Version'),
+        'activate-license-message'     => _fs_text('Please enter the license key that you received in the email right after the purchase:'),
+        'activating-license'           => _fs_text('Activating license...'),
+        'change-license'               => _fs_text('Change License'),
+        'update-license'               => _fs_text('Update License'),
+        'deactivate-license'           => _fs_text('Deactivate License'),
+        'activate'                     => _fs_text('Activate'),
+        'deactivate'                   => _fs_text('Deactivate'),
+        'skip-deactivate'              => _fs_text('Skip & Deactivate'),
+        'skip-and-x'                   => _fs_text('Skip & %s'),
+        'no-deactivate'                => _fs_text('No - just deactivate'),
+        'yes-do-your-thing'            => _fs_text('Yes - do your thing'),
+        'active'                       => _fs_x('Active', 'active mode'),
+        'is-active'                    => _fs_x('Is Active', 'is active mode?'),
+        'install-now'                  => _fs_text('Install Now'),
+        'install-update-now'           => _fs_text('Install Update Now'),
+        'more-information-about-x'     => _fs_text('More information about %s'),
+        'localhost'                    => _fs_text('Localhost'),
+        'activate-x-plan'              => _fs_x('Activate %s Plan', 'as activate Professional plan'),
+        'x-left'                       => _fs_x('%s left', 'as 5 licenses left'),
+        'last-license'                 => _fs_text('Last license'),
+        'what-is-your-x'               => _fs_text('What is your %s?'),
+        'activate-this-addon'          => _fs_text('Activate this add-on'),
+        'deactivate-license-confirm'   => _fs_text('Deactivating your license will block all premium features, but will enable you to activate the license on another site. Are you sure you want to proceed?'),
+        'delete-account-x-confirm'     => _fs_text('Deleting the account will automatically deactivate your %s plan license so you can use it on other sites. If you want to terminate the recurring payments as well, click the "Cancel" button, and first "Downgrade" your account. Are you sure you would like to continue with the deletion?'),
+        'delete-account-confirm'       => _fs_text('Deletion is not temporary. Only delete if you no longer want to use this %s anymore. Are you sure you would like to continue with the deletion?'),
+        'downgrade-x-confirm'          => _fs_text('Downgrading your plan will immediately stop all future recurring payments and your %s plan license will expire in %s.'),
+        'cancel-trial-confirm'         => _fs_text('Cancelling the trial will immediately block access to all premium features. Are you sure?'),
+        'after-downgrade-non-blocking' => _fs_text('You can still enjoy all %s features but you will not have access to %s security & feature updates, nor support.'),
+        'after-downgrade-blocking'     => _fs_text('Once your license expires you can still use the Free version but you will NOT have access to the %s features.'),
+        'proceed-confirmation'         => _fs_text('Are you sure you want to proceed?'),
+        #endregion Account
 
-		'add-ons-for-x'                            => _fs_text( 'Add Ons for %s' ),
-		'add-ons-missing'                          => _fs_text( 'We could\'nt load the add-ons list. It\'s probably an issue on our side, please try to come back in few minutes.' ),
-		#region Plugin Deactivation
-		'anonymous-feedback'                       => _fs_text( 'Anonymous feedback' ),
-		'quick-feedback'                           => _fs_text( 'Quick feedback' ),
-		'deactivation-share-reason'                => _fs_text( 'If you have a moment, please let us know why you are %s' ),
-		'deactivating'                             => _fs_text( 'deactivating' ),
-		'deactivation'                             => _fs_text( 'Deactivation' ),
-		'theme-switch'                             => _fs_text( 'Theme Switch' ),
-		'switching'                                => _fs_text( 'switching' ),
-		'switch'                                   => _fs_text( 'Switch' ),
-		'activate-x'                               => _fs_text( 'Activate %s' ),
-		'deactivation-modal-button-confirm'        => _fs_text( 'Yes - %s' ),
-		'deactivation-modal-button-submit'         => _fs_text( 'Submit & %s' ),
-		'cancel'                                   => _fs_text( 'Cancel' ),
-		'reason-no-longer-needed'                  => _fs_text( 'I no longer need the %s' ),
-		'reason-found-a-better-plugin'             => _fs_text( 'I found a better %s' ),
-		'reason-needed-for-a-short-period'         => _fs_text( 'I only needed the %s for a short period' ),
-		'reason-broke-my-site'                     => _fs_text( 'The %s broke my site' ),
-		'reason-suddenly-stopped-working'          => _fs_text( 'The %s suddenly stopped working' ),
-		'reason-cant-pay-anymore'                  => _fs_text( "I can't pay for it anymore" ),
-		'reason-temporary-deactivation'            => _fs_text( "It's a temporary deactivation. I'm just debugging an issue." ),
-		'reason-temporary-x'                       => _fs_text( "It's a temporary %s. I'm just debugging an issue." ),
-		'reason-other'                             => _fs_x( 'Other',
-			'the text of the "other" reason for deactivating the module that is shown in the modal box.' ),
-		'ask-for-reason-message'                   => _fs_text( 'Kindly tell us the reason so we can improve.' ),
-		'placeholder-plugin-name'                  => _fs_text( "What's the %s's name?" ),
-		'placeholder-comfortable-price'            => _fs_text( 'What price would you feel comfortable paying?' ),
-		'reason-couldnt-make-it-work'              => _fs_text( "I couldn't understand how to make it work" ),
-		'reason-great-but-need-specific-feature'   => _fs_text( "The %s is great, but I need specific feature that you don't support" ),
-		'reason-not-working'                       => _fs_text( 'The %s is not working' ),
-		'reason-not-what-i-was-looking-for'        => _fs_text( "It's not what I was looking for" ),
-		'reason-didnt-work-as-expected'            => _fs_text( "The %s didn't work as expected" ),
-		'placeholder-feature'                      => _fs_text( 'What feature?' ),
-		'placeholder-share-what-didnt-work'        => _fs_text( "Kindly share what didn't work so we can fix it for future users..." ),
-		'placeholder-what-youve-been-looking-for'  => _fs_text( "What you've been looking for?" ),
-		'placeholder-what-did-you-expect'          => _fs_text( "What did you expect?" ),
-		'reason-didnt-work'                        => _fs_text( "The %s didn't work" ),
-		'reason-dont-like-to-share-my-information' => _fs_text( "I don't like to share my information with you" ),
-		'dont-have-to-share-any-data'              => _fs_text( "You might have missed it, but you don't have to share any data and can just %s the opt-in." ),
-		#endregion Plugin Deactivation
+        'add-ons-for-x'                            => _fs_text('Add Ons for %s'),
+        'add-ons-missing'                          => _fs_text('We could\'nt load the add-ons list. It\'s probably an issue on our side, please try to come back in few minutes.'),
+        #region Plugin Deactivation
+        'anonymous-feedback'                       => _fs_text('Anonymous feedback'),
+        'quick-feedback'                           => _fs_text('Quick feedback'),
+        'deactivation-share-reason'                => _fs_text('If you have a moment, please let us know why you are %s'),
+        'deactivating'                             => _fs_text('deactivating'),
+        'deactivation'                             => _fs_text('Deactivation'),
+        'theme-switch'                             => _fs_text('Theme Switch'),
+        'switching'                                => _fs_text('switching'),
+        'switch'                                   => _fs_text('Switch'),
+        'activate-x'                               => _fs_text('Activate %s'),
+        'deactivation-modal-button-confirm'        => _fs_text('Yes - %s'),
+        'deactivation-modal-button-submit'         => _fs_text('Submit & %s'),
+        'cancel'                                   => _fs_text('Cancel'),
+        'reason-no-longer-needed'                  => _fs_text('I no longer need the %s'),
+        'reason-found-a-better-plugin'             => _fs_text('I found a better %s'),
+        'reason-needed-for-a-short-period'         => _fs_text('I only needed the %s for a short period'),
+        'reason-broke-my-site'                     => _fs_text('The %s broke my site'),
+        'reason-suddenly-stopped-working'          => _fs_text('The %s suddenly stopped working'),
+        'reason-cant-pay-anymore'                  => _fs_text("I can't pay for it anymore"),
+        'reason-temporary-deactivation'            => _fs_text("It's a temporary deactivation. I'm just debugging an issue."),
+        'reason-temporary-x'                       => _fs_text("It's a temporary %s. I'm just debugging an issue."),
+        'reason-other'                             => _fs_x(
+            'Other',
+            'the text of the "other" reason for deactivating the module that is shown in the modal box.'
+        ),
+        'ask-for-reason-message'                   => _fs_text('Kindly tell us the reason so we can improve.'),
+        'placeholder-plugin-name'                  => _fs_text("What's the %s's name?"),
+        'placeholder-comfortable-price'            => _fs_text('What price would you feel comfortable paying?'),
+        'reason-couldnt-make-it-work'              => _fs_text("I couldn't understand how to make it work"),
+        'reason-great-but-need-specific-feature'   => _fs_text("The %s is great, but I need specific feature that you don't support"),
+        'reason-not-working'                       => _fs_text('The %s is not working'),
+        'reason-not-what-i-was-looking-for'        => _fs_text("It's not what I was looking for"),
+        'reason-didnt-work-as-expected'            => _fs_text("The %s didn't work as expected"),
+        'placeholder-feature'                      => _fs_text('What feature?'),
+        'placeholder-share-what-didnt-work'        => _fs_text("Kindly share what didn't work so we can fix it for future users..."),
+        'placeholder-what-youve-been-looking-for'  => _fs_text("What you've been looking for?"),
+        'placeholder-what-did-you-expect'          => _fs_text("What did you expect?"),
+        'reason-didnt-work'                        => _fs_text("The %s didn't work"),
+        'reason-dont-like-to-share-my-information' => _fs_text("I don't like to share my information with you"),
+        'dont-have-to-share-any-data'              => _fs_text("You might have missed it, but you don't have to share any data and can just %s the opt-in."),
+        #endregion Plugin Deactivation
 
-		#region Connect
-		'hey-x'                                    => _fs_x( 'Hey %s,', 'greeting' ),
-		'thanks-x'                                 => _fs_x( 'Thanks %s!', 'a greeting. E.g. Thanks John!' ),
-		'connect-message'                          => _fs_text( 'Never miss an important update - opt in to our security and feature updates notifications, and non-sensitive diagnostic tracking with %4$s.' ),
-		'connect-message_on-update'                => _fs_text( 'Please help us improve %1$s! If you opt in, some data about your usage of %1$s will be sent to %4$s. If you skip this, that\'s okay! %1$s will still work just fine.' ),
-		'pending-activation-message'               => _fs_text( 'You should receive an activation email for %s to your mailbox at %s. Please make sure you click the activation button in that email to %s.' ),
-		'complete-the-install'                     => _fs_text( 'complete the install' ),
-		'start-the-trial'                          => _fs_text( 'start the trial' ),
-		'thanks-for-purchasing'                    => _fs_text( 'Thanks for purchasing %s! To get started, please enter your license key:' ),
-		'license-sync-disclaimer'                  => _fs_text( 'The %1$s will be periodically sending data to %2$s to check for security and feature updates, and verify the validity of your license.' ),
-		'what-permissions'                         => _fs_text( 'What permissions are being granted?' ),
-		'permissions-profile'                      => _fs_text( 'Your Profile Overview' ),
-		'permissions-profile_desc'                 => _fs_text( 'Name and email address' ),
-		'permissions-site'                         => _fs_text( 'Your Site Overview' ),
-		'permissions-site_desc'                    => _fs_text( 'Site URL, WP version, PHP info, plugins & themes' ),
-		'permissions-events'                       => _fs_text( 'Current %s Events' ),
-		'permissions-events_desc'                  => _fs_text( 'Activation, deactivation and uninstall' ),
-		'permissions-plugins_themes'               => _fs_text( 'Plugins & Themes' ),
-		'permissions-plugins_themes_desc'          => _fs_text( 'Titles, versions and state.' ),
-		'permissions-admin-notices'                => _fs_text( 'Admin Notices' ),
-		'permissions-newsletter'                   => _fs_text( 'Newsletter' ),
-		'permissions-newsletter_desc'              => _fs_text( 'Updates, announcements, marketing, no spam' ),
-		'privacy-policy'                           => _fs_text( 'Privacy Policy' ),
-		'tos'                                      => _fs_text( 'Terms of Service' ),
-		'activating'                               => _fs_x( 'Activating', 'as activating plugin' ),
-		'sending-email'                            => _fs_x( 'Sending email', 'as in the process of sending an email' ),
-		'opt-in-connect'                           => _fs_x( 'Allow & Continue', 'button label' ),
-		'agree-activate-license'                   => _fs_x( 'Agree & Activate License', 'button label' ),
-		'skip'                                     => _fs_x( 'Skip', 'verb' ),
-		'click-here-to-use-plugin-anonymously'     => _fs_text( 'Click here to use the plugin anonymously' ),
-		'resend-activation-email'                  => _fs_text( 'Re-send activation email' ),
-		'license-key'                              => _fs_text( 'License key' ),
-		'send-license-key'                         => _fs_text( 'Send License Key' ),
-		'sending-license-key'                      => _fs_text( 'Sending license key' ),
-		'have-license-key'                         => _fs_text( 'Have a license key?' ),
-		'dont-have-license-key'                    => _fs_text( 'Don\'t have a license key?' ),
-		'cant-find-license-key'                    => _fs_text( "Can't find your license key?" ),
-		'email-not-found'                          => _fs_text( "We couldn't find your email address in the system, are you sure it's the right address?" ),
-		'no-active-licenses'                       => _fs_text( "We can't see any active licenses associated with that email address, are you sure it's the right address?" ),
-		'opt-in'                                   => _fs_text( 'Opt In' ),
-		'opt-out'                                  => _fs_text( 'Opt Out' ),
-		'opt-out-cancel'                           => _fs_text( 'On second thought - I want to continue helping' ),
-		'opting-out'                               => _fs_text( 'Opting out...' ),
-		'opting-in'                                => _fs_text( 'Opting in...' ),
-		'opt-out-message-appreciation'             => _fs_text( 'We appreciate your help in making the %s better by letting us track some usage data.' ),
-		'opt-out-message-usage-tracking'           => _fs_text( "Usage tracking is done in the name of making %s better. Making a better user experience, prioritizing new features, and more good things. We'd really appreciate if you'll reconsider letting us continue with the tracking." ),
-		'opt-out-message-clicking-opt-out'         => _fs_text( 'By clicking "Opt Out", we will no longer be sending any data from %s to %s.' ),
-		'apply-on-all-sites-in-the-network'        => _fs_text( 'Apply on all sites in the network.' ),
-		'delegate-to-site-admins'                  => _fs_text( 'Delegate to Site Admins' ),
-		'delegate-to-site-admins-and-continue'     => _fs_text( 'Delegate to Site Admins & Continue' ),
-		'continue'                                 => _fs_text( 'Continue' ),
-		'allow'                                    => _fs_text( 'allow' ),
-		'delegate'                                 => _fs_text( 'delegate' ),
-		#endregion Connect
+        #region Connect
+        'hey-x'                                    => _fs_x('Hey %s,', 'greeting'),
+        'thanks-x'                                 => _fs_x('Thanks %s!', 'a greeting. E.g. Thanks John!'),
+        'connect-message'                          => _fs_text('Never miss an important update - opt in to our security and feature updates notifications, and non-sensitive diagnostic tracking with %4$s.'),
+        'connect-message_on-update'                => _fs_text('Please help us improve %1$s! If you opt in, some data about your usage of %1$s will be sent to %4$s. If you skip this, that\'s okay! %1$s will still work just fine.'),
+        'pending-activation-message'               => _fs_text('You should receive an activation email for %s to your mailbox at %s. Please make sure you click the activation button in that email to %s.'),
+        'complete-the-install'                     => _fs_text('complete the install'),
+        'start-the-trial'                          => _fs_text('start the trial'),
+        'thanks-for-purchasing'                    => _fs_text('Thanks for purchasing %s! To get started, please enter your license key:'),
+        'license-sync-disclaimer'                  => _fs_text('The %1$s will be periodically sending data to %2$s to check for security and feature updates, and verify the validity of your license.'),
+        'what-permissions'                         => _fs_text('What permissions are being granted?'),
+        'permissions-profile'                      => _fs_text('Your Profile Overview'),
+        'permissions-profile_desc'                 => _fs_text('Name and email address'),
+        'permissions-site'                         => _fs_text('Your Site Overview'),
+        'permissions-site_desc'                    => _fs_text('Site URL, WP version, PHP info, plugins & themes'),
+        'permissions-events'                       => _fs_text('Current %s Events'),
+        'permissions-events_desc'                  => _fs_text('Activation, deactivation and uninstall'),
+        'permissions-plugins_themes'               => _fs_text('Plugins & Themes'),
+        'permissions-plugins_themes_desc'          => _fs_text('Titles, versions and state.'),
+        'permissions-admin-notices'                => _fs_text('Admin Notices'),
+        'permissions-newsletter'                   => _fs_text('Newsletter'),
+        'permissions-newsletter_desc'              => _fs_text('Updates, announcements, marketing, no spam'),
+        'privacy-policy'                           => _fs_text('Privacy Policy'),
+        'tos'                                      => _fs_text('Terms of Service'),
+        'activating'                               => _fs_x('Activating', 'as activating plugin'),
+        'sending-email'                            => _fs_x('Sending email', 'as in the process of sending an email'),
+        'opt-in-connect'                           => _fs_x('Allow & Continue', 'button label'),
+        'agree-activate-license'                   => _fs_x('Agree & Activate License', 'button label'),
+        'skip'                                     => _fs_x('Skip', 'verb'),
+        'click-here-to-use-plugin-anonymously'     => _fs_text('Click here to use the plugin anonymously'),
+        'resend-activation-email'                  => _fs_text('Re-send activation email'),
+        'license-key'                              => _fs_text('License key'),
+        'send-license-key'                         => _fs_text('Send License Key'),
+        'sending-license-key'                      => _fs_text('Sending license key'),
+        'have-license-key'                         => _fs_text('Have a license key?'),
+        'dont-have-license-key'                    => _fs_text('Don\'t have a license key?'),
+        'cant-find-license-key'                    => _fs_text("Can't find your license key?"),
+        'email-not-found'                          => _fs_text("We couldn't find your email address in the system, are you sure it's the right address?"),
+        'no-active-licenses'                       => _fs_text("We can't see any active licenses associated with that email address, are you sure it's the right address?"),
+        'opt-in'                                   => _fs_text('Opt In'),
+        'opt-out'                                  => _fs_text('Opt Out'),
+        'opt-out-cancel'                           => _fs_text('On second thought - I want to continue helping'),
+        'opting-out'                               => _fs_text('Opting out...'),
+        'opting-in'                                => _fs_text('Opting in...'),
+        'opt-out-message-appreciation'             => _fs_text('We appreciate your help in making the %s better by letting us track some usage data.'),
+        'opt-out-message-usage-tracking'           => _fs_text("Usage tracking is done in the name of making %s better. Making a better user experience, prioritizing new features, and more good things. We'd really appreciate if you'll reconsider letting us continue with the tracking."),
+        'opt-out-message-clicking-opt-out'         => _fs_text('By clicking "Opt Out", we will no longer be sending any data from %s to %s.'),
+        'apply-on-all-sites-in-the-network'        => _fs_text('Apply on all sites in the network.'),
+        'delegate-to-site-admins'                  => _fs_text('Delegate to Site Admins'),
+        'delegate-to-site-admins-and-continue'     => _fs_text('Delegate to Site Admins & Continue'),
+        'continue'                                 => _fs_text('Continue'),
+        'allow'                                    => _fs_text('allow'),
+        'delegate'                                 => _fs_text('delegate'),
+        #endregion Connect
 
-		#region Screenshots
-		'screenshots'                              => _fs_text( 'Screenshots' ),
-		'view-full-size-x'                         => _fs_text( 'Click to view full-size screenshot %d' ),
-		#endregion Screenshots
+        #region Screenshots
+        'screenshots'                              => _fs_text('Screenshots'),
+        'view-full-size-x'                         => _fs_text('Click to view full-size screenshot %d'),
+        #endregion Screenshots
 
-		#region Debug
-		'freemius-debug'                           => _fs_text( 'Freemius Debug' ),
-		'on'                                       => _fs_x( 'On', 'as turned on' ),
-		'off'                                      => _fs_x( 'Off', 'as turned off' ),
-		'debugging'                                => _fs_x( 'Debugging', 'as code debugging' ),
-		'freemius-state'                           => _fs_text( 'Freemius State' ),
-		'connected'                                => _fs_x( 'Connected', 'as connection was successful' ),
-		'blocked'                                  => _fs_x( 'Blocked', 'as connection blocked' ),
-		'api'                                      => _fs_x( 'API', 'as application program interface' ),
-		'sdk'                                      => _fs_x( 'SDK', 'as software development kit versions' ),
-		'sdk-versions'                             => _fs_x( 'SDK Versions', 'as software development kit versions' ),
-		'plugin-path'                              => _fs_x( 'Plugin Path', 'as plugin folder path' ),
-		'sdk-path'                                 => _fs_x( 'SDK Path', 'as sdk path' ),
-		'addons-of-x'                              => _fs_text( 'Add Ons of Plugin %s' ),
-		'delete-all-confirm'                       => _fs_text( 'Are you sure you want to delete all Freemius data?' ),
-		'actions'                                  => _fs_text( 'Actions' ),
-		'delete-all-accounts'                      => _fs_text( 'Delete All Accounts' ),
-		'start-fresh'                              => _fs_text( 'Start Fresh' ),
-		'clear-api-cache'                          => _fs_text( 'Clear API Cache' ),
-		'sync-data-from-server'                    => _fs_text( 'Sync Data From Server' ),
-		'scheduled-crons'                          => _fs_text( 'Scheduled Crons' ),
-		'cron-type'                                => _fs_text( 'Cron Type' ),
-		'plugins-themes-sync'                      => _fs_text( 'Plugins & Themes Sync' ),
-		'module-licenses'                          => _fs_text( '%s Licenses' ),
-		'debug-log'                                => _fs_text( 'Debug Log' ),
-		'all'                                      => _fs_text( 'All' ),
-		'file'                                     => _fs_text( 'File' ),
-		'function'                                 => _fs_text( 'Function' ),
-		'process-id'                               => _fs_text( 'Process ID' ),
-		'logger'                                   => _fs_text( 'Logger' ),
-		'message'                                  => _fs_text( 'Message' ),
-		'download'                                 => _fs_text( 'Download' ),
-		'filter'                                   => _fs_text( 'Filter' ),
-		'type'                                     => _fs_text( 'Type' ),
-		'all-types'                                => _fs_text( 'All Types' ),
-		'all-requests'                             => _fs_text( 'All Requests' ),
-		#endregion Debug
+        #region Debug
+        'freemius-debug'                           => _fs_text('Freemius Debug'),
+        'on'                                       => _fs_x('On', 'as turned on'),
+        'off'                                      => _fs_x('Off', 'as turned off'),
+        'debugging'                                => _fs_x('Debugging', 'as code debugging'),
+        'freemius-state'                           => _fs_text('Freemius State'),
+        'connected'                                => _fs_x('Connected', 'as connection was successful'),
+        'blocked'                                  => _fs_x('Blocked', 'as connection blocked'),
+        'api'                                      => _fs_x('API', 'as application program interface'),
+        'sdk'                                      => _fs_x('SDK', 'as software development kit versions'),
+        'sdk-versions'                             => _fs_x('SDK Versions', 'as software development kit versions'),
+        'plugin-path'                              => _fs_x('Plugin Path', 'as plugin folder path'),
+        'sdk-path'                                 => _fs_x('SDK Path', 'as sdk path'),
+        'addons-of-x'                              => _fs_text('Add Ons of Plugin %s'),
+        'delete-all-confirm'                       => _fs_text('Are you sure you want to delete all Freemius data?'),
+        'actions'                                  => _fs_text('Actions'),
+        'delete-all-accounts'                      => _fs_text('Delete All Accounts'),
+        'start-fresh'                              => _fs_text('Start Fresh'),
+        'clear-api-cache'                          => _fs_text('Clear API Cache'),
+        'sync-data-from-server'                    => _fs_text('Sync Data From Server'),
+        'scheduled-crons'                          => _fs_text('Scheduled Crons'),
+        'cron-type'                                => _fs_text('Cron Type'),
+        'plugins-themes-sync'                      => _fs_text('Plugins & Themes Sync'),
+        'module-licenses'                          => _fs_text('%s Licenses'),
+        'debug-log'                                => _fs_text('Debug Log'),
+        'all'                                      => _fs_text('All'),
+        'file'                                     => _fs_text('File'),
+        'function'                                 => _fs_text('Function'),
+        'process-id'                               => _fs_text('Process ID'),
+        'logger'                                   => _fs_text('Logger'),
+        'message'                                  => _fs_text('Message'),
+        'download'                                 => _fs_text('Download'),
+        'filter'                                   => _fs_text('Filter'),
+        'type'                                     => _fs_text('Type'),
+        'all-types'                                => _fs_text('All Types'),
+        'all-requests'                             => _fs_text('All Requests'),
+        #endregion Debug
 
-		#region Expressions
-		'congrats'                                 => _fs_x( 'Congrats', 'as congratulations' ),
-		'oops'                                     => _fs_x( 'Oops', 'exclamation' ),
-		'yee-haw'                                  => _fs_x( 'Yee-haw', 'interjection expressing joy or exuberance' ),
-		'woot'                                     => _fs_x( 'W00t',
-			'(especially in electronic communication) used to express elation, enthusiasm, or triumph.' ),
-		'right-on'                                 => _fs_x( 'Right on', 'a positive response' ),
-		'hmm'                                      => _fs_x( 'Hmm',
-			'something somebody says when they are thinking about what you have just said. ' ),
-		'ok'                                       => _fs_text( 'O.K' ),
-		'hey'                                      => _fs_x( 'Hey', 'exclamation' ),
-		'heads-up'                                 => _fs_x( 'Heads up',
-			'advance notice of something that will need attention.' ),
-		#endregion Expressions
+        #region Expressions
+        'congrats'                                 => _fs_x('Congrats', 'as congratulations'),
+        'oops'                                     => _fs_x('Oops', 'exclamation'),
+        'yee-haw'                                  => _fs_x('Yee-haw', 'interjection expressing joy or exuberance'),
+        'woot'                                     => _fs_x(
+            'W00t',
+            '(especially in electronic communication) used to express elation, enthusiasm, or triumph.'
+        ),
+        'right-on'                                 => _fs_x('Right on', 'a positive response'),
+        'hmm'                                      => _fs_x(
+            'Hmm',
+            'something somebody says when they are thinking about what you have just said. '
+        ),
+        'ok'                                       => _fs_text('O.K'),
+        'hey'                                      => _fs_x('Hey', 'exclamation'),
+        'heads-up'                                 => _fs_x(
+            'Heads up',
+            'advance notice of something that will need attention.'
+        ),
+        #endregion Expressions
 
-		#region Admin Notices
-		'you-have-latest'                          => _fs_text( 'Seems like you got the latest release.' ),
-		'you-are-good'                             => _fs_text( 'You are all good!' ),
-		'user-exist-message'                       => _fs_text( 'Sorry, we could not complete the email update. Another user with the same email is already registered.' ),
-		'user-exist-message_ownership'             => _fs_text( 'If you would like to give up the ownership of the %s\'s account to %s click the Change Ownership button.' ),
-		'email-updated-message'                    => _fs_text( 'Your email was successfully updated. You should receive an email with confirmation instructions in few moments.' ),
-		'name-updated-message'                     => _fs_text( 'Your name was successfully updated.' ),
-		'x-updated'                                => _fs_text( 'You have successfully updated your %s.' ),
-		'name-update-failed-message'               => _fs_text( 'Please provide your full name.' ),
-		'verification-email-sent-message'          => _fs_text( 'Verification mail was just sent to %s. If you can\'t find it after 5 min, please check your spam box.' ),
-		'addons-info-external-message'             => _fs_text( 'Just letting you know that the add-ons information of %s is being pulled from an external server.' ),
-		'no-cc-required'                           => _fs_text( 'No credit card required' ),
-		'premium-activated-message'                => _fs_text( 'Premium %s version was successfully activated.' ),
-		'successful-version-upgrade-message'       => _fs_text( 'The upgrade of %s was successfully completed.' ),
-		'activation-with-plan-x-message'           => _fs_text( 'Your account was successfully activated with the %s plan.' ),
-		'download-latest-x-version-now'            => _fs_text( 'Download the latest %s version now' ),
-		'follow-steps-to-complete-upgrade'         => _fs_text( 'Please follow these steps to complete the upgrade' ),
-		'download-latest-x-version'                => _fs_text( 'Download the latest %s version' ),
-		'download-latest-version'                  => _fs_text( 'Download the latest version' ),
-		'deactivate-free-version'                  => _fs_text( 'Deactivate the free version' ),
-		'upload-and-activate'                      => _fs_text( 'Upload and activate the downloaded version' ),
-		'howto-upload-activate'                    => _fs_text( 'How to upload and activate?' ),
-		'addon-successfully-purchased-message'     => _fs_x( '%s Add-on was successfully purchased.',
-			'%s - product name, e.g. Facebook add-on was successfully...' ),
-		'addon-successfully-upgraded-message'      => _fs_text( 'Your %s Add-on plan was successfully upgraded.' ),
-		'email-verified-message'                   => _fs_text( 'Your email has been successfully verified - you are AWESOME!' ),
-		'plan-upgraded-message'                    => _fs_text( 'Your plan was successfully upgraded.' ),
-		'plan-changed-to-x-message'                => _fs_text( 'Your plan was successfully changed to %s.' ),
-		'license-expired-blocking-message'         => _fs_text( 'Your license has expired. You can still continue using the free %s forever.' ),
-		'license-cancelled'                        => _fs_text( 'Your license has been cancelled. If you think it\'s a mistake, please contact support.' ),
-		'trial-started-message'                    => _fs_text( 'Your trial has been successfully started.' ),
-		'license-activated-message'                => _fs_text( 'Your license was successfully activated.' ),
-		'no-active-license-message'                => _fs_text( 'It looks like your site currently doesn\'t have an active license.' ),
-		'license-deactivation-message'             => _fs_text( 'Your license was successfully deactivated, you are back to the %s plan.' ),
-		'license-deactivation-failed-message'      => _fs_text( 'It looks like the license deactivation failed.' ),
-		'license-activation-failed-message'        => _fs_text( 'It looks like the license could not be activated.' ),
-		'server-error-message'                     => _fs_text( 'Error received from the server:' ),
-		'trial-expired-message'                    => _fs_text( 'Your trial has expired. You can still continue using all our free features.' ),
-		'plan-x-downgraded-message'                => _fs_text( 'Your plan was successfully downgraded. Your %s plan license will expire in %s.' ),
-		'plan-downgraded-failure-message'          => _fs_text( 'Seems like we are having some temporary issue with your plan downgrade. Please try again in few minutes.' ),
-		'trial-cancel-no-trial-message'            => _fs_text( 'It looks like you are not in trial mode anymore so there\'s nothing to cancel :)' ),
-		'trial-cancel-message'                     => _fs_text( 'Your %s free trial was successfully cancelled.' ),
-		'version-x-released'                       => _fs_x( 'Version %s was released.', '%s - numeric version number' ),
-		'please-download-x'                        => _fs_text( 'Please download %s.' ),
-		'latest-x-version'                         => _fs_x( 'the latest %s version here',
-			'%s - plan name, as the latest professional version here' ),
-		'trial-x-promotion-message'                => _fs_text( 'How do you like %s so far? Test all our %s premium features with a %d-day free trial.' ),
-		'start-free-trial'                         => _fs_x( 'Start free trial', 'call to action' ),
-		'starting-trial'                           => _fs_text( 'Starting trial' ),
-		'please-wait'                              => _fs_text( 'Please wait' ),
-		'trial-cancel-failure-message'             => _fs_text( 'Seems like we are having some temporary issue with your trial cancellation. Please try again in few minutes.' ),
-		'trial-utilized'                           => _fs_text( 'You already utilized a trial before.' ),
-		'in-trial-mode'                            => _fs_text( 'You are already running the %s in a trial mode.' ),
-		'trial-plan-x-not-exist'                   => _fs_text( 'Plan %s do not exist, therefore, can\'t start a trial.' ),
-		'plan-x-no-trial'                          => _fs_text( 'Plan %s does not support a trial period.' ),
-		'no-trials'                                => _fs_text( 'None of the %s\'s plans supports a trial period.' ),
-		'unexpected-api-error'                     => _fs_text( 'Unexpected API error. Please contact the %s\'s author with the following error.' ),
-		'no-commitment-for-x-days'                 => _fs_text( 'No commitment for %s days - cancel anytime!' ),
-		'license-expired-non-blocking-message'     => _fs_text( 'Your license has expired. You can still continue using all the %s features, but you\'ll need to renew your license to continue getting updates and support.' ),
-		'could-not-activate-x'                     => _fs_text( 'Couldn\'t activate %s.' ),
-		'contact-us-with-error-message'            => _fs_text( 'Please contact us with the following message:' ),
-		'plan-did-not-change-message'              => _fs_text( 'It looks like you are still on the %s plan. If you did upgrade or change your plan, it\'s probably an issue on our side - sorry.' ),
-		'contact-us-here'                          => _fs_text( 'Please contact us here' ),
-		'plan-did-not-change-email-message'        => _fs_text( 'I have upgraded my account but when I try to Sync the License, the plan remains %s.' ),
-		#endregion Admin Notices
-		#region Connectivity Issues
-		'connectivity-test-fails-message'          => _fs_text( 'From unknown reason, the API connectivity test failed.' ),
-		'connectivity-test-maybe-temporary'        => _fs_text( 'It\'s probably a temporary issue on our end. Just to be sure, with your permission, would it be o.k to run another connectivity test?' ),
-		'curl-missing-message'                     => _fs_text( 'We use PHP cURL library for the API calls, which is a very common library and usually installed and activated out of the box. Unfortunately, cURL is not activated (or disabled) on your server.' ),
-		'curl-disabled-methods'                    => _fs_text( 'Disabled method(s):' ),
-        'cloudflare-blocks-connection-message'     => _fs_text( 'From unknown reason, CloudFlare, the firewall we use, blocks the connection.' ),
-		'x-requires-access-to-api'                 => _fs_x( '%s requires an access to our API.',
-			'as pluginX requires an access to our API' ),
-		'squid-blocks-connection-message'          => _fs_text( 'It looks like your server is using Squid ACL (access control lists), which blocks the connection.' ),
-		'squid-no-clue-title'                      => _fs_text( 'I don\'t know what is Squid or ACL, help me!' ),
-		'squid-no-clue-desc'                       => _fs_text( 'We\'ll make sure to contact your hosting company and resolve the issue. You will get a follow-up email to %s once we have an update.' ),
-		'sysadmin-title'                           => _fs_text( 'I\'m a system administrator' ),
-		'squid-sysadmin-desc'                      => _fs_text( 'Great, please whitelist the following domains: %s. Once you are done, deactivate the %s and activate it again.' ),
-		'curl-missing-no-clue-title'               => _fs_text( 'I don\'t know what is cURL or how to install it, help me!' ),
-		'curl-missing-no-clue-desc'                => _fs_text( 'We\'ll make sure to contact your hosting company and resolve the issue. You will get a follow-up email to %s once we have an update.' ),
-		'curl-missing-sysadmin-desc'               => _fs_text( 'Great, please install cURL and enable it in your php.ini file. In addition, search for the \'disable_functions\' directive in your php.ini file and remove any disabled methods starting with \'curl_\'. To make sure it was successfully activated, use \'phpinfo()\'. Once activated, deactivate the %s and reactivate it back again.' ),
-		'happy-to-resolve-issue-asap'              => _fs_text( 'We are sure it\'s an issue on our side and more than happy to resolve it for you ASAP if you give us a chance.' ),
-		'contact-support-before-deactivation'      => _fs_text( 'Sorry for the inconvenience and we are here to help if you give us a chance.' ),
-		'fix-issue-title'                          => _fs_text( 'Yes - I\'m giving you a chance to fix it' ),
-		'fix-issue-desc'                           => _fs_text( 'We will do our best to whitelist your server and resolve this issue ASAP. You will get a follow-up email to %s once we have an update.' ),
-		'install-previous-title'                   => _fs_text( 'Let\'s try your previous version' ),
-		'install-previous-desc'                    => _fs_text( 'Uninstall this version and install the previous one.' ),
-		'deactivate-plugin-title'                  => _fs_text( 'That\'s exhausting, please deactivate' ),
-		'deactivate-plugin-desc'                   => _fs_text( 'We feel your frustration and sincerely apologize for the inconvenience. Hope to see you again in the future.' ),
-		'fix-request-sent-message'                 => _fs_text( 'Thank for giving us the chance to fix it! A message was just sent to our technical staff. We will get back to you as soon as we have an update to %s. Appreciate your patience.' ),
-		'server-blocking-access'                   => _fs_x( 'Your server is blocking the access to Freemius\' API, which is crucial for %1$s synchronization. Please contact your host to whitelist %2$s',
-			'%1$s - plugin title, %2$s - API domain' ),
-		'wrong-authentication-param-message'       => _fs_text( 'It seems like one of the authentication parameters is wrong. Update your Public Key, Secret Key & User ID, and try again.' ),
-		#endregion Connectivity Issues
-		#region Change Owner
-		'change-owner-request-sent-x'              => _fs_text( 'Please check your mailbox, you should receive an email via %s to confirm the ownership change. From security reasons, you must confirm the change within the next 15 min. If you cannot find the email, please check your spam folder.' ),
-		'change-owner-request_owner-confirmed'     => _fs_text( 'Thanks for confirming the ownership change. An email was just sent to %s for final approval.' ),
-		'change-owner-request_candidate-confirmed' => _fs_text( '%s is the new owner of the account.' ),
-		#endregion Change Owner
-		'addon-x-cannot-run-without-y'             => _fs_x( '%s cannot run without %s.',
-			'addonX cannot run without pluginY' ),
-		'addon-x-cannot-run-without-parent'        => _fs_x( '%s cannot run without the plugin.', 'addonX cannot run...' ),
-		'plugin-x-activation-message'              => _fs_x( '%s activation was successfully completed.',
-			'pluginX activation was successfully...' ),
-		'features-and-pricing'                     => _fs_x( 'Features & Pricing', 'Plugin installer section title' ),
-		'free-addon-not-deployed'                  => _fs_text( 'Add-on must be deployed to WordPress.org or Freemius.' ),
-		'paid-addon-not-deployed'                  => _fs_text( 'Paid add-on must be deployed to Freemius.' ),
-		#--------------------------------------------------------------------------------
-		#region Add-On Licensing
-		#--------------------------------------------------------------------------------
-		'addon-no-license-message'                 => _fs_text( '%s is a premium only add-on. You have to purchase a license first before activating the plugin.' ),
-		'addon-trial-cancelled-message'            => _fs_text( '%s free trial was successfully cancelled. Since the add-on is premium only it was automatically deactivated. If you like to use it in the future, you\'ll have to purchase a license.' ),
-		#endregion
-		#--------------------------------------------------------------------------------
-		#region Billing Cycles
-		#--------------------------------------------------------------------------------
-		'monthly'                                  => _fs_x( 'Monthly', 'as every month' ),
-		'mo'                                       => _fs_x( 'mo', 'as monthly period' ),
-		'annual'                                   => _fs_x( 'Annual', 'as once a year' ),
-		'annually'                                 => _fs_x( 'Annually', 'as once a year' ),
-		'once'                                     => _fs_x( 'Once', 'as once a year' ),
-		'year'                                     => _fs_x( 'year', 'as annual period' ),
-		'lifetime'                                 => _fs_text( 'Lifetime' ),
-		'best'                                     => _fs_x( 'Best', 'e.g. the best product' ),
-		'billed-x'                                 => _fs_x( 'Billed %s', 'e.g. billed monthly' ),
-		'save-x'                                   => _fs_x( 'Save %s', 'as a discount of $5 or 10%' ),
-		#endregion Billing Cycles
-		'view-details'                             => _fs_text( 'View details' ),
-		#--------------------------------------------------------------------------------
-		#region Trial
-		#--------------------------------------------------------------------------------
-		'approve-start-trial'                      => _fs_x( 'Approve & Start Trial', 'button label' ),
-		/* translators: %1$s: Number of trial days; %2$s: Plan name; */
-		'start-trial-prompt-header'                => _fs_text( 'You are 1-click away from starting your %1$s-day free trial of the %2$s plan.' ),
-		/* translators: %s: Link to freemius.com */
-		'start-trial-prompt-message'               => _fs_text( 'For compliance with the WordPress.org guidelines, before we start the trial we ask that you opt in with your user and non-sensitive site information, allowing the %s to periodically send data to %s to check for version updates and to validate your trial.' ),
+        #region Admin Notices
+        'you-have-latest'                          => _fs_text('Seems like you got the latest release.'),
+        'you-are-good'                             => _fs_text('You are all good!'),
+        'user-exist-message'                       => _fs_text('Sorry, we could not complete the email update. Another user with the same email is already registered.'),
+        'user-exist-message_ownership'             => _fs_text('If you would like to give up the ownership of the %s\'s account to %s click the Change Ownership button.'),
+        'email-updated-message'                    => _fs_text('Your email was successfully updated. You should receive an email with confirmation instructions in few moments.'),
+        'name-updated-message'                     => _fs_text('Your name was successfully updated.'),
+        'x-updated'                                => _fs_text('You have successfully updated your %s.'),
+        'name-update-failed-message'               => _fs_text('Please provide your full name.'),
+        'verification-email-sent-message'          => _fs_text('Verification mail was just sent to %s. If you can\'t find it after 5 min, please check your spam box.'),
+        'addons-info-external-message'             => _fs_text('Just letting you know that the add-ons information of %s is being pulled from an external server.'),
+        'no-cc-required'                           => _fs_text('No credit card required'),
+        'premium-activated-message'                => _fs_text('Premium %s version was successfully activated.'),
+        'successful-version-upgrade-message'       => _fs_text('The upgrade of %s was successfully completed.'),
+        'activation-with-plan-x-message'           => _fs_text('Your account was successfully activated with the %s plan.'),
+        'download-latest-x-version-now'            => _fs_text('Download the latest %s version now'),
+        'follow-steps-to-complete-upgrade'         => _fs_text('Please follow these steps to complete the upgrade'),
+        'download-latest-x-version'                => _fs_text('Download the latest %s version'),
+        'download-latest-version'                  => _fs_text('Download the latest version'),
+        'deactivate-free-version'                  => _fs_text('Deactivate the free version'),
+        'upload-and-activate'                      => _fs_text('Upload and activate the downloaded version'),
+        'howto-upload-activate'                    => _fs_text('How to upload and activate?'),
+        'addon-successfully-purchased-message'     => _fs_x(
+            '%s Add-on was successfully purchased.',
+            '%s - product name, e.g. Facebook add-on was successfully...'
+        ),
+        'addon-successfully-upgraded-message'      => _fs_text('Your %s Add-on plan was successfully upgraded.'),
+        'email-verified-message'                   => _fs_text('Your email has been successfully verified - you are AWESOME!'),
+        'plan-upgraded-message'                    => _fs_text('Your plan was successfully upgraded.'),
+        'plan-changed-to-x-message'                => _fs_text('Your plan was successfully changed to %s.'),
+        'license-expired-blocking-message'         => _fs_text('Your license has expired. You can still continue using the free %s forever.'),
+        'license-cancelled'                        => _fs_text('Your license has been cancelled. If you think it\'s a mistake, please contact support.'),
+        'trial-started-message'                    => _fs_text('Your trial has been successfully started.'),
+        'license-activated-message'                => _fs_text('Your license was successfully activated.'),
+        'no-active-license-message'                => _fs_text('It looks like your site currently doesn\'t have an active license.'),
+        'license-deactivation-message'             => _fs_text('Your license was successfully deactivated, you are back to the %s plan.'),
+        'license-deactivation-failed-message'      => _fs_text('It looks like the license deactivation failed.'),
+        'license-activation-failed-message'        => _fs_text('It looks like the license could not be activated.'),
+        'server-error-message'                     => _fs_text('Error received from the server:'),
+        'trial-expired-message'                    => _fs_text('Your trial has expired. You can still continue using all our free features.'),
+        'plan-x-downgraded-message'                => _fs_text('Your plan was successfully downgraded. Your %s plan license will expire in %s.'),
+        'plan-downgraded-failure-message'          => _fs_text('Seems like we are having some temporary issue with your plan downgrade. Please try again in few minutes.'),
+        'trial-cancel-no-trial-message'            => _fs_text('It looks like you are not in trial mode anymore so there\'s nothing to cancel :)'),
+        'trial-cancel-message'                     => _fs_text('Your %s free trial was successfully cancelled.'),
+        'version-x-released'                       => _fs_x('Version %s was released.', '%s - numeric version number'),
+        'please-download-x'                        => _fs_text('Please download %s.'),
+        'latest-x-version'                         => _fs_x(
+            'the latest %s version here',
+            '%s - plan name, as the latest professional version here'
+        ),
+        'trial-x-promotion-message'                => _fs_text('How do you like %s so far? Test all our %s premium features with a %d-day free trial.'),
+        'start-free-trial'                         => _fs_x('Start free trial', 'call to action'),
+        'starting-trial'                           => _fs_text('Starting trial'),
+        'please-wait'                              => _fs_text('Please wait'),
+        'trial-cancel-failure-message'             => _fs_text('Seems like we are having some temporary issue with your trial cancellation. Please try again in few minutes.'),
+        'trial-utilized'                           => _fs_text('You already utilized a trial before.'),
+        'in-trial-mode'                            => _fs_text('You are already running the %s in a trial mode.'),
+        'trial-plan-x-not-exist'                   => _fs_text('Plan %s do not exist, therefore, can\'t start a trial.'),
+        'plan-x-no-trial'                          => _fs_text('Plan %s does not support a trial period.'),
+        'no-trials'                                => _fs_text('None of the %s\'s plans supports a trial period.'),
+        'unexpected-api-error'                     => _fs_text('Unexpected API error. Please contact the %s\'s author with the following error.'),
+        'no-commitment-for-x-days'                 => _fs_text('No commitment for %s days - cancel anytime!'),
+        'license-expired-non-blocking-message'     => _fs_text('Your license has expired. You can still continue using all the %s features, but you\'ll need to renew your license to continue getting updates and support.'),
+        'could-not-activate-x'                     => _fs_text('Couldn\'t activate %s.'),
+        'contact-us-with-error-message'            => _fs_text('Please contact us with the following message:'),
+        'plan-did-not-change-message'              => _fs_text('It looks like you are still on the %s plan. If you did upgrade or change your plan, it\'s probably an issue on our side - sorry.'),
+        'contact-us-here'                          => _fs_text('Please contact us here'),
+        'plan-did-not-change-email-message'        => _fs_text('I have upgraded my account but when I try to Sync the License, the plan remains %s.'),
+        #endregion Admin Notices
+        #region Connectivity Issues
+        'connectivity-test-fails-message'          => _fs_text('From unknown reason, the API connectivity test failed.'),
+        'connectivity-test-maybe-temporary'        => _fs_text('It\'s probably a temporary issue on our end. Just to be sure, with your permission, would it be o.k to run another connectivity test?'),
+        'curl-missing-message'                     => _fs_text('We use PHP cURL library for the API calls, which is a very common library and usually installed and activated out of the box. Unfortunately, cURL is not activated (or disabled) on your server.'),
+        'curl-disabled-methods'                    => _fs_text('Disabled method(s):'),
+        'cloudflare-blocks-connection-message'     => _fs_text('From unknown reason, CloudFlare, the firewall we use, blocks the connection.'),
+        'x-requires-access-to-api'                 => _fs_x(
+            '%s requires an access to our API.',
+            'as pluginX requires an access to our API'
+        ),
+        'squid-blocks-connection-message'          => _fs_text('It looks like your server is using Squid ACL (access control lists), which blocks the connection.'),
+        'squid-no-clue-title'                      => _fs_text('I don\'t know what is Squid or ACL, help me!'),
+        'squid-no-clue-desc'                       => _fs_text('We\'ll make sure to contact your hosting company and resolve the issue. You will get a follow-up email to %s once we have an update.'),
+        'sysadmin-title'                           => _fs_text('I\'m a system administrator'),
+        'squid-sysadmin-desc'                      => _fs_text('Great, please whitelist the following domains: %s. Once you are done, deactivate the %s and activate it again.'),
+        'curl-missing-no-clue-title'               => _fs_text('I don\'t know what is cURL or how to install it, help me!'),
+        'curl-missing-no-clue-desc'                => _fs_text('We\'ll make sure to contact your hosting company and resolve the issue. You will get a follow-up email to %s once we have an update.'),
+        'curl-missing-sysadmin-desc'               => _fs_text('Great, please install cURL and enable it in your php.ini file. In addition, search for the \'disable_functions\' directive in your php.ini file and remove any disabled methods starting with \'curl_\'. To make sure it was successfully activated, use \'phpinfo()\'. Once activated, deactivate the %s and reactivate it back again.'),
+        'happy-to-resolve-issue-asap'              => _fs_text('We are sure it\'s an issue on our side and more than happy to resolve it for you ASAP if you give us a chance.'),
+        'contact-support-before-deactivation'      => _fs_text('Sorry for the inconvenience and we are here to help if you give us a chance.'),
+        'fix-issue-title'                          => _fs_text('Yes - I\'m giving you a chance to fix it'),
+        'fix-issue-desc'                           => _fs_text('We will do our best to whitelist your server and resolve this issue ASAP. You will get a follow-up email to %s once we have an update.'),
+        'install-previous-title'                   => _fs_text('Let\'s try your previous version'),
+        'install-previous-desc'                    => _fs_text('Uninstall this version and install the previous one.'),
+        'deactivate-plugin-title'                  => _fs_text('That\'s exhausting, please deactivate'),
+        'deactivate-plugin-desc'                   => _fs_text('We feel your frustration and sincerely apologize for the inconvenience. Hope to see you again in the future.'),
+        'fix-request-sent-message'                 => _fs_text('Thank for giving us the chance to fix it! A message was just sent to our technical staff. We will get back to you as soon as we have an update to %s. Appreciate your patience.'),
+        'server-blocking-access'                   => _fs_x(
+            'Your server is blocking the access to Freemius\' API, which is crucial for %1$s synchronization. Please contact your host to whitelist %2$s',
+            '%1$s - plugin title, %2$s - API domain'
+        ),
+        'wrong-authentication-param-message'       => _fs_text('It seems like one of the authentication parameters is wrong. Update your Public Key, Secret Key & User ID, and try again.'),
+        #endregion Connectivity Issues
+        #region Change Owner
+        'change-owner-request-sent-x'              => _fs_text('Please check your mailbox, you should receive an email via %s to confirm the ownership change. From security reasons, you must confirm the change within the next 15 min. If you cannot find the email, please check your spam folder.'),
+        'change-owner-request_owner-confirmed'     => _fs_text('Thanks for confirming the ownership change. An email was just sent to %s for final approval.'),
+        'change-owner-request_candidate-confirmed' => _fs_text('%s is the new owner of the account.'),
+        #endregion Change Owner
+        'addon-x-cannot-run-without-y'             => _fs_x(
+            '%s cannot run without %s.',
+            'addonX cannot run without pluginY'
+        ),
+        'addon-x-cannot-run-without-parent'        => _fs_x('%s cannot run without the plugin.', 'addonX cannot run...'),
+        'plugin-x-activation-message'              => _fs_x(
+            '%s activation was successfully completed.',
+            'pluginX activation was successfully...'
+        ),
+        'features-and-pricing'                     => _fs_x('Features & Pricing', 'Plugin installer section title'),
+        'free-addon-not-deployed'                  => _fs_text('Add-on must be deployed to WordPress.org or Freemius.'),
+        'paid-addon-not-deployed'                  => _fs_text('Paid add-on must be deployed to Freemius.'),
+        #--------------------------------------------------------------------------------
+        #region Add-On Licensing
+        #--------------------------------------------------------------------------------
+        'addon-no-license-message'                 => _fs_text('%s is a premium only add-on. You have to purchase a license first before activating the plugin.'),
+        'addon-trial-cancelled-message'            => _fs_text('%s free trial was successfully cancelled. Since the add-on is premium only it was automatically deactivated. If you like to use it in the future, you\'ll have to purchase a license.'),
+        #endregion
+        #--------------------------------------------------------------------------------
+        #region Billing Cycles
+        #--------------------------------------------------------------------------------
+        'monthly'                                  => _fs_x('Monthly', 'as every month'),
+        'mo'                                       => _fs_x('mo', 'as monthly period'),
+        'annual'                                   => _fs_x('Annual', 'as once a year'),
+        'annually'                                 => _fs_x('Annually', 'as once a year'),
+        'once'                                     => _fs_x('Once', 'as once a year'),
+        'year'                                     => _fs_x('year', 'as annual period'),
+        'lifetime'                                 => _fs_text('Lifetime'),
+        'best'                                     => _fs_x('Best', 'e.g. the best product'),
+        'billed-x'                                 => _fs_x('Billed %s', 'e.g. billed monthly'),
+        'save-x'                                   => _fs_x('Save %s', 'as a discount of $5 or 10%'),
+        #endregion Billing Cycles
+        'view-details'                             => _fs_text('View details'),
+        #--------------------------------------------------------------------------------
+        #region Trial
+        #--------------------------------------------------------------------------------
+        'approve-start-trial'                      => _fs_x('Approve & Start Trial', 'button label'),
+        /* translators: %1$s: Number of trial days; %2$s: Plan name; */
+        'start-trial-prompt-header'                => _fs_text('You are 1-click away from starting your %1$s-day free trial of the %2$s plan.'),
+        /* translators: %s: Link to freemius.com */
+        'start-trial-prompt-message'               => _fs_text('For compliance with the WordPress.org guidelines, before we start the trial we ask that you opt in with your user and non-sensitive site information, allowing the %s to periodically send data to %s to check for version updates and to validate your trial.'),
 
-		#endregion
-		#--------------------------------------------------------------------------------
-		#region Billing Details
-		#--------------------------------------------------------------------------------
-		'business-name'                            => _fs_text( 'Business name' ),
-		'tax-vat-id'                               => _fs_text( 'Tax / VAT ID' ),
-		'address-line-n'                           => _fs_text( 'Address Line %d' ),
-		'country'                                  => _fs_text( 'Country' ),
-		'select-country'                           => _fs_text( 'Select Country' ),
-		'city'                                     => _fs_text( 'City' ),
-		'town'                                     => _fs_text( 'Town' ),
-		'state'                                    => _fs_text( 'State' ),
-		'province'                                 => _fs_text( 'Province' ),
-		'zip-postal-code'                          => _fs_text( 'ZIP / Postal Code' ),
-		#endregion
-		#--------------------------------------------------------------------------------
-		#region Module Installation
-		#--------------------------------------------------------------------------------
-		'installing-plugin-x'                        => _fs_text( 'Installing plugin: %s' ),
-		'auto-installation'                          => _fs_text( 'Automatic Installation' ),
-		/* translators: %s: Number of seconds */
-		'x-sec'                                      => _fs_text( '%s sec' ),
-		'installing-in-n'                            => _fs_text( 'An automated download and installation of %s (paid version) from %s will start in %s. If you would like to do it manually - click the cancellation button now.' ),
-		'installing-module-x'                        => _fs_text( 'The installation process has started and may take a few minutes to complete. Please wait until it is done - do not refresh this page.' ),
-		'cancel-installation'                        => _fs_text( 'Cancel Installation' ),
-		'module-package-rename-failure'              => _fs_text( 'The remote plugin package does not contain a folder with the desired slug and renaming did not work.' ),
-		'auto-install-error-invalid-id'              => _fs_text( 'Invalid module ID.' ),
-		'auto-install-error-not-opted-in'            => _fs_text( 'Auto installation only works for opted-in users.' ),
-		'auto-install-error-premium-activated'       => _fs_text( 'Premium version already active.' ),
-		'auto-install-error-premium-addon-activated' => _fs_text( 'Premium add-on version already installed.' ),
-		'auto-install-error-invalid-license'         => _fs_text( 'You do not have a valid license to access the premium version.' ),
-		'auto-install-error-serviceware'             => _fs_text( 'Plugin is a "Serviceware" which means it does not have a premium code version.' ),
+        #endregion
+        #--------------------------------------------------------------------------------
+        #region Billing Details
+        #--------------------------------------------------------------------------------
+        'business-name'                            => _fs_text('Business name'),
+        'tax-vat-id'                               => _fs_text('Tax / VAT ID'),
+        'address-line-n'                           => _fs_text('Address Line %d'),
+        'country'                                  => _fs_text('Country'),
+        'select-country'                           => _fs_text('Select Country'),
+        'city'                                     => _fs_text('City'),
+        'town'                                     => _fs_text('Town'),
+        'state'                                    => _fs_text('State'),
+        'province'                                 => _fs_text('Province'),
+        'zip-postal-code'                          => _fs_text('ZIP / Postal Code'),
+        #endregion
+        #--------------------------------------------------------------------------------
+        #region Module Installation
+        #--------------------------------------------------------------------------------
+        'installing-plugin-x'                        => _fs_text('Installing plugin: %s'),
+        'auto-installation'                          => _fs_text('Automatic Installation'),
+        /* translators: %s: Number of seconds */
+        'x-sec'                                      => _fs_text('%s sec'),
+        'installing-in-n'                            => _fs_text('An automated download and installation of %s (paid version) from %s will start in %s. If you would like to do it manually - click the cancellation button now.'),
+        'installing-module-x'                        => _fs_text('The installation process has started and may take a few minutes to complete. Please wait until it is done - do not refresh this page.'),
+        'cancel-installation'                        => _fs_text('Cancel Installation'),
+        'module-package-rename-failure'              => _fs_text('The remote plugin package does not contain a folder with the desired slug and renaming did not work.'),
+        'auto-install-error-invalid-id'              => _fs_text('Invalid module ID.'),
+        'auto-install-error-not-opted-in'            => _fs_text('Auto installation only works for opted-in users.'),
+        'auto-install-error-premium-activated'       => _fs_text('Premium version already active.'),
+        'auto-install-error-premium-addon-activated' => _fs_text('Premium add-on version already installed.'),
+        'auto-install-error-invalid-license'         => _fs_text('You do not have a valid license to access the premium version.'),
+        'auto-install-error-serviceware'             => _fs_text('Plugin is a "Serviceware" which means it does not have a premium code version.'),
         #endregion
 
-		/* translators: %s: Page name */
-		'secure-x-page-header' => _fs_text( 'Secure HTTPS %s page, running from an external domain' ),
-		'pci-compliant'        => _fs_text( 'PCI compliant' ),
-		'view-paid-features'   => _fs_text( 'View paid features' ),
-	);
+        /* translators: %s: Page name */
+        'secure-x-page-header' => _fs_text('Secure HTTPS %s page, running from an external domain'),
+        'pci-compliant'        => _fs_text('PCI compliant'),
+        'view-paid-features'   => _fs_text('View paid features'),
+    );
 
-	/**
-	 * Localization of the strings in the plugin/theme info dialog box.
-	 *
-	 * $fs_module_info_text should ONLY include strings that are not located in $fs_text.
-	 *
-	 * @author Vova Feldman (@svovaf)
-	 * @since  1.2.2
-	 */
-	global $fs_module_info_text;
+    /**
+     * Localization of the strings in the plugin/theme info dialog box.
+     *
+     * $fs_module_info_text should ONLY include strings that are not located in $fs_text.
+     *
+     * @author Vova Feldman (@svovaf)
+     * @since  1.2.2
+     */
+    global $fs_module_info_text;
 
-	$fs_module_info_text = array(
-		'description'                 => _fs_x( 'Description', 'Plugin installer section title' ),
-		'installation'                => _fs_x( 'Installation', 'Plugin installer section title' ),
-		'faq'                         => _fs_x( 'FAQ', 'Plugin installer section title' ),
-		'changelog'                   => _fs_x( 'Changelog', 'Plugin installer section title' ),
-		'reviews'                     => _fs_x( 'Reviews', 'Plugin installer section title' ),
-		'other_notes'                 => _fs_x( 'Other Notes', 'Plugin installer section title' ),
-		/* translators: %s: 1 or One */
-		'x-star'                      => _fs_text( '%s star' ),
-		/* translators: %s: Number larger than 1 */
-		'x-stars'                     => _fs_text( '%s stars' ),
-		/* translators: %s: 1 or One */
-		'x-rating'                    => _fs_text( '%s rating' ),
-		/* translators: %s: Number larger than 1 */
-		'x-ratings'                   => _fs_text( '%s ratings' ),
-		/* translators: %s: 1 or One (Number of times downloaded) */
-		'x-time'                      => _fs_text( '%s time' ),
-		/* translators: %s: Number of times downloaded */
-		'x-times'                     => _fs_text( '%s times' ),
-		/* translators: %s: # of stars (e.g. 5 stars) */
-		'click-to-reviews'            => _fs_text( 'Click to see reviews that provided a rating of %s' ),
-		'last-updated:'               => _fs_text( 'Last Updated' ),
-		'requires-wordpress-version:' => _fs_text( 'Requires WordPress Version:' ),
-		'author:'                     => _fs_x( 'Author:', 'as the plugin author' ),
-		'compatible-up-to:'           => _fs_text( 'Compatible up to:' ),
-		'downloaded:'                 => _fs_text( 'Downloaded:' ),
-		'wp-org-plugin-page'          => _fs_text( 'WordPress.org Plugin Page' ),
-		'plugin-homepage'             => _fs_text( 'Plugin Homepage' ),
-		'donate-to-plugin'            => _fs_text( 'Donate to this plugin' ),
-		'average-rating'              => _fs_text( 'Average Rating' ),
-		'based-on-x'                  => _fs_text( 'based on %s' ),
-		'warning:'                    => _fs_text( 'Warning:' ),
-		'contributors'                => _fs_text( 'Contributors' ),
-		'plugin-install'              => _fs_text( 'Plugin Install' ),
-		'not-tested-warning'          => _fs_text( 'This plugin has not been tested with your current version of WordPress.' ),
-		'not-compatible-warning'      => _fs_text( 'This plugin has not been marked as compatible with your version of WordPress.' ),
-		'newer-installed'             => _fs_text( 'Newer Version (%s) Installed' ),
-		'latest-installed'            => _fs_text( 'Latest Version Installed' ),
-	);
+    $fs_module_info_text = array(
+        'description'                 => _fs_x('Description', 'Plugin installer section title'),
+        'installation'                => _fs_x('Installation', 'Plugin installer section title'),
+        'faq'                         => _fs_x('FAQ', 'Plugin installer section title'),
+        'changelog'                   => _fs_x('Changelog', 'Plugin installer section title'),
+        'reviews'                     => _fs_x('Reviews', 'Plugin installer section title'),
+        'other_notes'                 => _fs_x('Other Notes', 'Plugin installer section title'),
+        /* translators: %s: 1 or One */
+        'x-star'                      => _fs_text('%s star'),
+        /* translators: %s: Number larger than 1 */
+        'x-stars'                     => _fs_text('%s stars'),
+        /* translators: %s: 1 or One */
+        'x-rating'                    => _fs_text('%s rating'),
+        /* translators: %s: Number larger than 1 */
+        'x-ratings'                   => _fs_text('%s ratings'),
+        /* translators: %s: 1 or One (Number of times downloaded) */
+        'x-time'                      => _fs_text('%s time'),
+        /* translators: %s: Number of times downloaded */
+        'x-times'                     => _fs_text('%s times'),
+        /* translators: %s: # of stars (e.g. 5 stars) */
+        'click-to-reviews'            => _fs_text('Click to see reviews that provided a rating of %s'),
+        'last-updated:'               => _fs_text('Last Updated'),
+        'requires-wordpress-version:' => _fs_text('Requires WordPress Version:'),
+        'author:'                     => _fs_x('Author:', 'as the plugin author'),
+        'compatible-up-to:'           => _fs_text('Compatible up to:'),
+        'downloaded:'                 => _fs_text('Downloaded:'),
+        'wp-org-plugin-page'          => _fs_text('WordPress.org Plugin Page'),
+        'plugin-homepage'             => _fs_text('Plugin Homepage'),
+        'donate-to-plugin'            => _fs_text('Donate to this plugin'),
+        'average-rating'              => _fs_text('Average Rating'),
+        'based-on-x'                  => _fs_text('based on %s'),
+        'warning:'                    => _fs_text('Warning:'),
+        'contributors'                => _fs_text('Contributors'),
+        'plugin-install'              => _fs_text('Plugin Install'),
+        'not-tested-warning'          => _fs_text('This plugin has not been tested with your current version of WordPress.'),
+        'not-compatible-warning'      => _fs_text('This plugin has not been marked as compatible with your version of WordPress.'),
+        'newer-installed'             => _fs_text('Newer Version (%s) Installed'),
+        'latest-installed'            => _fs_text('Latest Version Installed'),
+    );
diff --git a/freemius/includes/index.php b/freemius/includes/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/includes/index.php
+++ b/freemius/includes/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/includes/l10n.php b/freemius/includes/l10n.php
index a497e81b410593ba6af5ce31ad8c95c2e618e69c..50ef4d5375f4a28550e506e753ee2df8363f5572 100644
--- a/freemius/includes/l10n.php
+++ b/freemius/includes/l10n.php
@@ -1,48 +1,50 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.2.1.6
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.2.1.6
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	/**
-	 * Retrieve the translation of $text.
-	 *
-	 * @since 1.2.1.6
-	 *
-	 * @param string $text
-	 * 
-	 * @return string
-	 */
-	function _fs_text( $text ) {
-		// Avoid misleading Theme Check warning.
-		$fn = 'translate';
-		return $fn( $text, 'freemius' );
-	}
+    /**
+     * Retrieve the translation of $text.
+     *
+     * @since 1.2.1.6
+     *
+     * @param string $text
+     *
+     * @return string
+     */
+    function _fs_text($text)
+    {
+        // Avoid misleading Theme Check warning.
+        $fn = 'translate';
+        return $fn($text, 'freemius');
+    }
 
-	/**
-	 * Retrieve translated string with gettext context.
-	 *
-	 * Quite a few times, there will be collisions with similar translatable text
-	 * found in more than two places, but with different translated context.
-	 *
-	 * By including the context in the pot file, translators can translate the two
-	 * strings differently.
-	 *
-	 * @since 1.2.1.6
-	 *
-	 * @param string $text
-	 * @param string $context 
-	 * 
-	 * @return string
-	 */
-	function _fs_x( $text, $context ) {
-		// Avoid misleading Theme Check warning.
-		$fn = 'translate_with_gettext_context';
-		return $fn( $text, $context, 'freemius' );
-	}
+    /**
+     * Retrieve translated string with gettext context.
+     *
+     * Quite a few times, there will be collisions with similar translatable text
+     * found in more than two places, but with different translated context.
+     *
+     * By including the context in the pot file, translators can translate the two
+     * strings differently.
+     *
+     * @since 1.2.1.6
+     *
+     * @param string $text
+     * @param string $context
+     *
+     * @return string
+     */
+    function _fs_x($text, $context)
+    {
+        // Avoid misleading Theme Check warning.
+        $fn = 'translate_with_gettext_context';
+        return $fn($text, $context, 'freemius');
+    }
diff --git a/freemius/includes/managers/class-fs-admin-menu-manager.php b/freemius/includes/managers/class-fs-admin-menu-manager.php
index f4d3f0b8c24a84523078b7603287a320d9bdc28d..05610c6f8d2fb9afe9dddf5d1846f50d3e27b46e 100644
--- a/freemius/includes/managers/class-fs-admin-menu-manager.php
+++ b/freemius/includes/managers/class-fs-admin-menu-manager.php
@@ -1,240 +1,248 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.1.3
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	class FS_Admin_Menu_Manager {
-
-		#region Properties
-
-		/**
-		 * @since 1.2.2
-		 *
-		 * @var string
-		 */
-		protected $_module_unique_affix;
-
-		/**
-		 * @since 1.2.2
-		 *
-		 * @var number
-		 */
-		protected $_module_id;
-
-		/**
-		 * @since 1.2.2
-		 *
-		 * @var string
-		 */
-		protected $_module_type;
-
-		/**
-		 * @since 1.0.6
-		 *
-		 * @var string
-		 */
-		private $_menu_slug;
-		/**
-		 * @since 1.1.3
-		 *
-		 * @var string
-		 */
-		private $_parent_slug;
-		/**
-		 * @since 1.1.3
-		 *
-		 * @var string
-		 */
-		private $_parent_type;
-		/**
-		 * @since 1.1.3
-		 *
-		 * @var string
-		 */
-		private $_type;
-		/**
-		 * @since 1.1.3
-		 *
-		 * @var bool
-		 */
-		private $_is_top_level;
-		/**
-		 * @since 1.1.3
-		 *
-		 * @var bool
-		 */
-		private $_is_override_exact;
-		/**
-		 * @since 1.1.3
-		 *
-		 * @var array<string,bool>
-		 */
-		private $_default_submenu_items;
-		/**
-		 * @since 1.1.3
-		 *
-		 * @var string
-		 */
-		private $_first_time_path;
-		/**
-		 * @since 1.2.2
-		 *
-		 * @var bool
-		 */
-		private $_menu_exists;
-		/**
-		 * @since 2.0.0
-		 *
-		 * @var bool
-		 */
-		private $_network_menu_exists;
-
-		#endregion Properties
-
-		/**
-		 * @var FS_Logger
-		 */
-		protected $_logger;
-
-		#region Singleton
-
-		/**
-		 * @var FS_Admin_Menu_Manager[]
-		 */
-		private static $_instances = array();
-
-		/**
-		 * @param number $module_id
-		 * @param string $module_type
-		 * @param string $module_unique_affix
-		 *
-		 * @return FS_Admin_Menu_Manager
-		 */
-		static function instance( $module_id, $module_type, $module_unique_affix ) {
-			$key = 'm_' . $module_id;
-
-			if ( ! isset( self::$_instances[ $key ] ) ) {
-				self::$_instances[ $key ] = new FS_Admin_Menu_Manager( $module_id, $module_type, $module_unique_affix );
-			}
-
-			return self::$_instances[ $key ];
-		}
-
-		protected function __construct( $module_id, $module_type, $module_unique_affix ) {
-			$this->_logger = FS_Logger::get_logger( WP_FS__SLUG . '_' . $module_id . '_admin_menu', WP_FS__DEBUG_SDK, WP_FS__ECHO_DEBUG_SDK );
-
-			$this->_module_id           = $module_id;
-			$this->_module_type         = $module_type;
-			$this->_module_unique_affix = $module_unique_affix;
-		}
-
-		#endregion Singleton
-
-		#region Helpers
-
-		private function get_option( &$options, $key, $default = false ) {
-			return ! empty( $options[ $key ] ) ? $options[ $key ] : $default;
-		}
-
-		private function get_bool_option( &$options, $key, $default = false ) {
-			return isset( $options[ $key ] ) && is_bool( $options[ $key ] ) ? $options[ $key ] : $default;
-		}
-
-		#endregion Helpers
-
-		/**
-		 * @param array $menu
-		 * @param bool  $is_addon
-		 */
-		function init( $menu, $is_addon = false ) {
-			$this->_menu_exists = ( isset( $menu['slug'] ) && ! empty( $menu['slug'] ) );
-			$this->_network_menu_exists = ( ! empty( $menu['network'] ) && true === $menu['network'] );
-
-			$this->_menu_slug = ( $this->_menu_exists ? $menu['slug'] : $this->_module_unique_affix );
-
-			$this->_default_submenu_items = array();
-			// @deprecated
-			$this->_type              = 'page';
-			$this->_is_top_level      = true;
-			$this->_is_override_exact = false;
-			$this->_parent_slug       = false;
-			// @deprecated
-			$this->_parent_type = 'page';
-
-			if ( isset( $menu ) ) {
-			    if ( ! $is_addon ) {
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.1.3
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    class FS_Admin_Menu_Manager
+    {
+
+        #region Properties
+
+        /**
+         * @since 1.2.2
+         *
+         * @var string
+         */
+        protected $_module_unique_affix;
+
+        /**
+         * @since 1.2.2
+         *
+         * @var number
+         */
+        protected $_module_id;
+
+        /**
+         * @since 1.2.2
+         *
+         * @var string
+         */
+        protected $_module_type;
+
+        /**
+         * @since 1.0.6
+         *
+         * @var string
+         */
+        private $_menu_slug;
+        /**
+         * @since 1.1.3
+         *
+         * @var string
+         */
+        private $_parent_slug;
+        /**
+         * @since 1.1.3
+         *
+         * @var string
+         */
+        private $_parent_type;
+        /**
+         * @since 1.1.3
+         *
+         * @var string
+         */
+        private $_type;
+        /**
+         * @since 1.1.3
+         *
+         * @var bool
+         */
+        private $_is_top_level;
+        /**
+         * @since 1.1.3
+         *
+         * @var bool
+         */
+        private $_is_override_exact;
+        /**
+         * @since 1.1.3
+         *
+         * @var array<string,bool>
+         */
+        private $_default_submenu_items;
+        /**
+         * @since 1.1.3
+         *
+         * @var string
+         */
+        private $_first_time_path;
+        /**
+         * @since 1.2.2
+         *
+         * @var bool
+         */
+        private $_menu_exists;
+        /**
+         * @since 2.0.0
+         *
+         * @var bool
+         */
+        private $_network_menu_exists;
+
+        #endregion Properties
+
+        /**
+         * @var FS_Logger
+         */
+        protected $_logger;
+
+        #region Singleton
+
+        /**
+         * @var FS_Admin_Menu_Manager[]
+         */
+        private static $_instances = array();
+
+        /**
+         * @param number $module_id
+         * @param string $module_type
+         * @param string $module_unique_affix
+         *
+         * @return FS_Admin_Menu_Manager
+         */
+        public static function instance($module_id, $module_type, $module_unique_affix)
+        {
+            $key = 'm_' . $module_id;
+
+            if (! isset(self::$_instances[ $key ])) {
+                self::$_instances[ $key ] = new FS_Admin_Menu_Manager($module_id, $module_type, $module_unique_affix);
+            }
+
+            return self::$_instances[ $key ];
+        }
+
+        protected function __construct($module_id, $module_type, $module_unique_affix)
+        {
+            $this->_logger = FS_Logger::get_logger(WP_FS__SLUG . '_' . $module_id . '_admin_menu', WP_FS__DEBUG_SDK, WP_FS__ECHO_DEBUG_SDK);
+
+            $this->_module_id           = $module_id;
+            $this->_module_type         = $module_type;
+            $this->_module_unique_affix = $module_unique_affix;
+        }
+
+        #endregion Singleton
+
+        #region Helpers
+
+        private function get_option(&$options, $key, $default = false)
+        {
+            return ! empty($options[ $key ]) ? $options[ $key ] : $default;
+        }
+
+        private function get_bool_option(&$options, $key, $default = false)
+        {
+            return isset($options[ $key ]) && is_bool($options[ $key ]) ? $options[ $key ] : $default;
+        }
+
+        #endregion Helpers
+
+        /**
+         * @param array $menu
+         * @param bool  $is_addon
+         */
+        public function init($menu, $is_addon = false)
+        {
+            $this->_menu_exists = (isset($menu['slug']) && ! empty($menu['slug']));
+            $this->_network_menu_exists = (! empty($menu['network']) && true === $menu['network']);
+
+            $this->_menu_slug = ($this->_menu_exists ? $menu['slug'] : $this->_module_unique_affix);
+
+            $this->_default_submenu_items = array();
+            // @deprecated
+            $this->_type              = 'page';
+            $this->_is_top_level      = true;
+            $this->_is_override_exact = false;
+            $this->_parent_slug       = false;
+            // @deprecated
+            $this->_parent_type = 'page';
+
+            if (isset($menu)) {
+                if (! $is_addon) {
                     $this->_default_submenu_items = array(
-                        'contact'     => $this->get_bool_option( $menu, 'contact', true ),
-                        'support'     => $this->get_bool_option( $menu, 'support', true ),
-                        'affiliation' => $this->get_bool_option( $menu, 'affiliation', true ),
-                        'account'     => $this->get_bool_option( $menu, 'account', true ),
-                        'pricing'     => $this->get_bool_option( $menu, 'pricing', true ),
-                        'addons'      => $this->get_bool_option( $menu, 'addons', true ),
+                        'contact'     => $this->get_bool_option($menu, 'contact', true),
+                        'support'     => $this->get_bool_option($menu, 'support', true),
+                        'affiliation' => $this->get_bool_option($menu, 'affiliation', true),
+                        'account'     => $this->get_bool_option($menu, 'account', true),
+                        'pricing'     => $this->get_bool_option($menu, 'pricing', true),
+                        'addons'      => $this->get_bool_option($menu, 'addons', true),
                     );
 
                     // @deprecated
-                    $this->_type = $this->get_option( $menu, 'type', 'page' );
+                    $this->_type = $this->get_option($menu, 'type', 'page');
                 }
 
-				$this->_is_override_exact = $this->get_bool_option( $menu, 'override_exact' );
-
-				if ( isset( $menu['parent'] ) ) {
-					$this->_parent_slug = $this->get_option( $menu['parent'], 'slug' );
-					// @deprecated
-					$this->_parent_type = $this->get_option( $menu['parent'], 'type', 'page' );
-
-					// If parent's slug is different, then it's NOT a top level menu item.
-					$this->_is_top_level = ( $this->_parent_slug === $this->_menu_slug );
-				} else {
-					/**
-					 * If no parent then top level if:
-					 *  - Has custom admin menu ('page')
-					 *  - CPT menu type ('cpt')
-					 */
+                $this->_is_override_exact = $this->get_bool_option($menu, 'override_exact');
+
+                if (isset($menu['parent'])) {
+                    $this->_parent_slug = $this->get_option($menu['parent'], 'slug');
+                    // @deprecated
+                    $this->_parent_type = $this->get_option($menu['parent'], 'type', 'page');
+
+                    // If parent's slug is different, then it's NOT a top level menu item.
+                    $this->_is_top_level = ($this->_parent_slug === $this->_menu_slug);
+                } else {
+                    /**
+                     * If no parent then top level if:
+                     *  - Has custom admin menu ('page')
+                     *  - CPT menu type ('cpt')
+                     */
 //					$this->_is_top_level = in_array( $this->_type, array(
 //						'cpt',
 //						'page'
 //					) );
-				}
+                }
 
-				$first_path = $this->get_option( $menu, 'first-path', false );
+                $first_path = $this->get_option($menu, 'first-path', false);
 
-                if ( ! empty( $first_path ) && is_string( $first_path ) ) {
+                if (! empty($first_path) && is_string($first_path)) {
                     $this->_first_time_path = $first_path;
                 }
-			}
-		}
-
-		/**
-		 * Check if top level menu.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.3
-		 *
-		 * @return bool False if submenu item.
-		 */
-		function is_top_level() {
-			return $this->_is_top_level;
-		}
-
-		/**
-		 * Check if the page should be override on exact URL match.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.3
-		 *
-		 * @return bool False if submenu item.
-		 */
-		function is_override_exact() {
-			return $this->_is_override_exact;
-		}
+            }
+        }
+
+        /**
+         * Check if top level menu.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.3
+         *
+         * @return bool False if submenu item.
+         */
+        public function is_top_level()
+        {
+            return $this->_is_top_level;
+        }
+
+        /**
+         * Check if the page should be override on exact URL match.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.3
+         *
+         * @return bool False if submenu item.
+         */
+        public function is_override_exact()
+        {
+            return $this->_is_override_exact;
+        }
 
 
         /**
@@ -247,49 +255,53 @@
          *
          * @return string
          */
-        function get_first_time_path( $is_network = false ) {
-            if ( empty ( $this->_first_time_path ) ) {
+        public function get_first_time_path($is_network = false)
+        {
+            if (empty($this->_first_time_path)) {
                 return $this->_first_time_path;
             }
 
-            if ( $is_network ) {
-                return network_admin_url( $this->_first_time_path );
+            if ($is_network) {
+                return network_admin_url($this->_first_time_path);
             } else {
-                return admin_url( $this->_first_time_path );
+                return admin_url($this->_first_time_path);
             }
         }
 
-		/**
-		 * Check if plugin's menu item is part of a custom top level menu.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.3
-		 *
-		 * @return bool
-		 */
-		function has_custom_parent() {
-			return ! $this->_is_top_level && is_string( $this->_parent_slug );
-		}
-
-		/**
-		 * @author Leo Fajardo (@leorw)
-		 * @since  1.2.2
-		 *
-		 * @return bool
-		 */
-		function has_menu() {
-			return $this->_menu_exists;
-		}
-
-		/**
+        /**
+         * Check if plugin's menu item is part of a custom top level menu.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.3
+         *
+         * @return bool
+         */
+        public function has_custom_parent()
+        {
+            return ! $this->_is_top_level && is_string($this->_parent_slug);
+        }
+
+        /**
+         * @author Leo Fajardo (@leorw)
+         * @since  1.2.2
+         *
+         * @return bool
+         */
+        public function has_menu()
+        {
+            return $this->_menu_exists;
+        }
+
+        /**
          * @author Vova Feldman (@svovaf)
-		 * @since  2.0.0
-		 *
-		 * @return bool
-		 */
-		function has_network_menu() {
-			return $this->_network_menu_exists;
-		}
+         * @since  2.0.0
+         *
+         * @return bool
+         */
+        public function has_network_menu()
+        {
+            return $this->_network_menu_exists;
+        }
 
         /**
          * @author Leo Fajardo (@leorw)
@@ -298,137 +310,147 @@
          *
          * @since 2.1.3
          */
-		function set_slug_and_network_menu_exists_flag($menu_slug ) {
-		    $this->_menu_slug           = $menu_slug;
-		    $this->_network_menu_exists = false;
-        }
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.3
-		 *
-		 * @param string $id
-		 * @param bool   $default
-		 * @param bool   $ignore_menu_existence Since 1.2.2.7 If true, check if the submenu item visible even if there's no parent menu.
-		 *
-		 * @return bool
-		 */
-		function is_submenu_item_visible( $id, $default = true, $ignore_menu_existence = false ) {
-			if ( ! $ignore_menu_existence && ! $this->has_menu() ) {
-				return false;
-			}
-
-			return fs_apply_filter(
-				$this->_module_unique_affix,
-				'is_submenu_visible',
-				$this->get_bool_option( $this->_default_submenu_items, $id, $default ),
-				$id
-			);
-		}
-
-		/**
-		 * Calculates admin settings menu slug.
-		 * If plugin's menu slug is a file (e.g. CPT), uses plugin's slug as the menu slug.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.3
-		 *
-		 * @param string $page
-		 *
-		 * @return string
-		 */
-		function get_slug( $page = '' ) {
-			return ( ( false === strpos( $this->_menu_slug, '.php?' ) ) ?
-				$this->_menu_slug :
-				$this->_module_unique_affix ) . ( empty( $page ) ? '' : ( '-' . $page ) );
-		}
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.3
-		 *
-		 * @return string
-		 */
-		function get_parent_slug() {
-			return $this->_parent_slug;
-		}
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.3
-		 *
-		 * @return string
-		 */
-		function get_type() {
-			return $this->_type;
-		}
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.3
-		 *
-		 * @return bool
-		 */
-		function is_cpt() {
-			return ( 0 === strpos( $this->_menu_slug, 'edit.php?post_type=' ) ||
-			         // Back compatibility.
-			         'cpt' === $this->_type
-			);
-		}
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.3
-		 *
-		 * @return string
-		 */
-		function get_parent_type() {
-			return $this->_parent_type;
-		}
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.3
-		 *
-		 * @return string
-		 */
-		function get_raw_slug() {
-			return $this->_menu_slug;
-		}
-
-		/**
-		 * Get plugin's original menu slug.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.3
-		 *
-		 * @return string
-		 */
-		function get_original_menu_slug() {
-			if ( 'cpt' === $this->_type ) {
-				return add_query_arg( array(
-					'post_type' => $this->_menu_slug
-				), 'edit.php' );
-			}
-
-			if ( false === strpos( $this->_menu_slug, '.php?' ) ) {
-				return $this->_menu_slug;
-			} else {
-				return $this->_module_unique_affix;
-			}
-		}
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.3
-		 *
-		 * @return string
-		 */
-		function get_top_level_menu_slug() {
-			return $this->has_custom_parent() ?
-				$this->get_parent_slug() :
-				$this->get_raw_slug();
-		}
+        public function set_slug_and_network_menu_exists_flag($menu_slug)
+        {
+            $this->_menu_slug           = $menu_slug;
+            $this->_network_menu_exists = false;
+        }
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.3
+         *
+         * @param string $id
+         * @param bool   $default
+         * @param bool   $ignore_menu_existence Since 1.2.2.7 If true, check if the submenu item visible even if there's no parent menu.
+         *
+         * @return bool
+         */
+        public function is_submenu_item_visible($id, $default = true, $ignore_menu_existence = false)
+        {
+            if (! $ignore_menu_existence && ! $this->has_menu()) {
+                return false;
+            }
+
+            return fs_apply_filter(
+                $this->_module_unique_affix,
+                'is_submenu_visible',
+                $this->get_bool_option($this->_default_submenu_items, $id, $default),
+                $id
+            );
+        }
+
+        /**
+         * Calculates admin settings menu slug.
+         * If plugin's menu slug is a file (e.g. CPT), uses plugin's slug as the menu slug.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.3
+         *
+         * @param string $page
+         *
+         * @return string
+         */
+        public function get_slug($page = '')
+        {
+            return ((false === strpos($this->_menu_slug, '.php?')) ?
+                $this->_menu_slug :
+                $this->_module_unique_affix) . (empty($page) ? '' : ('-' . $page));
+        }
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.3
+         *
+         * @return string
+         */
+        public function get_parent_slug()
+        {
+            return $this->_parent_slug;
+        }
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.3
+         *
+         * @return string
+         */
+        public function get_type()
+        {
+            return $this->_type;
+        }
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.3
+         *
+         * @return bool
+         */
+        public function is_cpt()
+        {
+            return (0 === strpos($this->_menu_slug, 'edit.php?post_type=') ||
+                     // Back compatibility.
+                     'cpt' === $this->_type
+            );
+        }
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.3
+         *
+         * @return string
+         */
+        public function get_parent_type()
+        {
+            return $this->_parent_type;
+        }
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.3
+         *
+         * @return string
+         */
+        public function get_raw_slug()
+        {
+            return $this->_menu_slug;
+        }
+
+        /**
+         * Get plugin's original menu slug.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.3
+         *
+         * @return string
+         */
+        public function get_original_menu_slug()
+        {
+            if ('cpt' === $this->_type) {
+                return add_query_arg(array(
+                    'post_type' => $this->_menu_slug
+                ), 'edit.php');
+            }
+
+            if (false === strpos($this->_menu_slug, '.php?')) {
+                return $this->_menu_slug;
+            } else {
+                return $this->_module_unique_affix;
+            }
+        }
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.3
+         *
+         * @return string
+         */
+        public function get_top_level_menu_slug()
+        {
+            return $this->has_custom_parent() ?
+                $this->get_parent_slug() :
+                $this->get_raw_slug();
+        }
 
         /**
          * Is user on plugin's admin activation page.
@@ -442,8 +464,9 @@
          *
          * @deprecated Please use is_activation_page() instead.
          */
-        function is_main_settings_page( $show_opt_in_on_themes_page = false ) {
-            return $this->is_activation_page( $show_opt_in_on_themes_page );
+        public function is_main_settings_page($show_opt_in_on_themes_page = false)
+        {
+            return $this->is_activation_page($show_opt_in_on_themes_page);
         }
 
         /**
@@ -456,22 +479,23 @@
          *
          * @return bool
          */
-        function is_activation_page( $show_opt_in_on_themes_page = false ) {
-            if ( $show_opt_in_on_themes_page ) {
+        public function is_activation_page($show_opt_in_on_themes_page = false)
+        {
+            if ($show_opt_in_on_themes_page) {
                 /**
                  * In activation only when show_optin query string param is given.
                  *
                  * @since 1.2.2
                  */
                 return (
-                    ( WP_FS__MODULE_TYPE_THEME === $this->_module_type ) &&
+                    (WP_FS__MODULE_TYPE_THEME === $this->_module_type) &&
                     Freemius::is_themes_page() &&
-                    fs_request_get_bool( $this->_module_unique_affix . '_show_optin' )
+                    fs_request_get_bool($this->_module_unique_affix . '_show_optin')
                 );
             }
 
-            if ( $this->_menu_exists &&
-                 ( fs_is_plugin_page( $this->_menu_slug ) || fs_is_plugin_page( $this->_module_unique_affix ) )
+            if ($this->_menu_exists &&
+                 (fs_is_plugin_page($this->_menu_slug) || fs_is_plugin_page($this->_module_unique_affix))
             ) {
                 /**
                  * Module has a settings menu and the context page is the main settings page, so assume it's in
@@ -487,389 +511,397 @@
 
         #region Submenu Override
 
-		/**
-		 * Override submenu's action.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.0
-		 *
-		 * @param string   $parent_slug
-		 * @param string   $menu_slug
-		 * @param callable $function
-		 *
-		 * @return false|string If submenu exist, will return the hook name.
-		 */
-		function override_submenu_action( $parent_slug, $menu_slug, $function ) {
-			global $submenu;
-
-			$menu_slug   = plugin_basename( $menu_slug );
-			$parent_slug = plugin_basename( $parent_slug );
-
-			if ( ! isset( $submenu[ $parent_slug ] ) ) {
-				// Parent menu not exist.
-				return false;
-			}
-
-			$found_submenu_item = false;
-			foreach ( $submenu[ $parent_slug ] as $submenu_item ) {
-				if ( $menu_slug === $submenu_item[2] ) {
-					$found_submenu_item = $submenu_item;
-					break;
-				}
-			}
-
-			if ( false === $found_submenu_item ) {
-				// Submenu item not found.
-				return false;
-			}
-
-			// Remove current function.
-			$hookname = get_plugin_page_hookname( $menu_slug, $parent_slug );
-			remove_all_actions( $hookname );
-
-			// Attach new action.
-			add_action( $hookname, $function );
-
-			return $hookname;
-		}
-
-		#endregion Submenu Override
-
-		#region Top level menu Override
-
-		/**
-		 * Find plugin's admin dashboard main menu item.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.2
-		 *
-		 * @return string[]|false
-		 */
-		private function find_top_level_menu() {
-			global $menu;
-
-			$position   = - 1;
-			$found_menu = false;
-
-			$menu_slug = $this->get_raw_slug();
-
-			$hook_name = get_plugin_page_hookname( $menu_slug, '' );
-			foreach ( $menu as $pos => $m ) {
-				if ( $menu_slug === $m[2] ) {
-					$position   = $pos;
-					$found_menu = $m;
-					break;
-				}
-			}
-
-			if ( false === $found_menu ) {
-				return false;
-			}
-
-			return array(
-				'menu'      => $found_menu,
-				'position'  => $position,
-				'hook_name' => $hook_name
-			);
-		}
-
-		/**
-		 * Find plugin's admin dashboard main submenu item.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.1.6
-		 *
-		 * @return array|false
-		 */
-		private function find_main_submenu() {
-			global $submenu;
-
-			$top_level_menu_slug = $this->get_top_level_menu_slug();
-
-			if ( ! isset( $submenu[ $top_level_menu_slug ] ) ) {
-				return false;
-			}
-
-			$submenu_slug = $this->get_raw_slug();
-
-			$position   = - 1;
-			$found_submenu = false;
-
-			$hook_name = get_plugin_page_hookname( $submenu_slug, '' );
-
-			foreach ( $submenu[ $top_level_menu_slug ] as $pos => $sub ) {
-				if ( $submenu_slug === $sub[2] ) {
-					$position   = $pos;
-					$found_submenu = $sub;
-				}
-			}
-
-			if ( false === $found_submenu ) {
-				return false;
-			}
-
-			return array(
-				'menu'        => $found_submenu,
-				'parent_slug' => $top_level_menu_slug,
-				'position'    => $position,
-				'hook_name'   => $hook_name
-			);
-		}
-
-		/**
-		 * Remove all sub-menu items.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.7
-		 *
-		 * @return bool If submenu with plugin's menu slug was found.
-		 */
-		private function remove_all_submenu_items() {
-			global $submenu;
-
-			$menu_slug = $this->get_raw_slug();
-
-			if ( ! isset( $submenu[ $menu_slug ] ) ) {
-				return false;
-			}
-
-			/**
-			 * This method is NOT executed for WordPress.org themes.
-			 * Since we maintain only one version of the SDK we added this small
-			 * hack to avoid the error from Theme Check since it's a false-positive.
-			 *
-			 * @author Vova Feldman (@svovaf)
-			 * @since  1.2.2.7
-			 */
-			$submenu_ref               = &$submenu;
-			$submenu_ref[ $menu_slug ] = array();
-
-			return true;
-		}
-
-		/**
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.9
-		 *
+        /**
+         * Override submenu's action.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.0
+         *
+         * @param string   $parent_slug
+         * @param string   $menu_slug
+         * @param callable $function
+         *
+         * @return false|string If submenu exist, will return the hook name.
+         */
+        public function override_submenu_action($parent_slug, $menu_slug, $function)
+        {
+            global $submenu;
+
+            $menu_slug   = plugin_basename($menu_slug);
+            $parent_slug = plugin_basename($parent_slug);
+
+            if (! isset($submenu[ $parent_slug ])) {
+                // Parent menu not exist.
+                return false;
+            }
+
+            $found_submenu_item = false;
+            foreach ($submenu[ $parent_slug ] as $submenu_item) {
+                if ($menu_slug === $submenu_item[2]) {
+                    $found_submenu_item = $submenu_item;
+                    break;
+                }
+            }
+
+            if (false === $found_submenu_item) {
+                // Submenu item not found.
+                return false;
+            }
+
+            // Remove current function.
+            $hookname = get_plugin_page_hookname($menu_slug, $parent_slug);
+            remove_all_actions($hookname);
+
+            // Attach new action.
+            add_action($hookname, $function);
+
+            return $hookname;
+        }
+
+        #endregion Submenu Override
+
+        #region Top level menu Override
+
+        /**
+         * Find plugin's admin dashboard main menu item.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.2
+         *
+         * @return string[]|false
+         */
+        private function find_top_level_menu()
+        {
+            global $menu;
+
+            $position   = - 1;
+            $found_menu = false;
+
+            $menu_slug = $this->get_raw_slug();
+
+            $hook_name = get_plugin_page_hookname($menu_slug, '');
+            foreach ($menu as $pos => $m) {
+                if ($menu_slug === $m[2]) {
+                    $position   = $pos;
+                    $found_menu = $m;
+                    break;
+                }
+            }
+
+            if (false === $found_menu) {
+                return false;
+            }
+
+            return array(
+                'menu'      => $found_menu,
+                'position'  => $position,
+                'hook_name' => $hook_name
+            );
+        }
+
+        /**
+         * Find plugin's admin dashboard main submenu item.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.1.6
+         *
+         * @return array|false
+         */
+        private function find_main_submenu()
+        {
+            global $submenu;
+
+            $top_level_menu_slug = $this->get_top_level_menu_slug();
+
+            if (! isset($submenu[ $top_level_menu_slug ])) {
+                return false;
+            }
+
+            $submenu_slug = $this->get_raw_slug();
+
+            $position   = - 1;
+            $found_submenu = false;
+
+            $hook_name = get_plugin_page_hookname($submenu_slug, '');
+
+            foreach ($submenu[ $top_level_menu_slug ] as $pos => $sub) {
+                if ($submenu_slug === $sub[2]) {
+                    $position   = $pos;
+                    $found_submenu = $sub;
+                }
+            }
+
+            if (false === $found_submenu) {
+                return false;
+            }
+
+            return array(
+                'menu'        => $found_submenu,
+                'parent_slug' => $top_level_menu_slug,
+                'position'    => $position,
+                'hook_name'   => $hook_name
+            );
+        }
+
+        /**
+         * Remove all sub-menu items.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.7
+         *
+         * @return bool If submenu with plugin's menu slug was found.
+         */
+        private function remove_all_submenu_items()
+        {
+            global $submenu;
+
+            $menu_slug = $this->get_raw_slug();
+
+            if (! isset($submenu[ $menu_slug ])) {
+                return false;
+            }
+
+            /**
+             * This method is NOT executed for WordPress.org themes.
+             * Since we maintain only one version of the SDK we added this small
+             * hack to avoid the error from Theme Check since it's a false-positive.
+             *
+             * @author Vova Feldman (@svovaf)
+             * @since  1.2.2.7
+             */
+            $submenu_ref               = &$submenu;
+            $submenu_ref[ $menu_slug ] = array();
+
+            return true;
+        }
+
+        /**
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.9
+         *
          * @param bool $remove_top_level_menu
-         * 
-		 * @return false|array[string]mixed
-		 */
-        function remove_menu_item( $remove_top_level_menu = false ) {
+         *
+         * @return false|array[string]mixed
+         */
+        public function remove_menu_item($remove_top_level_menu = false)
+        {
             $this->_logger->entrance();
 
             // Find main menu item.
             $top_level_menu = $this->find_top_level_menu();
 
-            if ( false === $top_level_menu ) {
+            if (false === $top_level_menu) {
                 return false;
             }
 
             // Remove it with its actions.
-            remove_all_actions( $top_level_menu['hook_name'] );
+            remove_all_actions($top_level_menu['hook_name']);
 
             // Remove all submenu items.
             $this->remove_all_submenu_items();
 
-            if ( $remove_top_level_menu ) {
+            if ($remove_top_level_menu) {
                 global $menu;
-                unset( $menu[ $top_level_menu['position'] ] );
+                unset($menu[ $top_level_menu['position'] ]);
             }
 
             return $top_level_menu;
         }
 
-		/**
-		 * Get module's main admin setting page URL.
-		 *
-		 * @todo This method was only tested for wp.org compliant themes with a submenu item. Need to test for plugins with top level, submenu, and CPT top level, menu items.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.2.7
-		 *
-		 * @return string
-		 */
-		function main_menu_url() {
-			$this->_logger->entrance();
-
-			if ( $this->_is_top_level ) {
-				$menu = $this->find_top_level_menu();
-			} else {
-				$menu = $this->find_main_submenu();
-			}
-
-			$parent_slug = isset( $menu['parent_slug'] ) ?
+        /**
+         * Get module's main admin setting page URL.
+         *
+         * @todo This method was only tested for wp.org compliant themes with a submenu item. Need to test for plugins with top level, submenu, and CPT top level, menu items.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.2.7
+         *
+         * @return string
+         */
+        public function main_menu_url()
+        {
+            $this->_logger->entrance();
+
+            if ($this->_is_top_level) {
+                $menu = $this->find_top_level_menu();
+            } else {
+                $menu = $this->find_main_submenu();
+            }
+
+            $parent_slug = isset($menu['parent_slug']) ?
                 $menu['parent_slug'] :
                 'admin.php';
 
             return admin_url(
                 $parent_slug .
-                ( false === strpos( $parent_slug, '?' ) ? '?' : '&' ) .
+                (false === strpos($parent_slug, '?') ? '?' : '&') .
                 'page=' .
                 $menu['menu'][2]
             );
-		}
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.1.4
-		 *
-		 * @param callable $function
-		 *
-		 * @return false|array[string]mixed
-		 */
-		function override_menu_item( $function ) {
-			$found_menu = $this->remove_menu_item();
-
-			if ( false === $found_menu ) {
-				return false;
-			}
-
-			if ( ! $this->is_top_level() || ! $this->is_cpt() ) {
-				$menu_slug = plugin_basename( $this->get_slug() );
-
-				$hookname = get_plugin_page_hookname( $menu_slug, '' );
-
-				// Override menu action.
-				add_action( $hookname, $function );
-			} else {
-				global $menu;
-
-				// Remove original CPT menu.
-				unset( $menu[ $found_menu['position'] ] );
-
-				// Create new top-level menu action.
-				$hookname = self::add_page(
-					$found_menu['menu'][3],
-					$found_menu['menu'][0],
-					'manage_options',
-					$this->get_slug(),
-					$function,
-					$found_menu['menu'][6],
-					$found_menu['position']
-				);
-			}
-
-			return $hookname;
-		}
-
-		/**
-		 * Adds a counter to the module's top level menu item.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.1.5
-		 *
-		 * @param int    $counter
-		 * @param string $class
-		 */
-		function add_counter_to_menu_item( $counter = 1, $class = '' ) {
-			global $menu, $submenu;
-
-			$mask = '%s <span class="update-plugins %s count-%3$s" aria-hidden="true"><span>%3$s<span class="screen-reader-text">%3$s notifications</span></span></span>';
-
-			/**
-			 * This method is NOT executed for WordPress.org themes.
-			 * Since we maintain only one version of the SDK we added this small
-			 * hack to avoid the error from Theme Check since it's a false-positive.
-			 *
-			 * @author Vova Feldman (@svovaf)
-			 * @since  1.2.2.7
-			 */
-			$menu_ref    = &$menu;
-			$submenu_ref = &$submenu;
-
-			if ( $this->_is_top_level ) {
-				// Find main menu item.
-				$found_menu = $this->find_top_level_menu();
-
-				if ( false !== $found_menu ) {
-					// Override menu label.
-					$menu_ref[ $found_menu['position'] ][0] = sprintf(
-						$mask,
-						$found_menu['menu'][0],
-						$class,
-						$counter
-					);
-				}
-			} else {
-				$found_submenu = $this->find_main_submenu();
-
-				if ( false !== $found_submenu ) {
-					// Override menu label.
-					$submenu_ref[ $found_submenu['parent_slug'] ][ $found_submenu['position'] ][0] = sprintf(
-						$mask,
-						$found_submenu['menu'][0],
-						$class,
-						$counter
-					);
-				}
-			}
-		}
-
-		#endregion Top level menu Override
-
-		/**
-		 * Add a top-level menu page.
-		 *
-		 * Note for WordPress.org Theme/Plugin reviewer:
-		 *
-		 *  This is a replication of `add_menu_page()` to avoid Theme Check warning.
-		 *
-		 *  Why?
-		 *  ====
-		 *  Freemius is an SDK for plugin and theme developers. Since the core
-		 *  of the SDK is relevant both for plugins and themes, for obvious reasons,
-		 *  we only develop and maintain one code base.
-		 *
-		 *  This method will not run for wp.org themes (only plugins) since theme
-		 *  admin settings/options are now only allowed in the customizer.
-		 *
-		 *  If you have any questions or need clarifications, please don't hesitate
-		 *  pinging me on slack, my username is @svovaf.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.2
-		 *
-		 * @param string          $page_title The text to be displayed in the title tags of the page when the menu is
-		 *                                    selected.
-		 * @param string          $menu_title The text to be used for the menu.
-		 * @param string          $capability The capability required for this menu to be displayed to the user.
-		 * @param string          $menu_slug  The slug name to refer to this menu by (should be unique for this menu).
-		 * @param callable|string $function   The function to be called to output the content for this page.
-		 * @param string          $icon_url   The URL to the icon to be used for this menu.
-		 *                                    * Pass a base64-encoded SVG using a data URI, which will be colored to
-		 *                                    match the color scheme. This should begin with
-		 *                                    'data:image/svg+xml;base64,'.
-		 *                                    * Pass the name of a Dashicons helper class to use a font icon,
-		 *                                    e.g. 'dashicons-chart-pie'.
-		 *                                    * Pass 'none' to leave div.wp-menu-image empty so an icon can be added
-		 *                                    via CSS.
-		 * @param int             $position   The position in the menu order this one should appear.
-		 *
-		 * @return string The resulting page's hook_suffix.
-		 */
-		static function add_page(
-			$page_title,
-			$menu_title,
-			$capability,
-			$menu_slug,
-			$function = '',
-			$icon_url = '',
-			$position = null
-		) {
-			$fn = 'add_menu' . '_page';
-
-			return $fn(
-				$page_title,
-				$menu_title,
-				$capability,
-				$menu_slug,
-				$function,
-				$icon_url,
-				$position
-			);
-		}
+        }
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.1.4
+         *
+         * @param callable $function
+         *
+         * @return false|array[string]mixed
+         */
+        public function override_menu_item($function)
+        {
+            $found_menu = $this->remove_menu_item();
+
+            if (false === $found_menu) {
+                return false;
+            }
+
+            if (! $this->is_top_level() || ! $this->is_cpt()) {
+                $menu_slug = plugin_basename($this->get_slug());
+
+                $hookname = get_plugin_page_hookname($menu_slug, '');
+
+                // Override menu action.
+                add_action($hookname, $function);
+            } else {
+                global $menu;
+
+                // Remove original CPT menu.
+                unset($menu[ $found_menu['position'] ]);
+
+                // Create new top-level menu action.
+                $hookname = self::add_page(
+                    $found_menu['menu'][3],
+                    $found_menu['menu'][0],
+                    'manage_options',
+                    $this->get_slug(),
+                    $function,
+                    $found_menu['menu'][6],
+                    $found_menu['position']
+                );
+            }
+
+            return $hookname;
+        }
+
+        /**
+         * Adds a counter to the module's top level menu item.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.1.5
+         *
+         * @param int    $counter
+         * @param string $class
+         */
+        public function add_counter_to_menu_item($counter = 1, $class = '')
+        {
+            global $menu, $submenu;
+
+            $mask = '%s <span class="update-plugins %s count-%3$s" aria-hidden="true"><span>%3$s<span class="screen-reader-text">%3$s notifications</span></span></span>';
+
+            /**
+             * This method is NOT executed for WordPress.org themes.
+             * Since we maintain only one version of the SDK we added this small
+             * hack to avoid the error from Theme Check since it's a false-positive.
+             *
+             * @author Vova Feldman (@svovaf)
+             * @since  1.2.2.7
+             */
+            $menu_ref    = &$menu;
+            $submenu_ref = &$submenu;
+
+            if ($this->_is_top_level) {
+                // Find main menu item.
+                $found_menu = $this->find_top_level_menu();
+
+                if (false !== $found_menu) {
+                    // Override menu label.
+                    $menu_ref[ $found_menu['position'] ][0] = sprintf(
+                        $mask,
+                        $found_menu['menu'][0],
+                        $class,
+                        $counter
+                    );
+                }
+            } else {
+                $found_submenu = $this->find_main_submenu();
+
+                if (false !== $found_submenu) {
+                    // Override menu label.
+                    $submenu_ref[ $found_submenu['parent_slug'] ][ $found_submenu['position'] ][0] = sprintf(
+                        $mask,
+                        $found_submenu['menu'][0],
+                        $class,
+                        $counter
+                    );
+                }
+            }
+        }
+
+        #endregion Top level menu Override
+
+        /**
+         * Add a top-level menu page.
+         *
+         * Note for WordPress.org Theme/Plugin reviewer:
+         *
+         *  This is a replication of `add_menu_page()` to avoid Theme Check warning.
+         *
+         *  Why?
+         *  ====
+         *  Freemius is an SDK for plugin and theme developers. Since the core
+         *  of the SDK is relevant both for plugins and themes, for obvious reasons,
+         *  we only develop and maintain one code base.
+         *
+         *  This method will not run for wp.org themes (only plugins) since theme
+         *  admin settings/options are now only allowed in the customizer.
+         *
+         *  If you have any questions or need clarifications, please don't hesitate
+         *  pinging me on slack, my username is @svovaf.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.2
+         *
+         * @param string          $page_title The text to be displayed in the title tags of the page when the menu is
+         *                                    selected.
+         * @param string          $menu_title The text to be used for the menu.
+         * @param string          $capability The capability required for this menu to be displayed to the user.
+         * @param string          $menu_slug  The slug name to refer to this menu by (should be unique for this menu).
+         * @param callable|string $function   The function to be called to output the content for this page.
+         * @param string          $icon_url   The URL to the icon to be used for this menu.
+         *                                    * Pass a base64-encoded SVG using a data URI, which will be colored to
+         *                                    match the color scheme. This should begin with
+         *                                    'data:image/svg+xml;base64,'.
+         *                                    * Pass the name of a Dashicons helper class to use a font icon,
+         *                                    e.g. 'dashicons-chart-pie'.
+         *                                    * Pass 'none' to leave div.wp-menu-image empty so an icon can be added
+         *                                    via CSS.
+         * @param int             $position   The position in the menu order this one should appear.
+         *
+         * @return string The resulting page's hook_suffix.
+         */
+        public static function add_page(
+            $page_title,
+            $menu_title,
+            $capability,
+            $menu_slug,
+            $function = '',
+            $icon_url = '',
+            $position = null
+        ) {
+            $fn = 'add_menu' . '_page';
+
+            return $fn(
+                $page_title,
+                $menu_title,
+                $capability,
+                $menu_slug,
+                $function,
+                $icon_url,
+                $position
+            );
+        }
 
         /**
          * Add page and update menu instance settings.
@@ -887,7 +919,7 @@
          *
          * @return string
          */
-		function add_page_and_update(
+        public function add_page_and_update(
             $page_title,
             $menu_title,
             $capability,
@@ -912,58 +944,59 @@
             );
         }
 
-		/**
-		 * Add a submenu page.
-		 *
-		 * Note for WordPress.org Theme/Plugin reviewer:
-		 *
-		 *  This is a replication of `add_submenu_page()` to avoid Theme Check warning.
-		 *
-		 *  Why?
-		 *  ====
-		 *  Freemius is an SDK for plugin and theme developers. Since the core
-		 *  of the SDK is relevant both for plugins and themes, for obvious reasons,
-		 *  we only develop and maintain one code base.
-		 *
-		 *  This method will not run for wp.org themes (only plugins) since theme
-		 *  admin settings/options are now only allowed in the customizer.
-		 *
-		 *  If you have any questions or need clarifications, please don't hesitate
-		 *  pinging me on slack, my username is @svovaf.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.2
-		 *
-		 * @param string          $parent_slug The slug name for the parent menu (or the file name of a standard
-		 *                                     WordPress admin page).
-		 * @param string          $page_title  The text to be displayed in the title tags of the page when the menu is
-		 *                                     selected.
-		 * @param string          $menu_title  The text to be used for the menu.
-		 * @param string          $capability  The capability required for this menu to be displayed to the user.
-		 * @param string          $menu_slug   The slug name to refer to this menu by (should be unique for this menu).
-		 * @param callable|string $function    The function to be called to output the content for this page.
-		 *
-		 * @return false|string The resulting page's hook_suffix, or false if the user does not have the capability
-		 *                      required.
-		 */
-		static function add_subpage(
-			$parent_slug,
-			$page_title,
-			$menu_title,
-			$capability,
-			$menu_slug,
-			$function = ''
-		) {
-			$fn = 'add_submenu' . '_page';
-
-			return $fn( $parent_slug,
-				$page_title,
-				$menu_title,
-				$capability,
-				$menu_slug,
-				$function
-			);
-		}
+        /**
+         * Add a submenu page.
+         *
+         * Note for WordPress.org Theme/Plugin reviewer:
+         *
+         *  This is a replication of `add_submenu_page()` to avoid Theme Check warning.
+         *
+         *  Why?
+         *  ====
+         *  Freemius is an SDK for plugin and theme developers. Since the core
+         *  of the SDK is relevant both for plugins and themes, for obvious reasons,
+         *  we only develop and maintain one code base.
+         *
+         *  This method will not run for wp.org themes (only plugins) since theme
+         *  admin settings/options are now only allowed in the customizer.
+         *
+         *  If you have any questions or need clarifications, please don't hesitate
+         *  pinging me on slack, my username is @svovaf.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.2
+         *
+         * @param string          $parent_slug The slug name for the parent menu (or the file name of a standard
+         *                                     WordPress admin page).
+         * @param string          $page_title  The text to be displayed in the title tags of the page when the menu is
+         *                                     selected.
+         * @param string          $menu_title  The text to be used for the menu.
+         * @param string          $capability  The capability required for this menu to be displayed to the user.
+         * @param string          $menu_slug   The slug name to refer to this menu by (should be unique for this menu).
+         * @param callable|string $function    The function to be called to output the content for this page.
+         *
+         * @return false|string The resulting page's hook_suffix, or false if the user does not have the capability
+         *                      required.
+         */
+        public static function add_subpage(
+            $parent_slug,
+            $page_title,
+            $menu_title,
+            $capability,
+            $menu_slug,
+            $function = ''
+        ) {
+            $fn = 'add_submenu' . '_page';
+
+            return $fn(
+                $parent_slug,
+                $page_title,
+                $menu_title,
+                $capability,
+                $menu_slug,
+                $function
+            );
+        }
 
         /**
          * Add sub page and update menu instance settings.
@@ -980,7 +1013,7 @@
          *
          * @return string
          */
-        function add_subpage_and_update(
+        public function add_subpage_and_update(
             $parent_slug,
             $page_title,
             $menu_title,
@@ -1003,4 +1036,4 @@
                 $function
             );
         }
-	}
\ No newline at end of file
+    }
diff --git a/freemius/includes/managers/class-fs-admin-notice-manager.php b/freemius/includes/managers/class-fs-admin-notice-manager.php
index cc9d7f916b95931600a9c9a5bb16c241d0e38503..50d35d1bb19568af010c691fab98ce6b6923a7c8 100644
--- a/freemius/includes/managers/class-fs-admin-notice-manager.php
+++ b/freemius/includes/managers/class-fs-admin-notice-manager.php
@@ -6,11 +6,12 @@
      * @since       1.0.7
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
-    class FS_Admin_Notice_Manager {
+    class FS_Admin_Notice_Manager
+    {
         /**
          * @since 1.2.2
          *
@@ -63,23 +64,23 @@
          *
          * @return \FS_Admin_Notice_Manager
          */
-        static function instance(
+        public static function instance(
             $id,
             $title = '',
             $module_unique_affix = '',
             $is_network_and_blog_admins = false,
             $network_level_or_blog_id = false
         ) {
-            if ( $is_network_and_blog_admins ) {
+            if ($is_network_and_blog_admins) {
                 $network_level_or_blog_id = true;
             }
 
-            $key = strtolower( $id );
+            $key = strtolower($id);
 
-            if ( is_multisite() ) {
-                if ( true === $network_level_or_blog_id ) {
+            if (is_multisite()) {
+                if (true === $network_level_or_blog_id) {
                     $key .= ':ms';
-                } else if ( is_numeric( $network_level_or_blog_id ) && $network_level_or_blog_id > 0 ) {
+                } elseif (is_numeric($network_level_or_blog_id) && $network_level_or_blog_id > 0) {
                     $key .= ":{$network_level_or_blog_id}";
                 } else {
                     $network_level_or_blog_id = get_current_blog_id();
@@ -88,7 +89,7 @@
                 }
             }
 
-            if ( ! isset( self::$_instances[ $key ] ) ) {
+            if (! isset(self::$_instances[ $key ])) {
                 self::$_instances[ $key ] = new FS_Admin_Notice_Manager(
                     $id,
                     $title,
@@ -117,15 +118,15 @@
             $network_level_or_blog_id = false
         ) {
             $this->_id                  = $id;
-            $this->_logger              = FS_Logger::get_logger( WP_FS__SLUG . '_' . $this->_id . '_data', WP_FS__DEBUG_SDK, WP_FS__ECHO_DEBUG_SDK );
-            $this->_title               = ! empty( $title ) ? $title : '';
+            $this->_logger              = FS_Logger::get_logger(WP_FS__SLUG . '_' . $this->_id . '_data', WP_FS__DEBUG_SDK, WP_FS__ECHO_DEBUG_SDK);
+            $this->_title               = ! empty($title) ? $title : '';
             $this->_module_unique_affix = $module_unique_affix;
-            $this->_sticky_storage      = FS_Key_Value_Storage::instance( 'admin_notices', $this->_id, $network_level_or_blog_id );
+            $this->_sticky_storage      = FS_Key_Value_Storage::instance('admin_notices', $this->_id, $network_level_or_blog_id);
 
-            if ( is_multisite() ) {
-                $this->_is_network_notices = ( true === $network_level_or_blog_id );
+            if (is_multisite()) {
+                $this->_is_network_notices = (true === $network_level_or_blog_id);
 
-                if ( is_numeric( $network_level_or_blog_id ) ) {
+                if (is_numeric($network_level_or_blog_id)) {
                     $this->_blog_id = $network_level_or_blog_id;
                 }
             } else {
@@ -135,21 +136,21 @@
             $is_network_admin = fs_is_network_admin();
             $is_blog_admin    = fs_is_blog_admin();
 
-            if ( ( $this->_is_network_notices && $is_network_admin ) ||
-                 ( ! $this->_is_network_notices && $is_blog_admin ) ||
-                ( $is_network_and_blog_admins && ( $is_network_admin || $is_blog_admin ) )
+            if (($this->_is_network_notices && $is_network_admin) ||
+                 (! $this->_is_network_notices && $is_blog_admin) ||
+                ($is_network_and_blog_admins && ($is_network_admin || $is_blog_admin))
             ) {
-                if ( 0 < count( $this->_sticky_storage ) ) {
-                    $ajax_action_suffix = str_replace( ':', '-', $this->_id );
+                if (0 < count($this->_sticky_storage)) {
+                    $ajax_action_suffix = str_replace(':', '-', $this->_id);
 
                     // If there are sticky notices for the current slug, add a callback
                     // to the AJAX action that handles message dismiss.
-                    add_action( "wp_ajax_fs_dismiss_notice_action_{$ajax_action_suffix}", array(
+                    add_action("wp_ajax_fs_dismiss_notice_action_{$ajax_action_suffix}", array(
                         &$this,
                         'dismiss_notice_ajax_callback'
-                    ) );
+                    ));
 
-                    foreach ( $this->_sticky_storage as $msg ) {
+                    foreach ($this->_sticky_storage as $msg) {
                         // Add admin notice.
                         $this->add(
                             $msg['message'],
@@ -158,8 +159,8 @@
                             true,
                             $msg['id'],
                             false,
-                            isset( $msg['wp_user_id'] ) ? $msg['wp_user_id'] : null,
-                            ! empty( $msg['plugin'] ) ? $msg['plugin'] : null,
+                            isset($msg['wp_user_id']) ? $msg['wp_user_id'] : null,
+                            ! empty($msg['plugin']) ? $msg['plugin'] : null,
                             $is_network_and_blog_admins
                         );
                     }
@@ -174,8 +175,9 @@
          * @since  1.0.7
          *
          */
-        function dismiss_notice_ajax_callback() {
-            $this->_sticky_storage->remove( $_POST['message_id'] );
+        public function dismiss_notice_ajax_callback()
+        {
+            $this->_sticky_storage->remove($_POST['message_id']);
             wp_die();
         }
 
@@ -185,9 +187,10 @@
          * @author Vova Feldman (@svovaf)
          * @since  1.0.7
          */
-        static function _add_sticky_dismiss_javascript() {
+        public static function _add_sticky_dismiss_javascript()
+        {
             $params = array();
-            fs_require_once_template( 'sticky-admin-notice-js.php', $params );
+            fs_require_once_template('sticky-admin-notice-js.php', $params);
         }
 
         private static $_added_sticky_javascript = false;
@@ -198,9 +201,10 @@
          * @author Vova Feldman (@svovaf)
          * @since  1.0.7
          */
-        private static function has_sticky_messages() {
-            if ( ! self::$_added_sticky_javascript ) {
-                add_action( 'admin_footer', array( 'FS_Admin_Notice_Manager', '_add_sticky_dismiss_javascript' ) );
+        private static function has_sticky_messages()
+        {
+            if (! self::$_added_sticky_javascript) {
+                add_action('admin_footer', array( 'FS_Admin_Notice_Manager', '_add_sticky_dismiss_javascript' ));
             }
         }
 
@@ -211,20 +215,21 @@
          * @since  1.0.4
          *
          */
-        function _admin_notices_hook() {
-            if ( function_exists( 'current_user_can' ) &&
-                 ! current_user_can( 'manage_options' )
+        public function _admin_notices_hook()
+        {
+            if (function_exists('current_user_can') &&
+                 ! current_user_can('manage_options')
             ) {
                 // Only show messages to admins.
                 return;
             }
 
 
-            $show_admin_notices = ( ! $this->is_gutenberg_page() );
+            $show_admin_notices = (! $this->is_gutenberg_page());
 
-            foreach ( $this->_notices as $id => $msg ) {
-                if ( isset( $msg['wp_user_id'] ) && is_numeric( $msg['wp_user_id'] ) ) {
-                    if ( get_current_user_id() != $msg['wp_user_id'] ) {
+            foreach ($this->_notices as $id => $msg) {
+                if (isset($msg['wp_user_id']) && is_numeric($msg['wp_user_id'])) {
+                    if (get_current_user_id() != $msg['wp_user_id']) {
                         continue;
                     }
                 }
@@ -261,20 +266,20 @@
                  * @author Vova Feldman
                  * @since 2.2.0
                  */
-                $show_notice = call_user_func_array( 'fs_apply_filter', array(
+                $show_notice = call_user_func_array('fs_apply_filter', array(
                     $this->_module_unique_affix,
                     'show_admin_notice',
                     $show_admin_notices,
                     $msg
-                ) );
+                ));
 
-                if ( true !== $show_notice ) {
+                if (true !== $show_notice) {
                     continue;
                 }
 
-                fs_require_template( 'admin-notice.php', $msg );
+                fs_require_template('admin-notice.php', $msg);
 
-                if ( $msg['sticky'] ) {
+                if ($msg['sticky']) {
                     self::has_sticky_messages();
                 }
             }
@@ -286,8 +291,9 @@
          * @author Vova Feldman (@svovaf)
          * @since  1.0.7
          */
-        function _enqueue_styles() {
-            fs_enqueue_local_style( 'fs_common', '/admin/common.css' );
+        public function _enqueue_styles()
+        {
+            fs_enqueue_local_style('fs_common', '/admin/common.css');
         }
 
         /**
@@ -298,8 +304,9 @@
          *
          * @return bool
          */
-        function is_gutenberg_page() {
-            if ( function_exists( 'is_gutenberg_page' ) &&
+        public function is_gutenberg_page()
+        {
+            if (function_exists('is_gutenberg_page') &&
                  is_gutenberg_page()
             ) {
                 // The Gutenberg plugin is on.
@@ -308,7 +315,7 @@
 
             $current_screen = get_current_screen();
 
-            if ( method_exists( $current_screen, 'is_block_editor' ) &&
+            if (method_exists($current_screen, 'is_block_editor') &&
                  $current_screen->is_block_editor()
             ) {
                 // Gutenberg page on 5+.
@@ -337,7 +344,7 @@
          *
          * @uses   add_action()
          */
-        function add(
+        public function add(
             $message,
             $title = '',
             $type = 'success',
@@ -350,19 +357,19 @@
         ) {
             $notices_type = $this->get_notices_type();
 
-            if ( empty( $this->_notices ) ) {
-                if ( ! $is_network_and_blog_admins ) {
-                    add_action( $notices_type, array( &$this, "_admin_notices_hook" ) );
+            if (empty($this->_notices)) {
+                if (! $is_network_and_blog_admins) {
+                    add_action($notices_type, array( &$this, "_admin_notices_hook" ));
                 } else {
-                    add_action( 'network_admin_notices', array( &$this, "_admin_notices_hook" ) );
-                    add_action( 'admin_notices', array( &$this, "_admin_notices_hook" ) );
+                    add_action('network_admin_notices', array( &$this, "_admin_notices_hook" ));
+                    add_action('admin_notices', array( &$this, "_admin_notices_hook" ));
                 }
 
-                add_action( 'admin_enqueue_scripts', array( &$this, '_enqueue_styles' ) );
+                add_action('admin_enqueue_scripts', array( &$this, '_enqueue_styles' ));
             }
 
-            if ( '' === $id ) {
-                $id = md5( $title . ' ' . $message . ' ' . $type );
+            if ('' === $id) {
+                $id = md5($title . ' ' . $message . ' ' . $type);
             }
 
             $message_object = array(
@@ -372,11 +379,11 @@
                 'sticky'     => $is_sticky,
                 'id'         => $id,
                 'manager_id' => $this->_id,
-                'plugin'     => ( ! is_null( $plugin_title ) ? $plugin_title : $this->_title ),
+                'plugin'     => (! is_null($plugin_title) ? $plugin_title : $this->_title),
                 'wp_user_id' => $wp_user_id,
             );
 
-            if ( $is_sticky && $store_if_sticky ) {
+            if ($is_sticky && $store_if_sticky) {
                 $this->_sticky_storage->{$id} = $message_object;
             }
 
@@ -389,17 +396,18 @@
          *
          * @param string|string[] $ids
          */
-        function remove_sticky( $ids ) {
-            if ( ! is_array( $ids ) ) {
+        public function remove_sticky($ids)
+        {
+            if (! is_array($ids)) {
                 $ids = array( $ids );
             }
 
-            foreach ( $ids as $id ) {
+            foreach ($ids as $id) {
                 // Remove from sticky storage.
-                $this->_sticky_storage->remove( $id );
+                $this->_sticky_storage->remove($id);
 
-                if ( isset( $this->_notices[ $id ] ) ) {
-                    unset( $this->_notices[ $id ] );
+                if (isset($this->_notices[ $id ])) {
+                    unset($this->_notices[ $id ]);
                 }
             }
         }
@@ -414,8 +422,9 @@
          *
          * @return bool
          */
-        function has_sticky( $id ) {
-            return isset( $this->_sticky_storage[ $id ] );
+        public function has_sticky($id)
+        {
+            return isset($this->_sticky_storage[ $id ]);
         }
 
         /**
@@ -433,13 +442,14 @@
          * @param bool        $is_network_and_blog_admins Whether or not the message should be shown both on network
          *                                                and blog admin pages.
          */
-        function add_sticky( $message, $id, $title = '', $type = 'success', $wp_user_id = null, $plugin_title = null, $is_network_and_blog_admins = false ) {
-            if ( ! empty( $this->_module_unique_affix ) ) {
-                $message = fs_apply_filter( $this->_module_unique_affix, "sticky_message_{$id}", $message );
-                $title   = fs_apply_filter( $this->_module_unique_affix, "sticky_title_{$id}", $title );
+        public function add_sticky($message, $id, $title = '', $type = 'success', $wp_user_id = null, $plugin_title = null, $is_network_and_blog_admins = false)
+        {
+            if (! empty($this->_module_unique_affix)) {
+                $message = fs_apply_filter($this->_module_unique_affix, "sticky_message_{$id}", $message);
+                $title   = fs_apply_filter($this->_module_unique_affix, "sticky_title_{$id}", $title);
             }
 
-            $this->add( $message, $title, $type, true, $id, true, $wp_user_id, $plugin_title, $is_network_and_blog_admins );
+            $this->add($message, $title, $type, true, $id, true, $wp_user_id, $plugin_title, $is_network_and_blog_admins);
         }
 
         /**
@@ -448,7 +458,8 @@
          * @author Vova Feldman (@svovaf)
          * @since  1.0.8
          */
-        function clear_all_sticky() {
+        public function clear_all_sticky()
+        {
             $this->_sticky_storage->clear_all();
         }
 
@@ -462,11 +473,12 @@
          *
          * @return string
          */
-        private function get_notices_type() {
+        private function get_notices_type()
+        {
             return $this->_is_network_notices ?
                 'network_admin_notices' :
                 'admin_notices';
         }
 
         #endregion
-    }
\ No newline at end of file
+    }
diff --git a/freemius/includes/managers/class-fs-cache-manager.php b/freemius/includes/managers/class-fs-cache-manager.php
index 7f2d850c62d1e3284c58f361a0bed68e646be97a..e198257fff5f81e571ab00c6e05ab6c780de55d9 100644
--- a/freemius/includes/managers/class-fs-cache-manager.php
+++ b/freemius/includes/managers/class-fs-cache-manager.php
@@ -6,11 +6,12 @@
      * @since       1.1.6
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
-    class FS_Cache_Manager {
+    class FS_Cache_Manager
+    {
         /**
          * @var FS_Option_Manager
          */
@@ -31,13 +32,14 @@
          *
          * @param string $id
          */
-        private function __construct( $id ) {
-            $this->_logger = FS_Logger::get_logger( WP_FS__SLUG . '_cach_mngr_' . $id, WP_FS__DEBUG_SDK, WP_FS__ECHO_DEBUG_SDK );
+        private function __construct($id)
+        {
+            $this->_logger = FS_Logger::get_logger(WP_FS__SLUG . '_cach_mngr_' . $id, WP_FS__DEBUG_SDK, WP_FS__ECHO_DEBUG_SDK);
 
             $this->_logger->entrance();
-            $this->_logger->log( 'id = ' . $id );
+            $this->_logger->log('id = ' . $id);
 
-            $this->_options = FS_Option_Manager::get_manager( $id, true, true, false );
+            $this->_options = FS_Option_Manager::get_manager($id, true, true, false);
         }
 
         /**
@@ -48,11 +50,12 @@
          *
          * @return FS_Cache_Manager
          */
-        static function get_manager( $id ) {
-            $id = strtolower( $id );
+        public static function get_manager($id)
+        {
+            $id = strtolower($id);
 
-            if ( ! isset( self::$_MANAGERS[ $id ] ) ) {
-                self::$_MANAGERS[ $id ] = new FS_Cache_Manager( $id );
+            if (! isset(self::$_MANAGERS[ $id ])) {
+                self::$_MANAGERS[ $id ] = new FS_Cache_Manager($id);
             }
 
             return self::$_MANAGERS[ $id ];
@@ -64,7 +67,8 @@
          *
          * @return bool
          */
-        function is_empty() {
+        public function is_empty()
+        {
             $this->_logger->entrance();
 
             return $this->_options->is_empty();
@@ -74,10 +78,11 @@
          * @author Vova Feldman (@svovaf)
          * @since  1.1.6
          */
-        function clear() {
+        public function clear()
+        {
             $this->_logger->entrance();
 
-            $this->_options->clear( true );
+            $this->_options->clear(true);
         }
 
         /**
@@ -86,7 +91,8 @@
          * @author Vova Feldman (@svovaf)
          * @since  1.0.9
          */
-        function delete() {
+        public function delete()
+        {
             $this->_options->delete();
         }
 
@@ -100,12 +106,13 @@
          *
          * @return bool
          */
-        function has( $key ) {
-            $cache_entry = $this->_options->get_option( $key, false );
+        public function has($key)
+        {
+            $cache_entry = $this->_options->get_option($key, false);
 
-            return ( is_object( $cache_entry ) &&
-                     isset( $cache_entry->timestamp ) &&
-                     is_numeric( $cache_entry->timestamp )
+            return (is_object($cache_entry) &&
+                     isset($cache_entry->timestamp) &&
+                     is_numeric($cache_entry->timestamp)
             );
         }
 
@@ -120,19 +127,21 @@
          *
          * @return bool
          */
-        function has_valid( $key, $expiration = null ) {
-            $cache_entry = $this->_options->get_option( $key, false );
-
-            $is_valid = ( is_object( $cache_entry ) &&
-                          isset( $cache_entry->timestamp ) &&
-                          is_numeric( $cache_entry->timestamp ) &&
+        public function has_valid($key, $expiration = null)
+        {
+            $cache_entry = $this->_options->get_option($key, false);
+
+            $is_valid = (
+                is_object($cache_entry) &&
+                          isset($cache_entry->timestamp) &&
+                          is_numeric($cache_entry->timestamp) &&
                           $cache_entry->timestamp > WP_FS__SCRIPT_START_TIME
             );
 
-            if ( $is_valid &&
-                 is_numeric( $expiration ) &&
-                 isset( $cache_entry->created ) &&
-                 is_numeric( $cache_entry->created ) &&
+            if ($is_valid &&
+                 is_numeric($expiration) &&
+                 isset($cache_entry->created) &&
+                 is_numeric($cache_entry->created) &&
                  $cache_entry->created + $expiration < WP_FS__SCRIPT_START_TIME
             ) {
                 /**
@@ -157,19 +166,20 @@
          *
          * @return mixed
          */
-        function get( $key, $default = null ) {
-            $this->_logger->entrance( 'key = ' . $key );
+        public function get($key, $default = null)
+        {
+            $this->_logger->entrance('key = ' . $key);
 
-            $cache_entry = $this->_options->get_option( $key, false );
+            $cache_entry = $this->_options->get_option($key, false);
 
-            if ( is_object( $cache_entry ) &&
-                 isset( $cache_entry->timestamp ) &&
-                 is_numeric( $cache_entry->timestamp )
+            if (is_object($cache_entry) &&
+                 isset($cache_entry->timestamp) &&
+                 is_numeric($cache_entry->timestamp)
             ) {
                 return $cache_entry->result;
             }
 
-            return is_object( $default ) ? clone $default : $default;
+            return is_object($default) ? clone $default : $default;
         }
 
         /**
@@ -181,20 +191,21 @@
          *
          * @return mixed
          */
-        function get_valid( $key, $default = null ) {
-            $this->_logger->entrance( 'key = ' . $key );
+        public function get_valid($key, $default = null)
+        {
+            $this->_logger->entrance('key = ' . $key);
 
-            $cache_entry = $this->_options->get_option( $key, false );
+            $cache_entry = $this->_options->get_option($key, false);
 
-            if ( is_object( $cache_entry ) &&
-                 isset( $cache_entry->timestamp ) &&
-                 is_numeric( $cache_entry->timestamp ) &&
+            if (is_object($cache_entry) &&
+                 isset($cache_entry->timestamp) &&
+                 is_numeric($cache_entry->timestamp) &&
                  $cache_entry->timestamp > WP_FS__SCRIPT_START_TIME
             ) {
                 return $cache_entry->result;
             }
 
-            return is_object( $default ) ? clone $default : $default;
+            return is_object($default) ? clone $default : $default;
         }
 
         /**
@@ -206,15 +217,16 @@
          * @param int    $expiration
          * @param int    $created Since 2.0.0 Cache creation date.
          */
-        function set( $key, $value, $expiration = WP_FS__TIME_24_HOURS_IN_SEC, $created = WP_FS__SCRIPT_START_TIME ) {
-            $this->_logger->entrance( 'key = ' . $key );
+        public function set($key, $value, $expiration = WP_FS__TIME_24_HOURS_IN_SEC, $created = WP_FS__SCRIPT_START_TIME)
+        {
+            $this->_logger->entrance('key = ' . $key);
 
             $cache_entry = new stdClass();
 
             $cache_entry->result    = $value;
             $cache_entry->created   = $created;
             $cache_entry->timestamp = $created + $expiration;
-            $this->_options->set_option( $key, $cache_entry, true );
+            $this->_options->set_option($key, $cache_entry, true);
         }
 
         /**
@@ -227,14 +239,15 @@
          *
          * @return bool|int
          */
-        function get_record_expiration( $key ) {
-            $this->_logger->entrance( 'key = ' . $key );
+        public function get_record_expiration($key)
+        {
+            $this->_logger->entrance('key = ' . $key);
 
-            $cache_entry = $this->_options->get_option( $key, false );
+            $cache_entry = $this->_options->get_option($key, false);
 
-            if ( is_object( $cache_entry ) &&
-                 isset( $cache_entry->timestamp ) &&
-                 is_numeric( $cache_entry->timestamp ) &&
+            if (is_object($cache_entry) &&
+                 isset($cache_entry->timestamp) &&
+                 is_numeric($cache_entry->timestamp) &&
                  $cache_entry->timestamp > WP_FS__SCRIPT_START_TIME
             ) {
                 return $cache_entry->timestamp;
@@ -251,10 +264,11 @@
          *
          * @param string $key
          */
-        function purge( $key ) {
-            $this->_logger->entrance( 'key = ' . $key );
+        public function purge($key)
+        {
+            $this->_logger->entrance('key = ' . $key);
 
-            $this->_options->unset_option( $key, true );
+            $this->_options->unset_option($key, true);
         }
 
         /**
@@ -268,19 +282,20 @@
          *
          * @return bool
          */
-        function update_expiration( $key, $expiration = WP_FS__TIME_24_HOURS_IN_SEC ) {
-            $this->_logger->entrance( 'key = ' . $key );
+        public function update_expiration($key, $expiration = WP_FS__TIME_24_HOURS_IN_SEC)
+        {
+            $this->_logger->entrance('key = ' . $key);
 
-            $cache_entry = $this->_options->get_option( $key, false );
+            $cache_entry = $this->_options->get_option($key, false);
 
-            if ( ! is_object( $cache_entry ) ||
-                 ! isset( $cache_entry->timestamp ) ||
-                 ! is_numeric( $cache_entry->timestamp )
+            if (! is_object($cache_entry) ||
+                 ! isset($cache_entry->timestamp) ||
+                 ! is_numeric($cache_entry->timestamp)
             ) {
                 return false;
             }
 
-            $this->set( $key, $cache_entry->result, $expiration, $cache_entry->created );
+            $this->set($key, $cache_entry->result, $expiration, $cache_entry->created);
 
             return true;
         }
@@ -293,18 +308,19 @@
          *
          * @param string $key
          */
-        function expire( $key ) {
-            $this->_logger->entrance( 'key = ' . $key );
+        public function expire($key)
+        {
+            $this->_logger->entrance('key = ' . $key);
 
-            $cache_entry = $this->_options->get_option( $key, false );
+            $cache_entry = $this->_options->get_option($key, false);
 
-            if ( is_object( $cache_entry ) &&
-                 isset( $cache_entry->timestamp ) &&
-                 is_numeric( $cache_entry->timestamp )
+            if (is_object($cache_entry) &&
+                 isset($cache_entry->timestamp) &&
+                 is_numeric($cache_entry->timestamp)
             ) {
                 // Set to expired.
                 $cache_entry->timestamp = WP_FS__SCRIPT_START_TIME;
-                $this->_options->set_option( $key, $cache_entry, true );
+                $this->_options->set_option($key, $cache_entry, true);
             }
         }
 
@@ -318,9 +334,10 @@
          * @author Vova Feldman (@svovaf)
          * @since  2.0.0
          */
-        function migrate_to_network() {
+        public function migrate_to_network()
+        {
             $this->_options->migrate_to_network();
         }
 
         #endregion
-    }
\ No newline at end of file
+    }
diff --git a/freemius/includes/managers/class-fs-gdpr-manager.php b/freemius/includes/managers/class-fs-gdpr-manager.php
index a64abb082c1b27110ced662f3015c779299517f5..82d35d41ba874fe6754329a3be387553305a5105 100644
--- a/freemius/includes/managers/class-fs-gdpr-manager.php
+++ b/freemius/includes/managers/class-fs-gdpr-manager.php
@@ -6,11 +6,12 @@
      * @since       2.1.0
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
-    class FS_GDPR_Manager {
+    class FS_GDPR_Manager
+    {
         /**
          * @var FS_Option_Manager
          */
@@ -48,8 +49,9 @@
         /**
          * @return FS_GDPR_Manager
          */
-        public static function instance() {
-            if ( ! isset( self::$_instance ) ) {
+        public static function instance()
+        {
+            if (! isset(self::$_instance)) {
                 self::$_instance = new self();
             }
 
@@ -58,14 +60,15 @@
 
         #endregion
 
-        private function __construct() {
-            $this->_storage     = FS_Option_Manager::get_manager( WP_FS__GDPR_OPTION_NAME, true, true );
+        private function __construct()
+        {
+            $this->_storage     = FS_Option_Manager::get_manager(WP_FS__GDPR_OPTION_NAME, true, true);
             $this->_wp_user_id  = Freemius::get_current_wp_user_id();
             $this->_option_name = "u{$this->_wp_user_id}";
-            $this->_data        = $this->_storage->get_option( $this->_option_name, array() );
-            $this->_notices     = FS_Admin_Notices::instance( 'all_admins', '', '', true );
+            $this->_data        = $this->_storage->get_option($this->_option_name, array());
+            $this->_notices     = FS_Admin_Notices::instance('all_admins', '', '', true);
 
-            if ( ! is_array( $this->_data ) ) {
+            if (! is_array($this->_data)) {
                 $this->_data = array();
             }
         }
@@ -79,10 +82,11 @@
          * @param string $name
          * @param mixed  $value
          */
-        private function update_option( $name, $value ) {
+        private function update_option($name, $value)
+        {
             $this->_data[ $name ] = $value;
 
-            $this->_storage->set_option( $this->_option_name, $this->_data, true );
+            $this->_storage->set_option($this->_option_name, $this->_data, true);
         }
 
         /**
@@ -91,8 +95,9 @@
          *
          * @return bool|null
          */
-        public function is_required() {
-            return isset( $this->_data['required'] ) ?
+        public function is_required()
+        {
+            return isset($this->_data['required']) ?
                 $this->_data['required'] :
                 null;
         }
@@ -103,8 +108,9 @@
          *
          * @param bool $is_required
          */
-        public function store_is_required( $is_required ) {
-            $this->update_option( 'required', $is_required );
+        public function store_is_required($is_required)
+        {
+            $this->update_option('required', $is_required);
         }
 
         /**
@@ -115,8 +121,9 @@
          *
          * @return bool
          */
-        public function is_opt_in_notice_shown() {
-            return $this->_notices->has_sticky( "gdpr_optin_actions_{$this->_wp_user_id}", true );
+        public function is_opt_in_notice_shown()
+        {
+            return $this->_notices->has_sticky("gdpr_optin_actions_{$this->_wp_user_id}", true);
         }
 
         /**
@@ -125,8 +132,9 @@
          * @author Vova Feldman (@svovaf)
          * @since  2.1.0
          */
-        public function remove_opt_in_notice() {
-            $this->_notices->remove_sticky( "gdpr_optin_actions_{$this->_wp_user_id}", true );
+        public function remove_opt_in_notice()
+        {
+            $this->_notices->remove_sticky("gdpr_optin_actions_{$this->_wp_user_id}", true);
 
             $this->disable_opt_in_notice();
         }
@@ -137,8 +145,9 @@
          * @author Leo Fajardo (@leorw)
          * @since  2.1.0
          */
-        public function disable_opt_in_notice() {
-            $this->update_option( 'show_opt_in_notice', false );
+        public function disable_opt_in_notice()
+        {
+            $this->update_option('show_opt_in_notice', false);
         }
 
         /**
@@ -149,9 +158,10 @@
          *
          * @return bool
          */
-        public function should_show_opt_in_notice() {
+        public function should_show_opt_in_notice()
+        {
             return (
-                ! isset( $this->_data['show_opt_in_notice'] ) ||
+                ! isset($this->_data['show_opt_in_notice']) ||
                 true === $this->_data['show_opt_in_notice']
             );
         }
@@ -164,8 +174,9 @@
          *
          * @return false|int
          */
-        public function last_time_notice_was_shown() {
-            return isset( $this->_data['notice_shown_at'] ) ?
+        public function last_time_notice_was_shown()
+        {
+            return isset($this->_data['notice_shown_at']) ?
                 $this->_data['notice_shown_at'] :
                 false;
         }
@@ -176,8 +187,9 @@
          * @author Vova Feldman (@svovaf)
          * @since  2.1.0
          */
-        public function notice_was_just_shown() {
-            $this->update_option( 'notice_shown_at', WP_FS__SCRIPT_START_TIME );
+        public function notice_was_just_shown()
+        {
+            $this->update_option('notice_shown_at', WP_FS__SCRIPT_START_TIME);
         }
 
         /**
@@ -187,7 +199,8 @@
          * @author Vova Feldman (@svovaf)
          * @since  2.1.0
          */
-        public function add_opt_in_sticky_notice( $message, $plugin_title = null ) {
+        public function add_opt_in_sticky_notice($message, $plugin_title = null)
+        {
             $this->_notices->add_sticky(
                 $message,
                 "gdpr_optin_actions_{$this->_wp_user_id}",
@@ -199,4 +212,4 @@
                 true
             );
         }
-    }
\ No newline at end of file
+    }
diff --git a/freemius/includes/managers/class-fs-key-value-storage.php b/freemius/includes/managers/class-fs-key-value-storage.php
index 713df6f6863a0478d20d51bd79986ac7df2e2697..b963d26d44d61009449d966d3b33170b999f6295 100644
--- a/freemius/includes/managers/class-fs-key-value-storage.php
+++ b/freemius/includes/managers/class-fs-key-value-storage.php
@@ -1,58 +1,59 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.7
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	/**
-	 * Class FS_Key_Value_Storage
-	 *
-	 * @property int           $install_timestamp
-	 * @property int           $activation_timestamp
-	 * @property int           $sync_timestamp
-	 * @property object        $sync_cron
-	 * @property int           $install_sync_timestamp
-	 * @property array         $connectivity_test
-	 * @property array         $is_on
-	 * @property object        $trial_plan
-	 * @property bool          $has_trial_plan
-	 * @property bool          $trial_promotion_shown
-	 * @property string        $sdk_version
-	 * @property string        $sdk_last_version
-	 * @property bool          $sdk_upgrade_mode
-	 * @property bool          $sdk_downgrade_mode
-	 * @property bool          $plugin_upgrade_mode
-	 * @property bool          $plugin_downgrade_mode
-	 * @property string        $plugin_version
-	 * @property string        $plugin_last_version
-	 * @property bool          $is_plugin_new_install
-	 * @property bool          $was_plugin_loaded
-	 * @property object        $plugin_main_file
-	 * @property bool          $prev_is_premium
-	 * @property array         $is_anonymous
-	 * @property bool          $is_pending_activation
-	 * @property bool          $sticky_optin_added
-	 * @property object        $uninstall_reason
-	 * @property object        $subscription
-	 */
-	class FS_Key_Value_Storage implements ArrayAccess, Iterator, Countable {
-		/**
-		 * @var string
-		 */
-		protected $_id;
-
-		/**
-		 * @since 1.2.2
-		 *
-		 * @var string
-		 */
-		protected $_secondary_id;
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.7
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    /**
+     * Class FS_Key_Value_Storage
+     *
+     * @property int           $install_timestamp
+     * @property int           $activation_timestamp
+     * @property int           $sync_timestamp
+     * @property object        $sync_cron
+     * @property int           $install_sync_timestamp
+     * @property array         $connectivity_test
+     * @property array         $is_on
+     * @property object        $trial_plan
+     * @property bool          $has_trial_plan
+     * @property bool          $trial_promotion_shown
+     * @property string        $sdk_version
+     * @property string        $sdk_last_version
+     * @property bool          $sdk_upgrade_mode
+     * @property bool          $sdk_downgrade_mode
+     * @property bool          $plugin_upgrade_mode
+     * @property bool          $plugin_downgrade_mode
+     * @property string        $plugin_version
+     * @property string        $plugin_last_version
+     * @property bool          $is_plugin_new_install
+     * @property bool          $was_plugin_loaded
+     * @property object        $plugin_main_file
+     * @property bool          $prev_is_premium
+     * @property array         $is_anonymous
+     * @property bool          $is_pending_activation
+     * @property bool          $sticky_optin_added
+     * @property object        $uninstall_reason
+     * @property object        $subscription
+     */
+    class FS_Key_Value_Storage implements ArrayAccess, Iterator, Countable
+    {
+        /**
+         * @var string
+         */
+        protected $_id;
+
+        /**
+         * @since 1.2.2
+         *
+         * @var string
+         */
+        protected $_secondary_id;
 
         /**
          * @since 2.0.0
@@ -66,35 +67,36 @@
          */
         private $_is_multisite_storage;
 
-		/**
-		 * @var array
-		 */
-		protected $_data;
-
-		/**
-		 * @var FS_Key_Value_Storage[]
-		 */
-		private static $_instances = array();
-
-		/**
-		 * @var FS_Logger
-		 */
-		protected $_logger;
-
-		/**
-		 * @param string $id
-		 * @param string $secondary_id
-		 * @param bool   $network_level_or_blog_id
-		 *
-		 * @return FS_Key_Value_Storage
-		 */
-		static function instance( $id, $secondary_id, $network_level_or_blog_id = false ) {
+        /**
+         * @var array
+         */
+        protected $_data;
+
+        /**
+         * @var FS_Key_Value_Storage[]
+         */
+        private static $_instances = array();
+
+        /**
+         * @var FS_Logger
+         */
+        protected $_logger;
+
+        /**
+         * @param string $id
+         * @param string $secondary_id
+         * @param bool   $network_level_or_blog_id
+         *
+         * @return FS_Key_Value_Storage
+         */
+        public static function instance($id, $secondary_id, $network_level_or_blog_id = false)
+        {
             $key = $id . ':' . $secondary_id;
 
-            if ( is_multisite() ) {
-                if ( true === $network_level_or_blog_id ) {
+            if (is_multisite()) {
+                if (true === $network_level_or_blog_id) {
                     $key .= ':ms';
-                } else if ( is_numeric( $network_level_or_blog_id ) && $network_level_or_blog_id > 0 ) {
+                } elseif (is_numeric($network_level_or_blog_id) && $network_level_or_blog_id > 0) {
                     $key .= ":{$network_level_or_blog_id}";
                 } else {
                     $network_level_or_blog_id = get_current_blog_id();
@@ -103,171 +105,181 @@
                 }
             }
 
-			if ( ! isset( self::$_instances[ $key ] ) ) {
-				self::$_instances[ $key ] = new FS_Key_Value_Storage( $id, $secondary_id, $network_level_or_blog_id );
-			}
+            if (! isset(self::$_instances[ $key ])) {
+                self::$_instances[ $key ] = new FS_Key_Value_Storage($id, $secondary_id, $network_level_or_blog_id);
+            }
 
-			return self::$_instances[ $key ];
-		}
+            return self::$_instances[ $key ];
+        }
 
-		protected function __construct( $id, $secondary_id, $network_level_or_blog_id = false ) {
-			$this->_logger = FS_Logger::get_logger( WP_FS__SLUG . '_' . $secondary_id . '_' . $id, WP_FS__DEBUG_SDK, WP_FS__ECHO_DEBUG_SDK );
+        protected function __construct($id, $secondary_id, $network_level_or_blog_id = false)
+        {
+            $this->_logger = FS_Logger::get_logger(WP_FS__SLUG . '_' . $secondary_id . '_' . $id, WP_FS__DEBUG_SDK, WP_FS__ECHO_DEBUG_SDK);
 
             $this->_id                   = $id;
             $this->_secondary_id         = $secondary_id;
 
-            if ( is_multisite() ) {
-                $this->_is_multisite_storage = ( true === $network_level_or_blog_id );
+            if (is_multisite()) {
+                $this->_is_multisite_storage = (true === $network_level_or_blog_id);
 
-                if ( is_numeric( $network_level_or_blog_id ) ) {
+                if (is_numeric($network_level_or_blog_id)) {
                     $this->_blog_id = $network_level_or_blog_id;
                 }
             } else {
                 $this->_is_multisite_storage = false;
             }
 
-			$this->load();
-		}
+            $this->load();
+        }
 
-		protected function get_option_manager() {
+        protected function get_option_manager()
+        {
             return FS_Option_Manager::get_manager(
                 WP_FS__ACCOUNTS_OPTION_NAME,
                 true,
                 $this->_is_multisite_storage ?
                     true :
-                    ( $this->_blog_id > 0 ? $this->_blog_id : false )
+                    ($this->_blog_id > 0 ? $this->_blog_id : false)
             );
         }
 
-		protected function get_all_data() {
-			return $this->get_option_manager()->get_option( $this->_id, array() );
-		}
-
-		/**
-		 * Load plugin data from local DB.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.7
-		 */
-		function load() {
-			$all_plugins_data = $this->get_all_data();
-			$this->_data      = isset( $all_plugins_data[ $this->_secondary_id ] ) ?
-				$all_plugins_data[ $this->_secondary_id ] :
-				array();
-		}
-
-		/**
-		 * @author   Vova Feldman (@svovaf)
-		 * @since    1.0.7
-		 *
-		 * @param string $key
-		 * @param mixed  $value
-		 * @param bool   $flush
-		 */
-		function store( $key, $value, $flush = true ) {
-			if ( $this->_logger->is_on() ) {
-				$this->_logger->entrance( $key . ' = ' . var_export( $value, true ) );
-			}
-
-			if ( array_key_exists( $key, $this->_data ) && $value === $this->_data[ $key ] ) {
-				// No need to store data if the value wasn't changed.
-				return;
-			}
-
-			$all_data = $this->get_all_data();
-
-			$this->_data[ $key ] = $value;
-
-			$all_data[ $this->_secondary_id ] = $this->_data;
-
-			$options_manager = $this->get_option_manager();
-			$options_manager->set_option( $this->_id, $all_data, $flush );
-		}
+        protected function get_all_data()
+        {
+            return $this->get_option_manager()->get_option($this->_id, array());
+        }
+
+        /**
+         * Load plugin data from local DB.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.7
+         */
+        public function load()
+        {
+            $all_plugins_data = $this->get_all_data();
+            $this->_data      = isset($all_plugins_data[ $this->_secondary_id ]) ?
+                $all_plugins_data[ $this->_secondary_id ] :
+                array();
+        }
+
+        /**
+         * @author   Vova Feldman (@svovaf)
+         * @since    1.0.7
+         *
+         * @param string $key
+         * @param mixed  $value
+         * @param bool   $flush
+         */
+        public function store($key, $value, $flush = true)
+        {
+            if ($this->_logger->is_on()) {
+                $this->_logger->entrance($key . ' = ' . var_export($value, true));
+            }
+
+            if (array_key_exists($key, $this->_data) && $value === $this->_data[ $key ]) {
+                // No need to store data if the value wasn't changed.
+                return;
+            }
+
+            $all_data = $this->get_all_data();
+
+            $this->_data[ $key ] = $value;
+
+            $all_data[ $this->_secondary_id ] = $this->_data;
+
+            $options_manager = $this->get_option_manager();
+            $options_manager->set_option($this->_id, $all_data, $flush);
+        }
 
         /**
          * @author   Vova Feldman (@svovaf)
          * @since    2.0.0
          */
-        function save() {
+        public function save()
+        {
             $this->get_option_manager()->store();
         }
 
-		/**
-		 * @author   Vova Feldman (@svovaf)
-		 * @since    1.0.7
-		 *
-		 * @param bool     $store
-		 * @param string[] $exceptions Set of keys to keep and not clear.
-		 */
-		function clear_all( $store = true, $exceptions = array() ) {
-			$new_data = array();
-			foreach ( $exceptions as $key ) {
-				if ( isset( $this->_data[ $key ] ) ) {
-					$new_data[ $key ] = $this->_data[ $key ];
-				}
-			}
-
-			$this->_data = $new_data;
-
-			if ( $store ) {
-				$all_data                 = $this->get_all_data();
-				$all_data[ $this->_secondary_id ] = $this->_data;
-				$options_manager          = $this->get_option_manager();
-				$options_manager->set_option( $this->_id, $all_data, true );
-			}
-		}
-
-		/**
-		 * Delete key-value storage.
-		 *
-		 * @author   Vova Feldman (@svovaf)
-		 * @since    1.0.9
-		 */
-		function delete() {
-			$this->_data = array();
-
-			$all_data = $this->get_all_data();
-			unset( $all_data[ $this->_secondary_id ] );
-			$options_manager = $this->get_option_manager();
-			$options_manager->set_option( $this->_id, $all_data, true );
-		}
-
-		/**
-		 * @author   Vova Feldman (@svovaf)
-		 * @since    1.0.7
-		 *
-		 * @param string $key
-		 * @param bool   $store
-		 */
-		function remove( $key, $store = true ) {
-			if ( ! array_key_exists( $key, $this->_data ) ) {
-				return;
-			}
-
-			unset( $this->_data[ $key ] );
-
-			if ( $store ) {
-				$all_data                 = $this->get_all_data();
-				$all_data[ $this->_secondary_id ] = $this->_data;
-				$options_manager          = $this->get_option_manager();
-				$options_manager->set_option( $this->_id, $all_data, true );
-			}
-		}
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.7
-		 *
-		 * @param string $key
-		 * @param mixed  $default
-		 *
-		 * @return bool|\FS_Plugin
-		 */
-		function get( $key, $default = false ) {
-			return array_key_exists( $key, $this->_data ) ?
-				$this->_data[ $key ] :
-				$default;
-		}
+        /**
+         * @author   Vova Feldman (@svovaf)
+         * @since    1.0.7
+         *
+         * @param bool     $store
+         * @param string[] $exceptions Set of keys to keep and not clear.
+         */
+        public function clear_all($store = true, $exceptions = array())
+        {
+            $new_data = array();
+            foreach ($exceptions as $key) {
+                if (isset($this->_data[ $key ])) {
+                    $new_data[ $key ] = $this->_data[ $key ];
+                }
+            }
+
+            $this->_data = $new_data;
+
+            if ($store) {
+                $all_data                 = $this->get_all_data();
+                $all_data[ $this->_secondary_id ] = $this->_data;
+                $options_manager          = $this->get_option_manager();
+                $options_manager->set_option($this->_id, $all_data, true);
+            }
+        }
+
+        /**
+         * Delete key-value storage.
+         *
+         * @author   Vova Feldman (@svovaf)
+         * @since    1.0.9
+         */
+        public function delete()
+        {
+            $this->_data = array();
+
+            $all_data = $this->get_all_data();
+            unset($all_data[ $this->_secondary_id ]);
+            $options_manager = $this->get_option_manager();
+            $options_manager->set_option($this->_id, $all_data, true);
+        }
+
+        /**
+         * @author   Vova Feldman (@svovaf)
+         * @since    1.0.7
+         *
+         * @param string $key
+         * @param bool   $store
+         */
+        public function remove($key, $store = true)
+        {
+            if (! array_key_exists($key, $this->_data)) {
+                return;
+            }
+
+            unset($this->_data[ $key ]);
+
+            if ($store) {
+                $all_data                 = $this->get_all_data();
+                $all_data[ $this->_secondary_id ] = $this->_data;
+                $options_manager          = $this->get_option_manager();
+                $options_manager->set_option($this->_id, $all_data, true);
+            }
+        }
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.7
+         *
+         * @param string $key
+         * @param mixed  $default
+         *
+         * @return bool|\FS_Plugin
+         */
+        public function get($key, $default = false)
+        {
+            return array_key_exists($key, $this->_data) ?
+                $this->_data[ $key ] :
+                $default;
+        }
 
         /**
          * @author Vova Feldman (@svovaf)
@@ -275,118 +287,133 @@
          *
          * @return string
          */
-		function get_secondary_id() {
+        public function get_secondary_id()
+        {
             return $this->_secondary_id;
         }
 
 
-		/* ArrayAccess + Magic Access (better for refactoring)
+        /* ArrayAccess + Magic Access (better for refactoring)
         -----------------------------------------------------------------------------------*/
-		function __set( $k, $v ) {
-			$this->store( $k, $v );
-		}
-
-		function __isset( $k ) {
-			return array_key_exists( $k, $this->_data );
-		}
-
-		function __unset( $k ) {
-			$this->remove( $k );
-		}
-
-		function __get( $k ) {
-			return $this->get( $k, null );
-		}
-
-		function offsetSet( $k, $v ) {
-			if ( is_null( $k ) ) {
-				throw new Exception( 'Can\'t append value to request params.' );
-			} else {
-				$this->{$k} = $v;
-			}
-		}
-
-		function offsetExists( $k ) {
-			return array_key_exists( $k, $this->_data );
-		}
-
-		function offsetUnset( $k ) {
-			unset( $this->$k );
-		}
-
-		function offsetGet( $k ) {
-			return $this->get( $k, null );
-		}
-
-		/**
-		 * (PHP 5 &gt;= 5.0.0)<br/>
-		 * Return the current element
-		 *
-		 * @link http://php.net/manual/en/iterator.current.php
-		 * @return mixed Can return any type.
-		 */
-		public function current() {
-			return current( $this->_data );
-		}
-
-		/**
-		 * (PHP 5 &gt;= 5.0.0)<br/>
-		 * Move forward to next element
-		 *
-		 * @link http://php.net/manual/en/iterator.next.php
-		 * @return void Any returned value is ignored.
-		 */
-		public function next() {
-			next( $this->_data );
-		}
-
-		/**
-		 * (PHP 5 &gt;= 5.0.0)<br/>
-		 * Return the key of the current element
-		 *
-		 * @link http://php.net/manual/en/iterator.key.php
-		 * @return mixed scalar on success, or null on failure.
-		 */
-		public function key() {
-			return key( $this->_data );
-		}
-
-		/**
-		 * (PHP 5 &gt;= 5.0.0)<br/>
-		 * Checks if current position is valid
-		 *
-		 * @link http://php.net/manual/en/iterator.valid.php
-		 * @return boolean The return value will be casted to boolean and then evaluated.
-		 *       Returns true on success or false on failure.
-		 */
-		public function valid() {
-			$key = key( $this->_data );
-
-			return ( $key !== null && $key !== false );
-		}
-
-		/**
-		 * (PHP 5 &gt;= 5.0.0)<br/>
-		 * Rewind the Iterator to the first element
-		 *
-		 * @link http://php.net/manual/en/iterator.rewind.php
-		 * @return void Any returned value is ignored.
-		 */
-		public function rewind() {
-			reset( $this->_data );
-		}
-
-		/**
-		 * (PHP 5 &gt;= 5.1.0)<br/>
-		 * Count elements of an object
-		 *
-		 * @link http://php.net/manual/en/countable.count.php
-		 * @return int The custom count as an integer.
-		 *       </p>
-		 *       <p>
-		 *       The return value is cast to an integer.
-		 */
-		public function count() {
-			return count( $this->_data );
-		}
-	}
\ No newline at end of file
+        public function __set($k, $v)
+        {
+            $this->store($k, $v);
+        }
+
+        public function __isset($k)
+        {
+            return array_key_exists($k, $this->_data);
+        }
+
+        public function __unset($k)
+        {
+            $this->remove($k);
+        }
+
+        public function __get($k)
+        {
+            return $this->get($k, null);
+        }
+
+        public function offsetSet($k, $v)
+        {
+            if (is_null($k)) {
+                throw new Exception('Can\'t append value to request params.');
+            } else {
+                $this->{$k} = $v;
+            }
+        }
+
+        public function offsetExists($k)
+        {
+            return array_key_exists($k, $this->_data);
+        }
+
+        public function offsetUnset($k)
+        {
+            unset($this->$k);
+        }
+
+        public function offsetGet($k)
+        {
+            return $this->get($k, null);
+        }
+
+        /**
+         * (PHP 5 &gt;= 5.0.0)<br/>
+         * Return the current element
+         *
+         * @link http://php.net/manual/en/iterator.current.php
+         * @return mixed Can return any type.
+         */
+        public function current()
+        {
+            return current($this->_data);
+        }
+
+        /**
+         * (PHP 5 &gt;= 5.0.0)<br/>
+         * Move forward to next element
+         *
+         * @link http://php.net/manual/en/iterator.next.php
+         * @return void Any returned value is ignored.
+         */
+        public function next()
+        {
+            next($this->_data);
+        }
+
+        /**
+         * (PHP 5 &gt;= 5.0.0)<br/>
+         * Return the key of the current element
+         *
+         * @link http://php.net/manual/en/iterator.key.php
+         * @return mixed scalar on success, or null on failure.
+         */
+        public function key()
+        {
+            return key($this->_data);
+        }
+
+        /**
+         * (PHP 5 &gt;= 5.0.0)<br/>
+         * Checks if current position is valid
+         *
+         * @link http://php.net/manual/en/iterator.valid.php
+         * @return boolean The return value will be casted to boolean and then evaluated.
+         *       Returns true on success or false on failure.
+         */
+        public function valid()
+        {
+            $key = key($this->_data);
+
+            return ($key !== null && $key !== false);
+        }
+
+        /**
+         * (PHP 5 &gt;= 5.0.0)<br/>
+         * Rewind the Iterator to the first element
+         *
+         * @link http://php.net/manual/en/iterator.rewind.php
+         * @return void Any returned value is ignored.
+         */
+        public function rewind()
+        {
+            reset($this->_data);
+        }
+
+        /**
+         * (PHP 5 &gt;= 5.1.0)<br/>
+         * Count elements of an object
+         *
+         * @link http://php.net/manual/en/countable.count.php
+         * @return int The custom count as an integer.
+         *       </p>
+         *       <p>
+         *       The return value is cast to an integer.
+         */
+        public function count()
+        {
+            return count($this->_data);
+        }
+    }
diff --git a/freemius/includes/managers/class-fs-license-manager.php b/freemius/includes/managers/class-fs-license-manager.php
index 891ecd891ae4e9d283c9dd5d6aea1f01956743a2..d9588cdfd4f830b73e230fcbc8249d9fe263bcd2 100644
--- a/freemius/includes/managers/class-fs-license-manager.php
+++ b/freemius/includes/managers/class-fs-license-manager.php
@@ -1,104 +1,105 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.6
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.6
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	class FS_License_Manager /*extends FS_Abstract_Manager*/
-	{
+    class FS_License_Manager /*extends FS_Abstract_Manager*/
+    {
 //
 //
-//		/**
-//		 * @var FS_License_Manager[]
-//		 */
-//		private static $_instances = array();
+        //		/**
+        //		 * @var FS_License_Manager[]
+        //		 */
+        //		private static $_instances = array();
 //
-//		static function instance( Freemius $fs ) {
-//			$slug = strtolower( $fs->get_slug() );
+        //		static function instance( Freemius $fs ) {
+        //			$slug = strtolower( $fs->get_slug() );
 //
-//			if ( ! isset( self::$_instances[ $slug ] ) ) {
-//				self::$_instances[ $slug ] = new FS_License_Manager( $slug, $fs );
-//			}
+        //			if ( ! isset( self::$_instances[ $slug ] ) ) {
+        //				self::$_instances[ $slug ] = new FS_License_Manager( $slug, $fs );
+        //			}
 //
-//			return self::$_instances[ $slug ];
-//		}
+        //			return self::$_instances[ $slug ];
+        //		}
 //
-////		private function __construct($slug) {
-////			parent::__construct($slug);
-////		}
+        ////		private function __construct($slug) {
+        ////			parent::__construct($slug);
+        ////		}
 //
-//		function entry_id() {
-//			return 'licenses';
-//		}
+        //		function entry_id() {
+        //			return 'licenses';
+        //		}
 //
-//		function sync( $id ) {
+        //		function sync( $id ) {
 //
-//		}
+        //		}
 //
-//		/**
-//		 * @author Vova Feldman (@svovaf)
-//		 * @since  1.0.5
-//		 * @uses   FS_Api
-//		 *
-//		 * @param number|bool $plugin_id
-//		 *
-//		 * @return FS_Plugin_License[]|stdClass Licenses or API error.
-//		 */
-//		function api_get_user_plugin_licenses( $plugin_id = false ) {
-//			$api = $this->_fs->get_api_user_scope();
+        //		/**
+        //		 * @author Vova Feldman (@svovaf)
+        //		 * @since  1.0.5
+        //		 * @uses   FS_Api
+        //		 *
+        //		 * @param number|bool $plugin_id
+        //		 *
+        //		 * @return FS_Plugin_License[]|stdClass Licenses or API error.
+        //		 */
+        //		function api_get_user_plugin_licenses( $plugin_id = false ) {
+        //			$api = $this->_fs->get_api_user_scope();
 //
-//			if ( ! is_numeric( $plugin_id ) ) {
-//				$plugin_id = $this->_fs->get_id();
-//			}
+        //			if ( ! is_numeric( $plugin_id ) ) {
+        //				$plugin_id = $this->_fs->get_id();
+        //			}
 //
-//			$result = $api->call( "/plugins/{$plugin_id}/licenses.json" );
+        //			$result = $api->call( "/plugins/{$plugin_id}/licenses.json" );
 //
-//			if ( ! isset( $result->error ) ) {
-//				for ( $i = 0, $len = count( $result->licenses ); $i < $len; $i ++ ) {
-//					$result->licenses[ $i ] = new FS_Plugin_License( $result->licenses[ $i ] );
-//				}
+        //			if ( ! isset( $result->error ) ) {
+        //				for ( $i = 0, $len = count( $result->licenses ); $i < $len; $i ++ ) {
+        //					$result->licenses[ $i ] = new FS_Plugin_License( $result->licenses[ $i ] );
+        //				}
 //
-//				$result = $result->licenses;
-//			}
+        //				$result = $result->licenses;
+        //			}
 //
-//			return $result;
-//		}
+        //			return $result;
+        //		}
 //
-//		function api_get_many() {
+        //		function api_get_many() {
 //
-//		}
+        //		}
 //
-//		function api_activate( $id ) {
+        //		function api_activate( $id ) {
 //
-//		}
+        //		}
 //
-//		function api_deactivate( $id ) {
+        //		function api_deactivate( $id ) {
 //
-//		}
+        //		}
 
-		/**
-		 * @param FS_Plugin_License[] $licenses
-		 *
-		 * @return bool
-		 */
-		static function has_premium_license( $licenses ) {
-			if ( is_array( $licenses ) ) {
-				foreach ( $licenses as $license ) {
-					/**
-					 * @var FS_Plugin_License $license
-					 */
-					if ( ! $license->is_utilized() && $license->is_features_enabled() ) {
-						return true;
-					}
-				}
-			}
+        /**
+         * @param FS_Plugin_License[] $licenses
+         *
+         * @return bool
+         */
+        public static function has_premium_license($licenses)
+        {
+            if (is_array($licenses)) {
+                foreach ($licenses as $license) {
+                    /**
+                     * @var FS_Plugin_License $license
+                     */
+                    if (! $license->is_utilized() && $license->is_features_enabled()) {
+                        return true;
+                    }
+                }
+            }
 
-			return false;
-		}
-	}
\ No newline at end of file
+            return false;
+        }
+    }
diff --git a/freemius/includes/managers/class-fs-option-manager.php b/freemius/includes/managers/class-fs-option-manager.php
index 9d59abf8dfe2309f86f16b6810ed28ebd0a299ba..7366003702ca6810c10de26e203aa44d5e873ea1 100644
--- a/freemius/includes/managers/class-fs-option-manager.php
+++ b/freemius/includes/managers/class-fs-option-manager.php
@@ -6,7 +6,7 @@
      * @since       1.0.3
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
@@ -22,7 +22,8 @@
      *
      * Class Freemius_Option_Manager
      */
-    class FS_Option_Manager {
+    class FS_Option_Manager
+    {
         /**
          * @var string
          */
@@ -76,28 +77,28 @@
             $network_level_or_blog_id = false,
             $autoload = null
         ) {
-            $id = strtolower( $id );
+            $id = strtolower($id);
 
-            $this->_logger = FS_Logger::get_logger( WP_FS__SLUG . '_opt_mngr_' . $id, WP_FS__DEBUG_SDK, WP_FS__ECHO_DEBUG_SDK );
+            $this->_logger = FS_Logger::get_logger(WP_FS__SLUG . '_opt_mngr_' . $id, WP_FS__DEBUG_SDK, WP_FS__ECHO_DEBUG_SDK);
 
             $this->_logger->entrance();
-            $this->_logger->log( 'id = ' . $id );
+            $this->_logger->log('id = ' . $id);
 
             $this->_id = $id;
 
             $this->_autoload = $autoload;
 
-            if ( is_multisite() ) {
-                $this->_is_network_storage = ( true === $network_level_or_blog_id );
+            if (is_multisite()) {
+                $this->_is_network_storage = (true === $network_level_or_blog_id);
 
-                if ( is_numeric( $network_level_or_blog_id ) ) {
+                if (is_numeric($network_level_or_blog_id)) {
                     $this->_blog_id = $network_level_or_blog_id;
                 }
             } else {
                 $this->_is_network_storage = false;
             }
 
-            if ( $load ) {
+            if ($load) {
                 $this->load();
             }
         }
@@ -113,18 +114,18 @@
          *
          * @return \FS_Option_Manager
          */
-        static function get_manager(
+        public static function get_manager(
             $id,
             $load = false,
             $network_level_or_blog_id = false,
             $autoload = null
         ) {
-            $key = strtolower( $id );
+            $key = strtolower($id);
 
-            if ( is_multisite() ) {
-                if ( true === $network_level_or_blog_id ) {
+            if (is_multisite()) {
+                if (true === $network_level_or_blog_id) {
                     $key .= ':ms';
-                } else if ( is_numeric( $network_level_or_blog_id ) && $network_level_or_blog_id > 0 ) {
+                } elseif (is_numeric($network_level_or_blog_id) && $network_level_or_blog_id > 0) {
                     $key .= ":{$network_level_or_blog_id}";
                 } else {
                     $network_level_or_blog_id = get_current_blog_id();
@@ -133,7 +134,7 @@
                 }
             }
 
-            if ( ! isset( self::$_MANAGERS[ $key ] ) ) {
+            if (! isset(self::$_MANAGERS[ $key ])) {
                 self::$_MANAGERS[ $key ] = new FS_Option_Manager(
                     $id,
                     $load,
@@ -141,7 +142,7 @@
                     $autoload
                 );
             } // If load required but not yet loaded, load.
-            else if ( $load && ! self::$_MANAGERS[ $key ]->is_loaded() ) {
+            elseif ($load && ! self::$_MANAGERS[ $key ]->is_loaded()) {
                 self::$_MANAGERS[ $key ]->load();
             }
 
@@ -154,61 +155,60 @@
          *
          * @param bool $flush
          */
-        function load( $flush = false ) {
+        public function load($flush = false)
+        {
             $this->_logger->entrance();
 
             $option_name = $this->get_option_manager_name();
 
-            if ( $flush || ! isset( $this->_options ) ) {
-                if ( isset( $this->_options ) ) {
+            if ($flush || ! isset($this->_options)) {
+                if (isset($this->_options)) {
                     // Clear prev options.
                     $this->clear();
                 }
 
                 $cache_group = $this->get_cache_group();
 
-                if ( WP_FS__DEBUG_SDK ) {
+                if (WP_FS__DEBUG_SDK) {
 
                     // Don't use cache layer in DEBUG mode.
-                    $load_options = empty( $this->_options );
-
+                    $load_options = empty($this->_options);
                 } else {
-
                     $this->_options = wp_cache_get(
                         $option_name,
                         $cache_group
                     );
 
-                    $load_options = ( false === $this->_options );
+                    $load_options = (false === $this->_options);
                 }
 
                 $cached = true;
 
-                if ( $load_options ) {
-                    if ( $this->_is_network_storage ) {
-                        $this->_options = get_site_option( $option_name );
-                    } else if ( $this->_blog_id > 0 ) {
-                        $this->_options = get_blog_option( $this->_blog_id, $option_name );
+                if ($load_options) {
+                    if ($this->_is_network_storage) {
+                        $this->_options = get_site_option($option_name);
+                    } elseif ($this->_blog_id > 0) {
+                        $this->_options = get_blog_option($this->_blog_id, $option_name);
                     } else {
-                        $this->_options = get_option( $option_name );
+                        $this->_options = get_option($option_name);
                     }
 
-                    if ( is_string( $this->_options ) ) {
-                        $this->_options = json_decode( $this->_options );
+                    if (is_string($this->_options)) {
+                        $this->_options = json_decode($this->_options);
                     }
 
-//					$this->_logger->info('get_option = ' . var_export($this->_options, true));
+                    //					$this->_logger->info('get_option = ' . var_export($this->_options, true));
 
-                    if ( false === $this->_options ) {
+                    if (false === $this->_options) {
                         $this->clear();
                     }
 
                     $cached = false;
                 }
 
-                if ( ! WP_FS__DEBUG_SDK && ! $cached ) {
+                if (! WP_FS__DEBUG_SDK && ! $cached) {
                     // Set non encoded cache.
-                    wp_cache_set( $option_name, $this->_options, $cache_group );
+                    wp_cache_set($option_name, $this->_options, $cache_group);
                 }
             }
         }
@@ -219,8 +219,9 @@
          *
          * @return bool
          */
-        function is_loaded() {
-            return isset( $this->_options );
+        public function is_loaded()
+        {
+            return isset($this->_options);
         }
 
         /**
@@ -229,8 +230,9 @@
          *
          * @return bool
          */
-        function is_empty() {
-            return ( $this->is_loaded() && false === $this->_options );
+        public function is_empty()
+        {
+            return ($this->is_loaded() && false === $this->_options);
         }
 
         /**
@@ -239,12 +241,13 @@
          *
          * @param bool $flush
          */
-        function clear( $flush = false ) {
+        public function clear($flush = false)
+        {
             $this->_logger->entrance();
 
             $this->_options = array();
 
-            if ( $flush ) {
+            if ($flush) {
                 $this->store();
             }
         }
@@ -255,15 +258,16 @@
          * @author Vova Feldman (@svovaf)
          * @since  1.0.9
          */
-        function delete() {
+        public function delete()
+        {
             $option_name = $this->get_option_manager_name();
 
-            if ( $this->_is_network_storage ) {
-                delete_site_option( $option_name );
-            } else if ( $this->_blog_id > 0 ) {
-                delete_blog_option( $this->_blog_id, $option_name );
+            if ($this->_is_network_storage) {
+                delete_site_option($option_name);
+            } elseif ($this->_blog_id > 0) {
+                delete_blog_option($this->_blog_id, $option_name);
             } else {
-                delete_option( $option_name );
+                delete_option($option_name);
             }
         }
 
@@ -275,8 +279,9 @@
          *
          * @return bool
          */
-        function has_option( $option ) {
-            return array_key_exists( $option, $this->_options );
+        public function has_option($option)
+        {
+            return array_key_exists($option, $this->_options);
         }
 
         /**
@@ -288,19 +293,20 @@
          *
          * @return mixed
          */
-        function get_option( $option, $default = null ) {
-            $this->_logger->entrance( 'option = ' . $option );
+        public function get_option($option, $default = null)
+        {
+            $this->_logger->entrance('option = ' . $option);
 
-            if ( ! $this->is_loaded() ) {
+            if (! $this->is_loaded()) {
                 $this->load();
             }
 
-            if ( is_array( $this->_options ) ) {
-                $value = isset( $this->_options[ $option ] ) ?
+            if (is_array($this->_options)) {
+                $value = isset($this->_options[ $option ]) ?
                     $this->_options[ $option ] :
                     $default;
-            } else if ( is_object( $this->_options ) ) {
-                $value = isset( $this->_options->{$option} ) ?
+            } elseif (is_object($this->_options)) {
+                $value = isset($this->_options->{$option}) ?
                     $this->_options->{$option} :
                     $default;
             } else {
@@ -328,7 +334,7 @@
              *
              * @author Vova Feldman
              */
-            return is_object( $value ) ? clone $value : $value;
+            return is_object($value) ? clone $value : $value;
         }
 
         /**
@@ -339,10 +345,11 @@
          * @param mixed  $value
          * @param bool   $flush
          */
-        function set_option( $option, $value, $flush = false ) {
-            $this->_logger->entrance( 'option = ' . $option );
+        public function set_option($option, $value, $flush = false)
+        {
+            $this->_logger->entrance('option = ' . $option);
 
-            if ( ! $this->is_loaded() ) {
+            if (! $this->is_loaded()) {
                 $this->clear();
             }
 
@@ -368,15 +375,15 @@
              *
              * @author Vova Feldman
              */
-            $copy = is_object( $value ) ? clone $value : $value;
+            $copy = is_object($value) ? clone $value : $value;
 
-            if ( is_array( $this->_options ) ) {
+            if (is_array($this->_options)) {
                 $this->_options[ $option ] = $copy;
-            } else if ( is_object( $this->_options ) ) {
+            } elseif (is_object($this->_options)) {
                 $this->_options->{$option} = $copy;
             }
 
-            if ( $flush ) {
+            if ($flush) {
                 $this->store();
             }
         }
@@ -390,25 +397,25 @@
          * @param string $option
          * @param bool   $flush
          */
-        function unset_option( $option, $flush = false ) {
-            $this->_logger->entrance( 'option = ' . $option );
+        public function unset_option($option, $flush = false)
+        {
+            $this->_logger->entrance('option = ' . $option);
 
-            if ( is_array( $this->_options ) ) {
-                if ( ! isset( $this->_options[ $option ] ) ) {
+            if (is_array($this->_options)) {
+                if (! isset($this->_options[ $option ])) {
                     return;
                 }
 
-                unset( $this->_options[ $option ] );
-
-            } else if ( is_object( $this->_options ) ) {
-                if ( ! isset( $this->_options->{$option} ) ) {
+                unset($this->_options[ $option ]);
+            } elseif (is_object($this->_options)) {
+                if (! isset($this->_options->{$option})) {
                     return;
                 }
 
-                unset( $this->_options->{$option} );
+                unset($this->_options->{$option});
             }
 
-            if ( $flush ) {
+            if ($flush) {
                 $this->store();
             }
         }
@@ -419,26 +426,27 @@
          * @author Vova Feldman (@svovaf)
          * @since  1.0.3
          */
-        function store() {
+        public function store()
+        {
             $this->_logger->entrance();
 
             $option_name = $this->get_option_manager_name();
 
-            if ( $this->_logger->is_on() ) {
-                $this->_logger->info( $option_name . ' = ' . var_export( $this->_options, true ) );
+            if ($this->_logger->is_on()) {
+                $this->_logger->info($option_name . ' = ' . var_export($this->_options, true));
             }
 
             // Update DB.
-            if ( $this->_is_network_storage ) {
-                update_site_option( $option_name, $this->_options );
-            } else if ( $this->_blog_id > 0 ) {
-                update_blog_option( $this->_blog_id, $option_name, $this->_options );
+            if ($this->_is_network_storage) {
+                update_site_option($option_name, $this->_options);
+            } elseif ($this->_blog_id > 0) {
+                update_blog_option($this->_blog_id, $option_name, $this->_options);
             } else {
-                update_option( $option_name, $this->_options, $this->_autoload );
+                update_option($option_name, $this->_options, $this->_autoload);
             }
 
-            if ( ! WP_FS__DEBUG_SDK ) {
-                wp_cache_set( $option_name, $this->_options, $this->get_cache_group() );
+            if (! WP_FS__DEBUG_SDK) {
+                wp_cache_set($option_name, $this->_options, $this->get_cache_group());
             }
         }
 
@@ -450,11 +458,12 @@
          *
          * @return string[]
          */
-        function get_options_keys() {
-            if ( is_array( $this->_options ) ) {
-                return array_keys( $this->_options );
-            } else if ( is_object( $this->_options ) ) {
-                return array_keys( get_object_vars( $this->_options ) );
+        public function get_options_keys()
+        {
+            if (is_array($this->_options)) {
+                return array_keys($this->_options);
+            } elseif (is_object($this->_options)) {
+                return array_keys(get_object_vars($this->_options));
             }
 
             return array();
@@ -470,16 +479,17 @@
          * @author Vova Feldman (@svovaf)
          * @since  2.0.0
          */
-        function migrate_to_network() {
+        public function migrate_to_network()
+        {
             $site_options = FS_Option_Manager::get_manager($this->_id, true, false);
 
-            $options = is_object( $site_options->_options ) ?
-                get_object_vars( $site_options->_options ) :
+            $options = is_object($site_options->_options) ?
+                get_object_vars($site_options->_options) :
                 $site_options->_options;
 
-            if ( ! empty( $options ) ) {
-                foreach ( $options as $key => $val ) {
-                    $this->set_option( $key, $val, false );
+            if (! empty($options)) {
+                foreach ($options as $key => $val) {
+                    $this->set_option($key, $val, false);
                 }
 
                 $this->store();
@@ -495,7 +505,8 @@
         /**
          * @return string
          */
-        private function get_option_manager_name() {
+        private function get_option_manager_name()
+        {
             return $this->_id;
         }
 
@@ -505,12 +516,13 @@
          *
          * @return string
          */
-        private function get_cache_group() {
+        private function get_cache_group()
+        {
             $group = WP_FS__SLUG;
 
-            if ( $this->_is_network_storage ) {
+            if ($this->_is_network_storage) {
                 $group .= '_ms';
-            } else if ( $this->_blog_id > 0 ) {
+            } elseif ($this->_blog_id > 0) {
                 $group .= "_s{$this->_blog_id}";
             }
 
diff --git a/freemius/includes/managers/class-fs-plan-manager.php b/freemius/includes/managers/class-fs-plan-manager.php
index 639de43e3330a1aad35ec54717b6b3ea17cbb999..10134da4a32c9e90419c6cae553e54a419e888ae 100644
--- a/freemius/includes/managers/class-fs-plan-manager.php
+++ b/freemius/includes/managers/class-fs-plan-manager.php
@@ -1,162 +1,170 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.6
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	class FS_Plan_Manager {
-		/**
-		 * @var FS_Plan_Manager
-		 */
-		private static $_instance;
-
-		/**
-		 * @return FS_Plan_Manager
-		 */
-		static function instance() {
-			if ( ! isset( self::$_instance ) ) {
-				self::$_instance = new FS_Plan_Manager();
-			}
-
-			return self::$_instance;
-		}
-
-		private function __construct() {
-		}
-
-		/**
-		 * @param FS_Plugin_License[] $licenses
-		 *
-		 * @return bool
-		 */
-		function has_premium_license( $licenses ) {
-			if ( is_array( $licenses ) ) {
-				/**
-				 * @var FS_Plugin_License[] $licenses
-				 */
-				foreach ( $licenses as $license ) {
-					if ( ! $license->is_utilized() && $license->is_features_enabled() ) {
-						return true;
-					}
-				}
-			}
-
-			return false;
-		}
-
-		/**
-		 * Check if plugin has any paid plans.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.7
-		 *
-		 * @param FS_Plugin_Plan[] $plans
-		 *
-		 * @return bool
-		 */
-		function has_paid_plan( $plans ) {
-			if ( ! is_array( $plans ) || 0 === count( $plans ) ) {
-				return false;
-			}
-
-			/**
-			 * @var FS_Plugin_Plan[] $plans
-			 */
-			for ( $i = 0, $len = count( $plans ); $i < $len; $i ++ ) {
-				if ( ! $plans[ $i ]->is_free() ) {
-					return true;
-				}
-			}
-
-			return false;
-		}
-
-		/**
-		 * Check if plugin has any free plan, or is it premium only.
-		 *
-		 * Note: If no plans configured, assume plugin is free.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.7
-		 *
-		 * @param FS_Plugin_Plan[] $plans
-		 *
-		 * @return bool
-		 */
-		function has_free_plan( $plans ) {
-			if ( ! is_array( $plans ) || 0 === count( $plans ) ) {
-				return true;
-			}
-
-			/**
-			 * @var FS_Plugin_Plan[] $plans
-			 */
-			for ( $i = 0, $len = count( $plans ); $i < $len; $i ++ ) {
-				if ( $plans[ $i ]->is_free() ) {
-					return true;
-				}
-			}
-
-			return false;
-		}
-
-		/**
-		 * Find all plans that have trial.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.9
-		 *
-		 * @param FS_Plugin_Plan[] $plans
-		 *
-		 * @return FS_Plugin_Plan[]
-		 */
-		function get_trial_plans( $plans ) {
-			$trial_plans = array();
-
-			if ( is_array( $plans ) && 0 < count( $plans ) ) {
-				/**
-				 * @var FS_Plugin_Plan[] $plans
-				 */
-				for ( $i = 0, $len = count( $plans ); $i < $len; $i ++ ) {
-					if ( $plans[ $i ]->has_trial() ) {
-						$trial_plans[] = $plans[ $i ];
-					}
-				}
-			}
-
-			return $trial_plans;
-		}
-
-		/**
-		 * Check if plugin has any trial plan.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.9
-		 *
-		 * @param FS_Plugin_Plan[] $plans
-		 *
-		 * @return bool
-		 */
-		function has_trial_plan( $plans ) {
-			if ( ! is_array( $plans ) || 0 === count( $plans ) ) {
-				return true;
-			}
-
-			/**
-			 * @var FS_Plugin_Plan[] $plans
-			 */
-			for ( $i = 0, $len = count( $plans ); $i < $len; $i ++ ) {
-				if ( $plans[ $i ]->has_trial() ) {
-					return true;
-				}
-			}
-
-			return false;
-		}
-	}
\ No newline at end of file
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.6
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    class FS_Plan_Manager
+    {
+        /**
+         * @var FS_Plan_Manager
+         */
+        private static $_instance;
+
+        /**
+         * @return FS_Plan_Manager
+         */
+        public static function instance()
+        {
+            if (! isset(self::$_instance)) {
+                self::$_instance = new FS_Plan_Manager();
+            }
+
+            return self::$_instance;
+        }
+
+        private function __construct()
+        {
+        }
+
+        /**
+         * @param FS_Plugin_License[] $licenses
+         *
+         * @return bool
+         */
+        public function has_premium_license($licenses)
+        {
+            if (is_array($licenses)) {
+                /**
+                 * @var FS_Plugin_License[] $licenses
+                 */
+                foreach ($licenses as $license) {
+                    if (! $license->is_utilized() && $license->is_features_enabled()) {
+                        return true;
+                    }
+                }
+            }
+
+            return false;
+        }
+
+        /**
+         * Check if plugin has any paid plans.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.7
+         *
+         * @param FS_Plugin_Plan[] $plans
+         *
+         * @return bool
+         */
+        public function has_paid_plan($plans)
+        {
+            if (! is_array($plans) || 0 === count($plans)) {
+                return false;
+            }
+
+            /**
+             * @var FS_Plugin_Plan[] $plans
+             */
+            for ($i = 0, $len = count($plans); $i < $len; $i ++) {
+                if (! $plans[ $i ]->is_free()) {
+                    return true;
+                }
+            }
+
+            return false;
+        }
+
+        /**
+         * Check if plugin has any free plan, or is it premium only.
+         *
+         * Note: If no plans configured, assume plugin is free.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.7
+         *
+         * @param FS_Plugin_Plan[] $plans
+         *
+         * @return bool
+         */
+        public function has_free_plan($plans)
+        {
+            if (! is_array($plans) || 0 === count($plans)) {
+                return true;
+            }
+
+            /**
+             * @var FS_Plugin_Plan[] $plans
+             */
+            for ($i = 0, $len = count($plans); $i < $len; $i ++) {
+                if ($plans[ $i ]->is_free()) {
+                    return true;
+                }
+            }
+
+            return false;
+        }
+
+        /**
+         * Find all plans that have trial.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.9
+         *
+         * @param FS_Plugin_Plan[] $plans
+         *
+         * @return FS_Plugin_Plan[]
+         */
+        public function get_trial_plans($plans)
+        {
+            $trial_plans = array();
+
+            if (is_array($plans) && 0 < count($plans)) {
+                /**
+                 * @var FS_Plugin_Plan[] $plans
+                 */
+                for ($i = 0, $len = count($plans); $i < $len; $i ++) {
+                    if ($plans[ $i ]->has_trial()) {
+                        $trial_plans[] = $plans[ $i ];
+                    }
+                }
+            }
+
+            return $trial_plans;
+        }
+
+        /**
+         * Check if plugin has any trial plan.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.9
+         *
+         * @param FS_Plugin_Plan[] $plans
+         *
+         * @return bool
+         */
+        public function has_trial_plan($plans)
+        {
+            if (! is_array($plans) || 0 === count($plans)) {
+                return true;
+            }
+
+            /**
+             * @var FS_Plugin_Plan[] $plans
+             */
+            for ($i = 0, $len = count($plans); $i < $len; $i ++) {
+                if ($plans[ $i ]->has_trial()) {
+                    return true;
+                }
+            }
+
+            return false;
+        }
+    }
diff --git a/freemius/includes/managers/class-fs-plugin-manager.php b/freemius/includes/managers/class-fs-plugin-manager.php
index bacf160cd3c47b7a6471a3a32c9d1f903ef358b7..5ef686c71f87d75b70d2977409f229393994e84b 100644
--- a/freemius/includes/managers/class-fs-plugin-manager.php
+++ b/freemius/includes/managers/class-fs-plugin-manager.php
@@ -1,220 +1,228 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.6
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	class FS_Plugin_Manager {
-		/**
-		 * @since 1.2.2
-		 *
-		 * @var string|number
-		 */
-		protected $_module_id;
-		/**
-		 * @since 1.2.2
-		 *
-		 * @var FS_Plugin
-		 */
-		protected $_module;
-
-		/**
-		 * @var FS_Plugin_Manager[]
-		 */
-		private static $_instances = array();
-		/**
-		 * @var FS_Logger
-		 */
-		protected $_logger;
-
-		/**
-		 * Option names
-		 *
-		 * @author Leo Fajardo (@leorw)
-		 * @since  1.2.2
-		 */
-		const OPTION_NAME_PLUGINS = 'plugins';
-		const OPTION_NAME_THEMES  = 'themes';
-
-		/**
-		 * @param  string|number $module_id
-		 *
-		 * @return FS_Plugin_Manager
-		 */
-		static function instance( $module_id ) {
-			$key = 'm_' . $module_id;
-
-			if ( ! isset( self::$_instances[ $key ] ) ) {
-				self::$_instances[ $key ] = new FS_Plugin_Manager( $module_id );
-			}
-
-			return self::$_instances[ $key ];
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.6
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    class FS_Plugin_Manager
+    {
+        /**
+         * @since 1.2.2
+         *
+         * @var string|number
+         */
+        protected $_module_id;
+        /**
+         * @since 1.2.2
+         *
+         * @var FS_Plugin
+         */
+        protected $_module;
+
+        /**
+         * @var FS_Plugin_Manager[]
+         */
+        private static $_instances = array();
+        /**
+         * @var FS_Logger
+         */
+        protected $_logger;
+
+        /**
+         * Option names
+         *
+         * @author Leo Fajardo (@leorw)
+         * @since  1.2.2
+         */
+        const OPTION_NAME_PLUGINS = 'plugins';
+        const OPTION_NAME_THEMES  = 'themes';
+
+        /**
+         * @param  string|number $module_id
+         *
+         * @return FS_Plugin_Manager
+         */
+        public static function instance($module_id)
+        {
+            $key = 'm_' . $module_id;
+
+            if (! isset(self::$_instances[ $key ])) {
+                self::$_instances[ $key ] = new FS_Plugin_Manager($module_id);
+            }
+
+            return self::$_instances[ $key ];
         }
 
-		/**
-		 * @param string|number $module_id
-		 */
-		protected function __construct( $module_id ) {
-			$this->_logger    = FS_Logger::get_logger( WP_FS__SLUG . '_' . $module_id . '_' . 'plugins', WP_FS__DEBUG_SDK, WP_FS__ECHO_DEBUG_SDK );
-			$this->_module_id = $module_id;
-
-			$this->load();
-		}
-
-		protected function get_option_manager() {
-			return FS_Option_Manager::get_manager( WP_FS__ACCOUNTS_OPTION_NAME, true, true );
-		}
-
-		/**
-		 * @author Leo Fajardo (@leorw)
-		 * @since  1.2.2
-		 *
-		 * @param  string|bool $module_type "plugin", "theme", or "false" for all modules.
-		 *
-		 * @return array
-		 */
-		protected function get_all_modules( $module_type = false ) {
-			$option_manager = $this->get_option_manager();
-
-			if ( false !== $module_type ) {
-				return fs_get_entities( $option_manager->get_option( $module_type . 's', array() ), FS_Plugin::get_class_name() );
-			}
-
-			return array(
-				self::OPTION_NAME_PLUGINS => fs_get_entities( $option_manager->get_option( self::OPTION_NAME_PLUGINS, array() ), FS_Plugin::get_class_name() ),
-				self::OPTION_NAME_THEMES  => fs_get_entities( $option_manager->get_option( self::OPTION_NAME_THEMES, array() ), FS_Plugin::get_class_name() ),
-			);
-		}
-
-		/**
-		 * Load plugin data from local DB.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.6
-		 */
-		function load() {
-			$all_modules = $this->get_all_modules();
-
-			if ( ! is_numeric( $this->_module_id ) ) {
-				unset( $all_modules[ self::OPTION_NAME_THEMES ] );
-			}
-
-			foreach ( $all_modules as $modules ) {
-				/**
-				 * @since 1.2.2
-				 *
-				 * @var $modules FS_Plugin[]
-				 */
-				foreach ( $modules as $module ) {
-					$found_module = false;
-
-					/**
-					 * If module ID is not numeric, it must be a plugin's slug.
-					 *
-					 * @author Leo Fajardo (@leorw)
-					 * @since  1.2.2
-					 */
-					if ( ! is_numeric( $this->_module_id ) ) {
-						if ( $this->_module_id === $module->slug ) {
-							$this->_module_id = $module->id;
-							$found_module     = true;
-						}
-					} else if ( $this->_module_id == $module->id ) {
-						$found_module = true;
-					}
-
-					if ( $found_module ) {
-						$this->_module = $module;
-						break;
-					}
-				}
-			}
-		}
-
-		/**
-		 * Store plugin on local DB.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.6
-		 *
-		 * @param bool|FS_Plugin $module
-		 * @param bool           $flush
-		 *
-		 * @return bool|\FS_Plugin
-		 */
-		function store( $module = false, $flush = true ) {
-			if ( false !== $module ) {
-				$this->_module = $module;
-			}
-
-			$all_modules = $this->get_all_modules( $this->_module->type );
-			$all_modules[ $this->_module->slug ] = $this->_module;
-
-			$options_manager = $this->get_option_manager();
-			$options_manager->set_option( $this->_module->type . 's', $all_modules, $flush );
-
-			return $this->_module;
-		}
-
-		/**
-		 * Update local plugin data if different.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.6
-		 *
-		 * @param \FS_Plugin $plugin
-		 * @param bool       $store
-		 *
-		 * @return bool True if plugin was updated.
-		 */
-		function update( FS_Plugin $plugin, $store = true ) {
-			if ( ! ($this->_module instanceof FS_Plugin ) ||
-			     $this->_module->slug != $plugin->slug ||
-			     $this->_module->public_key != $plugin->public_key ||
-			     $this->_module->secret_key != $plugin->secret_key ||
-			     $this->_module->parent_plugin_id != $plugin->parent_plugin_id ||
-			     $this->_module->title != $plugin->title
-			) {
-				$this->store( $plugin, $store );
-
-				return true;
-			}
-
-			return false;
-		}
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.6
-		 *
-		 * @param FS_Plugin $plugin
-		 * @param bool      $store
-		 */
-		function set( FS_Plugin $plugin, $store = false ) {
-			$this->_module = $plugin;
-
-			if ( $store ) {
-				$this->store();
-			}
-		}
-
-		/**
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.0.6
-		 *
-		 * @return bool|\FS_Plugin
-		 */
-		function get() {
-			return isset( $this->_module ) ?
-				$this->_module :
-				false;
-		}
-
-
-	}
\ No newline at end of file
+        /**
+         * @param string|number $module_id
+         */
+        protected function __construct($module_id)
+        {
+            $this->_logger    = FS_Logger::get_logger(WP_FS__SLUG . '_' . $module_id . '_' . 'plugins', WP_FS__DEBUG_SDK, WP_FS__ECHO_DEBUG_SDK);
+            $this->_module_id = $module_id;
+
+            $this->load();
+        }
+
+        protected function get_option_manager()
+        {
+            return FS_Option_Manager::get_manager(WP_FS__ACCOUNTS_OPTION_NAME, true, true);
+        }
+
+        /**
+         * @author Leo Fajardo (@leorw)
+         * @since  1.2.2
+         *
+         * @param  string|bool $module_type "plugin", "theme", or "false" for all modules.
+         *
+         * @return array
+         */
+        protected function get_all_modules($module_type = false)
+        {
+            $option_manager = $this->get_option_manager();
+
+            if (false !== $module_type) {
+                return fs_get_entities($option_manager->get_option($module_type . 's', array()), FS_Plugin::get_class_name());
+            }
+
+            return array(
+                self::OPTION_NAME_PLUGINS => fs_get_entities($option_manager->get_option(self::OPTION_NAME_PLUGINS, array()), FS_Plugin::get_class_name()),
+                self::OPTION_NAME_THEMES  => fs_get_entities($option_manager->get_option(self::OPTION_NAME_THEMES, array()), FS_Plugin::get_class_name()),
+            );
+        }
+
+        /**
+         * Load plugin data from local DB.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.6
+         */
+        public function load()
+        {
+            $all_modules = $this->get_all_modules();
+
+            if (! is_numeric($this->_module_id)) {
+                unset($all_modules[ self::OPTION_NAME_THEMES ]);
+            }
+
+            foreach ($all_modules as $modules) {
+                /**
+                 * @since 1.2.2
+                 *
+                 * @var $modules FS_Plugin[]
+                 */
+                foreach ($modules as $module) {
+                    $found_module = false;
+
+                    /**
+                     * If module ID is not numeric, it must be a plugin's slug.
+                     *
+                     * @author Leo Fajardo (@leorw)
+                     * @since  1.2.2
+                     */
+                    if (! is_numeric($this->_module_id)) {
+                        if ($this->_module_id === $module->slug) {
+                            $this->_module_id = $module->id;
+                            $found_module     = true;
+                        }
+                    } elseif ($this->_module_id == $module->id) {
+                        $found_module = true;
+                    }
+
+                    if ($found_module) {
+                        $this->_module = $module;
+                        break;
+                    }
+                }
+            }
+        }
+
+        /**
+         * Store plugin on local DB.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.6
+         *
+         * @param bool|FS_Plugin $module
+         * @param bool           $flush
+         *
+         * @return bool|\FS_Plugin
+         */
+        public function store($module = false, $flush = true)
+        {
+            if (false !== $module) {
+                $this->_module = $module;
+            }
+
+            $all_modules = $this->get_all_modules($this->_module->type);
+            $all_modules[ $this->_module->slug ] = $this->_module;
+
+            $options_manager = $this->get_option_manager();
+            $options_manager->set_option($this->_module->type . 's', $all_modules, $flush);
+
+            return $this->_module;
+        }
+
+        /**
+         * Update local plugin data if different.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.6
+         *
+         * @param \FS_Plugin $plugin
+         * @param bool       $store
+         *
+         * @return bool True if plugin was updated.
+         */
+        public function update(FS_Plugin $plugin, $store = true)
+        {
+            if (! ($this->_module instanceof FS_Plugin) ||
+                 $this->_module->slug != $plugin->slug ||
+                 $this->_module->public_key != $plugin->public_key ||
+                 $this->_module->secret_key != $plugin->secret_key ||
+                 $this->_module->parent_plugin_id != $plugin->parent_plugin_id ||
+                 $this->_module->title != $plugin->title
+            ) {
+                $this->store($plugin, $store);
+
+                return true;
+            }
+
+            return false;
+        }
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.6
+         *
+         * @param FS_Plugin $plugin
+         * @param bool      $store
+         */
+        public function set(FS_Plugin $plugin, $store = false)
+        {
+            $this->_module = $plugin;
+
+            if ($store) {
+                $this->store();
+            }
+        }
+
+        /**
+         * @author Vova Feldman (@svovaf)
+         * @since  1.0.6
+         *
+         * @return bool|\FS_Plugin
+         */
+        public function get()
+        {
+            return isset($this->_module) ?
+                $this->_module :
+                false;
+        }
+    }
diff --git a/freemius/includes/managers/index.php b/freemius/includes/managers/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/includes/managers/index.php
+++ b/freemius/includes/managers/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/includes/sdk/Exceptions/ArgumentNotExistException.php b/freemius/includes/sdk/Exceptions/ArgumentNotExistException.php
index 56d9191137efa9c70dcd56864708b4f4f90d2e25..7eac606b379c1feb475ce40510dbfbcf52431149 100644
--- a/freemius/includes/sdk/Exceptions/ArgumentNotExistException.php
+++ b/freemius/includes/sdk/Exceptions/ArgumentNotExistException.php
@@ -1,9 +1,10 @@
 <?php
-	if ( ! class_exists( 'Freemius_InvalidArgumentException' ) ) {
-		exit;
-	}
+    if (! class_exists('Freemius_InvalidArgumentException')) {
+        exit;
+    }
 
-	if ( ! class_exists( 'Freemius_ArgumentNotExistException' ) ) {
-		class Freemius_ArgumentNotExistException extends Freemius_InvalidArgumentException {
-		}
-	}
\ No newline at end of file
+    if (! class_exists('Freemius_ArgumentNotExistException')) {
+        class Freemius_ArgumentNotExistException extends Freemius_InvalidArgumentException
+        {
+        }
+    }
diff --git a/freemius/includes/sdk/Exceptions/EmptyArgumentException.php b/freemius/includes/sdk/Exceptions/EmptyArgumentException.php
index 9da525f0dcbfc8ddefb781008ce14f44cdd1b988..29cc47948d4fa131d84639e8fc119d90953f992e 100644
--- a/freemius/includes/sdk/Exceptions/EmptyArgumentException.php
+++ b/freemius/includes/sdk/Exceptions/EmptyArgumentException.php
@@ -1,9 +1,10 @@
 <?php
-	if ( ! class_exists( 'Freemius_InvalidArgumentException' ) ) {
-		exit;
-	}
+    if (! class_exists('Freemius_InvalidArgumentException')) {
+        exit;
+    }
 
-	if ( ! class_exists( 'Freemius_EmptyArgumentException' ) ) {
-		class Freemius_EmptyArgumentException extends Freemius_InvalidArgumentException {
-		}
-	}
\ No newline at end of file
+    if (! class_exists('Freemius_EmptyArgumentException')) {
+        class Freemius_EmptyArgumentException extends Freemius_InvalidArgumentException
+        {
+        }
+    }
diff --git a/freemius/includes/sdk/Exceptions/Exception.php b/freemius/includes/sdk/Exceptions/Exception.php
index 418cda7b9613bb221e287d9909e87f83726caaa9..1b756e382510bc9c5514948528f80d340c1d67bd 100644
--- a/freemius/includes/sdk/Exceptions/Exception.php
+++ b/freemius/includes/sdk/Exceptions/Exception.php
@@ -1,74 +1,80 @@
 <?php
-	if ( ! class_exists( 'Freemius_Exception' ) ) {
-		/**
-		 * Thrown when an API call returns an exception.
-		 *
-		 */
-		class Freemius_Exception extends Exception {
-			protected $_result;
-			protected $_type;
-			protected $_code;
+    if (! class_exists('Freemius_Exception')) {
+        /**
+         * Thrown when an API call returns an exception.
+         *
+         */
+        class Freemius_Exception extends Exception
+        {
+            protected $_result;
+            protected $_type;
+            protected $_code;
 
-			/**
-			 * Make a new API Exception with the given result.
-			 *
-			 * @param array $result The result from the API server.
-			 */
-			public function __construct( $result ) {
-				$this->_result = $result;
+            /**
+             * Make a new API Exception with the given result.
+             *
+             * @param array $result The result from the API server.
+             */
+            public function __construct($result)
+            {
+                $this->_result = $result;
 
-				$code    = 0;
-				$message = 'Unknown error, please check GetResult().';
-				$type    = '';
+                $code    = 0;
+                $message = 'Unknown error, please check GetResult().';
+                $type    = '';
 
-				if ( isset( $result['error'] ) && is_array( $result['error'] ) ) {
-					if ( isset( $result['error']['code'] ) ) {
-						$code = $result['error']['code'];
-					}
-					if ( isset( $result['error']['message'] ) ) {
-						$message = $result['error']['message'];
-					}
-					if ( isset( $result['error']['type'] ) ) {
-						$type = $result['error']['type'];
-					}
-				}
+                if (isset($result['error']) && is_array($result['error'])) {
+                    if (isset($result['error']['code'])) {
+                        $code = $result['error']['code'];
+                    }
+                    if (isset($result['error']['message'])) {
+                        $message = $result['error']['message'];
+                    }
+                    if (isset($result['error']['type'])) {
+                        $type = $result['error']['type'];
+                    }
+                }
 
-				$this->_type = $type;
-				$this->_code = $code;
+                $this->_type = $type;
+                $this->_code = $code;
 
-				parent::__construct( $message, is_numeric( $code ) ? $code : 0 );
-			}
+                parent::__construct($message, is_numeric($code) ? $code : 0);
+            }
 
-			/**
-			 * Return the associated result object returned by the API server.
-			 *
-			 * @return array The result from the API server
-			 */
-			public function getResult() {
-				return $this->_result;
-			}
+            /**
+             * Return the associated result object returned by the API server.
+             *
+             * @return array The result from the API server
+             */
+            public function getResult()
+            {
+                return $this->_result;
+            }
 
-			public function getStringCode() {
-				return $this->_code;
-			}
+            public function getStringCode()
+            {
+                return $this->_code;
+            }
 
-			public function getType() {
-				return $this->_type;
-			}
+            public function getType()
+            {
+                return $this->_type;
+            }
 
-			/**
-			 * To make debugging easier.
-			 *
-			 * @return string The string representation of the error
-			 */
-			public function __toString() {
-				$str = $this->getType() . ': ';
+            /**
+             * To make debugging easier.
+             *
+             * @return string The string representation of the error
+             */
+            public function __toString()
+            {
+                $str = $this->getType() . ': ';
 
-				if ( $this->code != 0 ) {
-					$str .= $this->getStringCode() . ': ';
-				}
+                if ($this->code != 0) {
+                    $str .= $this->getStringCode() . ': ';
+                }
 
-				return $str . $this->getMessage();
-			}
-		}
-	}
\ No newline at end of file
+                return $str . $this->getMessage();
+            }
+        }
+    }
diff --git a/freemius/includes/sdk/Exceptions/InvalidArgumentException.php b/freemius/includes/sdk/Exceptions/InvalidArgumentException.php
index 685752a59146ffe30584dc3dc72eb897439683e6..cf8f80b0583374299784c62328d7532b5f913911 100644
--- a/freemius/includes/sdk/Exceptions/InvalidArgumentException.php
+++ b/freemius/includes/sdk/Exceptions/InvalidArgumentException.php
@@ -1,8 +1,10 @@
 <?php
-	if ( ! class_exists( 'Freemius_Exception' ) ) {
-		exit;
-	}
+    if (! class_exists('Freemius_Exception')) {
+        exit;
+    }
 
-	if ( ! class_exists( 'Freemius_InvalidArgumentException' ) ) {
-		class Freemius_InvalidArgumentException extends Freemius_Exception { }
-	}
\ No newline at end of file
+    if (! class_exists('Freemius_InvalidArgumentException')) {
+        class Freemius_InvalidArgumentException extends Freemius_Exception
+        {
+        }
+    }
diff --git a/freemius/includes/sdk/Exceptions/OAuthException.php b/freemius/includes/sdk/Exceptions/OAuthException.php
index 05dcb393ad909899fcdc56533b8c412aecf3f4bf..f90bd9e8d19bfd2b9e132cab629825a30e7e9198 100644
--- a/freemius/includes/sdk/Exceptions/OAuthException.php
+++ b/freemius/includes/sdk/Exceptions/OAuthException.php
@@ -1,12 +1,14 @@
 <?php
-	if ( ! class_exists( 'Freemius_Exception' ) ) {
-		exit;
-	}
+    if (! class_exists('Freemius_Exception')) {
+        exit;
+    }
 
-	if ( ! class_exists( 'Freemius_OAuthException' ) ) {
-		class Freemius_OAuthException extends Freemius_Exception {
-			public function __construct( $pResult ) {
-				parent::__construct( $pResult );
-			}
-		}
-	}
\ No newline at end of file
+    if (! class_exists('Freemius_OAuthException')) {
+        class Freemius_OAuthException extends Freemius_Exception
+        {
+            public function __construct($pResult)
+            {
+                parent::__construct($pResult);
+            }
+        }
+    }
diff --git a/freemius/includes/sdk/Exceptions/index.php b/freemius/includes/sdk/Exceptions/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/includes/sdk/Exceptions/index.php
+++ b/freemius/includes/sdk/Exceptions/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/includes/sdk/FreemiusBase.php b/freemius/includes/sdk/FreemiusBase.php
index 5c2b714371b5890766420ec7d421503d311bba8a..04d8cde1296c63b4be3d3054e990efbc345840c8 100644
--- a/freemius/includes/sdk/FreemiusBase.php
+++ b/freemius/includes/sdk/FreemiusBase.php
@@ -1,215 +1,223 @@
 <?php
-	/**
-	 * Copyright 2014 Freemius, Inc.
-	 *
-	 * Licensed under the GPL v2 (the "License"); you may
-	 * not use this file except in compliance with the License. You may obtain
-	 * a copy of the License at
-	 *
-	 *     http://choosealicense.com/licenses/gpl-v2/
-	 *
-	 * Unless required by applicable law or agreed to in writing, software
-	 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
-	 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
-	 * License for the specific language governing permissions and limitations
-	 * under the License.
-	 */
-
-	if ( ! defined( 'FS_API__VERSION' ) ) {
-		define( 'FS_API__VERSION', '1' );
-	}
-	if ( ! defined( 'FS_SDK__PATH' ) ) {
-		define( 'FS_SDK__PATH', dirname( __FILE__ ) );
-	}
-	if ( ! defined( 'FS_SDK__EXCEPTIONS_PATH' ) ) {
-		define( 'FS_SDK__EXCEPTIONS_PATH', FS_SDK__PATH . '/Exceptions/' );
-	}
-
-	if ( ! function_exists( 'json_decode' ) ) {
-		throw new Exception( 'Freemius needs the JSON PHP extension.' );
-	}
-
-	// Include all exception files.
-	$exceptions = array(
-		'Exception',
-		'InvalidArgumentException',
-		'ArgumentNotExistException',
-		'EmptyArgumentException',
-		'OAuthException'
-	);
-
-	foreach ( $exceptions as $e ) {
-		require_once FS_SDK__EXCEPTIONS_PATH . $e . '.php';
-	}
-
-	if ( class_exists( 'Freemius_Api_Base' ) ) {
-		return;
-	}
-
-	abstract class Freemius_Api_Base {
-		const VERSION = '1.0.4';
-		const FORMAT = 'json';
-
-		protected $_id;
-		protected $_public;
-		protected $_secret;
-		protected $_scope;
-		protected $_isSandbox;
-
-		/**
-		 * @param string $pScope     'app', 'developer', 'plugin', 'user' or 'install'.
-		 * @param number $pID        Element's id.
-		 * @param string $pPublic    Public key.
-		 * @param string $pSecret    Element's secret key.
-		 * @param bool   $pIsSandbox Whether or not to run API in sandbox mode.
-		 */
-		public function Init( $pScope, $pID, $pPublic, $pSecret, $pIsSandbox = false ) {
-			$this->_id        = $pID;
-			$this->_public    = $pPublic;
-			$this->_secret    = $pSecret;
-			$this->_scope     = $pScope;
-			$this->_isSandbox = $pIsSandbox;
-		}
-
-		public function IsSandbox() {
-			return $this->_isSandbox;
-		}
-
-		function CanonizePath( $pPath ) {
-			$pPath     = trim( $pPath, '/' );
-			$query_pos = strpos( $pPath, '?' );
-			$query     = '';
-
-			if ( false !== $query_pos ) {
-				$query = substr( $pPath, $query_pos );
-				$pPath = substr( $pPath, 0, $query_pos );
-			}
-
-			// Trim '.json' suffix.
-			$format_length = strlen( '.' . self::FORMAT );
-			$start         = $format_length * ( - 1 ); //negative
-			if ( substr( strtolower( $pPath ), $start ) === ( '.' . self::FORMAT ) ) {
-				$pPath = substr( $pPath, 0, strlen( $pPath ) - $format_length );
-			}
-
-			switch ( $this->_scope ) {
-				case 'app':
-					$base = '/apps/' . $this->_id;
-					break;
-				case 'developer':
-					$base = '/developers/' . $this->_id;
-					break;
-				case 'user':
-					$base = '/users/' . $this->_id;
-					break;
-				case 'plugin':
-					$base = '/plugins/' . $this->_id;
-					break;
-				case 'install':
-					$base = '/installs/' . $this->_id;
-					break;
-				default:
-					throw new Freemius_Exception( 'Scope not implemented.' );
-			}
-
-			return '/v' . FS_API__VERSION . $base .
-			       ( ! empty( $pPath ) ? '/' : '' ) . $pPath .
-			       ( ( false === strpos( $pPath, '.' ) ) ? '.' . self::FORMAT : '' ) . $query;
-		}
-
-		abstract function MakeRequest( $pCanonizedPath, $pMethod = 'GET', $pParams = array() );
-
-		/**
-		 * @param string $pPath
-		 * @param string $pMethod
-		 * @param array  $pParams
-		 *
-		 * @return object[]|object|null
-		 */
-		private function _Api( $pPath, $pMethod = 'GET', $pParams = array() ) {
-			$pMethod = strtoupper( $pMethod );
-
-			try {
-				$result = $this->MakeRequest( $pPath, $pMethod, $pParams );
-			} catch ( Freemius_Exception $e ) {
-				// Map to error object.
-				$result = (object) $e->getResult();
-			} catch ( Exception $e ) {
-				// Map to error object.
-				$result = (object) array(
-					'error' => (object) array(
-						'type'    => 'Unknown',
-						'message' => $e->getMessage() . ' (' . $e->getFile() . ': ' . $e->getLine() . ')',
-						'code'    => 'unknown',
-						'http'    => 402
-					)
-				);
-			}
-
-			return $result;
-		}
-
-		public function Api( $pPath, $pMethod = 'GET', $pParams = array() ) {
-			return $this->_Api( $this->CanonizePath( $pPath ), $pMethod, $pParams );
-		}
-
-		/**
-		 * Base64 decoding that does not need to be urldecode()-ed.
-		 *
-		 * Exactly the same as PHP base64 encode except it uses
-		 *   `-` instead of `+`
-		 *   `_` instead of `/`
-		 *   No padded =
-		 *
-		 * @param string $input Base64UrlEncoded() string
-		 *
-		 * @return string
-		 */
-		protected static function Base64UrlDecode( $input ) {
-			/**
-			 * IMPORTANT NOTE:
-			 * This is a hack suggested by @otto42 and @greenshady from
-			 * the theme's review team. The usage of base64 for API
-			 * signature encoding was approved in a Slack meeting
-			 * held on Tue (10/25 2016).
-			 *
-			 * @todo Remove this hack once the base64 error is removed from the Theme Check.
-			 *
-			 * @since 1.2.2
-			 * @author Vova Feldman (@svovaf)
-			 */
-			$fn = 'base64' . '_decode';
-			return $fn( strtr( $input, '-_', '+/' ) );
-		}
-
-		/**
-		 * Base64 encoding that does not need to be urlencode()ed.
-		 *
-		 * Exactly the same as base64 encode except it uses
-		 *   `-` instead of `+
-		 *   `_` instead of `/`
-		 *
-		 * @param string $input string
-		 *
-		 * @return string Base64 encoded string
-		 */
-		protected static function Base64UrlEncode( $input ) {
-			/**
-			 * IMPORTANT NOTE:
-			 * This is a hack suggested by @otto42 and @greenshady from
-			 * the theme's review team. The usage of base64 for API
-			 * signature encoding was approved in a Slack meeting
-			 * held on Tue (10/25 2016).
-			 *
-			 * @todo Remove this hack once the base64 error is removed from the Theme Check.
-			 *
-			 * @since 1.2.2
-			 * @author Vova Feldman (@svovaf)
-			 */
-			$fn = 'base64' . '_encode';
-			$str = strtr( $fn( $input ), '+/', '-_' );
-			$str = str_replace( '=', '', $str );
-
-			return $str;
-		}
-	}
+    /**
+     * Copyright 2014 Freemius, Inc.
+     *
+     * Licensed under the GPL v2 (the "License"); you may
+     * not use this file except in compliance with the License. You may obtain
+     * a copy of the License at
+     *
+     *     http://choosealicense.com/licenses/gpl-v2/
+     *
+     * Unless required by applicable law or agreed to in writing, software
+     * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+     * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
+     * License for the specific language governing permissions and limitations
+     * under the License.
+     */
+
+    if (! defined('FS_API__VERSION')) {
+        define('FS_API__VERSION', '1');
+    }
+    if (! defined('FS_SDK__PATH')) {
+        define('FS_SDK__PATH', dirname(__FILE__));
+    }
+    if (! defined('FS_SDK__EXCEPTIONS_PATH')) {
+        define('FS_SDK__EXCEPTIONS_PATH', FS_SDK__PATH . '/Exceptions/');
+    }
+
+    if (! function_exists('json_decode')) {
+        throw new Exception('Freemius needs the JSON PHP extension.');
+    }
+
+    // Include all exception files.
+    $exceptions = array(
+        'Exception',
+        'InvalidArgumentException',
+        'ArgumentNotExistException',
+        'EmptyArgumentException',
+        'OAuthException'
+    );
+
+    foreach ($exceptions as $e) {
+        require_once FS_SDK__EXCEPTIONS_PATH . $e . '.php';
+    }
+
+    if (class_exists('Freemius_Api_Base')) {
+        return;
+    }
+
+    abstract class Freemius_Api_Base
+    {
+        const VERSION = '1.0.4';
+        const FORMAT = 'json';
+
+        protected $_id;
+        protected $_public;
+        protected $_secret;
+        protected $_scope;
+        protected $_isSandbox;
+
+        /**
+         * @param string $pScope     'app', 'developer', 'plugin', 'user' or 'install'.
+         * @param number $pID        Element's id.
+         * @param string $pPublic    Public key.
+         * @param string $pSecret    Element's secret key.
+         * @param bool   $pIsSandbox Whether or not to run API in sandbox mode.
+         */
+        public function Init($pScope, $pID, $pPublic, $pSecret, $pIsSandbox = false)
+        {
+            $this->_id        = $pID;
+            $this->_public    = $pPublic;
+            $this->_secret    = $pSecret;
+            $this->_scope     = $pScope;
+            $this->_isSandbox = $pIsSandbox;
+        }
+
+        public function IsSandbox()
+        {
+            return $this->_isSandbox;
+        }
+
+        public function CanonizePath($pPath)
+        {
+            $pPath     = trim($pPath, '/');
+            $query_pos = strpos($pPath, '?');
+            $query     = '';
+
+            if (false !== $query_pos) {
+                $query = substr($pPath, $query_pos);
+                $pPath = substr($pPath, 0, $query_pos);
+            }
+
+            // Trim '.json' suffix.
+            $format_length = strlen('.' . self::FORMAT);
+            $start         = $format_length * (- 1); //negative
+            if (substr(strtolower($pPath), $start) === ('.' . self::FORMAT)) {
+                $pPath = substr($pPath, 0, strlen($pPath) - $format_length);
+            }
+
+            switch ($this->_scope) {
+                case 'app':
+                    $base = '/apps/' . $this->_id;
+                    break;
+                case 'developer':
+                    $base = '/developers/' . $this->_id;
+                    break;
+                case 'user':
+                    $base = '/users/' . $this->_id;
+                    break;
+                case 'plugin':
+                    $base = '/plugins/' . $this->_id;
+                    break;
+                case 'install':
+                    $base = '/installs/' . $this->_id;
+                    break;
+                default:
+                    throw new Freemius_Exception('Scope not implemented.');
+            }
+
+            return '/v' . FS_API__VERSION . $base .
+                   (! empty($pPath) ? '/' : '') . $pPath .
+                   ((false === strpos($pPath, '.')) ? '.' . self::FORMAT : '') . $query;
+        }
+
+        abstract public function MakeRequest($pCanonizedPath, $pMethod = 'GET', $pParams = array());
+
+        /**
+         * @param string $pPath
+         * @param string $pMethod
+         * @param array  $pParams
+         *
+         * @return object[]|object|null
+         */
+        private function _Api($pPath, $pMethod = 'GET', $pParams = array())
+        {
+            $pMethod = strtoupper($pMethod);
+
+            try {
+                $result = $this->MakeRequest($pPath, $pMethod, $pParams);
+            } catch (Freemius_Exception $e) {
+                // Map to error object.
+                $result = (object) $e->getResult();
+            } catch (Exception $e) {
+                // Map to error object.
+                $result = (object) array(
+                    'error' => (object) array(
+                        'type'    => 'Unknown',
+                        'message' => $e->getMessage() . ' (' . $e->getFile() . ': ' . $e->getLine() . ')',
+                        'code'    => 'unknown',
+                        'http'    => 402
+                    )
+                );
+            }
+
+            return $result;
+        }
+
+        public function Api($pPath, $pMethod = 'GET', $pParams = array())
+        {
+            return $this->_Api($this->CanonizePath($pPath), $pMethod, $pParams);
+        }
+
+        /**
+         * Base64 decoding that does not need to be urldecode()-ed.
+         *
+         * Exactly the same as PHP base64 encode except it uses
+         *   `-` instead of `+`
+         *   `_` instead of `/`
+         *   No padded =
+         *
+         * @param string $input Base64UrlEncoded() string
+         *
+         * @return string
+         */
+        protected static function Base64UrlDecode($input)
+        {
+            /**
+             * IMPORTANT NOTE:
+             * This is a hack suggested by @otto42 and @greenshady from
+             * the theme's review team. The usage of base64 for API
+             * signature encoding was approved in a Slack meeting
+             * held on Tue (10/25 2016).
+             *
+             * @todo Remove this hack once the base64 error is removed from the Theme Check.
+             *
+             * @since 1.2.2
+             * @author Vova Feldman (@svovaf)
+             */
+            $fn = 'base64' . '_decode';
+            return $fn(strtr($input, '-_', '+/'));
+        }
+
+        /**
+         * Base64 encoding that does not need to be urlencode()ed.
+         *
+         * Exactly the same as base64 encode except it uses
+         *   `-` instead of `+
+         *   `_` instead of `/`
+         *
+         * @param string $input string
+         *
+         * @return string Base64 encoded string
+         */
+        protected static function Base64UrlEncode($input)
+        {
+            /**
+             * IMPORTANT NOTE:
+             * This is a hack suggested by @otto42 and @greenshady from
+             * the theme's review team. The usage of base64 for API
+             * signature encoding was approved in a Slack meeting
+             * held on Tue (10/25 2016).
+             *
+             * @todo Remove this hack once the base64 error is removed from the Theme Check.
+             *
+             * @since 1.2.2
+             * @author Vova Feldman (@svovaf)
+             */
+            $fn = 'base64' . '_encode';
+            $str = strtr($fn($input), '+/', '-_');
+            $str = str_replace('=', '', $str);
+
+            return $str;
+        }
+    }
diff --git a/freemius/includes/sdk/FreemiusWordPress.php b/freemius/includes/sdk/FreemiusWordPress.php
index 0b80912e30398c51403c843e36cd017fcdf11f88..ddd721c8332bcdcd265ddf5e21dbdb7f861244ad 100644
--- a/freemius/includes/sdk/FreemiusWordPress.php
+++ b/freemius/includes/sdk/FreemiusWordPress.php
@@ -1,712 +1,733 @@
 <?php
-	/**
-	 * Copyright 2016 Freemius, Inc.
-	 *
-	 * Licensed under the GPL v2 (the "License"); you may
-	 * not use this file except in compliance with the License. You may obtain
-	 * a copy of the License at
-	 *
-	 *     http://choosealicense.com/licenses/gpl-v2/
-	 *
-	 * Unless required by applicable law or agreed to in writing, software
-	 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
-	 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
-	 * License for the specific language governing permissions and limitations
-	 * under the License.
-	 */
-
-	require_once dirname( __FILE__ ) . '/FreemiusBase.php';
-
-	if ( ! defined( 'FS_SDK__USER_AGENT' ) ) {
-		define( 'FS_SDK__USER_AGENT', 'fs-php-' . Freemius_Api_Base::VERSION );
-	}
-
-	if ( ! defined( 'FS_SDK__SIMULATE_NO_CURL' ) ) {
-		define( 'FS_SDK__SIMULATE_NO_CURL', false );
-	}
-
-	if ( ! defined( 'FS_SDK__SIMULATE_NO_API_CONNECTIVITY_CLOUDFLARE' ) ) {
-		define( 'FS_SDK__SIMULATE_NO_API_CONNECTIVITY_CLOUDFLARE', false );
-	}
-
-	if ( ! defined( 'FS_SDK__SIMULATE_NO_API_CONNECTIVITY_SQUID_ACL' ) ) {
-		define( 'FS_SDK__SIMULATE_NO_API_CONNECTIVITY_SQUID_ACL', false );
-	}
-
-	if ( ! defined( 'FS_SDK__HAS_CURL' ) ) {
-		if ( FS_SDK__SIMULATE_NO_CURL ) {
-			define( 'FS_SDK__HAS_CURL', false );
-		} else {
-			$curl_required_methods = array(
-				'curl_version',
-				'curl_exec',
-				'curl_init',
-				'curl_close',
-				'curl_setopt',
-				'curl_setopt_array',
-				'curl_error',
-			);
-
-			$has_curl = true;
-			foreach ( $curl_required_methods as $m ) {
-				if ( ! function_exists( $m ) ) {
-					$has_curl = false;
-					break;
-				}
-			}
-
-			define( 'FS_SDK__HAS_CURL', $has_curl );
-		}
-	}
-
-    if ( ! defined( 'FS_SDK__SSLVERIFY' ) ) {
-        define( 'FS_SDK__SSLVERIFY', false );
+    /**
+     * Copyright 2016 Freemius, Inc.
+     *
+     * Licensed under the GPL v2 (the "License"); you may
+     * not use this file except in compliance with the License. You may obtain
+     * a copy of the License at
+     *
+     *     http://choosealicense.com/licenses/gpl-v2/
+     *
+     * Unless required by applicable law or agreed to in writing, software
+     * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+     * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
+     * License for the specific language governing permissions and limitations
+     * under the License.
+     */
+
+    require_once dirname(__FILE__) . '/FreemiusBase.php';
+
+    if (! defined('FS_SDK__USER_AGENT')) {
+        define('FS_SDK__USER_AGENT', 'fs-php-' . Freemius_Api_Base::VERSION);
     }
 
-	$curl_version = FS_SDK__HAS_CURL ?
-		curl_version() :
-		array( 'version' => '7.37' );
-
-	if ( ! defined( 'FS_API__PROTOCOL' ) ) {
-		define( 'FS_API__PROTOCOL', version_compare( $curl_version['version'], '7.37', '>=' ) ? 'https' : 'http' );
-	}
-
-	if ( ! defined( 'FS_API__LOGGER_ON' ) ) {
-		define( 'FS_API__LOGGER_ON', false );
-	}
-
-	if ( ! defined( 'FS_API__ADDRESS' ) ) {
-		define( 'FS_API__ADDRESS', '://api.freemius.com' );
-	}
-	if ( ! defined( 'FS_API__SANDBOX_ADDRESS' ) ) {
-		define( 'FS_API__SANDBOX_ADDRESS', '://sandbox-api.freemius.com' );
-	}
-
-	if ( class_exists( 'Freemius_Api_WordPress' ) ) {
-		return;
-	}
-
-	class Freemius_Api_WordPress extends Freemius_Api_Base {
-		private static $_logger = array();
-
-		/**
-		 * @param string      $pScope   'app', 'developer', 'user' or 'install'.
-		 * @param number      $pID      Element's id.
-		 * @param string      $pPublic  Public key.
-		 * @param string|bool $pSecret  Element's secret key.
-		 * @param bool        $pSandbox Whether or not to run API in sandbox mode.
-		 */
-		public function __construct( $pScope, $pID, $pPublic, $pSecret = false, $pSandbox = false ) {
-			// If secret key not provided, use public key encryption.
-			if ( is_bool( $pSecret ) ) {
-				$pSecret = $pPublic;
-			}
-
-			parent::Init( $pScope, $pID, $pPublic, $pSecret, $pSandbox );
-		}
-
-		public static function GetUrl( $pCanonizedPath = '', $pIsSandbox = false ) {
-			$address = ( $pIsSandbox ? FS_API__SANDBOX_ADDRESS : FS_API__ADDRESS );
-
-			if ( ':' === $address[0] ) {
-				$address = self::$_protocol . $address;
-			}
-
-			return $address . $pCanonizedPath;
-		}
-
-		#----------------------------------------------------------------------------------
-		#region Servers Clock Diff
-		#----------------------------------------------------------------------------------
-
-		/**
-		 * @var int Clock diff in seconds between current server to API server.
-		 */
-		private static $_clock_diff = 0;
-
-		/**
-		 * Set clock diff for all API calls.
-		 *
-		 * @since 1.0.3
-		 *
-		 * @param $pSeconds
-		 */
-		public static function SetClockDiff( $pSeconds ) {
-			self::$_clock_diff = $pSeconds;
-		}
-
-		/**
-		 * Find clock diff between current server to API server.
-		 *
-		 * @since 1.0.2
-		 * @return int Clock diff in seconds.
-		 */
-		public static function FindClockDiff() {
-			$time = time();
-			$pong = self::Ping();
-
-			return ( $time - strtotime( $pong->timestamp ) );
-		}
-
-		#endregion
-
-		/**
-		 * @var string http or https
-		 */
-		private static $_protocol = FS_API__PROTOCOL;
-
-		/**
-		 * Set API connection protocol.
-		 *
-		 * @since 1.0.4
-		 */
-		public static function SetHttp() {
-			self::$_protocol = 'http';
-		}
-
-		/**
-		 * @since 1.0.4
-		 *
-		 * @return bool
-		 */
-		public static function IsHttps() {
-			return ( 'https' === self::$_protocol );
-		}
-
-		/**
-		 * Sign request with the following HTTP headers:
-		 *      Content-MD5: MD5(HTTP Request body)
-		 *      Date: Current date (i.e Sat, 14 Feb 2016 20:24:46 +0000)
-		 *      Authorization: FS {scope_entity_id}:{scope_entity_public_key}:base64encode(sha256(string_to_sign,
-		 *      {scope_entity_secret_key}))
-		 *
-		 * @param string $pResourceUrl
-		 * @param array  $pWPRemoteArgs
-		 *
-		 * @return array
-		 */
-		function SignRequest( $pResourceUrl, $pWPRemoteArgs ) {
-			$auth = $this->GenerateAuthorizationParams(
-				$pResourceUrl,
-				$pWPRemoteArgs['method'],
-				! empty( $pWPRemoteArgs['body'] ) ? $pWPRemoteArgs['body'] : ''
-			);
-
-			$pWPRemoteArgs['headers']['Date']          = $auth['date'];
-			$pWPRemoteArgs['headers']['Authorization'] = $auth['authorization'];
-
-			if ( ! empty( $auth['content_md5'] ) ) {
-				$pWPRemoteArgs['headers']['Content-MD5'] = $auth['content_md5'];
-			}
-
-			return $pWPRemoteArgs;
-		}
-
-		/**
-		 * Generate Authorization request headers:
-		 *
-		 *      Content-MD5: MD5(HTTP Request body)
-		 *      Date: Current date (i.e Sat, 14 Feb 2016 20:24:46 +0000)
-		 *      Authorization: FS {scope_entity_id}:{scope_entity_public_key}:base64encode(sha256(string_to_sign,
-		 *      {scope_entity_secret_key}))
-		 *
-		 * @author Vova Feldman
-		 *
-		 * @param string $pResourceUrl
-		 * @param string $pMethod
-		 * @param string $pPostParams
-		 *
-		 * @return array
-		 * @throws Freemius_Exception
-		 */
-		function GenerateAuthorizationParams(
-			$pResourceUrl,
-			$pMethod = 'GET',
-			$pPostParams = ''
-		) {
-			$pMethod = strtoupper( $pMethod );
-
-			$eol          = "\n";
-			$content_md5  = '';
-			$content_type = '';
-			$now          = ( time() - self::$_clock_diff );
-			$date         = date( 'r', $now );
-
-			if ( in_array( $pMethod, array( 'POST', 'PUT' ) ) ) {
+    if (! defined('FS_SDK__SIMULATE_NO_CURL')) {
+        define('FS_SDK__SIMULATE_NO_CURL', false);
+    }
+
+    if (! defined('FS_SDK__SIMULATE_NO_API_CONNECTIVITY_CLOUDFLARE')) {
+        define('FS_SDK__SIMULATE_NO_API_CONNECTIVITY_CLOUDFLARE', false);
+    }
+
+    if (! defined('FS_SDK__SIMULATE_NO_API_CONNECTIVITY_SQUID_ACL')) {
+        define('FS_SDK__SIMULATE_NO_API_CONNECTIVITY_SQUID_ACL', false);
+    }
+
+    if (! defined('FS_SDK__HAS_CURL')) {
+        if (FS_SDK__SIMULATE_NO_CURL) {
+            define('FS_SDK__HAS_CURL', false);
+        } else {
+            $curl_required_methods = array(
+                'curl_version',
+                'curl_exec',
+                'curl_init',
+                'curl_close',
+                'curl_setopt',
+                'curl_setopt_array',
+                'curl_error',
+            );
+
+            $has_curl = true;
+            foreach ($curl_required_methods as $m) {
+                if (! function_exists($m)) {
+                    $has_curl = false;
+                    break;
+                }
+            }
+
+            define('FS_SDK__HAS_CURL', $has_curl);
+        }
+    }
+
+    if (! defined('FS_SDK__SSLVERIFY')) {
+        define('FS_SDK__SSLVERIFY', false);
+    }
+
+    $curl_version = FS_SDK__HAS_CURL ?
+        curl_version() :
+        array( 'version' => '7.37' );
+
+    if (! defined('FS_API__PROTOCOL')) {
+        define('FS_API__PROTOCOL', version_compare($curl_version['version'], '7.37', '>=') ? 'https' : 'http');
+    }
+
+    if (! defined('FS_API__LOGGER_ON')) {
+        define('FS_API__LOGGER_ON', false);
+    }
+
+    if (! defined('FS_API__ADDRESS')) {
+        define('FS_API__ADDRESS', '://api.freemius.com');
+    }
+    if (! defined('FS_API__SANDBOX_ADDRESS')) {
+        define('FS_API__SANDBOX_ADDRESS', '://sandbox-api.freemius.com');
+    }
+
+    if (class_exists('Freemius_Api_WordPress')) {
+        return;
+    }
+
+    class Freemius_Api_WordPress extends Freemius_Api_Base
+    {
+        private static $_logger = array();
+
+        /**
+         * @param string      $pScope   'app', 'developer', 'user' or 'install'.
+         * @param number      $pID      Element's id.
+         * @param string      $pPublic  Public key.
+         * @param string|bool $pSecret  Element's secret key.
+         * @param bool        $pSandbox Whether or not to run API in sandbox mode.
+         */
+        public function __construct($pScope, $pID, $pPublic, $pSecret = false, $pSandbox = false)
+        {
+            // If secret key not provided, use public key encryption.
+            if (is_bool($pSecret)) {
+                $pSecret = $pPublic;
+            }
+
+            parent::Init($pScope, $pID, $pPublic, $pSecret, $pSandbox);
+        }
+
+        public static function GetUrl($pCanonizedPath = '', $pIsSandbox = false)
+        {
+            $address = ($pIsSandbox ? FS_API__SANDBOX_ADDRESS : FS_API__ADDRESS);
+
+            if (':' === $address[0]) {
+                $address = self::$_protocol . $address;
+            }
+
+            return $address . $pCanonizedPath;
+        }
+
+        #----------------------------------------------------------------------------------
+        #region Servers Clock Diff
+        #----------------------------------------------------------------------------------
+
+        /**
+         * @var int Clock diff in seconds between current server to API server.
+         */
+        private static $_clock_diff = 0;
+
+        /**
+         * Set clock diff for all API calls.
+         *
+         * @since 1.0.3
+         *
+         * @param $pSeconds
+         */
+        public static function SetClockDiff($pSeconds)
+        {
+            self::$_clock_diff = $pSeconds;
+        }
+
+        /**
+         * Find clock diff between current server to API server.
+         *
+         * @since 1.0.2
+         * @return int Clock diff in seconds.
+         */
+        public static function FindClockDiff()
+        {
+            $time = time();
+            $pong = self::Ping();
+
+            return ($time - strtotime($pong->timestamp));
+        }
+
+        #endregion
+
+        /**
+         * @var string http or https
+         */
+        private static $_protocol = FS_API__PROTOCOL;
+
+        /**
+         * Set API connection protocol.
+         *
+         * @since 1.0.4
+         */
+        public static function SetHttp()
+        {
+            self::$_protocol = 'http';
+        }
+
+        /**
+         * @since 1.0.4
+         *
+         * @return bool
+         */
+        public static function IsHttps()
+        {
+            return ('https' === self::$_protocol);
+        }
+
+        /**
+         * Sign request with the following HTTP headers:
+         *      Content-MD5: MD5(HTTP Request body)
+         *      Date: Current date (i.e Sat, 14 Feb 2016 20:24:46 +0000)
+         *      Authorization: FS {scope_entity_id}:{scope_entity_public_key}:base64encode(sha256(string_to_sign,
+         *      {scope_entity_secret_key}))
+         *
+         * @param string $pResourceUrl
+         * @param array  $pWPRemoteArgs
+         *
+         * @return array
+         */
+        public function SignRequest($pResourceUrl, $pWPRemoteArgs)
+        {
+            $auth = $this->GenerateAuthorizationParams(
+                $pResourceUrl,
+                $pWPRemoteArgs['method'],
+                ! empty($pWPRemoteArgs['body']) ? $pWPRemoteArgs['body'] : ''
+            );
+
+            $pWPRemoteArgs['headers']['Date']          = $auth['date'];
+            $pWPRemoteArgs['headers']['Authorization'] = $auth['authorization'];
+
+            if (! empty($auth['content_md5'])) {
+                $pWPRemoteArgs['headers']['Content-MD5'] = $auth['content_md5'];
+            }
+
+            return $pWPRemoteArgs;
+        }
+
+        /**
+         * Generate Authorization request headers:
+         *
+         *      Content-MD5: MD5(HTTP Request body)
+         *      Date: Current date (i.e Sat, 14 Feb 2016 20:24:46 +0000)
+         *      Authorization: FS {scope_entity_id}:{scope_entity_public_key}:base64encode(sha256(string_to_sign,
+         *      {scope_entity_secret_key}))
+         *
+         * @author Vova Feldman
+         *
+         * @param string $pResourceUrl
+         * @param string $pMethod
+         * @param string $pPostParams
+         *
+         * @return array
+         * @throws Freemius_Exception
+         */
+        public function GenerateAuthorizationParams(
+            $pResourceUrl,
+            $pMethod = 'GET',
+            $pPostParams = ''
+        ) {
+            $pMethod = strtoupper($pMethod);
+
+            $eol          = "\n";
+            $content_md5  = '';
+            $content_type = '';
+            $now          = (time() - self::$_clock_diff);
+            $date         = date('r', $now);
+
+            if (in_array($pMethod, array( 'POST', 'PUT' ))) {
                 $content_type = 'application/json';
 
-                if ( ! empty( $pPostParams ) ) {
-                    $content_md5 = md5( $pPostParams );
+                if (! empty($pPostParams)) {
+                    $content_md5 = md5($pPostParams);
                 }
             }
 
-			$string_to_sign = implode( $eol, array(
-				$pMethod,
-				$content_md5,
-				$content_type,
-				$date,
-				$pResourceUrl
-			) );
-
-			// If secret and public keys are identical, it means that
-			// the signature uses public key hash encoding.
-			$auth_type = ( $this->_secret !== $this->_public ) ? 'FS' : 'FSP';
-
-			$auth = array(
-				'date'          => $date,
-				'authorization' => $auth_type . ' ' . $this->_id . ':' .
-				                   $this->_public . ':' .
-				                   self::Base64UrlEncode( hash_hmac(
-					                   'sha256', $string_to_sign, $this->_secret
-				                   ) )
-			);
-
-			if ( ! empty( $content_md5 ) ) {
-				$auth['content_md5'] = $content_md5;
-			}
-
-			return $auth;
-		}
-
-		/**
-		 * Get API request URL signed via query string.
+            $string_to_sign = implode($eol, array(
+                $pMethod,
+                $content_md5,
+                $content_type,
+                $date,
+                $pResourceUrl
+            ));
+
+            // If secret and public keys are identical, it means that
+            // the signature uses public key hash encoding.
+            $auth_type = ($this->_secret !== $this->_public) ? 'FS' : 'FSP';
+
+            $auth = array(
+                'date'          => $date,
+                'authorization' => $auth_type . ' ' . $this->_id . ':' .
+                                   $this->_public . ':' .
+                                   self::Base64UrlEncode(hash_hmac(
+                                       'sha256',
+                                       $string_to_sign,
+                                       $this->_secret
+                                   ))
+            );
+
+            if (! empty($content_md5)) {
+                $auth['content_md5'] = $content_md5;
+            }
+
+            return $auth;
+        }
+
+        /**
+         * Get API request URL signed via query string.
          *
          * @since 1.2.3 Stopped using http_build_query(). Instead, use urlencode(). In some environments the encoding of http_build_query() can generate a URL that once used with a redirect, the `&` querystring separator is escaped to `&amp;` which breaks the URL (Added by @svovaf).
-		 *
-		 * @param string $pPath
-		 *
-		 * @throws Freemius_Exception
-		 *
-		 * @return string
-		 */
-        function GetSignedUrl( $pPath ) {
-            $resource     = explode( '?', $this->CanonizePath( $pPath ) );
+         *
+         * @param string $pPath
+         *
+         * @throws Freemius_Exception
+         *
+         * @return string
+         */
+        public function GetSignedUrl($pPath)
+        {
+            $resource     = explode('?', $this->CanonizePath($pPath));
             $pResourceUrl = $resource[0];
 
-            $auth = $this->GenerateAuthorizationParams( $pResourceUrl );
+            $auth = $this->GenerateAuthorizationParams($pResourceUrl);
 
             return Freemius_Api_WordPress::GetUrl(
                 $pResourceUrl . '?' .
-                ( 1 < count( $resource ) && ! empty( $resource[1] ) ? $resource[1] . '&' : '' ) .
-                'authorization=' . urlencode( $auth['authorization'] ) .
-                '&auth_date=' . urlencode( $auth['date'] )
-                , $this->_isSandbox );
+                (1 < count($resource) && ! empty($resource[1]) ? $resource[1] . '&' : '') .
+                'authorization=' . urlencode($auth['authorization']) .
+                '&auth_date=' . urlencode($auth['date']),
+                $this->_isSandbox
+            );
         }
 
-		/**
-		 * @author Vova Feldman
-		 *
-		 * @param string $pUrl
-		 * @param array  $pWPRemoteArgs
-		 *
-		 * @return mixed
-		 */
-		private static function ExecuteRequest( $pUrl, &$pWPRemoteArgs ) {
-			$start = microtime( true );
-
-			$response = wp_remote_request( $pUrl, $pWPRemoteArgs );
-
-			if ( FS_API__LOGGER_ON ) {
-				$end = microtime( true );
-
-				$has_body      = ( isset( $pWPRemoteArgs['body'] ) && ! empty( $pWPRemoteArgs['body'] ) );
-				$is_http_error = is_wp_error( $response );
-
-				self::$_logger[] = array(
-					'id'        => count( self::$_logger ),
-					'start'     => $start,
-					'end'       => $end,
-					'total'     => ( $end - $start ),
-					'method'    => $pWPRemoteArgs['method'],
-					'path'      => $pUrl,
-					'body'      => $has_body ? $pWPRemoteArgs['body'] : null,
-					'result'    => ! $is_http_error ?
-						$response['body'] :
-						json_encode( $response->get_error_messages() ),
-					'code'      => ! $is_http_error ? $response['response']['code'] : null,
-					'backtrace' => debug_backtrace(),
-				);
-			}
-
-			return $response;
-		}
-
-		/**
-		 * @return array
-		 */
-		static function GetLogger() {
-			return self::$_logger;
-		}
-
-		/**
-		 * @param string        $pCanonizedPath
-		 * @param string        $pMethod
-		 * @param array         $pParams
-		 * @param null|array    $pWPRemoteArgs
-		 * @param bool          $pIsSandbox
-		 * @param null|callable $pBeforeExecutionFunction
-		 *
-		 * @return object[]|object|null
-		 *
-		 * @throws \Freemius_Exception
-		 */
-		private static function MakeStaticRequest(
-			$pCanonizedPath,
-			$pMethod = 'GET',
-			$pParams = array(),
-			$pWPRemoteArgs = null,
-			$pIsSandbox = false,
-			$pBeforeExecutionFunction = null
-		) {
-			// Connectivity errors simulation.
-			if ( FS_SDK__SIMULATE_NO_API_CONNECTIVITY_CLOUDFLARE ) {
-				self::ThrowCloudFlareDDoSException();
-			} else if ( FS_SDK__SIMULATE_NO_API_CONNECTIVITY_SQUID_ACL ) {
-				self::ThrowSquidAclException();
-			}
-
-			if ( empty( $pWPRemoteArgs ) ) {
-				$user_agent = 'Freemius/WordPress-SDK/' . Freemius_Api_Base::VERSION . '; ' .
-				              home_url();
-
-				$pWPRemoteArgs = array(
-					'method'           => strtoupper( $pMethod ),
-					'connect_timeout'  => 10,
-					'timeout'          => 60,
-					'follow_redirects' => true,
-					'redirection'      => 5,
-					'user-agent'       => $user_agent,
-					'blocking'         => true,
-				);
-			}
-
-			if ( ! isset( $pWPRemoteArgs['headers'] ) ||
-			     ! is_array( $pWPRemoteArgs['headers'] )
-			) {
-				$pWPRemoteArgs['headers'] = array();
-			}
-
-			if ( in_array( $pMethod, array( 'POST', 'PUT' ) ) ) {
+        /**
+         * @author Vova Feldman
+         *
+         * @param string $pUrl
+         * @param array  $pWPRemoteArgs
+         *
+         * @return mixed
+         */
+        private static function ExecuteRequest($pUrl, &$pWPRemoteArgs)
+        {
+            $start = microtime(true);
+
+            $response = wp_remote_request($pUrl, $pWPRemoteArgs);
+
+            if (FS_API__LOGGER_ON) {
+                $end = microtime(true);
+
+                $has_body      = (isset($pWPRemoteArgs['body']) && ! empty($pWPRemoteArgs['body']));
+                $is_http_error = is_wp_error($response);
+
+                self::$_logger[] = array(
+                    'id'        => count(self::$_logger),
+                    'start'     => $start,
+                    'end'       => $end,
+                    'total'     => ($end - $start),
+                    'method'    => $pWPRemoteArgs['method'],
+                    'path'      => $pUrl,
+                    'body'      => $has_body ? $pWPRemoteArgs['body'] : null,
+                    'result'    => ! $is_http_error ?
+                        $response['body'] :
+                        json_encode($response->get_error_messages()),
+                    'code'      => ! $is_http_error ? $response['response']['code'] : null,
+                    'backtrace' => debug_backtrace(),
+                );
+            }
+
+            return $response;
+        }
+
+        /**
+         * @return array
+         */
+        public static function GetLogger()
+        {
+            return self::$_logger;
+        }
+
+        /**
+         * @param string        $pCanonizedPath
+         * @param string        $pMethod
+         * @param array         $pParams
+         * @param null|array    $pWPRemoteArgs
+         * @param bool          $pIsSandbox
+         * @param null|callable $pBeforeExecutionFunction
+         *
+         * @return object[]|object|null
+         *
+         * @throws \Freemius_Exception
+         */
+        private static function MakeStaticRequest(
+            $pCanonizedPath,
+            $pMethod = 'GET',
+            $pParams = array(),
+            $pWPRemoteArgs = null,
+            $pIsSandbox = false,
+            $pBeforeExecutionFunction = null
+        ) {
+            // Connectivity errors simulation.
+            if (FS_SDK__SIMULATE_NO_API_CONNECTIVITY_CLOUDFLARE) {
+                self::ThrowCloudFlareDDoSException();
+            } elseif (FS_SDK__SIMULATE_NO_API_CONNECTIVITY_SQUID_ACL) {
+                self::ThrowSquidAclException();
+            }
+
+            if (empty($pWPRemoteArgs)) {
+                $user_agent = 'Freemius/WordPress-SDK/' . Freemius_Api_Base::VERSION . '; ' .
+                              home_url();
+
+                $pWPRemoteArgs = array(
+                    'method'           => strtoupper($pMethod),
+                    'connect_timeout'  => 10,
+                    'timeout'          => 60,
+                    'follow_redirects' => true,
+                    'redirection'      => 5,
+                    'user-agent'       => $user_agent,
+                    'blocking'         => true,
+                );
+            }
+
+            if (! isset($pWPRemoteArgs['headers']) ||
+                 ! is_array($pWPRemoteArgs['headers'])
+            ) {
+                $pWPRemoteArgs['headers'] = array();
+            }
+
+            if (in_array($pMethod, array( 'POST', 'PUT' ))) {
                 $pWPRemoteArgs['headers']['Content-type'] = 'application/json';
 
-                if ( is_array( $pParams ) && 0 < count( $pParams ) ) {
-                    $pWPRemoteArgs['body'] = json_encode( $pParams );
+                if (is_array($pParams) && 0 < count($pParams)) {
+                    $pWPRemoteArgs['body'] = json_encode($pParams);
                 }
-			}
+            }
 
-			$request_url = self::GetUrl( $pCanonizedPath, $pIsSandbox );
+            $request_url = self::GetUrl($pCanonizedPath, $pIsSandbox);
 
-			$resource = explode( '?', $pCanonizedPath );
+            $resource = explode('?', $pCanonizedPath);
 
-            if ( FS_SDK__HAS_CURL ) {
+            if (FS_SDK__HAS_CURL) {
                 // Disable the 'Expect: 100-continue' behaviour. This causes cURL to wait
                 // for 2 seconds if the server does not support this header.
                 $pWPRemoteArgs['headers']['Expect'] = '';
             }
 
-			if ( 'https' === substr( strtolower( $request_url ), 0, 5 ) ) {
-				$pWPRemoteArgs['sslverify'] = FS_SDK__SSLVERIFY;
-			}
-
-			if ( false !== $pBeforeExecutionFunction &&
-			     is_callable( $pBeforeExecutionFunction )
-			) {
-				$pWPRemoteArgs = call_user_func( $pBeforeExecutionFunction, $resource[0], $pWPRemoteArgs );
-			}
-
-			$result = self::ExecuteRequest( $request_url, $pWPRemoteArgs );
-
-			if ( is_wp_error( $result ) ) {
-				/**
-				 * @var WP_Error $result
-				 */
-				if ( self::IsCurlError( $result ) ) {
-					/**
-					 * With dual stacked DNS responses, it's possible for a server to
-					 * have IPv6 enabled but not have IPv6 connectivity.  If this is
-					 * the case, cURL will try IPv4 first and if that fails, then it will
-					 * fall back to IPv6 and the error EHOSTUNREACH is returned by the
-					 * operating system.
-					 */
-					$matches = array();
-					$regex   = '/Failed to connect to ([^:].*): Network is unreachable/';
-					if ( preg_match( $regex, $result->get_error_message( 'http_request_failed' ), $matches ) ) {
-						/**
-						 * Validate IP before calling `inet_pton()` to avoid PHP un-catchable warning.
-						 * @author Vova Feldman (@svovaf)
-						 */
-						if ( filter_var( $matches[1], FILTER_VALIDATE_IP ) ) {
-							if ( strlen( inet_pton( $matches[1] ) ) === 16 ) {
-//						    error_log('Invalid IPv6 configuration on server, Please disable or get native IPv6 on your server.');
-								// Hook to an action triggered just before cURL is executed to resolve the IP version to v4.
-								add_action( 'http_api_curl', 'Freemius_Api_WordPress::CurlResolveToIPv4', 10, 1 );
-
-								// Re-run request.
-								$result = self::ExecuteRequest( $request_url, $pWPRemoteArgs );
-							}
-						}
-					}
-				}
-
-				if ( is_wp_error( $result ) ) {
-					self::ThrowWPRemoteException( $result );
-				}
-			}
-
-			$response_body = $result['body'];
-
-			if ( empty( $response_body ) ) {
-				return null;
-			}
-
-			$decoded = json_decode( $response_body );
-
-			if ( is_null( $decoded ) ) {
-				if ( preg_match( '/Please turn JavaScript on/i', $response_body ) &&
-				     preg_match( '/text\/javascript/', $response_body )
-				) {
-					self::ThrowCloudFlareDDoSException( $response_body );
-				} else if ( preg_match( '/Access control configuration prevents your request from being allowed at this time. Please contact your service provider if you feel this is incorrect./', $response_body ) &&
-				            preg_match( '/squid/', $response_body )
-				) {
-					self::ThrowSquidAclException( $response_body );
-				} else {
-					$decoded = (object) array(
-						'error' => (object) array(
-							'type'    => 'Unknown',
-							'message' => $response_body,
-							'code'    => 'unknown',
-							'http'    => 402
-						)
-					);
-				}
-			}
-
-			return $decoded;
-		}
-
-
-		/**
-		 * Makes an HTTP request. This method can be overridden by subclasses if
-		 * developers want to do fancier things or use something other than wp_remote_request()
-		 * to make the request.
-		 *
-		 * @param string     $pCanonizedPath The URL to make the request to
-		 * @param string     $pMethod        HTTP method
-		 * @param array      $pParams        The parameters to use for the POST body
-		 * @param null|array $pWPRemoteArgs  wp_remote_request options.
-		 *
-		 * @return object[]|object|null
-		 *
-		 * @throws Freemius_Exception
-		 */
-		public function MakeRequest(
-			$pCanonizedPath,
-			$pMethod = 'GET',
-			$pParams = array(),
-			$pWPRemoteArgs = null
-		) {
-			$resource = explode( '?', $pCanonizedPath );
-
-			// Only sign request if not ping.json connectivity test.
-			$sign_request = ( '/v1/ping.json' !== strtolower( substr( $resource[0], - strlen( '/v1/ping.json' ) ) ) );
-
-			return self::MakeStaticRequest(
-				$pCanonizedPath,
-				$pMethod,
-				$pParams,
-				$pWPRemoteArgs,
-				$this->_isSandbox,
-				$sign_request ? array( &$this, 'SignRequest' ) : null
-			);
-		}
-
-		/**
-		 * Sets CURLOPT_IPRESOLVE to CURL_IPRESOLVE_V4 for cURL-Handle provided as parameter
-		 *
-		 * @param resource $handle A cURL handle returned by curl_init()
-		 *
-		 * @return resource $handle A cURL handle returned by curl_init() with CURLOPT_IPRESOLVE set to
-		 *                  CURL_IPRESOLVE_V4
-		 *
-		 * @link https://gist.github.com/golderweb/3a2aaec2d56125cc004e
-		 */
-		static function CurlResolveToIPv4( $handle ) {
-			curl_setopt( $handle, CURLOPT_IPRESOLVE, CURL_IPRESOLVE_V4 );
-
-			return $handle;
-		}
-
-		#----------------------------------------------------------------------------------
-		#region Connectivity Test
-		#----------------------------------------------------------------------------------
-
-		/**
-		 * If successful connectivity to the API endpoint using ping.json endpoint.
-		 *
-		 *      - OR -
-		 *
-		 * Validate if ping result object is valid.
-		 *
-		 * @param mixed $pPong
-		 *
-		 * @return bool
-		 */
-		public static function Test( $pPong = null ) {
-			$pong = is_null( $pPong ) ?
-				self::Ping() :
-				$pPong;
-
-			return (
-				is_object( $pong ) &&
-				isset( $pong->api ) &&
-				'pong' === $pong->api
-			);
-		}
-
-		/**
-		 * Ping API to test connectivity.
-		 *
-		 * @return object
-		 */
-		public static function Ping() {
-			try {
-				$result = self::MakeStaticRequest( '/v' . FS_API__VERSION . '/ping.json' );
-			} catch ( Freemius_Exception $e ) {
-				// Map to error object.
-				$result = (object) $e->getResult();
-			} catch ( Exception $e ) {
-				// Map to error object.
-				$result = (object) array(
-					'error' => (object) array(
-						'type'    => 'Unknown',
-						'message' => $e->getMessage() . ' (' . $e->getFile() . ': ' . $e->getLine() . ')',
-						'code'    => 'unknown',
-						'http'    => 402
-					)
-				);
-			}
-
-			return $result;
-		}
-
-		#endregion
-
-		#----------------------------------------------------------------------------------
-		#region Connectivity Exceptions
-		#----------------------------------------------------------------------------------
-
-		/**
-		 * @param \WP_Error $pError
-		 *
-		 * @return bool
-		 */
-		private static function IsCurlError( WP_Error $pError ) {
-			$message = $pError->get_error_message( 'http_request_failed' );
-
-			return ( 0 === strpos( $message, 'cURL' ) );
-		}
-
-		/**
-		 * @param WP_Error $pError
-		 *
-		 * @throws Freemius_Exception
-		 */
-		private static function ThrowWPRemoteException( WP_Error $pError ) {
-			if ( self::IsCurlError( $pError ) ) {
-				$message = $pError->get_error_message( 'http_request_failed' );
-
-				#region Check if there are any missing cURL methods.
-
-				$curl_required_methods = array(
-					'curl_version',
-					'curl_exec',
-					'curl_init',
-					'curl_close',
-					'curl_setopt',
-					'curl_setopt_array',
-					'curl_error',
-				);
-
-				// Find all missing methods.
-				$missing_methods = array();
-				foreach ( $curl_required_methods as $m ) {
-					if ( ! function_exists( $m ) ) {
-						$missing_methods[] = $m;
-					}
-				}
-
-				if ( ! empty( $missing_methods ) ) {
-					throw new Freemius_Exception( array(
-						'error'           => (object) array(
-							'type'    => 'cUrlMissing',
-							'message' => $message,
-							'code'    => 'curl_missing',
-							'http'    => 402
-						),
-						'missing_methods' => $missing_methods,
-					) );
-				}
-
-				#endregion
-
-				// cURL error - "cURL error {{errno}}: {{error}}".
-				$parts = explode( ':', substr( $message, strlen( 'cURL error ' ) ), 2 );
-
-				$code    = ( 0 < count( $parts ) ) ? $parts[0] : 'http_request_failed';
-				$message = ( 1 < count( $parts ) ) ? $parts[1] : $message;
-
-				$e = new Freemius_Exception( array(
-					'error' => (object) array(
-						'code'    => $code,
-						'message' => $message,
-						'type'    => 'CurlException',
-					),
-				) );
-			} else {
-				$e = new Freemius_Exception( array(
-					'error' => (object) array(
-						'code'    => $pError->get_error_code(),
-						'message' => $pError->get_error_message(),
-						'type'    => 'WPRemoteException',
-					),
-				) );
-			}
-
-			throw $e;
-		}
-
-		/**
-		 * @param string $pResult
-		 *
-		 * @throws Freemius_Exception
-		 */
-		private static function ThrowCloudFlareDDoSException( $pResult = '' ) {
-			throw new Freemius_Exception( array(
-				'error' => (object) array(
-					'type'    => 'CloudFlareDDoSProtection',
-					'message' => $pResult,
-					'code'    => 'cloudflare_ddos_protection',
-					'http'    => 402
-				)
-			) );
-		}
-
-		/**
-		 * @param string $pResult
-		 *
-		 * @throws Freemius_Exception
-		 */
-		private static function ThrowSquidAclException( $pResult = '' ) {
-			throw new Freemius_Exception( array(
-				'error' => (object) array(
-					'type'    => 'SquidCacheBlock',
-					'message' => $pResult,
-					'code'    => 'squid_cache_block',
-					'http'    => 402
-				)
-			) );
-		}
-
-		#endregion
-	}
\ No newline at end of file
+            if ('https' === substr(strtolower($request_url), 0, 5)) {
+                $pWPRemoteArgs['sslverify'] = FS_SDK__SSLVERIFY;
+            }
+
+            if (false !== $pBeforeExecutionFunction &&
+                 is_callable($pBeforeExecutionFunction)
+            ) {
+                $pWPRemoteArgs = call_user_func($pBeforeExecutionFunction, $resource[0], $pWPRemoteArgs);
+            }
+
+            $result = self::ExecuteRequest($request_url, $pWPRemoteArgs);
+
+            if (is_wp_error($result)) {
+                /**
+                 * @var WP_Error $result
+                 */
+                if (self::IsCurlError($result)) {
+                    /**
+                     * With dual stacked DNS responses, it's possible for a server to
+                     * have IPv6 enabled but not have IPv6 connectivity.  If this is
+                     * the case, cURL will try IPv4 first and if that fails, then it will
+                     * fall back to IPv6 and the error EHOSTUNREACH is returned by the
+                     * operating system.
+                     */
+                    $matches = array();
+                    $regex   = '/Failed to connect to ([^:].*): Network is unreachable/';
+                    if (preg_match($regex, $result->get_error_message('http_request_failed'), $matches)) {
+                        /**
+                         * Validate IP before calling `inet_pton()` to avoid PHP un-catchable warning.
+                         * @author Vova Feldman (@svovaf)
+                         */
+                        if (filter_var($matches[1], FILTER_VALIDATE_IP)) {
+                            if (strlen(inet_pton($matches[1])) === 16) {
+                                //						    error_log('Invalid IPv6 configuration on server, Please disable or get native IPv6 on your server.');
+                                // Hook to an action triggered just before cURL is executed to resolve the IP version to v4.
+                                add_action('http_api_curl', 'Freemius_Api_WordPress::CurlResolveToIPv4', 10, 1);
+
+                                // Re-run request.
+                                $result = self::ExecuteRequest($request_url, $pWPRemoteArgs);
+                            }
+                        }
+                    }
+                }
+
+                if (is_wp_error($result)) {
+                    self::ThrowWPRemoteException($result);
+                }
+            }
+
+            $response_body = $result['body'];
+
+            if (empty($response_body)) {
+                return null;
+            }
+
+            $decoded = json_decode($response_body);
+
+            if (is_null($decoded)) {
+                if (preg_match('/Please turn JavaScript on/i', $response_body) &&
+                     preg_match('/text\/javascript/', $response_body)
+                ) {
+                    self::ThrowCloudFlareDDoSException($response_body);
+                } elseif (preg_match('/Access control configuration prevents your request from being allowed at this time. Please contact your service provider if you feel this is incorrect./', $response_body) &&
+                            preg_match('/squid/', $response_body)
+                ) {
+                    self::ThrowSquidAclException($response_body);
+                } else {
+                    $decoded = (object) array(
+                        'error' => (object) array(
+                            'type'    => 'Unknown',
+                            'message' => $response_body,
+                            'code'    => 'unknown',
+                            'http'    => 402
+                        )
+                    );
+                }
+            }
+
+            return $decoded;
+        }
+
+
+        /**
+         * Makes an HTTP request. This method can be overridden by subclasses if
+         * developers want to do fancier things or use something other than wp_remote_request()
+         * to make the request.
+         *
+         * @param string     $pCanonizedPath The URL to make the request to
+         * @param string     $pMethod        HTTP method
+         * @param array      $pParams        The parameters to use for the POST body
+         * @param null|array $pWPRemoteArgs  wp_remote_request options.
+         *
+         * @return object[]|object|null
+         *
+         * @throws Freemius_Exception
+         */
+        public function MakeRequest(
+            $pCanonizedPath,
+            $pMethod = 'GET',
+            $pParams = array(),
+            $pWPRemoteArgs = null
+        ) {
+            $resource = explode('?', $pCanonizedPath);
+
+            // Only sign request if not ping.json connectivity test.
+            $sign_request = ('/v1/ping.json' !== strtolower(substr($resource[0], - strlen('/v1/ping.json'))));
+
+            return self::MakeStaticRequest(
+                $pCanonizedPath,
+                $pMethod,
+                $pParams,
+                $pWPRemoteArgs,
+                $this->_isSandbox,
+                $sign_request ? array( &$this, 'SignRequest' ) : null
+            );
+        }
+
+        /**
+         * Sets CURLOPT_IPRESOLVE to CURL_IPRESOLVE_V4 for cURL-Handle provided as parameter
+         *
+         * @param resource $handle A cURL handle returned by curl_init()
+         *
+         * @return resource $handle A cURL handle returned by curl_init() with CURLOPT_IPRESOLVE set to
+         *                  CURL_IPRESOLVE_V4
+         *
+         * @link https://gist.github.com/golderweb/3a2aaec2d56125cc004e
+         */
+        public static function CurlResolveToIPv4($handle)
+        {
+            curl_setopt($handle, CURLOPT_IPRESOLVE, CURL_IPRESOLVE_V4);
+
+            return $handle;
+        }
+
+        #----------------------------------------------------------------------------------
+        #region Connectivity Test
+        #----------------------------------------------------------------------------------
+
+        /**
+         * If successful connectivity to the API endpoint using ping.json endpoint.
+         *
+         *      - OR -
+         *
+         * Validate if ping result object is valid.
+         *
+         * @param mixed $pPong
+         *
+         * @return bool
+         */
+        public static function Test($pPong = null)
+        {
+            $pong = is_null($pPong) ?
+                self::Ping() :
+                $pPong;
+
+            return (
+                is_object($pong) &&
+                isset($pong->api) &&
+                'pong' === $pong->api
+            );
+        }
+
+        /**
+         * Ping API to test connectivity.
+         *
+         * @return object
+         */
+        public static function Ping()
+        {
+            try {
+                $result = self::MakeStaticRequest('/v' . FS_API__VERSION . '/ping.json');
+            } catch (Freemius_Exception $e) {
+                // Map to error object.
+                $result = (object) $e->getResult();
+            } catch (Exception $e) {
+                // Map to error object.
+                $result = (object) array(
+                    'error' => (object) array(
+                        'type'    => 'Unknown',
+                        'message' => $e->getMessage() . ' (' . $e->getFile() . ': ' . $e->getLine() . ')',
+                        'code'    => 'unknown',
+                        'http'    => 402
+                    )
+                );
+            }
+
+            return $result;
+        }
+
+        #endregion
+
+        #----------------------------------------------------------------------------------
+        #region Connectivity Exceptions
+        #----------------------------------------------------------------------------------
+
+        /**
+         * @param \WP_Error $pError
+         *
+         * @return bool
+         */
+        private static function IsCurlError(WP_Error $pError)
+        {
+            $message = $pError->get_error_message('http_request_failed');
+
+            return (0 === strpos($message, 'cURL'));
+        }
+
+        /**
+         * @param WP_Error $pError
+         *
+         * @throws Freemius_Exception
+         */
+        private static function ThrowWPRemoteException(WP_Error $pError)
+        {
+            if (self::IsCurlError($pError)) {
+                $message = $pError->get_error_message('http_request_failed');
+
+                #region Check if there are any missing cURL methods.
+
+                $curl_required_methods = array(
+                    'curl_version',
+                    'curl_exec',
+                    'curl_init',
+                    'curl_close',
+                    'curl_setopt',
+                    'curl_setopt_array',
+                    'curl_error',
+                );
+
+                // Find all missing methods.
+                $missing_methods = array();
+                foreach ($curl_required_methods as $m) {
+                    if (! function_exists($m)) {
+                        $missing_methods[] = $m;
+                    }
+                }
+
+                if (! empty($missing_methods)) {
+                    throw new Freemius_Exception(array(
+                        'error'           => (object) array(
+                            'type'    => 'cUrlMissing',
+                            'message' => $message,
+                            'code'    => 'curl_missing',
+                            'http'    => 402
+                        ),
+                        'missing_methods' => $missing_methods,
+                    ));
+                }
+
+                #endregion
+
+                // cURL error - "cURL error {{errno}}: {{error}}".
+                $parts = explode(':', substr($message, strlen('cURL error ')), 2);
+
+                $code    = (0 < count($parts)) ? $parts[0] : 'http_request_failed';
+                $message = (1 < count($parts)) ? $parts[1] : $message;
+
+                $e = new Freemius_Exception(array(
+                    'error' => (object) array(
+                        'code'    => $code,
+                        'message' => $message,
+                        'type'    => 'CurlException',
+                    ),
+                ));
+            } else {
+                $e = new Freemius_Exception(array(
+                    'error' => (object) array(
+                        'code'    => $pError->get_error_code(),
+                        'message' => $pError->get_error_message(),
+                        'type'    => 'WPRemoteException',
+                    ),
+                ));
+            }
+
+            throw $e;
+        }
+
+        /**
+         * @param string $pResult
+         *
+         * @throws Freemius_Exception
+         */
+        private static function ThrowCloudFlareDDoSException($pResult = '')
+        {
+            throw new Freemius_Exception(array(
+                'error' => (object) array(
+                    'type'    => 'CloudFlareDDoSProtection',
+                    'message' => $pResult,
+                    'code'    => 'cloudflare_ddos_protection',
+                    'http'    => 402
+                )
+            ));
+        }
+
+        /**
+         * @param string $pResult
+         *
+         * @throws Freemius_Exception
+         */
+        private static function ThrowSquidAclException($pResult = '')
+        {
+            throw new Freemius_Exception(array(
+                'error' => (object) array(
+                    'type'    => 'SquidCacheBlock',
+                    'message' => $pResult,
+                    'code'    => 'squid_cache_block',
+                    'http'    => 402
+                )
+            ));
+        }
+
+        #endregion
+    }
diff --git a/freemius/includes/sdk/index.php b/freemius/includes/sdk/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/includes/sdk/index.php
+++ b/freemius/includes/sdk/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/includes/supplements/fs-essential-functions-1.1.7.1.php b/freemius/includes/supplements/fs-essential-functions-1.1.7.1.php
index 048db81e83b299f2346eaf20b0310a833bcd8d40..7bebe6581057bbb4585942442a645a220d613b44 100644
--- a/freemius/includes/supplements/fs-essential-functions-1.1.7.1.php
+++ b/freemius/includes/supplements/fs-essential-functions-1.1.7.1.php
@@ -1,43 +1,44 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.1.7
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.1.7
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	/**
-	 * Find the plugin main file path based on any given file inside the plugin's folder.
-	 *
-	 * @author Vova Feldman (@svovaf)
-	 * @since  1.1.7.1
-	 *
-	 * @param string $file Absolute path to a file inside a plugin's folder.
-	 *
-	 * @return string
-	 */
-	function fs_find_direct_caller_plugin_file( $file ) {
-		/**
-		 * All the code below will be executed once on activation.
-		 * If the user changes the main plugin's file name, the file_exists()
-		 * will catch it.
-		 */
-		$all_plugins = fs_get_plugins( true );
+    /**
+     * Find the plugin main file path based on any given file inside the plugin's folder.
+     *
+     * @author Vova Feldman (@svovaf)
+     * @since  1.1.7.1
+     *
+     * @param string $file Absolute path to a file inside a plugin's folder.
+     *
+     * @return string
+     */
+    function fs_find_direct_caller_plugin_file($file)
+    {
+        /**
+         * All the code below will be executed once on activation.
+         * If the user changes the main plugin's file name, the file_exists()
+         * will catch it.
+         */
+        $all_plugins = fs_get_plugins(true);
 
-		$file_real_path = fs_normalize_path( realpath( $file ) );
+        $file_real_path = fs_normalize_path(realpath($file));
 
-		// Get active plugin's main files real full names (might be symlinks).
-		foreach ( $all_plugins as $relative_path => $data ) {
-            if ( 0 === strpos( $file_real_path, fs_normalize_path( dirname( realpath( WP_PLUGIN_DIR . '/' . $relative_path ) ) . '/' ) ) ) {
-				if ( '.' !== dirname( trailingslashit( $relative_path ) ) ) {
-	                return $relative_path;
-	            }
-			}
-		}
+        // Get active plugin's main files real full names (might be symlinks).
+        foreach ($all_plugins as $relative_path => $data) {
+            if (0 === strpos($file_real_path, fs_normalize_path(dirname(realpath(WP_PLUGIN_DIR . '/' . $relative_path)) . '/'))) {
+                if ('.' !== dirname(trailingslashit($relative_path))) {
+                    return $relative_path;
+                }
+            }
+        }
 
-		return null;
-	}
+        return null;
+    }
diff --git a/freemius/includes/supplements/fs-essential-functions-2.2.1.php b/freemius/includes/supplements/fs-essential-functions-2.2.1.php
index 946a34d6c59bfd3eb4c3da1eac83ab80b7de4ad0..e1219a9cef523dfe0930270603b122bf09c0068c 100644
--- a/freemius/includes/supplements/fs-essential-functions-2.2.1.php
+++ b/freemius/includes/supplements/fs-essential-functions-2.2.1.php
@@ -6,11 +6,11 @@
      * @since       2.2.1
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
-    if ( ! function_exists( 'fs_get_plugins' ) ) {
+    if (! function_exists('fs_get_plugins')) {
         /**
          * @author Leo Fajardo (@leorw)
          * @since 2.2.1
@@ -19,27 +19,28 @@
          *
          * @return array
          */
-        function fs_get_plugins( $delete_cache = false ) {
-            $cached_plugins = wp_cache_get( 'plugins', 'plugins' );
-            if ( ! is_array( $cached_plugins ) ) {
+        function fs_get_plugins($delete_cache = false)
+        {
+            $cached_plugins = wp_cache_get('plugins', 'plugins');
+            if (! is_array($cached_plugins)) {
                 $cached_plugins = array();
             }
 
             $plugin_folder = '';
-            if ( isset( $cached_plugins[ $plugin_folder ] ) ) {
+            if (isset($cached_plugins[ $plugin_folder ])) {
                 $plugins = $cached_plugins[ $plugin_folder ];
             } else {
-                if ( ! function_exists( 'get_plugins' ) ) {
+                if (! function_exists('get_plugins')) {
                     require_once ABSPATH . 'wp-admin/includes/plugin.php';
                 }
 
                 $plugins = get_plugins();
 
-                if ( $delete_cache && is_plugin_active( 'woocommerce/woocommerce.php' ) ) {
-                    wp_cache_delete( 'plugins', 'plugins' );
+                if ($delete_cache && is_plugin_active('woocommerce/woocommerce.php')) {
+                    wp_cache_delete('plugins', 'plugins');
                 }
             }
 
             return $plugins;
         }
-    }
\ No newline at end of file
+    }
diff --git a/freemius/includes/supplements/index.php b/freemius/includes/supplements/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/includes/supplements/index.php
+++ b/freemius/includes/supplements/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/index.php b/freemius/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/index.php
+++ b/freemius/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/languages/index.php b/freemius/languages/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/languages/index.php
+++ b/freemius/languages/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/require.php b/freemius/require.php
index 72e2717d2ca959e9c9acd8ceba45554dfbcadbcd..889e568299603bf9e709f23e500f90ba669e649a 100644
--- a/freemius/require.php
+++ b/freemius/require.php
@@ -1,49 +1,49 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2016, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.1.9
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2016, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.1.9
+     */
 
-	// Configuration should be loaded first.
-	require_once dirname( __FILE__ ) . '/config.php';
-	require_once WP_FS__DIR_INCLUDES . '/fs-core-functions.php';
+    // Configuration should be loaded first.
+    require_once dirname(__FILE__) . '/config.php';
+    require_once WP_FS__DIR_INCLUDES . '/fs-core-functions.php';
 
-	// Logger must be loaded before any other.
-	require_once WP_FS__DIR_INCLUDES . '/class-fs-logger.php';
-	require_once WP_FS__DIR_INCLUDES . '/debug/debug-bar-start.php';
+    // Logger must be loaded before any other.
+    require_once WP_FS__DIR_INCLUDES . '/class-fs-logger.php';
+    require_once WP_FS__DIR_INCLUDES . '/debug/debug-bar-start.php';
 
 //		require_once WP_FS__DIR_INCLUDES . '/managers/class-fs-abstract-manager.php';
-	require_once WP_FS__DIR_INCLUDES . '/managers/class-fs-option-manager.php';
-	require_once WP_FS__DIR_INCLUDES . '/managers/class-fs-gdpr-manager.php';
-	require_once WP_FS__DIR_INCLUDES . '/managers/class-fs-cache-manager.php';
-	require_once WP_FS__DIR_INCLUDES . '/managers/class-fs-admin-notice-manager.php';
-	require_once WP_FS__DIR_INCLUDES . '/managers/class-fs-admin-menu-manager.php';
-	require_once WP_FS__DIR_INCLUDES . '/managers/class-fs-key-value-storage.php';
-	require_once WP_FS__DIR_INCLUDES . '/managers/class-fs-license-manager.php';
-	require_once WP_FS__DIR_INCLUDES . '/managers/class-fs-plan-manager.php';
-	require_once WP_FS__DIR_INCLUDES . '/managers/class-fs-plugin-manager.php';
-	require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-entity.php';
-	require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-scope-entity.php';
-	require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-user.php';
-	require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-site.php';
-	require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-plugin.php';
-	require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-affiliate.php';
-	require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-affiliate-terms.php';
-	require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-plugin-info.php';
-	require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-plugin-tag.php';
-	require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-plugin-plan.php';
-	require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-pricing.php';
-	require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-payment.php';
-	require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-plugin-license.php';
-	require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-subscription.php';
-	require_once WP_FS__DIR_INCLUDES . '/class-fs-api.php';
-	require_once WP_FS__DIR_INCLUDES . '/class-fs-plugin-updater.php';
-	require_once WP_FS__DIR_INCLUDES . '/class-fs-security.php';
+    require_once WP_FS__DIR_INCLUDES . '/managers/class-fs-option-manager.php';
+    require_once WP_FS__DIR_INCLUDES . '/managers/class-fs-gdpr-manager.php';
+    require_once WP_FS__DIR_INCLUDES . '/managers/class-fs-cache-manager.php';
+    require_once WP_FS__DIR_INCLUDES . '/managers/class-fs-admin-notice-manager.php';
+    require_once WP_FS__DIR_INCLUDES . '/managers/class-fs-admin-menu-manager.php';
+    require_once WP_FS__DIR_INCLUDES . '/managers/class-fs-key-value-storage.php';
+    require_once WP_FS__DIR_INCLUDES . '/managers/class-fs-license-manager.php';
+    require_once WP_FS__DIR_INCLUDES . '/managers/class-fs-plan-manager.php';
+    require_once WP_FS__DIR_INCLUDES . '/managers/class-fs-plugin-manager.php';
+    require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-entity.php';
+    require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-scope-entity.php';
+    require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-user.php';
+    require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-site.php';
+    require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-plugin.php';
+    require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-affiliate.php';
+    require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-affiliate-terms.php';
+    require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-plugin-info.php';
+    require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-plugin-tag.php';
+    require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-plugin-plan.php';
+    require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-pricing.php';
+    require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-payment.php';
+    require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-plugin-license.php';
+    require_once WP_FS__DIR_INCLUDES . '/entities/class-fs-subscription.php';
+    require_once WP_FS__DIR_INCLUDES . '/class-fs-api.php';
+    require_once WP_FS__DIR_INCLUDES . '/class-fs-plugin-updater.php';
+    require_once WP_FS__DIR_INCLUDES . '/class-fs-security.php';
     require_once WP_FS__DIR_INCLUDES . '/class-fs-options.php';
     require_once WP_FS__DIR_INCLUDES . '/class-fs-storage.php';
     require_once WP_FS__DIR_INCLUDES . '/class-fs-admin-notices.php';
-	require_once WP_FS__DIR_INCLUDES . '/class-freemius-abstract.php';
-	require_once WP_FS__DIR_INCLUDES . '/sdk/Exceptions/Exception.php';
-	require_once WP_FS__DIR_INCLUDES . '/class-freemius.php';
\ No newline at end of file
+    require_once WP_FS__DIR_INCLUDES . '/class-freemius-abstract.php';
+    require_once WP_FS__DIR_INCLUDES . '/sdk/Exceptions/Exception.php';
+    require_once WP_FS__DIR_INCLUDES . '/class-freemius.php';
diff --git a/freemius/start.php b/freemius/start.php
index 9cb4f4d002b1c7ab7362e98cc344dc610f858e39..4be79d90cd1fb1a21db502e29645ffeca28a78c6 100644
--- a/freemius/start.php
+++ b/freemius/start.php
@@ -1,51 +1,51 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.3
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	/**
-	 * Freemius SDK Version.
-	 *
-	 * @var string
-	 */
-	$this_sdk_version = '2.4.2';
-
-	#region SDK Selection Logic --------------------------------------------------------------------
-
-	/**
-	 * Special logic added on 1.1.6 to make sure that every Freemius powered plugin
-	 * will ALWAYS be loaded with the newest SDK from the active Freemius powered plugins.
-	 *
-	 * Since Freemius SDK is backward compatible, this will make sure that all Freemius powered
-	 * plugins will run correctly.
-	 *
-	 * @since 1.1.6
-	 */
-
-	global $fs_active_plugins;
-
-	if ( ! function_exists( 'fs_find_caller_plugin_file' ) ) {
-		// Require SDK essentials.
-		require_once dirname( __FILE__ ) . '/includes/fs-essential-functions.php';
-	}
-
-	/**
-	 * This complex logic fixes symlink issues (e.g. with Vargant). The logic assumes
-	 * that if it's a file from an SDK running in a theme, the location of the SDK
-	 * is in the main theme's folder.
-	 *
-	 * @author Vova Feldman (@svovaf)
-	 * @since  1.2.2.6
-	 */
-	$file_path    = fs_normalize_path( __FILE__ );
-	$fs_root_path = dirname( $file_path );
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.3
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    /**
+     * Freemius SDK Version.
+     *
+     * @var string
+     */
+    $this_sdk_version = '2.4.2';
+
+    #region SDK Selection Logic --------------------------------------------------------------------
+
+    /**
+     * Special logic added on 1.1.6 to make sure that every Freemius powered plugin
+     * will ALWAYS be loaded with the newest SDK from the active Freemius powered plugins.
+     *
+     * Since Freemius SDK is backward compatible, this will make sure that all Freemius powered
+     * plugins will run correctly.
+     *
+     * @since 1.1.6
+     */
+
+    global $fs_active_plugins;
+
+    if (! function_exists('fs_find_caller_plugin_file')) {
+        // Require SDK essentials.
+        require_once dirname(__FILE__) . '/includes/fs-essential-functions.php';
+    }
+
+    /**
+     * This complex logic fixes symlink issues (e.g. with Vargant). The logic assumes
+     * that if it's a file from an SDK running in a theme, the location of the SDK
+     * is in the main theme's folder.
+     *
+     * @author Vova Feldman (@svovaf)
+     * @since  1.2.2.6
+     */
+    $file_path    = fs_normalize_path(__FILE__);
+    $fs_root_path = dirname($file_path);
     /**
      * Get the themes directory where the active theme is located (not passing the stylesheet will make WordPress
      * assume that the themes directory is inside `wp-content`.
@@ -53,151 +53,151 @@
      * @author Leo Fajardo (@leorw)
      * @since 2.2.3
      */
-	$themes_directory         = get_theme_root( get_stylesheet() );
-	$themes_directory_name    = basename( $themes_directory );
-	$theme_candidate_basename = basename( dirname( $fs_root_path ) ) . '/' . basename( $fs_root_path );
-
-	if ( $file_path == fs_normalize_path( realpath( trailingslashit( $themes_directory ) . $theme_candidate_basename . '/' . basename( $file_path ) ) )
-	) {
-		$this_sdk_relative_path = '../' . $themes_directory_name . '/' . $theme_candidate_basename;
-		$is_theme               = true;
-	} else {
-		$this_sdk_relative_path = plugin_basename( $fs_root_path );
-		$is_theme               = false;
-	}
-
-	if ( ! isset( $fs_active_plugins ) ) {
-		// Load all Freemius powered active plugins.
-		$fs_active_plugins = get_option( 'fs_active_plugins', new stdClass() );
-
-		if ( ! isset( $fs_active_plugins->plugins ) ) {
-			$fs_active_plugins->plugins = array();
-		}
-	}
-
-	if ( empty( $fs_active_plugins->abspath ) ) {
-		/**
-		 * Store the WP install absolute path reference to identify environment change
-		 * while replicating the storage.
-		 *
-		 * @author Vova Feldman (@svovaf)
-		 * @since  1.2.1.7
-		 */
-		$fs_active_plugins->abspath = ABSPATH;
-	} else {
-		if ( ABSPATH !== $fs_active_plugins->abspath ) {
-			/**
-			 * WordPress path has changed, cleanup the SDK references cache.
-			 * This resolves issues triggered when spinning a staging environments
-			 * while replicating the database.
-			 *
-			 * @author Vova Feldman (@svovaf)
-			 * @since  1.2.1.7
-			 */
-			$fs_active_plugins->abspath = ABSPATH;
-			$fs_active_plugins->plugins = array();
-			unset( $fs_active_plugins->newest );
-		} else {
-			/**
-			 * Make sure SDK references are still valid. This resolves
-			 * issues when users hard delete modules via FTP.
-			 *
-			 * @author Vova Feldman (@svovaf)
-			 * @since  1.2.1.7
-			 */
-			$has_changes = false;
-			foreach ( $fs_active_plugins->plugins as $sdk_path => $data ) {
-                if ( ! file_exists( ( isset( $data->type ) && 'theme' === $data->type ? $themes_directory : WP_PLUGIN_DIR ) . '/' . $sdk_path ) ) {
-					unset( $fs_active_plugins->plugins[ $sdk_path ] );
+    $themes_directory         = get_theme_root(get_stylesheet());
+    $themes_directory_name    = basename($themes_directory);
+    $theme_candidate_basename = basename(dirname($fs_root_path)) . '/' . basename($fs_root_path);
+
+    if ($file_path == fs_normalize_path(realpath(trailingslashit($themes_directory) . $theme_candidate_basename . '/' . basename($file_path)))
+    ) {
+        $this_sdk_relative_path = '../' . $themes_directory_name . '/' . $theme_candidate_basename;
+        $is_theme               = true;
+    } else {
+        $this_sdk_relative_path = plugin_basename($fs_root_path);
+        $is_theme               = false;
+    }
+
+    if (! isset($fs_active_plugins)) {
+        // Load all Freemius powered active plugins.
+        $fs_active_plugins = get_option('fs_active_plugins', new stdClass());
+
+        if (! isset($fs_active_plugins->plugins)) {
+            $fs_active_plugins->plugins = array();
+        }
+    }
+
+    if (empty($fs_active_plugins->abspath)) {
+        /**
+         * Store the WP install absolute path reference to identify environment change
+         * while replicating the storage.
+         *
+         * @author Vova Feldman (@svovaf)
+         * @since  1.2.1.7
+         */
+        $fs_active_plugins->abspath = ABSPATH;
+    } else {
+        if (ABSPATH !== $fs_active_plugins->abspath) {
+            /**
+             * WordPress path has changed, cleanup the SDK references cache.
+             * This resolves issues triggered when spinning a staging environments
+             * while replicating the database.
+             *
+             * @author Vova Feldman (@svovaf)
+             * @since  1.2.1.7
+             */
+            $fs_active_plugins->abspath = ABSPATH;
+            $fs_active_plugins->plugins = array();
+            unset($fs_active_plugins->newest);
+        } else {
+            /**
+             * Make sure SDK references are still valid. This resolves
+             * issues when users hard delete modules via FTP.
+             *
+             * @author Vova Feldman (@svovaf)
+             * @since  1.2.1.7
+             */
+            $has_changes = false;
+            foreach ($fs_active_plugins->plugins as $sdk_path => $data) {
+                if (! file_exists((isset($data->type) && 'theme' === $data->type ? $themes_directory : WP_PLUGIN_DIR) . '/' . $sdk_path)) {
+                    unset($fs_active_plugins->plugins[ $sdk_path ]);
 
                     if (
-                        ! empty( $fs_active_plugins->newest ) &&
+                        ! empty($fs_active_plugins->newest) &&
                         $sdk_path === $fs_active_plugins->newest->sdk_path
                     ) {
-                        unset( $fs_active_plugins->newest );
+                        unset($fs_active_plugins->newest);
                     }
 
-					$has_changes = true;
-				}
-			}
-
-			if ( $has_changes ) {
-				if ( empty( $fs_active_plugins->plugins ) ) {
-					unset( $fs_active_plugins->newest );
-				}
-
-				update_option( 'fs_active_plugins', $fs_active_plugins );
-			}
-		}
-	}
-
-	if ( ! function_exists( 'fs_find_direct_caller_plugin_file' ) ) {
-		require_once dirname( __FILE__ ) . '/includes/supplements/fs-essential-functions-1.1.7.1.php';
-	}
-
-	if ( ! function_exists( 'fs_get_plugins' ) ) {
-		require_once dirname( __FILE__ ) . '/includes/supplements/fs-essential-functions-2.2.1.php';
-	}
-
-	// Update current SDK info based on the SDK path.
-	if ( ! isset( $fs_active_plugins->plugins[ $this_sdk_relative_path ] ) ||
-	     $this_sdk_version != $fs_active_plugins->plugins[ $this_sdk_relative_path ]->version
-	) {
-		if ( $is_theme ) {
-			$plugin_path = basename( dirname( $this_sdk_relative_path ) );
-		} else {
-			$plugin_path = plugin_basename( fs_find_direct_caller_plugin_file( $file_path ) );
-		}
-
-		$fs_active_plugins->plugins[ $this_sdk_relative_path ] = (object) array(
-			'version'     => $this_sdk_version,
-			'type'        => ( $is_theme ? 'theme' : 'plugin' ),
-			'timestamp'   => time(),
-			'plugin_path' => $plugin_path,
-		);
-	}
-
-	$is_current_sdk_newest = isset( $fs_active_plugins->newest ) && ( $this_sdk_relative_path == $fs_active_plugins->newest->sdk_path );
-
-	if ( ! isset( $fs_active_plugins->newest ) ) {
-		/**
-		 * This will be executed only once, for the first time a Freemius powered plugin is activated.
-		 */
-		fs_update_sdk_newest_version( $this_sdk_relative_path, $fs_active_plugins->plugins[ $this_sdk_relative_path ]->plugin_path );
-
-		$is_current_sdk_newest = true;
-	} else if ( version_compare( $fs_active_plugins->newest->version, $this_sdk_version, '<' ) ) {
-		/**
-		 * Current SDK is newer than the newest stored SDK.
-		 */
-		fs_update_sdk_newest_version( $this_sdk_relative_path, $fs_active_plugins->plugins[ $this_sdk_relative_path ]->plugin_path );
-
-		if ( class_exists( 'Freemius' ) ) {
-			// Older SDK version was already loaded.
-
-			if ( ! $fs_active_plugins->newest->in_activation ) {
-				// Re-order plugins to load this plugin first.
-				fs_newest_sdk_plugin_first();
-			}
-
-			// Refresh page.
-			fs_redirect( $_SERVER['REQUEST_URI'] );
-		}
-	} else {
-		if ( ! function_exists( 'get_plugins' ) ) {
-			require_once ABSPATH . 'wp-admin/includes/plugin.php';
-		}
-
-		$fs_newest_sdk = $fs_active_plugins->newest;
-		$fs_newest_sdk = $fs_active_plugins->plugins[ $fs_newest_sdk->sdk_path ];
-
-		$is_newest_sdk_type_theme = ( isset( $fs_newest_sdk->type ) && 'theme' === $fs_newest_sdk->type );
-
-		if ( ! $is_newest_sdk_type_theme ) {
-			$is_newest_sdk_plugin_active = is_plugin_active( $fs_newest_sdk->plugin_path );
-		} else {
-			$current_theme               = wp_get_theme();
-			$is_newest_sdk_plugin_active = ( $current_theme->stylesheet === $fs_newest_sdk->plugin_path );
+                    $has_changes = true;
+                }
+            }
+
+            if ($has_changes) {
+                if (empty($fs_active_plugins->plugins)) {
+                    unset($fs_active_plugins->newest);
+                }
+
+                update_option('fs_active_plugins', $fs_active_plugins);
+            }
+        }
+    }
+
+    if (! function_exists('fs_find_direct_caller_plugin_file')) {
+        require_once dirname(__FILE__) . '/includes/supplements/fs-essential-functions-1.1.7.1.php';
+    }
+
+    if (! function_exists('fs_get_plugins')) {
+        require_once dirname(__FILE__) . '/includes/supplements/fs-essential-functions-2.2.1.php';
+    }
+
+    // Update current SDK info based on the SDK path.
+    if (! isset($fs_active_plugins->plugins[ $this_sdk_relative_path ]) ||
+         $this_sdk_version != $fs_active_plugins->plugins[ $this_sdk_relative_path ]->version
+    ) {
+        if ($is_theme) {
+            $plugin_path = basename(dirname($this_sdk_relative_path));
+        } else {
+            $plugin_path = plugin_basename(fs_find_direct_caller_plugin_file($file_path));
+        }
+
+        $fs_active_plugins->plugins[ $this_sdk_relative_path ] = (object) array(
+            'version'     => $this_sdk_version,
+            'type'        => ($is_theme ? 'theme' : 'plugin'),
+            'timestamp'   => time(),
+            'plugin_path' => $plugin_path,
+        );
+    }
+
+    $is_current_sdk_newest = isset($fs_active_plugins->newest) && ($this_sdk_relative_path == $fs_active_plugins->newest->sdk_path);
+
+    if (! isset($fs_active_plugins->newest)) {
+        /**
+         * This will be executed only once, for the first time a Freemius powered plugin is activated.
+         */
+        fs_update_sdk_newest_version($this_sdk_relative_path, $fs_active_plugins->plugins[ $this_sdk_relative_path ]->plugin_path);
+
+        $is_current_sdk_newest = true;
+    } elseif (version_compare($fs_active_plugins->newest->version, $this_sdk_version, '<')) {
+        /**
+         * Current SDK is newer than the newest stored SDK.
+         */
+        fs_update_sdk_newest_version($this_sdk_relative_path, $fs_active_plugins->plugins[ $this_sdk_relative_path ]->plugin_path);
+
+        if (class_exists('Freemius')) {
+            // Older SDK version was already loaded.
+
+            if (! $fs_active_plugins->newest->in_activation) {
+                // Re-order plugins to load this plugin first.
+                fs_newest_sdk_plugin_first();
+            }
+
+            // Refresh page.
+            fs_redirect($_SERVER['REQUEST_URI']);
+        }
+    } else {
+        if (! function_exists('get_plugins')) {
+            require_once ABSPATH . 'wp-admin/includes/plugin.php';
+        }
+
+        $fs_newest_sdk = $fs_active_plugins->newest;
+        $fs_newest_sdk = $fs_active_plugins->plugins[ $fs_newest_sdk->sdk_path ];
+
+        $is_newest_sdk_type_theme = (isset($fs_newest_sdk->type) && 'theme' === $fs_newest_sdk->type);
+
+        if (! $is_newest_sdk_type_theme) {
+            $is_newest_sdk_plugin_active = is_plugin_active($fs_newest_sdk->plugin_path);
+        } else {
+            $current_theme               = wp_get_theme();
+            $is_newest_sdk_plugin_active = ($current_theme->stylesheet === $fs_newest_sdk->plugin_path);
 
             $current_theme_parent = $current_theme->parent();
 
@@ -205,245 +205,246 @@
              * If the current theme is a child of the theme that has the newest SDK, this prevents a redirects loop
              * from happening by keeping the SDK info stored in the `fs_active_plugins` option.
              */
-            if ( ! $is_newest_sdk_plugin_active && $current_theme_parent instanceof WP_Theme ) {
-                $is_newest_sdk_plugin_active = ( $fs_newest_sdk->plugin_path === $current_theme_parent->stylesheet );
+            if (! $is_newest_sdk_plugin_active && $current_theme_parent instanceof WP_Theme) {
+                $is_newest_sdk_plugin_active = ($fs_newest_sdk->plugin_path === $current_theme_parent->stylesheet);
             }
-		}
-
-		if ( $is_current_sdk_newest &&
-		     ! $is_newest_sdk_plugin_active &&
-		     ! $fs_active_plugins->newest->in_activation
-		) {
-			// If current SDK is the newest and the plugin is NOT active, it means
-			// that the current plugin in activation mode.
-			$fs_active_plugins->newest->in_activation = true;
-			update_option( 'fs_active_plugins', $fs_active_plugins );
-		}
-
-		if ( ! $is_theme ) {
-			$sdk_starter_path = fs_normalize_path( WP_PLUGIN_DIR . '/' . $this_sdk_relative_path . '/start.php' );
-		} else {
-			$sdk_starter_path = fs_normalize_path(
+        }
+
+        if ($is_current_sdk_newest &&
+             ! $is_newest_sdk_plugin_active &&
+             ! $fs_active_plugins->newest->in_activation
+        ) {
+            // If current SDK is the newest and the plugin is NOT active, it means
+            // that the current plugin in activation mode.
+            $fs_active_plugins->newest->in_activation = true;
+            update_option('fs_active_plugins', $fs_active_plugins);
+        }
+
+        if (! $is_theme) {
+            $sdk_starter_path = fs_normalize_path(WP_PLUGIN_DIR . '/' . $this_sdk_relative_path . '/start.php');
+        } else {
+            $sdk_starter_path = fs_normalize_path(
                 $themes_directory
-				. '/'
-				. str_replace( "../{$themes_directory_name}/", '', $this_sdk_relative_path )
-				. '/start.php' );
-		}
-
-		$is_newest_sdk_path_valid = ( $is_newest_sdk_plugin_active || $fs_active_plugins->newest->in_activation ) && file_exists( $sdk_starter_path );
-
-		if ( ! $is_newest_sdk_path_valid && ! $is_current_sdk_newest ) {
-			// Plugin with newest SDK is no longer active, or SDK was moved to a different location.
-			unset( $fs_active_plugins->plugins[ $fs_active_plugins->newest->sdk_path ] );
-		}
-
-		if ( ! ( $is_newest_sdk_plugin_active || $fs_active_plugins->newest->in_activation ) ||
-		     ! $is_newest_sdk_path_valid ||
-		     // Is newest SDK downgraded.
-		     ( $this_sdk_relative_path == $fs_active_plugins->newest->sdk_path &&
-		       version_compare( $fs_active_plugins->newest->version, $this_sdk_version, '>' ) )
-		) {
-			/**
-			 * Plugin with newest SDK is no longer active.
-			 *    OR
-			 * The newest SDK was in the current plugin. BUT, seems like the version of
-			 * the SDK was downgraded to a lower SDK.
-			 */
-			// Find the active plugin with the newest SDK version and update the newest reference.
-			fs_fallback_to_newest_active_sdk();
-		} else {
-			if ( $is_newest_sdk_plugin_active &&
-			     $this_sdk_relative_path == $fs_active_plugins->newest->sdk_path &&
-			     ( $fs_active_plugins->newest->in_activation ||
-			       ( class_exists( 'Freemius' ) && ( ! defined( 'WP_FS__SDK_VERSION' ) || version_compare( WP_FS__SDK_VERSION, $this_sdk_version, '<' ) ) )
-			     )
-
-			) {
-				if ( $fs_active_plugins->newest->in_activation && ! $is_newest_sdk_type_theme ) {
-					// Plugin no more in activation.
-					$fs_active_plugins->newest->in_activation = false;
-					update_option( 'fs_active_plugins', $fs_active_plugins );
-				}
-
-				// Reorder plugins to load plugin with newest SDK first.
-				if ( fs_newest_sdk_plugin_first() ) {
-					// Refresh page after re-order to make sure activated plugin loads newest SDK.
-					if ( class_exists( 'Freemius' ) ) {
-						fs_redirect( $_SERVER['REQUEST_URI'] );
-					}
-				}
-			}
-		}
-	}
-
-	if ( class_exists( 'Freemius' ) ) {
-		// SDK was already loaded.
-		return;
-	}
-
-	if ( version_compare( $this_sdk_version, $fs_active_plugins->newest->version, '<' ) ) {
-		$newest_sdk = $fs_active_plugins->plugins[ $fs_active_plugins->newest->sdk_path ];
-
-		$plugins_or_theme_dir_path = ( ! isset( $newest_sdk->type ) || 'theme' !== $newest_sdk->type ) ?
-			WP_PLUGIN_DIR :
+                . '/'
+                . str_replace("../{$themes_directory_name}/", '', $this_sdk_relative_path)
+                . '/start.php'
+            );
+        }
+
+        $is_newest_sdk_path_valid = ($is_newest_sdk_plugin_active || $fs_active_plugins->newest->in_activation) && file_exists($sdk_starter_path);
+
+        if (! $is_newest_sdk_path_valid && ! $is_current_sdk_newest) {
+            // Plugin with newest SDK is no longer active, or SDK was moved to a different location.
+            unset($fs_active_plugins->plugins[ $fs_active_plugins->newest->sdk_path ]);
+        }
+
+        if (! ($is_newest_sdk_plugin_active || $fs_active_plugins->newest->in_activation) ||
+             ! $is_newest_sdk_path_valid ||
+             // Is newest SDK downgraded.
+             ($this_sdk_relative_path == $fs_active_plugins->newest->sdk_path &&
+               version_compare($fs_active_plugins->newest->version, $this_sdk_version, '>'))
+        ) {
+            /**
+             * Plugin with newest SDK is no longer active.
+             *    OR
+             * The newest SDK was in the current plugin. BUT, seems like the version of
+             * the SDK was downgraded to a lower SDK.
+             */
+            // Find the active plugin with the newest SDK version and update the newest reference.
+            fs_fallback_to_newest_active_sdk();
+        } else {
+            if ($is_newest_sdk_plugin_active &&
+                 $this_sdk_relative_path == $fs_active_plugins->newest->sdk_path &&
+                 (
+                     $fs_active_plugins->newest->in_activation ||
+                   (class_exists('Freemius') && (! defined('WP_FS__SDK_VERSION') || version_compare(WP_FS__SDK_VERSION, $this_sdk_version, '<')))
+                 )
+
+            ) {
+                if ($fs_active_plugins->newest->in_activation && ! $is_newest_sdk_type_theme) {
+                    // Plugin no more in activation.
+                    $fs_active_plugins->newest->in_activation = false;
+                    update_option('fs_active_plugins', $fs_active_plugins);
+                }
+
+                // Reorder plugins to load plugin with newest SDK first.
+                if (fs_newest_sdk_plugin_first()) {
+                    // Refresh page after re-order to make sure activated plugin loads newest SDK.
+                    if (class_exists('Freemius')) {
+                        fs_redirect($_SERVER['REQUEST_URI']);
+                    }
+                }
+            }
+        }
+    }
+
+    if (class_exists('Freemius')) {
+        // SDK was already loaded.
+        return;
+    }
+
+    if (version_compare($this_sdk_version, $fs_active_plugins->newest->version, '<')) {
+        $newest_sdk = $fs_active_plugins->plugins[ $fs_active_plugins->newest->sdk_path ];
+
+        $plugins_or_theme_dir_path = (! isset($newest_sdk->type) || 'theme' !== $newest_sdk->type) ?
+            WP_PLUGIN_DIR :
             $themes_directory;
 
-		$newest_sdk_starter = fs_normalize_path(
-			$plugins_or_theme_dir_path
-			. '/'
-			. str_replace( "../{$themes_directory_name}/", '', $fs_active_plugins->newest->sdk_path )
-			. '/start.php' );
-
-		if ( file_exists( $newest_sdk_starter ) ) {
-			// Reorder plugins to load plugin with newest SDK first.
-			fs_newest_sdk_plugin_first();
-
-			// There's a newer SDK version, load it instead of the current one!
-			require_once $newest_sdk_starter;
-
-			return;
-		}
-	}
-
-	#endregion SDK Selection Logic --------------------------------------------------------------------
-
-	#region Hooks & Filters Collection --------------------------------------------------------------------
-
-	/**
-	 * Freemius hooks (actions & filters) tags structure:
-	 *
-	 *      fs_{filter/action_name}_{plugin_slug}
-	 *
-	 * --------------------------------------------------------
-	 *
-	 * Usage with WordPress' add_action() / add_filter():
-	 *
-	 *      add_action('fs_{filter/action_name}_{plugin_slug}', $callable);
-	 *
-	 * --------------------------------------------------------
-	 *
-	 * Usage with Freemius' instance add_action() / add_filter():
-	 *
-	 *      // No need to add 'fs_' prefix nor '_{plugin_slug}' suffix.
-	 *      my_freemius()->add_action('{action_name}', $callable);
-	 *
-	 * --------------------------------------------------------
-	 *
-	 * Freemius filters collection:
-	 *
-	 *      fs_connect_url_{plugin_slug}
-	 *      fs_trial_promotion_message_{plugin_slug}
-	 *      fs_is_long_term_user_{plugin_slug}
-	 *      fs_uninstall_reasons_{plugin_slug}
-	 *      fs_is_plugin_update_{plugin_slug}
-	 *      fs_api_domains_{plugin_slug}
-	 *      fs_email_template_sections_{plugin_slug}
-	 *      fs_support_forum_submenu_{plugin_slug}
-	 *      fs_support_forum_url_{plugin_slug}
-	 *      fs_connect_message_{plugin_slug}
-	 *      fs_connect_message_on_update_{plugin_slug}
-	 *      fs_uninstall_confirmation_message_{plugin_slug}
-	 *      fs_pending_activation_message_{plugin_slug}
-	 *      fs_is_submenu_visible_{plugin_slug}
-	 *      fs_plugin_icon_{plugin_slug}
-	 *      fs_show_trial_{plugin_slug}
-	 *
-	 * --------------------------------------------------------
-	 *
-	 * Freemius actions collection:
-	 *
-	 *      fs_after_license_loaded_{plugin_slug}
-	 *      fs_after_license_change_{plugin_slug}
-	 *      fs_after_plans_sync_{plugin_slug}
-	 *
-	 *      fs_after_account_details_{plugin_slug}
-	 *      fs_after_account_user_sync_{plugin_slug}
-	 *      fs_after_account_plan_sync_{plugin_slug}
-	 *      fs_before_account_load_{plugin_slug}
-	 *      fs_after_account_connection_{plugin_slug}
-	 *      fs_account_property_edit_{plugin_slug}
-	 *      fs_account_email_verified_{plugin_slug}
-	 *      fs_account_page_load_before_departure_{plugin_slug}
-	 *      fs_before_account_delete_{plugin_slug}
-	 *      fs_after_account_delete_{plugin_slug}
-	 *
-	 *      fs_sdk_version_update_{plugin_slug}
-	 *      fs_plugin_version_update_{plugin_slug}
-	 *
-	 *      fs_initiated_{plugin_slug}
-	 *      fs_after_init_plugin_registered_{plugin_slug}
-	 *      fs_after_init_plugin_anonymous_{plugin_slug}
-	 *      fs_after_init_plugin_pending_activations_{plugin_slug}
-	 *      fs_after_init_addon_registered_{plugin_slug}
-	 *      fs_after_init_addon_anonymous_{plugin_slug}
-	 *      fs_after_init_addon_pending_activations_{plugin_slug}
-	 *
-	 *      fs_after_premium_version_activation_{plugin_slug}
-	 *      fs_after_free_version_reactivation_{plugin_slug}
-	 *
-	 *      fs_after_uninstall_{plugin_slug}
-	 *      fs_before_admin_menu_init_{plugin_slug}
-	 */
-
-	#endregion Hooks & Filters Collection --------------------------------------------------------------------
-
-	if ( ! class_exists( 'Freemius' ) ) {
-
-		if ( ! defined( 'WP_FS__SDK_VERSION' ) ) {
-			define( 'WP_FS__SDK_VERSION', $this_sdk_version );
-		}
-
-		$plugins_or_theme_dir_path = fs_normalize_path( trailingslashit( $is_theme ?
+        $newest_sdk_starter = fs_normalize_path(
+            $plugins_or_theme_dir_path
+            . '/'
+            . str_replace("../{$themes_directory_name}/", '', $fs_active_plugins->newest->sdk_path)
+            . '/start.php'
+        );
+
+        if (file_exists($newest_sdk_starter)) {
+            // Reorder plugins to load plugin with newest SDK first.
+            fs_newest_sdk_plugin_first();
+
+            // There's a newer SDK version, load it instead of the current one!
+            require_once $newest_sdk_starter;
+
+            return;
+        }
+    }
+
+    #endregion SDK Selection Logic --------------------------------------------------------------------
+
+    #region Hooks & Filters Collection --------------------------------------------------------------------
+
+    /**
+     * Freemius hooks (actions & filters) tags structure:
+     *
+     *      fs_{filter/action_name}_{plugin_slug}
+     *
+     * --------------------------------------------------------
+     *
+     * Usage with WordPress' add_action() / add_filter():
+     *
+     *      add_action('fs_{filter/action_name}_{plugin_slug}', $callable);
+     *
+     * --------------------------------------------------------
+     *
+     * Usage with Freemius' instance add_action() / add_filter():
+     *
+     *      // No need to add 'fs_' prefix nor '_{plugin_slug}' suffix.
+     *      my_freemius()->add_action('{action_name}', $callable);
+     *
+     * --------------------------------------------------------
+     *
+     * Freemius filters collection:
+     *
+     *      fs_connect_url_{plugin_slug}
+     *      fs_trial_promotion_message_{plugin_slug}
+     *      fs_is_long_term_user_{plugin_slug}
+     *      fs_uninstall_reasons_{plugin_slug}
+     *      fs_is_plugin_update_{plugin_slug}
+     *      fs_api_domains_{plugin_slug}
+     *      fs_email_template_sections_{plugin_slug}
+     *      fs_support_forum_submenu_{plugin_slug}
+     *      fs_support_forum_url_{plugin_slug}
+     *      fs_connect_message_{plugin_slug}
+     *      fs_connect_message_on_update_{plugin_slug}
+     *      fs_uninstall_confirmation_message_{plugin_slug}
+     *      fs_pending_activation_message_{plugin_slug}
+     *      fs_is_submenu_visible_{plugin_slug}
+     *      fs_plugin_icon_{plugin_slug}
+     *      fs_show_trial_{plugin_slug}
+     *
+     * --------------------------------------------------------
+     *
+     * Freemius actions collection:
+     *
+     *      fs_after_license_loaded_{plugin_slug}
+     *      fs_after_license_change_{plugin_slug}
+     *      fs_after_plans_sync_{plugin_slug}
+     *
+     *      fs_after_account_details_{plugin_slug}
+     *      fs_after_account_user_sync_{plugin_slug}
+     *      fs_after_account_plan_sync_{plugin_slug}
+     *      fs_before_account_load_{plugin_slug}
+     *      fs_after_account_connection_{plugin_slug}
+     *      fs_account_property_edit_{plugin_slug}
+     *      fs_account_email_verified_{plugin_slug}
+     *      fs_account_page_load_before_departure_{plugin_slug}
+     *      fs_before_account_delete_{plugin_slug}
+     *      fs_after_account_delete_{plugin_slug}
+     *
+     *      fs_sdk_version_update_{plugin_slug}
+     *      fs_plugin_version_update_{plugin_slug}
+     *
+     *      fs_initiated_{plugin_slug}
+     *      fs_after_init_plugin_registered_{plugin_slug}
+     *      fs_after_init_plugin_anonymous_{plugin_slug}
+     *      fs_after_init_plugin_pending_activations_{plugin_slug}
+     *      fs_after_init_addon_registered_{plugin_slug}
+     *      fs_after_init_addon_anonymous_{plugin_slug}
+     *      fs_after_init_addon_pending_activations_{plugin_slug}
+     *
+     *      fs_after_premium_version_activation_{plugin_slug}
+     *      fs_after_free_version_reactivation_{plugin_slug}
+     *
+     *      fs_after_uninstall_{plugin_slug}
+     *      fs_before_admin_menu_init_{plugin_slug}
+     */
+
+    #endregion Hooks & Filters Collection --------------------------------------------------------------------
+
+    if (! class_exists('Freemius')) {
+        if (! defined('WP_FS__SDK_VERSION')) {
+            define('WP_FS__SDK_VERSION', $this_sdk_version);
+        }
+
+        $plugins_or_theme_dir_path = fs_normalize_path(trailingslashit($is_theme ?
             $themes_directory :
-			WP_PLUGIN_DIR ) );
-
-		if ( 0 === strpos( $file_path, $plugins_or_theme_dir_path ) ) {
-			// No symlinks
-		} else {
-			/**
-			 * This logic finds the SDK symlink and set WP_FS__DIR to use it.
-			 *
-			 * @author Vova Feldman (@svovaf)
-			 * @since  1.2.2.5
-			 */
-			$sdk_symlink = null;
-
-			// Try to load SDK's symlink from cache.
-			if ( isset( $fs_active_plugins->plugins[ $this_sdk_relative_path ] ) &&
-			     is_object( $fs_active_plugins->plugins[ $this_sdk_relative_path ] ) &&
-			     ! empty( $fs_active_plugins->plugins[ $this_sdk_relative_path ]->sdk_symlink )
-			) {
+            WP_PLUGIN_DIR));
+
+        if (0 === strpos($file_path, $plugins_or_theme_dir_path)) {
+            // No symlinks
+        } else {
+            /**
+             * This logic finds the SDK symlink and set WP_FS__DIR to use it.
+             *
+             * @author Vova Feldman (@svovaf)
+             * @since  1.2.2.5
+             */
+            $sdk_symlink = null;
+
+            // Try to load SDK's symlink from cache.
+            if (isset($fs_active_plugins->plugins[ $this_sdk_relative_path ]) &&
+                 is_object($fs_active_plugins->plugins[ $this_sdk_relative_path ]) &&
+                 ! empty($fs_active_plugins->plugins[ $this_sdk_relative_path ]->sdk_symlink)
+            ) {
                 $sdk_symlink = $fs_active_plugins->plugins[ $this_sdk_relative_path ]->sdk_symlink;
-                if ( 0 === strpos( $sdk_symlink, $plugins_or_theme_dir_path ) ) {
+                if (0 === strpos($sdk_symlink, $plugins_or_theme_dir_path)) {
                     /**
                      * Make the symlink path relative.
                      *
                      * @author Leo Fajardo (@leorw)
                      */
-                    $sdk_symlink = substr( $sdk_symlink, strlen( $plugins_or_theme_dir_path ) );
+                    $sdk_symlink = substr($sdk_symlink, strlen($plugins_or_theme_dir_path));
 
                     $fs_active_plugins->plugins[ $this_sdk_relative_path ]->sdk_symlink = $sdk_symlink;
-                    update_option( 'fs_active_plugins', $fs_active_plugins );
+                    update_option('fs_active_plugins', $fs_active_plugins);
                 }
 
-                $realpath = realpath( $plugins_or_theme_dir_path . $sdk_symlink );
-                if ( ! is_string( $realpath ) || ! file_exists( $realpath ) ) {
+                $realpath = realpath($plugins_or_theme_dir_path . $sdk_symlink);
+                if (! is_string($realpath) || ! file_exists($realpath)) {
                     $sdk_symlink = null;
                 }
             }
 
-			if ( empty( $sdk_symlink ) ) // Has symlinks, therefore, we need to configure WP_FS__DIR based on the symlink.
-			{
-				$partial_path_right = basename( $file_path );
-				$partial_path_left  = dirname( $file_path );
-				$realpath           = realpath( $plugins_or_theme_dir_path . $partial_path_right );
+            if (empty($sdk_symlink)) { // Has symlinks, therefore, we need to configure WP_FS__DIR based on the symlink.
+                $partial_path_right = basename($file_path);
+                $partial_path_left  = dirname($file_path);
+                $realpath           = realpath($plugins_or_theme_dir_path . $partial_path_right);
 
-				while ( '/' !== $partial_path_left &&
-				        ( false === $realpath || $file_path !== fs_normalize_path( $realpath ) )
-				) {
-                    $partial_path_right     = trailingslashit( basename( $partial_path_left ) ) . $partial_path_right;
+                while ('/' !== $partial_path_left &&
+                        (false === $realpath || $file_path !== fs_normalize_path($realpath))
+                ) {
+                    $partial_path_right     = trailingslashit(basename($partial_path_left)) . $partial_path_right;
                     $partial_path_left_prev = $partial_path_left;
-                    $partial_path_left      = dirname( $partial_path_left_prev );
+                    $partial_path_left      = dirname($partial_path_left_prev);
 
                     /**
                      * Avoid infinite loop if for example `$partial_path_left_prev` is `C:/`, in this case,
@@ -451,80 +452,84 @@
                      *
                      * @author Leo Fajardo (@leorw)
                      */
-                    if ( $partial_path_left === $partial_path_left_prev ) {
+                    if ($partial_path_left === $partial_path_left_prev) {
                         $partial_path_left = '';
                         break;
                     }
 
-                    $realpath = realpath( $plugins_or_theme_dir_path . $partial_path_right );
-				}
-
-                if ( ! empty( $partial_path_left ) && '/' !== $partial_path_left ) {
-                    $sdk_symlink = fs_normalize_path( dirname( $partial_path_right ) );
-
-					// Cache value.
-					if ( isset( $fs_active_plugins->plugins[ $this_sdk_relative_path ] ) &&
-					     is_object( $fs_active_plugins->plugins[ $this_sdk_relative_path ] )
-					) {
-						$fs_active_plugins->plugins[ $this_sdk_relative_path ]->sdk_symlink = $sdk_symlink;
-						update_option( 'fs_active_plugins', $fs_active_plugins );
-					}
-				}
-			}
-
-			if ( ! empty( $sdk_symlink ) ) {
-				// Set SDK dir to the symlink path.
-				define( 'WP_FS__DIR', $plugins_or_theme_dir_path . $sdk_symlink );
-			}
-		}
-
-		// Load SDK files.
-		require_once dirname( __FILE__ ) . '/require.php';
-
-		/**
-		 * Quick shortcut to get Freemius for specified plugin.
-		 * Used by various templates.
-		 *
-		 * @param number $module_id
-		 *
-		 * @return Freemius
-		 */
-		function freemius( $module_id ) {
-			return Freemius::instance( $module_id );
-		}
-
-		/**
-		 * @param string $slug
-		 * @param number $plugin_id
-		 * @param string $public_key
-		 * @param bool   $is_live    Is live or test plugin.
-		 * @param bool   $is_premium Hints freemius if running the premium plugin or not.
-		 *
-		 * @return Freemius
-		 *
-		 * @deprecated Please use fs_dynamic_init().
-		 */
-		function fs_init( $slug, $plugin_id, $public_key, $is_live = true, $is_premium = true ) {
-			$fs = Freemius::instance( $plugin_id, $slug, true );
-			$fs->init( $plugin_id, $public_key, $is_live, $is_premium );
-
-			return $fs;
-		}
-
-		/**
-		 * @param array <string,string|bool|array> $module Plugin or Theme details.
-		 *
-		 * @return Freemius
-		 * @throws Freemius_Exception
-		 */
-		function fs_dynamic_init( $module ) {
-			$fs = Freemius::instance( $module['id'], $module['slug'], true );
-			$fs->dynamic_init( $module );
-
-			return $fs;
-		}
-
-		function fs_dump_log() {
-			FS_Logger::dump();
-		}
-	}
+                    $realpath = realpath($plugins_or_theme_dir_path . $partial_path_right);
+                }
+
+                if (! empty($partial_path_left) && '/' !== $partial_path_left) {
+                    $sdk_symlink = fs_normalize_path(dirname($partial_path_right));
+
+                    // Cache value.
+                    if (isset($fs_active_plugins->plugins[ $this_sdk_relative_path ]) &&
+                         is_object($fs_active_plugins->plugins[ $this_sdk_relative_path ])
+                    ) {
+                        $fs_active_plugins->plugins[ $this_sdk_relative_path ]->sdk_symlink = $sdk_symlink;
+                        update_option('fs_active_plugins', $fs_active_plugins);
+                    }
+                }
+            }
+
+            if (! empty($sdk_symlink)) {
+                // Set SDK dir to the symlink path.
+                define('WP_FS__DIR', $plugins_or_theme_dir_path . $sdk_symlink);
+            }
+        }
+
+        // Load SDK files.
+        require_once dirname(__FILE__) . '/require.php';
+
+        /**
+         * Quick shortcut to get Freemius for specified plugin.
+         * Used by various templates.
+         *
+         * @param number $module_id
+         *
+         * @return Freemius
+         */
+        function freemius($module_id)
+        {
+            return Freemius::instance($module_id);
+        }
+
+        /**
+         * @param string $slug
+         * @param number $plugin_id
+         * @param string $public_key
+         * @param bool   $is_live    Is live or test plugin.
+         * @param bool   $is_premium Hints freemius if running the premium plugin or not.
+         *
+         * @return Freemius
+         *
+         * @deprecated Please use fs_dynamic_init().
+         */
+        function fs_init($slug, $plugin_id, $public_key, $is_live = true, $is_premium = true)
+        {
+            $fs = Freemius::instance($plugin_id, $slug, true);
+            $fs->init($plugin_id, $public_key, $is_live, $is_premium);
+
+            return $fs;
+        }
+
+        /**
+         * @param array <string,string|bool|array> $module Plugin or Theme details.
+         *
+         * @return Freemius
+         * @throws Freemius_Exception
+         */
+        function fs_dynamic_init($module)
+        {
+            $fs = Freemius::instance($module['id'], $module['slug'], true);
+            $fs->dynamic_init($module);
+
+            return $fs;
+        }
+
+        function fs_dump_log()
+        {
+            FS_Logger::dump();
+        }
+    }
diff --git a/freemius/templates/account.php b/freemius/templates/account.php
index 09213661bd84c211a3561f9b04b06caccc116707..cc77f1696cc8cc913d2ed0322f2f9b0b376c7bce 100644
--- a/freemius/templates/account.php
+++ b/freemius/templates/account.php
@@ -1,33 +1,33 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.3
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	/**
-	 * @var array $VARS
-	 * @var Freemius $fs
-	 */
-	$fs   = freemius( $VARS['id'] );
-
-	$slug = $fs->get_slug();
-
-	/**
-	 * @var FS_Plugin_Tag $update
-	 */
-	$update = $fs->has_release_on_freemius() ?
-        $fs->get_update( false, false, WP_FS__TIME_24_HOURS_IN_SEC / 24 ) :
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.3
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    /**
+     * @var array $VARS
+     * @var Freemius $fs
+     */
+    $fs   = freemius($VARS['id']);
+
+    $slug = $fs->get_slug();
+
+    /**
+     * @var FS_Plugin_Tag $update
+     */
+    $update = $fs->has_release_on_freemius() ?
+        $fs->get_update(false, false, WP_FS__TIME_24_HOURS_IN_SEC / 24) :
         null;
 
-	if ( is_object($update) ) {
-		/**
-		 * This logic is particularly required for multisite environment.
+    if (is_object($update)) {
+        /**
+         * This logic is particularly required for multisite environment.
          * If a module is site activated (not network) and not on the main site,
          * the module will NOT be executed on the network level, therefore, the
          * custom updates logic will not be executed as well, so unless we force
@@ -37,9 +37,9 @@
          * @author Vova Feldman (@svovaf)
          * @since  2.0.0
          */
-		$updater = FS_Plugin_Updater::instance( $fs );
-		$updater->set_update_data( $update );
-	}
+        $updater = FS_Plugin_Updater::instance($fs);
+        $updater->set_update_data($update);
+    }
 
     $is_paying              = $fs->is_paying();
     $user                   = $fs->get_user();
@@ -48,96 +48,96 @@
     $license                = $fs->_get_license();
     $is_data_debug_mode     = $fs->is_data_debug_mode();
     $is_whitelabeled        = $fs->is_whitelabeled();
-    $subscription           = ( is_object( $license ) ?
-                                  $fs->_get_subscription( $license->id ) :
-                                  null );
+    $subscription           = (is_object($license) ?
+                                  $fs->_get_subscription($license->id) :
+                                  null);
     $plan                   = $fs->get_plan();
-    $is_active_subscription = ( is_object( $subscription ) && $subscription->is_active() );
+    $is_active_subscription = (is_object($subscription) && $subscription->is_active());
     $is_paid_trial          = $fs->is_paid_trial();
-    $has_paid_plan          = $fs->apply_filters( 'has_paid_plan_account', $fs->has_paid_plan() );
-    $show_upgrade           = ( ! $is_whitelabeled && $has_paid_plan && ! $is_paying && ! $is_paid_trial );
+    $has_paid_plan          = $fs->apply_filters('has_paid_plan_account', $fs->has_paid_plan());
+    $show_upgrade           = (! $is_whitelabeled && $has_paid_plan && ! $is_paying && ! $is_paid_trial);
     $trial_plan             = $fs->get_trial_plan();
 
-	if ( $has_paid_plan ) {
+    if ($has_paid_plan) {
         $fs->_add_license_activation_dialog_box();
-	}
+    }
 
     $ids_of_installs_activated_with_foreign_licenses = $fs->should_handle_user_change() ?
         $fs->get_installs_ids_with_foreign_licenses() :
         array();
 
-    if ( ! empty( $ids_of_installs_activated_with_foreign_licenses ) ) {
-        $fs->_add_user_change_dialog_box( $ids_of_installs_activated_with_foreign_licenses );
+    if (! empty($ids_of_installs_activated_with_foreign_licenses)) {
+        $fs->_add_user_change_dialog_box($ids_of_installs_activated_with_foreign_licenses);
     }
 
-    if ( $fs->is_whitelabeled( true ) || $fs->is_data_debug_mode() ) {
+    if ($fs->is_whitelabeled(true) || $fs->is_data_debug_mode()) {
         $fs->_add_data_debug_mode_dialog_box();
     }
 
-	if ( fs_request_get_bool( 'auto_install' ) ) {
-		$fs->_add_auto_installation_dialog_box();
-	}
-
-	if ( fs_request_get_bool( 'activate_license' ) ) {
-		// Open the license activation dialog box on the account page.
-		add_action( 'admin_footer', array(
-			&$fs,
-			'_open_license_activation_dialog_box'
-		) );
-	}
-
-	$payments = $fs->_fetch_payments();
-
-    $show_billing = ( ! $is_whitelabeled && is_array( $payments ) && 0 < count( $payments ) );
-
-
-	$has_tabs = $fs->_add_tabs_before_content();
-
-	if ( $has_tabs ) {
-		$query_params['tabs'] = 'true';
-	}
-
-	// Aliases.
-	$download_latest_text         = fs_text_x_inline( 'Download Latest', 'as download latest version', 'download-latest', $slug );
-	$downgrading_plan_text        = fs_text_inline( 'Downgrading your plan', 'downgrading-plan', $slug );
-	$cancelling_subscription_text = fs_text_inline( 'Cancelling the subscription', 'cancelling-subscription', $slug );
-	/* translators: %1$s: Either 'Downgrading your plan' or 'Cancelling the subscription' */
-	$downgrade_x_confirm_text          = fs_text_inline( '%1$s will immediately stop all future recurring payments and your %2$s plan license will expire in %3$s.', 'downgrade-x-confirm', $slug );
-	$prices_increase_text              = fs_text_inline( 'Please note that we will not be able to grandfather outdated pricing for renewals/new subscriptions after a cancellation. If you choose to renew the subscription manually in the future, after a price increase, which typically occurs once a year, you will be charged the updated price.', 'pricing-increase-warning', $slug );
-	$cancel_trial_confirm_text         = fs_text_inline( 'Cancelling the trial will immediately block access to all premium features. Are you sure?', 'cancel-trial-confirm', $slug );
-	$after_downgrade_non_blocking_text = fs_text_inline( 'You can still enjoy all %s features but you will not have access to %s security & feature updates, nor support.', 'after-downgrade-non-blocking', $slug );
-	$after_downgrade_blocking_text     = fs_text_inline( 'Once your license expires you can still use the Free version but you will NOT have access to the %s features.', 'after-downgrade-blocking', $slug );
-	/* translators: %s: Plan title (e.g. "Professional") */
-	$activate_plan_text = fs_text_inline( 'Activate %s Plan', 'activate-x-plan', $slug );
-	$version_text       = fs_text_x_inline( 'Version', 'product version', 'version', $slug );
-	/* translators: %s: Time period (e.g. Auto renews in "2 months") */
-	$renews_in_text = fs_text_inline( 'Auto renews in %s', 'renews-in', $slug );
-	/* translators: %s: Time period (e.g. Expires in "2 months") */
-	$expires_in_text   = fs_text_inline( 'Expires in %s', 'expires-in', $slug );
-	$sync_license_text = fs_text_x_inline( 'Sync License', 'as synchronize license', 'sync-license', $slug );
-	$cancel_trial_text = fs_text_inline( 'Cancel Trial', 'cancel-trial', $slug );
-	$change_plan_text  = fs_text_inline( 'Change Plan', 'change-plan', $slug );
-	$upgrade_text      = fs_text_x_inline( 'Upgrade', 'verb', 'upgrade', $slug );
-	$addons_text       = fs_text_inline( 'Add-Ons', 'add-ons', $slug );
-	$downgrade_text    = fs_text_x_inline( 'Downgrade', 'verb', 'downgrade', $slug );
-	$trial_text        = fs_text_x_inline( 'Trial', 'trial period', 'trial', $slug );
-	$free_text         = fs_text_inline( 'Free', 'free', $slug );
-	$activate_text     = fs_text_inline( 'Activate', 'activate', $slug );
-	$plan_text         = fs_text_x_inline( 'Plan', 'as product pricing plan', 'plan', $slug );
-	$bundle_plan_text  = fs_text_inline( 'Bundle Plan', 'bundle-plan', $slug );
+    if (fs_request_get_bool('auto_install')) {
+        $fs->_add_auto_installation_dialog_box();
+    }
+
+    if (fs_request_get_bool('activate_license')) {
+        // Open the license activation dialog box on the account page.
+        add_action('admin_footer', array(
+            &$fs,
+            '_open_license_activation_dialog_box'
+        ));
+    }
+
+    $payments = $fs->_fetch_payments();
+
+    $show_billing = (! $is_whitelabeled && is_array($payments) && 0 < count($payments));
+
+
+    $has_tabs = $fs->_add_tabs_before_content();
+
+    if ($has_tabs) {
+        $query_params['tabs'] = 'true';
+    }
+
+    // Aliases.
+    $download_latest_text         = fs_text_x_inline('Download Latest', 'as download latest version', 'download-latest', $slug);
+    $downgrading_plan_text        = fs_text_inline('Downgrading your plan', 'downgrading-plan', $slug);
+    $cancelling_subscription_text = fs_text_inline('Cancelling the subscription', 'cancelling-subscription', $slug);
+    /* translators: %1$s: Either 'Downgrading your plan' or 'Cancelling the subscription' */
+    $downgrade_x_confirm_text          = fs_text_inline('%1$s will immediately stop all future recurring payments and your %2$s plan license will expire in %3$s.', 'downgrade-x-confirm', $slug);
+    $prices_increase_text              = fs_text_inline('Please note that we will not be able to grandfather outdated pricing for renewals/new subscriptions after a cancellation. If you choose to renew the subscription manually in the future, after a price increase, which typically occurs once a year, you will be charged the updated price.', 'pricing-increase-warning', $slug);
+    $cancel_trial_confirm_text         = fs_text_inline('Cancelling the trial will immediately block access to all premium features. Are you sure?', 'cancel-trial-confirm', $slug);
+    $after_downgrade_non_blocking_text = fs_text_inline('You can still enjoy all %s features but you will not have access to %s security & feature updates, nor support.', 'after-downgrade-non-blocking', $slug);
+    $after_downgrade_blocking_text     = fs_text_inline('Once your license expires you can still use the Free version but you will NOT have access to the %s features.', 'after-downgrade-blocking', $slug);
+    /* translators: %s: Plan title (e.g. "Professional") */
+    $activate_plan_text = fs_text_inline('Activate %s Plan', 'activate-x-plan', $slug);
+    $version_text       = fs_text_x_inline('Version', 'product version', 'version', $slug);
+    /* translators: %s: Time period (e.g. Auto renews in "2 months") */
+    $renews_in_text = fs_text_inline('Auto renews in %s', 'renews-in', $slug);
+    /* translators: %s: Time period (e.g. Expires in "2 months") */
+    $expires_in_text   = fs_text_inline('Expires in %s', 'expires-in', $slug);
+    $sync_license_text = fs_text_x_inline('Sync License', 'as synchronize license', 'sync-license', $slug);
+    $cancel_trial_text = fs_text_inline('Cancel Trial', 'cancel-trial', $slug);
+    $change_plan_text  = fs_text_inline('Change Plan', 'change-plan', $slug);
+    $upgrade_text      = fs_text_x_inline('Upgrade', 'verb', 'upgrade', $slug);
+    $addons_text       = fs_text_inline('Add-Ons', 'add-ons', $slug);
+    $downgrade_text    = fs_text_x_inline('Downgrade', 'verb', 'downgrade', $slug);
+    $trial_text        = fs_text_x_inline('Trial', 'trial period', 'trial', $slug);
+    $free_text         = fs_text_inline('Free', 'free', $slug);
+    $activate_text     = fs_text_inline('Activate', 'activate', $slug);
+    $plan_text         = fs_text_x_inline('Plan', 'as product pricing plan', 'plan', $slug);
+    $bundle_plan_text  = fs_text_inline('Bundle Plan', 'bundle-plan', $slug);
 
     $show_plan_row    = true;
-    $show_license_row = is_object( $license );
+    $show_license_row = is_object($license);
 
-	$site_view_params        = array();
+    $site_view_params        = array();
 
-    if ( fs_is_network_admin() ) {
+    if (fs_is_network_admin()) {
         $sites                   = Freemius::get_sites();
         $all_installs_plan_id    = null;
-        $all_installs_license_id = ( $show_license_row ? $license->id : null );
-        foreach ( $sites as $s ) {
-            $site_info   = $fs->get_site_info( $s );
-            $install     = $fs->get_install_by_blog_id( $site_info['blog_id'] );
+        $all_installs_license_id = ($show_license_row ? $license->id : null);
+        foreach ($sites as $s) {
+            $site_info   = $fs->get_site_info($s);
+            $install     = $fs->get_install_by_blog_id($site_info['blog_id']);
             $view_params = array(
                 'freemius' => $fs,
                 'license'  => $license,
@@ -147,19 +147,19 @@
 
             $site_view_params[] = $view_params;
 
-            if ( empty( $install ) ) {
+            if (empty($install)) {
                 continue;
             }
 
-            if ( $show_plan_row ) {
-                if ( is_null( $all_installs_plan_id ) ) {
+            if ($show_plan_row) {
+                if (is_null($all_installs_plan_id)) {
                     $all_installs_plan_id = $install->plan_id;
-                } else if ( $all_installs_plan_id != $install->plan_id ) {
+                } elseif ($all_installs_plan_id != $install->plan_id) {
                     $show_plan_row = false;
                 }
             }
 
-            if ( $show_license_row && $all_installs_license_id != $install->license_id ) {
+            if ($show_license_row && $all_installs_license_id != $install->license_id) {
                 $show_license_row = false;
             }
         }
@@ -167,8 +167,8 @@
 
     $has_bundle_license = false;
 
-    if ( is_object( $license ) &&
-        FS_Plugin_License::is_valid_id( $license->parent_license_id )
+    if (is_object($license) &&
+        FS_Plugin_License::is_valid_id($license->parent_license_id)
     ) {
         // Context license has a parent license, therefore, the account has a bundle license.
         $has_bundle_license = true;
@@ -179,19 +179,19 @@
 
     if (
         $show_plan_row &&
-        is_object( $license ) &&
+        is_object($license) &&
         $has_bundle_license
     ) {
-        $bundle_plan_title               = strtoupper( $license->parent_plan_title );
-        $bundle_subscription             = $fs->_get_subscription( $license->parent_license_id );
+        $bundle_plan_title               = strtoupper($license->parent_plan_title);
+        $bundle_subscription             = $fs->_get_subscription($license->parent_license_id);
         $is_bundle_first_payment_pending = $license->is_first_payment_pending();
     }
 
-    $fs_blog_id = ( is_multisite() && ! is_network_admin() ) ?
+    $fs_blog_id = (is_multisite() && ! is_network_admin()) ?
         get_current_blog_id() :
         0;
 
-    $active_plugins_directories_map = Freemius::get_active_plugins_directories_map( $fs_blog_id );
+    $active_plugins_directories_map = Freemius::get_active_plugins_directories_map($fs_blog_id);
 
     $is_premium = $fs->is_premium();
 
@@ -206,10 +206,10 @@
      *
      * @since 2.4.0
      */
-    foreach ( $installed_addons as $fs_addon ) {
+    foreach ($installed_addons as $fs_addon) {
         $installed_addons_ids[] = $fs_addon->get_id();
 
-        if ( $has_bundle_license ) {
+        if ($has_bundle_license) {
             // We already have the context bundle license details, skip.
             continue;
         }
@@ -220,34 +220,34 @@
         ) {
             $addon_license = $fs_addon->_get_license();
 
-            if ( FS_Plugin_License::is_valid_id( $addon_license->parent_license_id ) ) {
+            if (FS_Plugin_License::is_valid_id($addon_license->parent_license_id)) {
                 // Add-on's license is associated with a parent/bundle license.
                 $has_bundle_license = true;
 
-                $bundle_plan_title               = strtoupper( $addon_license->parent_plan_title );
-                $bundle_subscription             = $fs_addon->_get_subscription( $addon_license->parent_license_id );
+                $bundle_plan_title               = strtoupper($addon_license->parent_plan_title);
+                $bundle_subscription             = $fs_addon->_get_subscription($addon_license->parent_license_id);
                 $is_bundle_first_payment_pending = $addon_license->is_first_payment_pending();
             }
         }
     }
 
-    $addons_to_show = array_unique( array_merge( $installed_addons_ids, $account_addons ) );
+    $addons_to_show = array_unique(array_merge($installed_addons_ids, $account_addons));
 
-    $is_active_bundle_subscription = ( is_object( $bundle_subscription ) && $bundle_subscription->is_active() );
+    $is_active_bundle_subscription = (is_object($bundle_subscription) && $bundle_subscription->is_active());
 ?>
 	<div class="wrap fs-section">
-		<?php if ( ! $has_tabs && ! $fs->apply_filters( 'hide_account_tabs', false ) ) : ?>
+		<?php if (! $has_tabs && ! $fs->apply_filters('hide_account_tabs', false)) : ?>
 		<h2 class="nav-tab-wrapper">
 			<a href="<?php echo $fs->get_account_url() ?>"
-			   class="nav-tab nav-tab-active"><?php fs_esc_html_echo_inline( 'Account', 'account', $slug ) ?></a>
-			<?php if ( $fs->has_addons() ) : ?>
-				<a href="<?php echo $fs->_get_admin_page_url( 'addons' ) ?>"
-				   class="nav-tab"><?php echo esc_html( $addons_text ) ?></a>
+			   class="nav-tab nav-tab-active"><?php fs_esc_html_echo_inline('Account', 'account', $slug) ?></a>
+			<?php if ($fs->has_addons()) : ?>
+				<a href="<?php echo $fs->_get_admin_page_url('addons') ?>"
+				   class="nav-tab"><?php echo esc_html($addons_text) ?></a>
 			<?php endif ?>
-			<?php if ( $show_upgrade ) : ?>
-				<a href="<?php echo $fs->get_upgrade_url() ?>" class="nav-tab"><?php echo esc_html( $upgrade_text ) ?></a>
-				<?php if ( $fs->apply_filters( 'show_trial', true ) && ! $fs->is_trial_utilized() && $fs->has_trial_plan() ) : ?>
-					<a href="<?php echo $fs->get_trial_url() ?>" class="nav-tab"><?php fs_esc_html_echo_inline( 'Free Trial', 'free-trial', $slug ) ?></a>
+			<?php if ($show_upgrade) : ?>
+				<a href="<?php echo $fs->get_upgrade_url() ?>" class="nav-tab"><?php echo esc_html($upgrade_text) ?></a>
+				<?php if ($fs->apply_filters('show_trial', true) && ! $fs->is_trial_utilized() && $fs->has_trial_plan()) : ?>
+					<a href="<?php echo $fs->get_trial_url() ?>" class="nav-tab"><?php fs_esc_html_echo_inline('Free Trial', 'free-trial', $slug) ?></a>
 				<?php endif ?>
 			<?php endif ?>
 		</h2>
@@ -258,103 +258,103 @@
 				<div class="has-sidebar has-right-sidebar">
 					<div class="has-sidebar-content">
 						<div class="postbox">
-							<h3><span class="dashicons dashicons-businessman"></span> <?php fs_esc_html_echo_inline( 'Account Details', 'account-details', $slug ) ?></h3>
+							<h3><span class="dashicons dashicons-businessman"></span> <?php fs_esc_html_echo_inline('Account Details', 'account-details', $slug) ?></h3>
 							<div class="fs-header-actions">
 								<ul>
-                                    <?php if ( $fs->is_whitelabeled( true ) ) : ?>
+                                    <?php if ($fs->is_whitelabeled(true)) : ?>
                                         <li>
                                             <a href="#" class="debug-license-trigger"><i class="dashicons dashicons-<?php echo $is_whitelabeled ? 'editor-code' : 'controls-pause' ?>"></i> <span><?php
-                                                if ( $is_whitelabeled ) {
-                                                    fs_esc_html_echo_inline( 'Start Debug', 'start-debug-license', $slug );
+                                                if ($is_whitelabeled) {
+                                                    fs_esc_html_echo_inline('Start Debug', 'start-debug-license', $slug);
                                                 } else {
-                                                    fs_esc_html_echo_inline( 'Stop Debug', 'stop-debug-license', $slug );
+                                                    fs_esc_html_echo_inline('Stop Debug', 'stop-debug-license', $slug);
                                                 }
                                             ?></span></a>
                                         </li>
                                         <li>&nbsp;&bull;&nbsp;</li>
                                     <?php endif ?>
-									<?php if ( $show_billing ) : ?>
-										<li><a href="#fs_billing"><i class="dashicons dashicons-portfolio"></i> <?php fs_esc_html_echo_inline( 'Billing & Invoices', 'billing-invoices', $slug ) ?></li>
+									<?php if ($show_billing) : ?>
+										<li><a href="#fs_billing"><i class="dashicons dashicons-portfolio"></i> <?php fs_esc_html_echo_inline('Billing & Invoices', 'billing-invoices', $slug) ?></li>
 										<li>&nbsp;&bull;&nbsp;</li>
 									<?php endif ?>
-                                    <?php if ( ! $is_whitelabeled ) : ?>
-                                        <?php if ( ! $is_paying ) : ?>
+                                    <?php if (! $is_whitelabeled) : ?>
+                                        <?php if (! $is_paying) : ?>
                                             <li>
-                                                <form action="<?php echo $fs->_get_admin_page_url( 'account' ) ?>" method="POST">
+                                                <form action="<?php echo $fs->_get_admin_page_url('account') ?>" method="POST">
                                                     <input type="hidden" name="fs_action" value="delete_account">
-                                                    <?php wp_nonce_field( 'delete_account' ) ?>
+                                                    <?php wp_nonce_field('delete_account') ?>
                                                     <a class="fs-delete-account" href="#" onclick="if (confirm('<?php
-                                                        if ( $is_active_subscription ) {
-                                                            echo esc_attr( sprintf( fs_text_inline( 'Deleting the account will automatically deactivate your %s plan license so you can use it on other sites. If you want to terminate the recurring payments as well, click the "Cancel" button, and first "Downgrade" your account. Are you sure you would like to continue with the deletion?', 'delete-account-x-confirm', $slug ), $plan->title ) );
+                                                        if ($is_active_subscription) {
+                                                            echo esc_attr(sprintf(fs_text_inline('Deleting the account will automatically deactivate your %s plan license so you can use it on other sites. If you want to terminate the recurring payments as well, click the "Cancel" button, and first "Downgrade" your account. Are you sure you would like to continue with the deletion?', 'delete-account-x-confirm', $slug), $plan->title));
                                                         } else {
-                                                            echo esc_attr( sprintf( fs_text_inline( 'Deletion is not temporary. Only delete if you no longer want to use this %s anymore. Are you sure you would like to continue with the deletion?', 'delete-account-confirm', $slug ), $fs->get_module_label( true ) ) );
+                                                            echo esc_attr(sprintf(fs_text_inline('Deletion is not temporary. Only delete if you no longer want to use this %s anymore. Are you sure you would like to continue with the deletion?', 'delete-account-confirm', $slug), $fs->get_module_label(true)));
                                                         }
                                                     ?>'))  this.parentNode.submit(); return false;"><i
-                                                            class="dashicons dashicons-no"></i> <?php fs_esc_html_echo_inline( 'Delete Account', 'delete-account', $slug ) ?></a>
+                                                            class="dashicons dashicons-no"></i> <?php fs_esc_html_echo_inline('Delete Account', 'delete-account', $slug) ?></a>
                                                 </form>
                                             </li>
                                             <li>&nbsp;&bull;&nbsp;</li>
                                         <?php endif ?>
-                                        <?php if ( $is_paying ) : ?>
-                                            <?php if ( ! fs_is_network_admin() ) : ?>
+                                        <?php if ($is_paying) : ?>
+                                            <?php if (! fs_is_network_admin()) : ?>
                                             <li>
-                                                <form action="<?php echo $fs->_get_admin_page_url( 'account' ) ?>" method="POST">
+                                                <form action="<?php echo $fs->_get_admin_page_url('account') ?>" method="POST">
                                                     <input type="hidden" name="fs_action" value="deactivate_license">
-                                                    <?php wp_nonce_field( 'deactivate_license' ) ?>
+                                                    <?php wp_nonce_field('deactivate_license') ?>
                                                     <a href="#" class="fs-deactivate-license"><i
-                                                            class="dashicons dashicons-admin-network"></i> <?php fs_echo_inline( 'Deactivate License', 'deactivate-license', $slug ) ?>
+                                                            class="dashicons dashicons-admin-network"></i> <?php fs_echo_inline('Deactivate License', 'deactivate-license', $slug) ?>
                                                     </a>
                                                 </form>
                                             </li>
                                             <li>&nbsp;&bull;&nbsp;</li>
                                             <?php endif ?>
-                                            <?php if ( ! $license->is_lifetime() &&
+                                            <?php if (! $license->is_lifetime() &&
                                                        $is_active_subscription
                                             ) : ?>
                                                 <li>
-                                                    <form action="<?php echo $fs->_get_admin_page_url( 'account' ) ?>" method="POST">
+                                                    <form action="<?php echo $fs->_get_admin_page_url('account') ?>" method="POST">
                                                         <input type="hidden" name="fs_action" value="downgrade_account">
-                                                        <?php wp_nonce_field( 'downgrade_account' ) ?>
+                                                        <?php wp_nonce_field('downgrade_account') ?>
                                                         <a href="#"
-                                                           onclick="if ( confirm('<?php echo esc_attr( sprintf(
-                                                               $downgrade_x_confirm_text,
-                                                               ( $fs->is_only_premium()  ? $cancelling_subscription_text : $downgrading_plan_text ),
-                                                               $plan->title,
-                                                               human_time_diff( time(), strtotime( $license->expiration ) )
-                                                           ) ) ?> <?php if ( ! $license->is_block_features ) {
-                                                               echo esc_attr( sprintf( $after_downgrade_non_blocking_text, $plan->title, $fs->get_module_label( true ) ) );
+                                                           onclick="if ( confirm('<?php echo esc_attr(sprintf(
+                                                $downgrade_x_confirm_text,
+                                                ($fs->is_only_premium()  ? $cancelling_subscription_text : $downgrading_plan_text),
+                                                $plan->title,
+                                                human_time_diff(time(), strtotime($license->expiration))
+                                            )) ?> <?php if (! $license->is_block_features) {
+                                                               echo esc_attr(sprintf($after_downgrade_non_blocking_text, $plan->title, $fs->get_module_label(true)));
                                                            } else {
-                                                               echo esc_attr( sprintf( $after_downgrade_blocking_text, $plan->title ) );
-                                                           }?> <?php echo esc_attr( $prices_increase_text ) ?> <?php fs_esc_attr_echo_inline( 'Are you sure you want to proceed?', 'proceed-confirmation', $slug ) ?>') ) this.parentNode.submit(); return false;"><i class="dashicons dashicons-download"></i> <?php echo esc_html( $fs->is_only_premium() ? fs_text_inline( 'Cancel Subscription', 'cancel-subscription', $slug ) : $downgrade_text ) ?></a>
+                                                               echo esc_attr(sprintf($after_downgrade_blocking_text, $plan->title));
+                                                           }?> <?php echo esc_attr($prices_increase_text) ?> <?php fs_esc_attr_echo_inline('Are you sure you want to proceed?', 'proceed-confirmation', $slug) ?>') ) this.parentNode.submit(); return false;"><i class="dashicons dashicons-download"></i> <?php echo esc_html($fs->is_only_premium() ? fs_text_inline('Cancel Subscription', 'cancel-subscription', $slug) : $downgrade_text) ?></a>
                                                     </form>
                                                 </li>
                                                 <li>&nbsp;&bull;&nbsp;</li>
                                             <?php endif ?>
-                                            <?php if ( ! $fs->is_single_plan() ) : ?>
+                                            <?php if (! $fs->is_single_plan()) : ?>
                                                 <li>
                                                     <a href="<?php echo $fs->get_upgrade_url() ?>"><i
-                                                            class="dashicons dashicons-grid-view"></i> <?php echo esc_html( $change_plan_text ) ?></a>
+                                                            class="dashicons dashicons-grid-view"></i> <?php echo esc_html($change_plan_text) ?></a>
                                                 </li>
                                                 <li>&nbsp;&bull;&nbsp;</li>
                                             <?php endif ?>
-                                        <?php elseif ( $is_paid_trial ) : ?>
+                                        <?php elseif ($is_paid_trial) : ?>
                                             <li>
-                                                <form action="<?php echo $fs->_get_admin_page_url( 'account' ) ?>" method="POST">
+                                                <form action="<?php echo $fs->_get_admin_page_url('account') ?>" method="POST">
                                                     <input type="hidden" name="fs_action" value="cancel_trial">
-                                                    <?php wp_nonce_field( 'cancel_trial' ) ?>
+                                                    <?php wp_nonce_field('cancel_trial') ?>
                                                     <a href="#" class="fs-cancel-trial"><i
-                                                            class="dashicons dashicons-download"></i> <?php echo esc_html( $cancel_trial_text ) ?></a>
+                                                            class="dashicons dashicons-download"></i> <?php echo esc_html($cancel_trial_text) ?></a>
                                                 </form>
                                             </li>
                                             <li>&nbsp;&bull;&nbsp;</li>
                                         <?php endif ?>
                                     <?php endif ?>
                                     <li>
-                                        <form action="<?php echo $fs->_get_admin_page_url( 'account' ) ?>" method="POST">
+                                        <form action="<?php echo $fs->_get_admin_page_url('account') ?>" method="POST">
                                             <input type="hidden" name="fs_action" value="<?php echo $fs->get_unique_affix() ?>_sync_license">
-                                            <?php wp_nonce_field( $fs->get_unique_affix() . '_sync_license' ) ?>
+                                            <?php wp_nonce_field($fs->get_unique_affix() . '_sync_license') ?>
                                             <a href="#" onclick="this.parentNode.submit(); return false;"><i
-                                                    class="dashicons dashicons-image-rotate"></i> <?php fs_esc_html_echo_x_inline( 'Sync', 'as synchronize', 'sync', $slug ) ?></a>
+                                                    class="dashicons dashicons-image-rotate"></i> <?php fs_esc_html_echo_x_inline('Sync', 'as synchronize', 'sync', $slug) ?></a>
                                         </form>
                                     </li>
 								</ul>
@@ -362,110 +362,112 @@
 							<div class="inside">
 								<table id="fs_account_details" cellspacing="0" class="fs-key-value-table">
 									<?php
-										$hide_license_key = ( ! $show_license_row || $fs->apply_filters( 'hide_license_key', false ) );
+                                        $hide_license_key = (! $show_license_row || $fs->apply_filters('hide_license_key', false));
 
-										$profile   = array();
+                                        $profile   = array();
 
-										if ( ! $is_whitelabeled ) {
+                                        if (! $is_whitelabeled) {
                                             $profile[] = array(
                                                 'id'    => 'user_name',
-                                                'title' => fs_text_inline( 'Name', 'name', $slug ),
+                                                'title' => fs_text_inline('Name', 'name', $slug),
                                                 'value' => $name
                                             );
                                             //					if (isset($user->email) && false !== strpos($user->email, '@'))
                                             $profile[] = array(
                                                 'id'    => 'email',
-                                                'title' => fs_text_inline( 'Email', 'email', $slug ),
+                                                'title' => fs_text_inline('Email', 'email', $slug),
                                                 'value' => $user->email
                                             );
 
-                                            if ( is_numeric( $user->id ) ) {
+                                            if (is_numeric($user->id)) {
                                                 $profile[] = array(
                                                     'id'    => 'user_id',
-                                                    'title' => fs_text_inline( 'User ID', 'user-id', $slug ),
+                                                    'title' => fs_text_inline('User ID', 'user-id', $slug),
                                                     'value' => $user->id
                                                 );
                                             }
                                         }
 
-										$profile[] = array(
-											'id'    => 'product',
-											'title' => ( $fs->is_plugin() ?
-												fs_text_inline( 'Plugin', 'plugin', $slug ) :
-												fs_text_inline( 'Theme', 'theme', $slug ) ),
-											'value' => $fs->get_plugin_title()
-										);
-
-										$profile[] = array(
-											'id'    => 'product_id',
-											'title' => ( $fs->is_plugin() ?
-												fs_text_inline( 'Plugin', 'plugin', $slug ) :
-												fs_text_inline( 'Theme', 'theme', $slug ) ) . ' ' . fs_text_inline( 'ID', 'id', $slug ),
-											'value' => $fs->get_id()
-										);
-
-										if ( ! fs_is_network_admin()) {
+                                        $profile[] = array(
+                                            'id'    => 'product',
+                                            'title' => ($fs->is_plugin() ?
+                                                fs_text_inline('Plugin', 'plugin', $slug) :
+                                                fs_text_inline('Theme', 'theme', $slug)),
+                                            'value' => $fs->get_plugin_title()
+                                        );
+
+                                        $profile[] = array(
+                                            'id'    => 'product_id',
+                                            'title' => ($fs->is_plugin() ?
+                                                fs_text_inline('Plugin', 'plugin', $slug) :
+                                                fs_text_inline('Theme', 'theme', $slug)) . ' ' . fs_text_inline('ID', 'id', $slug),
+                                            'value' => $fs->get_id()
+                                        );
+
+                                        if (! fs_is_network_admin()) {
                                             $profile[] = array(
                                                 'id'    => 'site_id',
-                                                'title' => fs_text_inline( 'Site ID', 'site-id', $slug ),
-                                                'value' => is_string( $site->id ) ?
+                                                'title' => fs_text_inline('Site ID', 'site-id', $slug),
+                                                'value' => is_string($site->id) ?
                                                     $site->id :
-                                                    fs_text_inline( 'No ID', 'no-id', $slug )
+                                                    fs_text_inline('No ID', 'no-id', $slug)
                                             );
 
                                             $profile[] = array(
                                                 'id'    => 'site_public_key',
-                                                'title' => fs_text_inline( 'Public Key', 'public-key', $slug ),
+                                                'title' => fs_text_inline('Public Key', 'public-key', $slug),
                                                 'value' => $site->public_key
                                             );
 
                                             $profile[] = array(
                                                 'id'    => 'site_secret_key',
-                                                'title' => fs_text_inline( 'Secret Key', 'secret-key', $slug ),
-                                                'value' => ( ( is_string( $site->secret_key ) ) ?
+                                                'title' => fs_text_inline('Secret Key', 'secret-key', $slug),
+                                                'value' => (
+                                                    (is_string($site->secret_key)) ?
                                                     $site->secret_key :
-                                                    fs_text_x_inline( 'No Secret', 'as secret encryption key missing', 'no-secret', $slug )
+                                                    fs_text_x_inline('No Secret', 'as secret encryption key missing', 'no-secret', $slug)
                                                 )
                                             );
                                         }
 
-										$profile[] = array(
-											'id'    => 'version',
-											'title' => $version_text,
-											'value' => $fs->get_plugin_version()
-										);
+                                        $profile[] = array(
+                                            'id'    => 'version',
+                                            'title' => $version_text,
+                                            'value' => $fs->get_plugin_version()
+                                        );
 
-										if ( ! fs_is_network_admin() && $is_premium && ! $is_whitelabeled ) {
-										    $profile[] = array(
+                                        if (! fs_is_network_admin() && $is_premium && ! $is_whitelabeled) {
+                                            $profile[] = array(
                                                 'id'    => 'beta_program',
                                                 'title' => '',
                                                 'value' => $site->is_beta
                                             );
                                         }
 
-										if ( $has_paid_plan || $has_bundle_license ) {
-											if ( $fs->is_trial() ) {
-											    if ( $show_plan_row ) {
+                                        if ($has_paid_plan || $has_bundle_license) {
+                                            if ($fs->is_trial()) {
+                                                if ($show_plan_row) {
                                                     $profile[] = array(
                                                         'id'    => 'plan',
                                                         'title' => $plan_text,
-                                                        'value' => ( is_string( $trial_plan->name ) ?
-                                                            strtoupper( $trial_plan->title ) :
-                                                            fs_text_inline( 'Trial', 'trial', $slug ) )
+                                                        'value' => (is_string($trial_plan->name) ?
+                                                            strtoupper($trial_plan->title) :
+                                                            fs_text_inline('Trial', 'trial', $slug))
                                                     );
                                                 }
-											} else {
-                                                if ( $show_plan_row ) {
+                                            } else {
+                                                if ($show_plan_row) {
                                                     $profile[] = array(
                                                         'id'    => 'plan',
-                                                        'title' => ( $has_bundle_license ? ucfirst( $fs->get_module_type() ) . ' ' : '' ) . $plan_text,
-                                                        'value' => strtoupper( is_string( $plan->name ) ?
+                                                        'title' => ($has_bundle_license ? ucfirst($fs->get_module_type()) . ' ' : '') . $plan_text,
+                                                        'value' => strtoupper(
+                                                            is_string($plan->name) ?
                                                             $plan->title :
-                                                            strtoupper( $free_text )
+                                                            strtoupper($free_text)
                                                         )
                                                     );
 
-                                                    if ( $has_bundle_license ) {
+                                                    if ($has_bundle_license) {
                                                         $profile[] = array(
                                                             'id'    => 'bundle_plan',
                                                             'title' => $bundle_plan_text,
@@ -474,72 +476,74 @@
                                                     }
                                                 }
 
-												if ( is_object( $license ) ) {
-													if ( ! $hide_license_key ) {
-														$profile[] = array(
-															'id'    => 'license_key',
-															'title' => fs_text_inline( 'License Key', $slug ),
-															'value' => $license->secret_key,
-														);
-													}
-												}
-											}
-										}
-									?>
+                                                if (is_object($license)) {
+                                                    if (! $hide_license_key) {
+                                                        $profile[] = array(
+                                                            'id'    => 'license_key',
+                                                            'title' => fs_text_inline('License Key', $slug),
+                                                            'value' => $license->secret_key,
+                                                        );
+                                                    }
+                                                }
+                                            }
+                                        }
+                                    ?>
 									<?php $odd = true;
-										foreach ( $profile as $p ) : ?>
+                                        foreach ($profile as $p) : ?>
 											<?php
-											if ( 'plan' === $p['id'] && ! $has_paid_plan ) {
-												// If plugin don't have any paid plans, there's no reason
-												// to show current plan.
-												continue;
-											}
-											?>
-											<tr class="fs-field-<?php echo $p['id'] ?><?php if ( $odd ) : ?> alternate<?php endif ?>">
+                                            if ('plan' === $p['id'] && ! $has_paid_plan) {
+                                                // If plugin don't have any paid plans, there's no reason
+                                                // to show current plan.
+                                                continue;
+                                            }
+                                            ?>
+											<tr class="fs-field-<?php echo $p['id'] ?><?php if ($odd) : ?> alternate<?php endif ?>">
 												<td>
-													<nobr><?php echo $p['title'] ?><?php echo ( ! empty( $p['title'] ) ) ? ':' : '' ?></nobr>
+													<nobr><?php echo $p['title'] ?><?php echo (! empty($p['title'])) ? ':' : '' ?></nobr>
 												</td>
-												<td<?php if ( 'plan' === $p['id'] || 'bundle_plan' === $p['id'] ) { echo ' colspan="2"'; }?>>
-													<?php if ( in_array( $p['id'], array( 'license_key', 'site_secret_key' ) ) ) : ?>
-														<code><?php echo FS_Plugin_License::mask_secret_key_for_html( $p['value'] ) ?></code>
-														<?php if ( ! $is_whitelabeled ) : ?>
-                                                        <input type="text" value="<?php echo htmlspecialchars( $p['value'] ) ?>" style="display: none"
+												<td<?php if ('plan' === $p['id'] || 'bundle_plan' === $p['id']) {
+                                                echo ' colspan="2"';
+                                            }?>>
+													<?php if (in_array($p['id'], array( 'license_key', 'site_secret_key' ))) : ?>
+														<code><?php echo FS_Plugin_License::mask_secret_key_for_html($p['value']) ?></code>
+														<?php if (! $is_whitelabeled) : ?>
+                                                        <input type="text" value="<?php echo htmlspecialchars($p['value']) ?>" style="display: none"
 														       readonly/>
                                                         <?php endif ?>
-                                                    <?php elseif ( 'beta_program' === $p['id'] ) : ?>
+                                                    <?php elseif ('beta_program' === $p['id']) : ?>
                                                         <label>
-                                                            <input type="checkbox" class="fs-toggle-beta-mode" <?php checked( true, $p['value'] ) ?>/><span><?php
-                                                                fs_esc_html_echo_inline( 'Join the Beta program', 'join-beta', $slug )
+                                                            <input type="checkbox" class="fs-toggle-beta-mode" <?php checked(true, $p['value']) ?>/><span><?php
+                                                                fs_esc_html_echo_inline('Join the Beta program', 'join-beta', $slug)
                                                         ?></span></label>
 													<?php else : ?>
-														<code><?php echo htmlspecialchars( $p['value'] ) ?></code>
+														<code><?php echo htmlspecialchars($p['value']) ?></code>
 													<?php endif ?>
-													<?php if ( 'email' === $p['id'] && ! $user->is_verified() ) : ?>
-														<label class="fs-tag fs-warn"><?php fs_esc_html_echo_inline( 'not verified', 'not-verified', $slug ) ?></label>
+													<?php if ('email' === $p['id'] && ! $user->is_verified()) : ?>
+														<label class="fs-tag fs-warn"><?php fs_esc_html_echo_inline('not verified', 'not-verified', $slug) ?></label>
 													<?php endif ?>
-													<?php if ( 'plan' === $p['id'] ) : ?>
-														<?php if ( $fs->is_trial() ) : ?>
-															<label class="fs-tag fs-success"><?php echo esc_html( $trial_text ) ?></label>
+													<?php if ('plan' === $p['id']) : ?>
+														<?php if ($fs->is_trial()) : ?>
+															<label class="fs-tag fs-success"><?php echo esc_html($trial_text) ?></label>
 														<?php endif ?>
-														<?php if ( is_object( $license ) && ! $license->is_lifetime() ) : ?>
-															<?php if ( ! $is_active_subscription && ! $is_active_bundle_subscription && ! $license->is_first_payment_pending() ) : ?>
+														<?php if (is_object($license) && ! $license->is_lifetime()) : ?>
+															<?php if (! $is_active_subscription && ! $is_active_bundle_subscription && ! $license->is_first_payment_pending()) : ?>
                                                                 <?php $is_license_expired = $license->is_expired() ?>
-                                                                <?php $expired_ago_text   = ( fs_text_inline( 'Expired', 'expired', $slug ) . ' ' . fs_text_x_inline( '%s ago', 'x-ago', $slug ) ) ?>
+                                                                <?php $expired_ago_text   = (fs_text_inline('Expired', 'expired', $slug) . ' ' . fs_text_x_inline('%s ago', 'x-ago', $slug)) ?>
 																<label
 																	class="fs-tag <?php echo $is_license_expired ? 'fs-error' : 'fs-warn' ?>"><?php
-                                                                        echo esc_html( sprintf( $is_license_expired ? $expired_ago_text : $expires_in_text, human_time_diff( time(), strtotime( $license->expiration ) ) ) )
+                                                                        echo esc_html(sprintf($is_license_expired ? $expired_ago_text : $expires_in_text, human_time_diff(time(), strtotime($license->expiration))))
                                                                     ?></label>
-															<?php elseif ( $is_active_subscription && ! $subscription->is_first_payment_pending() ) : ?>
-																<label class="fs-tag fs-success"><?php echo esc_html( sprintf( $renews_in_text, human_time_diff( time(), strtotime( $subscription->next_payment ) ) ) ) ?></label>
+															<?php elseif ($is_active_subscription && ! $subscription->is_first_payment_pending()) : ?>
+																<label class="fs-tag fs-success"><?php echo esc_html(sprintf($renews_in_text, human_time_diff(time(), strtotime($subscription->next_payment)))) ?></label>
 															<?php endif ?>
-														<?php elseif ( $fs->is_trial() ) : ?>
-															<label class="fs-tag fs-warn"><?php echo esc_html( sprintf( $expires_in_text, human_time_diff( time(), strtotime( $site->trial_ends ) ) ) ) ?></label>
+														<?php elseif ($fs->is_trial()) : ?>
+															<label class="fs-tag fs-warn"><?php echo esc_html(sprintf($expires_in_text, human_time_diff(time(), strtotime($site->trial_ends)))) ?></label>
 														<?php endif ?>
-                                                        <?php if ( ! $is_whitelabeled ) : ?>
+                                                        <?php if (! $is_whitelabeled) : ?>
 														<div class="button-group">
-															<?php $available_license = $fs->is_free_plan() && ! fs_is_network_admin() ? $fs->_get_available_premium_license( $site->is_localhost() ) : false ?>
-                                                            <?php if ( is_object( $available_license ) ) : ?>
-																<?php $premium_plan = $fs->_get_plan_by_id( $available_license->plan_id ) ?>
+															<?php $available_license = $fs->is_free_plan() && ! fs_is_network_admin() ? $fs->_get_available_premium_license($site->is_localhost()) : false ?>
+                                                            <?php if (is_object($available_license)) : ?>
+																<?php $premium_plan = $fs->_get_plan_by_id($available_license->plan_id) ?>
                                                                 <?php
                                                                 $view_params = array(
                                                                     'freemius'     => $fs,
@@ -550,136 +554,136 @@
                                                                     'install_id'   => $site->id,
                                                                     'class'        => 'button-primary',
                                                                 );
-                                                                fs_require_template( 'account/partials/activate-license-button.php', $view_params ); ?>
+                                                                fs_require_template('account/partials/activate-license-button.php', $view_params); ?>
 															<?php else : ?>
-																<form action="<?php echo $fs->_get_admin_page_url( 'account' ) ?>"
+																<form action="<?php echo $fs->_get_admin_page_url('account') ?>"
 																      method="POST" class="button-group">
-																	<?php if ( $show_upgrade && $is_premium ) : ?>
-																		<a class="button activate-license-trigger <?php echo $fs->get_unique_affix() ?>" href="#"><?php fs_esc_html_echo_inline( 'Activate License', 'activate-license', $slug ) ?></a>
+																	<?php if ($show_upgrade && $is_premium) : ?>
+																		<a class="button activate-license-trigger <?php echo $fs->get_unique_affix() ?>" href="#"><?php fs_esc_html_echo_inline('Activate License', 'activate-license', $slug) ?></a>
 																	<?php endif ?>
 																	<input type="submit" class="button"
-																	       value="<?php echo esc_attr( $sync_license_text ) ?>">
+																	       value="<?php echo esc_attr($sync_license_text) ?>">
 																	<input type="hidden" name="fs_action"
 																	       value="<?php echo $fs->get_unique_affix() ?>_sync_license">
-																	<?php wp_nonce_field( $fs->get_unique_affix() . '_sync_license' ) ?>
-																	<?php if ( $show_upgrade || ! $fs->is_single_plan() ) : ?>
+																	<?php wp_nonce_field($fs->get_unique_affix() . '_sync_license') ?>
+																	<?php if ($show_upgrade || ! $fs->is_single_plan()) : ?>
 																	<a href="<?php echo $fs->get_upgrade_url() ?>"
 																	   class="button<?php
-																		   echo $show_upgrade ?
-																			   ' button-primary fs-upgrade' :
-																			   ' fs-change-plan'; ?> button-upgrade"><i
-																			class="dashicons dashicons-cart"></i> <?php echo esc_html( $show_upgrade ? $upgrade_text : $change_plan_text ) ?></a>
+                                                                           echo $show_upgrade ?
+                                                                               ' button-primary fs-upgrade' :
+                                                                               ' fs-change-plan'; ?> button-upgrade"><i
+																			class="dashicons dashicons-cart"></i> <?php echo esc_html($show_upgrade ? $upgrade_text : $change_plan_text) ?></a>
 																	<?php endif ?>
 																</form>
 															<?php endif ?>
 														</div>
                                                         <?php endif ?>
-													<?php elseif ( 'bundle_plan' === $p['id'] ) : ?>
-														<?php if ( is_object( $bundle_subscription ) ) : ?>
-															<?php if ( $is_active_bundle_subscription && ! $is_bundle_first_payment_pending ) : ?>
-																<label class="fs-tag fs-success"><?php echo esc_html( sprintf( $renews_in_text, human_time_diff( time(), strtotime( $bundle_subscription->next_payment ) ) ) ) ?></label>
+													<?php elseif ('bundle_plan' === $p['id']) : ?>
+														<?php if (is_object($bundle_subscription)) : ?>
+															<?php if ($is_active_bundle_subscription && ! $is_bundle_first_payment_pending) : ?>
+																<label class="fs-tag fs-success"><?php echo esc_html(sprintf($renews_in_text, human_time_diff(time(), strtotime($bundle_subscription->next_payment)))) ?></label>
 															<?php endif ?>
                                                         <?php endif ?>
-													<?php elseif ( 'version' === $p['id'] && $has_paid_plan ) : ?>
-														<?php if ( $fs->has_premium_version() ) : ?>
-															<?php if ( $is_premium ) : ?>
+													<?php elseif ('version' === $p['id'] && $has_paid_plan) : ?>
+														<?php if ($fs->has_premium_version()) : ?>
+															<?php if ($is_premium) : ?>
 																<label
-																	class="fs-tag fs-<?php echo $fs->can_use_premium_code() ? 'success' : 'warn' ?>"><?php fs_esc_html_echo_inline( 'Premium version', 'premium-version', $slug ) ?></label>
-															<?php elseif ( $fs->can_use_premium_code() ) : ?>
-																<label class="fs-tag fs-warn"><?php fs_esc_html_echo_inline( 'Free version', 'free-version', $slug ) ?></label>
+																	class="fs-tag fs-<?php echo $fs->can_use_premium_code() ? 'success' : 'warn' ?>"><?php fs_esc_html_echo_inline('Premium version', 'premium-version', $slug) ?></label>
+															<?php elseif ($fs->can_use_premium_code()) : ?>
+																<label class="fs-tag fs-warn"><?php fs_esc_html_echo_inline('Free version', 'free-version', $slug) ?></label>
 															<?php endif ?>
 														<?php endif ?>
 													<?php endif ?>
 												</td>
-                                                <?php if ( 'plan' !== $p['id'] && 'bundle_plan' !== $p['id'] ) : ?>
+                                                <?php if ('plan' !== $p['id'] && 'bundle_plan' !== $p['id']) : ?>
 													<td class="fs-right">
-														<?php if ( 'email' === $p['id'] && ! $user->is_verified() ) : ?>
-															<form action="<?php echo $fs->_get_admin_page_url( 'account' ) ?>" method="POST">
+														<?php if ('email' === $p['id'] && ! $user->is_verified()) : ?>
+															<form action="<?php echo $fs->_get_admin_page_url('account') ?>" method="POST">
 																<input type="hidden" name="fs_action" value="verify_email">
-																<?php wp_nonce_field( 'verify_email' ) ?>
+																<?php wp_nonce_field('verify_email') ?>
 																<input type="submit" class="button button-small"
-																       value="<?php fs_esc_attr_echo_inline( 'Verify Email', 'verify-email', $slug ) ?>">
+																       value="<?php fs_esc_attr_echo_inline('Verify Email', 'verify-email', $slug) ?>">
 															</form>
 														<?php endif ?>
-														<?php if ( 'version' === $p['id'] ) : ?>
-															<?php if ( $fs->has_release_on_freemius() ) : ?>
+														<?php if ('version' === $p['id']) : ?>
+															<?php if ($fs->has_release_on_freemius()) : ?>
 																<div class="button-group">
-																	<?php if ( $is_paying || $fs->is_trial() ) : ?>
-																		<?php if ( ! $fs->is_allowed_to_install() ) : ?>
+																	<?php if ($is_paying || $fs->is_trial()) : ?>
+																		<?php if (! $fs->is_allowed_to_install()) : ?>
                                                                             <a target="_blank" rel="noopener" class="button button-primary"
                                                                                 href="<?php echo $fs->_get_latest_download_local_url() ?>"><?php
-                                                                                $download_version_text_suffix = ( is_object( $update ) ? ' [' . $update->version . ']' : '' );
+                                                                                $download_version_text_suffix = (is_object($update) ? ' [' . $update->version . ']' : '');
 
                                                                                 $download_version_text = sprintf(
                                                                                     /* translators: %s: plan name (e.g. Download "Professional" Version) */
-                                                                                    fs_text_inline( 'Download %s Version', 'download-x-version', $slug ),
-                                                                                    ( $fs->is_trial() ? $trial_plan->title : $plan->title )
+                                                                                    fs_text_inline('Download %s Version', 'download-x-version', $slug),
+                                                                                    ($fs->is_trial() ? $trial_plan->title : $plan->title)
                                                                                 ) .
                                                                                 $download_version_text_suffix;
 
-                                                                                $download_version_text_length = function_exists( 'mb_strlen' ) ?
-                                                                                    mb_strlen( $download_version_text ) :
-                                                                                    strlen( $download_version_text );
+                                                                                $download_version_text_length = function_exists('mb_strlen') ?
+                                                                                    mb_strlen($download_version_text) :
+                                                                                    strlen($download_version_text);
 
-                                                                                if ( $download_version_text_length > 31 ) {
+                                                                                if ($download_version_text_length > 31) {
                                                                                     /**
                                                                                      * Try to limit the number of characters to 31 for now.
                                                                                      *
                                                                                      * @author Leo Fajardo (@leorw)
                                                                                      * @aince 2.3.2
                                                                                      */
-                                                                                    $download_version_text = fs_text_inline( 'Download Paid Version', 'download-paid-version', $slug ) . $download_version_text_suffix;
+                                                                                    $download_version_text = fs_text_inline('Download Paid Version', 'download-paid-version', $slug) . $download_version_text_suffix;
                                                                                 }
 
                                                                                 echo $download_version_text;
                                                                             ?></a>
-																		<?php elseif ( is_object( $update ) ) : ?>
+																		<?php elseif (is_object($update)) : ?>
 																			<?php
-																			$module_type = $fs->get_module_type();
-																			?>
+                                                                            $module_type = $fs->get_module_type();
+                                                                            ?>
 																			<a class="button button-primary"
-																			   href="<?php echo wp_nonce_url( self_admin_url( "update.php?action=upgrade-{$module_type}&{$module_type}=" . $fs->get_plugin_basename() ), "upgrade-{$module_type}_" . $fs->get_plugin_basename() ) ?>"><?php echo fs_esc_html_inline( 'Install Update Now', 'install-update-now', $slug ) . ' [' . $update->version . ']' ?></a>
+																			   href="<?php echo wp_nonce_url(self_admin_url("update.php?action=upgrade-{$module_type}&{$module_type}=" . $fs->get_plugin_basename()), "upgrade-{$module_type}_" . $fs->get_plugin_basename()) ?>"><?php echo fs_esc_html_inline('Install Update Now', 'install-update-now', $slug) . ' [' . $update->version . ']' ?></a>
 																		<?php endif ?>
 																	<?php endif; ?>
 																</div>
 															<?php endif ?>
 															<?php
-														elseif ( in_array( $p['id'], array( 'license_key', 'site_secret_key' ) ) ) : ?>
-                                                            <?php if ( ! $is_whitelabeled ) : ?>
-                                                                <button class="button button-small fs-toggle-visibility"><?php fs_esc_html_echo_x_inline( 'Show', 'verb', 'show', $slug ) ?></button>
+                                                        elseif (in_array($p['id'], array( 'license_key', 'site_secret_key' ))) : ?>
+                                                            <?php if (! $is_whitelabeled) : ?>
+                                                                <button class="button button-small fs-toggle-visibility"><?php fs_esc_html_echo_x_inline('Show', 'verb', 'show', $slug) ?></button>
                                                             <?php endif ?>
                                                             <?php if ('license_key' === $p['id']) : ?>
-                                                                <button class="button button-small activate-license-trigger <?php echo $fs->get_unique_affix() ?>"><?php fs_esc_html_echo_inline( 'Change License', 'change-license', $slug ) ?></button>
+                                                                <button class="button button-small activate-license-trigger <?php echo $fs->get_unique_affix() ?>"><?php fs_esc_html_echo_inline('Change License', 'change-license', $slug) ?></button>
                                                             <?php endif ?>
 															<?php
-														elseif (/*in_array($p['id'], array('site_secret_key', 'site_id', 'site_public_key')) ||*/
-														( is_string( $user->secret_key ) && in_array( $p['id'], array(
-																'email',
-																'user_name'
-															) ) )
-														) : ?>
-															<form action="<?php echo $fs->_get_admin_page_url( 'account' ) ?>" method="POST"
-															      onsubmit="var val = prompt('<?php echo esc_attr( sprintf(
+                                                        elseif (/*in_array($p['id'], array('site_secret_key', 'site_id', 'site_public_key')) ||*/
+                                                        (is_string($user->secret_key) && in_array($p['id'], array(
+                                                                'email',
+                                                                'user_name'
+                                                            )))
+                                                        ) : ?>
+															<form action="<?php echo $fs->_get_admin_page_url('account') ?>" method="POST"
+															      onsubmit="var val = prompt('<?php echo esc_attr(sprintf(
                                                                       /* translators: %s: User's account property (e.g. name, email) */
-															          fs_text_inline( 'What is your %s?', 'what-is-your-x', $slug ),
-                                                                      $p['title']
-                                                                  ) ) ?>', '<?php echo $p['value'] ?>'); if (null == val || '' === val) return false; jQuery('input[name=fs_<?php echo $p['id'] ?>_<?php echo $fs->get_unique_affix() ?>]').val(val); return true;">
+                                                                      fs_text_inline('What is your %s?', 'what-is-your-x', $slug),
+                                                            $p['title']
+                                                        )) ?>', '<?php echo $p['value'] ?>'); if (null == val || '' === val) return false; jQuery('input[name=fs_<?php echo $p['id'] ?>_<?php echo $fs->get_unique_affix() ?>]').val(val); return true;">
 																<input type="hidden" name="fs_action" value="update_<?php echo $p['id'] ?>">
 																<input type="hidden" name="fs_<?php echo $p['id'] ?>_<?php echo $fs->get_unique_affix() ?>"
 																       value="">
-																<?php wp_nonce_field( 'update_' . $p['id'] ) ?>
+																<?php wp_nonce_field('update_' . $p['id']) ?>
 																<input type="submit" class="button button-small"
-																       value="<?php echo fs_esc_attr_x_inline( 'Edit', 'verb', 'edit', $slug ) ?>">
+																       value="<?php echo fs_esc_attr_x_inline('Edit', 'verb', 'edit', $slug) ?>">
 															</form>
-                                                        <?php elseif ( 'user_id' === $p['id'] && ! empty( $ids_of_installs_activated_with_foreign_licenses ) ) : ?>
+                                                        <?php elseif ('user_id' === $p['id'] && ! empty($ids_of_installs_activated_with_foreign_licenses)) : ?>
                                                                 <input id="fs_change_user" type="submit" class="button button-small"
-                                                                       value="<?php echo fs_esc_attr_inline( 'Change User', 'change-user', $slug ) ?>">
+                                                                       value="<?php echo fs_esc_attr_inline('Change User', 'change-user', $slug) ?>">
 														<?php endif ?>
 													</td>
 												<?php endif ?>
 											</tr>
 											<?php
-                                                if ( 'version' === $p['id'] && $is_premium ) {
+                                                if ('version' === $p['id'] && $is_premium) {
                                                     /**
                                                      * If there's a row for the beta program, keep its background color
                                                      * the same as the version info row.
@@ -695,22 +699,22 @@
 								</table>
 							</div>
 						</div>
-						<?php if ( fs_is_network_admin() ) : ?>
+						<?php if (fs_is_network_admin()) : ?>
 						<div id="fs_sites" class="postbox">
-							<h3><span class="dashicons dashicons-networking"></span> <?php fs_esc_html_echo_inline( 'Sites', 'sites', $slug ) ?></h3>
+							<h3><span class="dashicons dashicons-networking"></span> <?php fs_esc_html_echo_inline('Sites', 'sites', $slug) ?></h3>
 							<div class="fs-header-actions">
-                                <?php if ( ! $is_whitelabeled ) : ?>
-                                    <?php $has_license = is_object( $license ) ?>
-                                    <?php if ( $has_license || ( $show_upgrade && $is_premium ) ) : ?>
+                                <?php if (! $is_whitelabeled) : ?>
+                                    <?php $has_license = is_object($license) ?>
+                                    <?php if ($has_license || ($show_upgrade && $is_premium)) : ?>
                                         <?php
                                             $activate_license_button_text = $has_license ?
-                                                fs_esc_html_inline( 'Change License', 'change-license', $slug ) :
-                                                fs_esc_html_inline( 'Activate License', 'activate-license', $slug );
+                                                fs_esc_html_inline('Change License', 'change-license', $slug) :
+                                                fs_esc_html_inline('Activate License', 'activate-license', $slug);
                                         ?>
-                                        <a class="button<?php echo ( ! $has_license ? ' button-primary' : '' ) ?> activate-license-trigger <?php echo $fs->get_unique_affix() ?>" href="#"><?php echo $activate_license_button_text ?></a>
+                                        <a class="button<?php echo(! $has_license ? ' button-primary' : '') ?> activate-license-trigger <?php echo $fs->get_unique_affix() ?>" href="#"><?php echo $activate_license_button_text ?></a>
                                     <?php endif ?>
                                 <?php endif ?>
-								<input class="fs-search" type="text" placeholder="<?php fs_esc_attr_echo_inline( 'Search by address', 'search-by-address', $slug ) ?>..."><span class="dashicons dashicons-search"></span>
+								<input class="fs-search" type="text" placeholder="<?php fs_esc_attr_echo_inline('Search by address', 'search-by-address', $slug) ?>..."><span class="dashicons dashicons-search"></span>
 							</div>
 							<div class="inside">
                                 <div id="" class="fs-scrollable-table">
@@ -730,19 +734,19 @@
                                     <div class="fs-table-body">
                                         <table class="widefat">
                                             <?php
-                                                foreach ( $site_view_params as $view_params ) {
+                                                foreach ($site_view_params as $view_params) {
                                                     fs_require_template(
-                                                    	'account/partials/site.php',
-	                                                    $view_params
+                                                        'account/partials/site.php',
+                                                        $view_params
                                                     );
-                                            } ?>
+                                                } ?>
                                         </table>
                                     </div>
                                 </div>
 							</div>
 						</div>
 						<?php endif ?>
-						<?php if ( 0 < count( $addons_to_show ) ) : ?>
+						<?php if (0 < count($addons_to_show)) : ?>
 							<!-- Add-Ons -->
 							<div class="postbox">
 								<div class="">
@@ -750,13 +754,13 @@
 									<table id="fs_addons" class="widefat">
 										<thead>
 										<tr>
-											<th><h3><?php echo esc_html( $addons_text ) ?></h3></th>
-											<th><?php fs_esc_html_echo_inline( 'ID', 'id', $slug ) ?></th>
-											<th><?php echo esc_html( $version_text ) ?></th>
-											<th><?php echo esc_html( $plan_text ) ?></th>
-											<th><?php fs_esc_html_echo_x_inline( 'License', 'as software license', 'license', $slug ) ?></th>
+											<th><h3><?php echo esc_html($addons_text) ?></h3></th>
+											<th><?php fs_esc_html_echo_inline('ID', 'id', $slug) ?></th>
+											<th><?php echo esc_html($version_text) ?></th>
+											<th><?php echo esc_html($plan_text) ?></th>
+											<th><?php fs_esc_html_echo_x_inline('License', 'as software license', 'license', $slug) ?></th>
 											<th></th>
-											<?php if ( defined( 'WP_FS__DEV_MODE' ) && WP_FS__DEV_MODE ) : ?>
+											<?php if (defined('WP_FS__DEV_MODE') && WP_FS__DEV_MODE) : ?>
 												<th></th>
 											<?php endif ?>
 										</tr>
@@ -765,32 +769,32 @@
 										<?php
                                             $odd = true;
 
-                                            $installed_addons_ids_map = array_flip( $installed_addons_ids );
+                                            $installed_addons_ids_map = array_flip($installed_addons_ids);
 
                                             $addon_info_by_id     = array();
                                             $hide_all_addons_data = false;
 
-                                            if ( $fs->is_whitelabeled_by_flag() ) {
+                                            if ($fs->is_whitelabeled_by_flag()) {
                                                 $hide_all_addons_data = true;
 
-                                                foreach ( $addons_to_show as $addon_id ) {
-                                                    $is_addon_installed = isset( $installed_addons_ids_map[ $addon_id ] );
-                                                    $addon_info         = $fs->_get_addon_info( $addon_id, $is_addon_installed );
+                                                foreach ($addons_to_show as $addon_id) {
+                                                    $is_addon_installed = isset($installed_addons_ids_map[ $addon_id ]);
+                                                    $addon_info         = $fs->_get_addon_info($addon_id, $is_addon_installed);
                                                     $is_addon_connected = $addon_info['is_connected'];
 
-                                                    $fs_addon = ( $is_addon_connected && $is_addon_installed ) ?
-                                                        freemius( $addon_id ) :
+                                                    $fs_addon = ($is_addon_connected && $is_addon_installed) ?
+                                                        freemius($addon_id) :
                                                         null;
 
-                                                    $is_whitelabeled = is_object( $fs_addon ) ?
-                                                        $fs_addon->is_whitelabeled( true ) :
+                                                    $is_whitelabeled = is_object($fs_addon) ?
+                                                        $fs_addon->is_whitelabeled(true) :
                                                         $addon_info['is_whitelabeled'];
 
-                                                    if ( ! $is_whitelabeled ) {
+                                                    if (! $is_whitelabeled) {
                                                         $hide_all_addons_data = false;
                                                     }
 
-                                                    if ( $is_data_debug_mode ) {
+                                                    if ($is_data_debug_mode) {
                                                         $is_whitelabeled = false;
                                                     }
 
@@ -798,61 +802,61 @@
                                                 }
                                             }
 
-											foreach ( $addons_to_show as $addon_id ) {
-											    $is_addon_installed = isset( $installed_addons_ids_map[ $addon_id ] );
+                                            foreach ($addons_to_show as $addon_id) {
+                                                $is_addon_installed = isset($installed_addons_ids_map[ $addon_id ]);
 
-											    if (
+                                                if (
                                                     $hide_all_addons_data &&
                                                     ! $is_addon_installed &&
-                                                    ! file_exists( fs_normalize_path( WP_PLUGIN_DIR . '/' . $fs->get_addon_basename( $addon_id ) ) )
+                                                    ! file_exists(fs_normalize_path(WP_PLUGIN_DIR . '/' . $fs->get_addon_basename($addon_id)))
                                                 ) {
-											        continue;
+                                                    continue;
                                                 }
 
-												$addon_view_params = array(
-													'parent_fs'                      => $fs,
-													'addon_id'                       => $addon_id,
-													'odd'                            => $odd,
-													'fs_blog_id'                     => $fs_blog_id,
+                                                $addon_view_params = array(
+                                                    'parent_fs'                      => $fs,
+                                                    'addon_id'                       => $addon_id,
+                                                    'odd'                            => $odd,
+                                                    'fs_blog_id'                     => $fs_blog_id,
                                                     'active_plugins_directories_map' => &$active_plugins_directories_map,
                                                     'is_addon_installed'             => $is_addon_installed,
-                                                    'addon_info'                     => isset( $addon_info_by_id[ $addon_id ] ) ?
+                                                    'addon_info'                     => isset($addon_info_by_id[ $addon_id ]) ?
                                                         $addon_info_by_id[ $addon_id ] :
-                                                        $fs->_get_addon_info( $addon_id, $is_addon_installed ),
-                                                    'is_whitelabeled'                => ( $is_whitelabeled && ! $is_data_debug_mode )
-												);
+                                                        $fs->_get_addon_info($addon_id, $is_addon_installed),
+                                                    'is_whitelabeled'                => ($is_whitelabeled && ! $is_data_debug_mode)
+                                                );
 
-												fs_require_template(
-													'account/partials/addon.php',
-													$addon_view_params
-												);
+                                                fs_require_template(
+                                                    'account/partials/addon.php',
+                                                    $addon_view_params
+                                                );
 
-												$odd = ! $odd;
-											} ?>
+                                                $odd = ! $odd;
+                                            } ?>
 										</tbody>
 									</table>
 								</div>
 							</div>
 						<?php endif ?>
 
-						<?php $fs->do_action( 'after_account_details' ) ?>
+						<?php $fs->do_action('after_account_details') ?>
 
 						<?php
-							if ( $show_billing ) {
-								$view_params = array( 'id' => $VARS['id'] );
-								fs_require_once_template( 'account/billing.php', $view_params );
-								fs_require_once_template( 'account/payments.php', $view_params );
-							}
-						?>
+                            if ($show_billing) {
+                                $view_params = array( 'id' => $VARS['id'] );
+                                fs_require_once_template('account/billing.php', $view_params);
+                                fs_require_once_template('account/payments.php', $view_params);
+                            }
+                        ?>
 					</div>
 				</div>
 			</div>
 		</div>
 	</div>
     <?php
-        $subscription_cancellation_dialog_box_template_params = $fs->_get_subscription_cancellation_dialog_box_template_params( true );
-        if ( ! empty( $subscription_cancellation_dialog_box_template_params ) ) {
-            fs_require_template( 'forms/subscription-cancellation.php', $subscription_cancellation_dialog_box_template_params );
+        $subscription_cancellation_dialog_box_template_params = $fs->_get_subscription_cancellation_dialog_box_template_params(true);
+        if (! empty($subscription_cancellation_dialog_box_template_params)) {
+            fs_require_template('forms/subscription-cancellation.php', $subscription_cancellation_dialog_box_template_params);
         }
     ?>
     <script type="text/javascript">
@@ -883,13 +887,13 @@
 		        $input.toggle();
 
 		        if ($input.is(':visible')) {
-			        $this.html('<?php fs_esc_js_echo_x_inline( 'Hide', 'verb', 'hide', $slug ) ?>');
+			        $this.html('<?php fs_esc_js_echo_x_inline('Hide', 'verb', 'hide', $slug) ?>');
 			        setTimeout(function () {
 				        $input.select().focus();
 			        }, 100);
 		        }
 		        else {
-			        $this.html( '<?php fs_esc_js_echo_x_inline( 'Show', 'verb', 'show', $slug ) ?>' );
+			        $this.html( '<?php fs_esc_js_echo_x_inline('Show', 'verb', 'show', $slug) ?>' );
 		        }
 	        });
 
@@ -897,19 +901,19 @@
                 setLoading(
                 	$(this),
 	                ($(this).data('is-disconnected') ?
-		                '<?php fs_esc_js_echo_inline('Opting in', 'opting-in' ) ?>' :
-		                '<?php fs_esc_js_echo_inline('Opting out', 'opting-out' ) ?>') +
+		                '<?php fs_esc_js_echo_inline('Opting in', 'opting-in') ?>' :
+		                '<?php fs_esc_js_echo_inline('Opting out', 'opting-out') ?>') +
 		                '...'
                 );
             });
 
             <?php
                 $plugin_title         = $fs->get_plugin_title();
-                $processing_text      = fs_esc_js_inline( 'Processing', 'processing' );
+                $processing_text      = fs_esc_js_inline('Processing', 'processing');
                 $confirmation_message = sprintf(
                     '%s %s',
-                    sprintf( fs_esc_attr_inline( 'Get updates for bleeding edge Beta versions of %s.', 'get-beta-versions', $slug ), $plugin_title ),
-                    sprintf( fs_esc_attr_inline( 'An update to a Beta version will replace your installed version of %s with the latest Beta release - use with caution, and not on production sites. You have been warned.', 'beta-version-update-caution', $slug ), $plugin_title )
+                    sprintf(fs_esc_attr_inline('Get updates for bleeding edge Beta versions of %s.', 'get-beta-versions', $slug), $plugin_title),
+                    sprintf(fs_esc_attr_inline('An update to a Beta version will replace your installed version of %s with the latest Beta release - use with caution, and not on production sites. You have been warned.', 'beta-version-update-caution', $slug), $plugin_title)
                 );
             ?>
 
@@ -922,8 +926,8 @@
                         url   : ajaxurl,
                         method: 'POST',
                         data  : {
-                            action   : '<?php echo $fs->get_ajax_action( 'set_beta_mode' ) ?>',
-                            security : '<?php echo $fs->get_ajax_security( 'set_beta_mode' ) ?>',
+                            action   : '<?php echo $fs->get_ajax_action('set_beta_mode') ?>',
+                            security : '<?php echo $fs->get_ajax_security('set_beta_mode') ?>',
                             is_beta  : isChecked,
                             module_id: <?php echo $fs->get_id() ?>
                         },
@@ -933,7 +937,7 @@
                         },
                         complete: function () {
                             $checkbox.prop( 'disabled', false );
-                            $checkbox.parent().find( 'span' ).text( '<?php fs_esc_js_echo_inline( 'Join the Beta Program', 'join-beta', $slug ) ?>' );
+                            $checkbox.parent().find( 'span' ).text( '<?php fs_esc_js_echo_inline('Join the Beta Program', 'join-beta', $slug) ?>' );
                         }
                     } );
 
@@ -944,29 +948,29 @@
             });
 
 	        $('.fs-opt-in').click(function () {
-		        setLoading($(this), '<?php fs_esc_js_echo_inline('Opting in', 'opting-in' ) ?>...');
+		        setLoading($(this), '<?php fs_esc_js_echo_inline('Opting in', 'opting-in') ?>...');
 	        });
 
 	        $( '#fs_downgrade' ).submit(function( event ) {
                 event.preventDefault();
 
-		        setLoading( $( this ).find( '.button' ), '<?php fs_esc_js_echo_inline( 'Downgrading', 'downgrading' ) ?>...' );
+		        setLoading( $( this ).find( '.button' ), '<?php fs_esc_js_echo_inline('Downgrading', 'downgrading') ?>...' );
 	        });
 
             $('.fs-activate-license').click(function () {
-                setLoading($(this), '<?php fs_esc_js_echo_inline('Activating', 'activating' ) ?>...');
+                setLoading($(this), '<?php fs_esc_js_echo_inline('Activating', 'activating') ?>...');
             });
 
             var $deactivateLicenseOrCancelTrial = $( '.fs-deactivate-license, .fs-cancel-trial' ),
                 $subscriptionCancellationModal  = $( '.fs-modal-subscription-cancellation-<?php echo $fs->get_id() ?>' );
 
             if ( 0 !== $subscriptionCancellationModal.length ) {
-                $subscriptionCancellationModal.on( '<?php echo $fs->get_action_tag( 'subscription_cancellation_action' ) ?>', function( evt, cancelSubscription ) {
+                $subscriptionCancellationModal.on( '<?php echo $fs->get_action_tag('subscription_cancellation_action') ?>', function( evt, cancelSubscription ) {
                     setLoading(
                         $deactivateLicenseOrCancelTrial,
                         ( ! $deactivateLicenseOrCancelTrial.hasClass( 'fs-cancel-trial' ) ?
-                            '<?php fs_esc_js_echo_inline( 'Deactivating', 'deactivating', $slug ) ?>' :
-                            '<?php echo esc_html( sprintf( fs_text_inline( 'Cancelling %s', 'cancelling-x', $slug ), fs_text_inline( 'trial', 'trial', $slug ) ) ) ?>' ) + '...'
+                            '<?php fs_esc_js_echo_inline('Deactivating', 'deactivating', $slug) ?>' :
+                            '<?php echo esc_html(sprintf(fs_text_inline('Cancelling %s', 'cancelling-x', $slug), fs_text_inline('trial', 'trial', $slug))) ?>' ) + '...'
                     );
 
                     $subscriptionCancellationModal.find( '.fs-modal-footer .button' ).addClass( 'disabled' );
@@ -980,12 +984,12 @@
                         var $form = $( 'input[value="downgrade_account"],input[value="cancel_trial"]' ).parent();
                         $form.prepend( '<input type="hidden" name="deactivate_license" value="true" />' );
 
-                        $subscriptionCancellationModal.find( '.fs-modal-footer .button-primary' ).text( '<?php echo esc_js( sprintf(
-                            fs_text_inline( 'Cancelling %s...', 'cancelling-x' , $slug ),
-                            $is_paid_trial ?
-                                fs_text_inline( 'trial', 'trial', $slug ) :
-                                fs_text_inline( 'subscription', 'subscription', $slug )
-                        ) ) ?>' );
+                        $subscriptionCancellationModal.find( '.fs-modal-footer .button-primary' ).text( '<?php echo esc_js(sprintf(
+                fs_text_inline('Cancelling %s...', 'cancelling-x', $slug),
+                $is_paid_trial ?
+                                fs_text_inline('trial', 'trial', $slug) :
+                                fs_text_inline('subscription', 'subscription', $slug)
+            )) ?>' );
 
                         $form.submit();
                     }
@@ -996,15 +1000,15 @@
                 var $this = $( this );
                 if ( $this.hasClass( 'fs-cancel-trial' ) ) {
                     $subscriptionCancellationModal.find( '.fs-modal-panel' ).find( 'ul.subscription-actions, .fs-price-increase-warning' ).remove();
-                    $subscriptionCancellationModal.find( '.fs-modal-panel > p' ).text( <?php echo json_encode( $cancel_trial_confirm_text ) ?> );
+                    $subscriptionCancellationModal.find( '.fs-modal-panel > p' ).text( <?php echo json_encode($cancel_trial_confirm_text) ?> );
                     $subscriptionCancellationModal.trigger( 'showModal' );
-                } else if (confirm('<?php fs_esc_attr_echo_inline( 'Deactivating your license will block all premium features, but will enable activating the license on another site. Are you sure you want to proceed?', 'deactivate-license-confirm', $slug ) ?>')) {
+                } else if (confirm('<?php fs_esc_attr_echo_inline('Deactivating your license will block all premium features, but will enable activating the license on another site. Are you sure you want to proceed?', 'deactivate-license-confirm', $slug) ?>')) {
                     var $this = $(this);
 
                     if ( 0 !== $subscriptionCancellationModal.length ) {
                         $subscriptionCancellationModal.trigger( 'showModal' );
                     } else {
-                        setLoading( $this, '<?php fs_esc_js_echo_inline( 'Deactivating', 'deactivating', $slug ) ?>...' );
+                        setLoading( $this, '<?php fs_esc_js_echo_inline('Deactivating', 'deactivating', $slug) ?>...' );
                         $this[0].parentNode.submit();
                     }
                 }
@@ -1065,15 +1069,15 @@
                     url   : ajaxurl,
                     method: 'POST',
                     data  : {
-                        action   : '<?php echo $fs->get_ajax_action( 'toggle_whitelabel_mode' ) ?>',
-                        security : '<?php echo $fs->get_ajax_security( 'toggle_whitelabel_mode' ) ?>',
+                        action   : '<?php echo $fs->get_ajax_action('toggle_whitelabel_mode') ?>',
+                        security : '<?php echo $fs->get_ajax_security('toggle_whitelabel_mode') ?>',
                         module_id: <?php echo $fs->get_id() ?>
                     },
                     beforeSend: function () {
                         $toggleLink.parent().text( '<?php
                             $is_whitelabeled ?
-                                fs_esc_html_echo_inline( 'Disabling white-label mode', 'disabling-whitelabel-mode' ) :
-                                fs_esc_html_echo_inline( 'Enabling white-label mode', 'enabling-whitelabel-mode' )
+                                fs_esc_html_echo_inline('Disabling white-label mode', 'disabling-whitelabel-mode') :
+                                fs_esc_html_echo_inline('Enabling white-label mode', 'enabling-whitelabel-mode')
                         ?>' + '...' );
                     },
                     complete: function () {
@@ -1084,15 +1088,15 @@
         })(jQuery);
     </script>
 <?php
-	if ( $has_tabs ) {
-		$fs->_add_tabs_after_content();
-	}
-
-	$params = array(
-		'page'           => 'account',
-		'module_id'      => $fs->get_id(),
-		'module_type'    => $fs->get_module_type(),
-		'module_slug'    => $slug,
-		'module_version' => $fs->get_plugin_version(),
-	);
-	fs_require_template( 'powered-by.php', $params );
\ No newline at end of file
+    if ($has_tabs) {
+        $fs->_add_tabs_after_content();
+    }
+
+    $params = array(
+        'page'           => 'account',
+        'module_id'      => $fs->get_id(),
+        'module_type'    => $fs->get_module_type(),
+        'module_slug'    => $slug,
+        'module_version' => $fs->get_plugin_version(),
+    );
+    fs_require_template('powered-by.php', $params);
diff --git a/freemius/templates/account/billing.php b/freemius/templates/account/billing.php
index a4de4098a48f18de244a440532570b3eded6d868..ef624d71698c3c81845fa7866553eb41968f337e 100644
--- a/freemius/templates/account/billing.php
+++ b/freemius/templates/account/billing.php
@@ -1,323 +1,324 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2016, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.2.0
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2016, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.2.0
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	/**
-	 * @var array $VARS
-	 * @var Freemius $fs
-	 */
-	$fs = freemius( $VARS['id'] );
+    /**
+     * @var array $VARS
+     * @var Freemius $fs
+     */
+    $fs = freemius($VARS['id']);
 
-	$slug = $fs->get_slug();
+    $slug = $fs->get_slug();
 
-	$edit_text   = fs_text_x_inline( 'Edit', 'verb', 'edit', $slug );
-	$update_text = fs_text_x_inline( 'Update', 'verb', 'update', $slug );
+    $edit_text   = fs_text_x_inline('Edit', 'verb', 'edit', $slug);
+    $update_text = fs_text_x_inline('Update', 'verb', 'update', $slug);
 
-	$billing     = $fs->_fetch_billing();
-	$has_billing = ( $billing instanceof FS_Billing );
-	if ( ! $has_billing ) {
-		$billing = new FS_Billing();
-	}
+    $billing     = $fs->_fetch_billing();
+    $has_billing = ($billing instanceof FS_Billing);
+    if (! $has_billing) {
+        $billing = new FS_Billing();
+    }
 ?>
 <!-- Billing -->
 <div class="postbox">
 	<div id="fs_billing">
-		<h3><span class="dashicons dashicons-portfolio"></span> <?php fs_esc_html_echo_inline( 'Billing', 'billing', $slug ) ?></h3>
-		<table id="fs_billing_address"<?php if ( $has_billing ) {
-			echo ' class="fs-read-mode"';
-		} ?>>
+		<h3><span class="dashicons dashicons-portfolio"></span> <?php fs_esc_html_echo_inline('Billing', 'billing', $slug) ?></h3>
+		<table id="fs_billing_address"<?php if ($has_billing) {
+    echo ' class="fs-read-mode"';
+} ?>>
 			<tr>
-				<td><label><span><?php fs_esc_html_echo_inline( 'Business name', 'business-name', $slug ) ?>:</span> <input id="business_name" value="<?php echo $billing->business_name ?>" placeholder="<?php fs_esc_attr_echo_inline( 'Business name', 'business-name', $slug ) ?>"></label></td>
-				<td><label><span><?php fs_esc_html_echo_inline( 'Tax / VAT ID', 'tax-vat-id', $slug ) ?>:</span> <input id="tax_id" value="<?php echo $billing->tax_id ?>" placeholder="<?php fs_esc_attr_echo_inline( 'Tax / VAT ID', 'tax-vat-id', $slug ) ?>"></label></td>
+				<td><label><span><?php fs_esc_html_echo_inline('Business name', 'business-name', $slug) ?>:</span> <input id="business_name" value="<?php echo $billing->business_name ?>" placeholder="<?php fs_esc_attr_echo_inline('Business name', 'business-name', $slug) ?>"></label></td>
+				<td><label><span><?php fs_esc_html_echo_inline('Tax / VAT ID', 'tax-vat-id', $slug) ?>:</span> <input id="tax_id" value="<?php echo $billing->tax_id ?>" placeholder="<?php fs_esc_attr_echo_inline('Tax / VAT ID', 'tax-vat-id', $slug) ?>"></label></td>
 			</tr>
 			<tr>
-				<td><label><span><?php printf( fs_esc_html_inline( 'Address Line %d', 'address-line-n', $slug ), 1 ) ?>:</span> <input id="address_street" value="<?php echo $billing->address_street ?>" placeholder="<?php printf( fs_esc_attr_inline( 'Address Line %d', 'address-line-n', $slug ), 1 ) ?>"></label></td>
-				<td><label><span><?php printf( fs_esc_html_inline( 'Address Line %d', 'address-line-n', $slug ), 2 ) ?>:</span> <input id="address_apt" value="<?php echo $billing->address_apt ?>" placeholder="<?php printf( fs_esc_attr_inline( 'Address Line %d', 'address-line-n', $slug ), 2 ) ?>"></label></td>
+				<td><label><span><?php printf(fs_esc_html_inline('Address Line %d', 'address-line-n', $slug), 1) ?>:</span> <input id="address_street" value="<?php echo $billing->address_street ?>" placeholder="<?php printf(fs_esc_attr_inline('Address Line %d', 'address-line-n', $slug), 1) ?>"></label></td>
+				<td><label><span><?php printf(fs_esc_html_inline('Address Line %d', 'address-line-n', $slug), 2) ?>:</span> <input id="address_apt" value="<?php echo $billing->address_apt ?>" placeholder="<?php printf(fs_esc_attr_inline('Address Line %d', 'address-line-n', $slug), 2) ?>"></label></td>
 			</tr>
 			<tr>
-				<td><label><span><?php fs_esc_html_echo_inline( 'City', 'city', $slug ) ?> / <?php fs_esc_html_echo_inline( 'Town', 'town', $slug ) ?>:</span> <input id="address_city" value="<?php echo $billing->address_city ?>" placeholder="<?php fs_esc_attr_echo_inline( 'City', 'city', $slug ) ?> / <?php fs_esc_attr_echo_inline( 'Town', 'town', $slug ) ?>"></label></td>
-				<td><label><span><?php fs_esc_html_echo_inline( 'ZIP / Postal Code', 'zip-postal-code', $slug ) ?>:</span> <input id="address_zip" value="<?php echo $billing->address_zip ?>" placeholder="<?php fs_esc_attr_echo_inline( 'ZIP / Postal Code', 'zip-postal-code', $slug ) ?>"></label></td>
+				<td><label><span><?php fs_esc_html_echo_inline('City', 'city', $slug) ?> / <?php fs_esc_html_echo_inline('Town', 'town', $slug) ?>:</span> <input id="address_city" value="<?php echo $billing->address_city ?>" placeholder="<?php fs_esc_attr_echo_inline('City', 'city', $slug) ?> / <?php fs_esc_attr_echo_inline('Town', 'town', $slug) ?>"></label></td>
+				<td><label><span><?php fs_esc_html_echo_inline('ZIP / Postal Code', 'zip-postal-code', $slug) ?>:</span> <input id="address_zip" value="<?php echo $billing->address_zip ?>" placeholder="<?php fs_esc_attr_echo_inline('ZIP / Postal Code', 'zip-postal-code', $slug) ?>"></label></td>
 			</tr>
 			<tr>
 				<?php $countries = array(
-					'AF' => 'Afghanistan',
-					'AX' => 'Aland Islands',
-					'AL' => 'Albania',
-					'DZ' => 'Algeria',
-					'AS' => 'American Samoa',
-					'AD' => 'Andorra',
-					'AO' => 'Angola',
-					'AI' => 'Anguilla',
-					'AQ' => 'Antarctica',
-					'AG' => 'Antigua and Barbuda',
-					'AR' => 'Argentina',
-					'AM' => 'Armenia',
-					'AW' => 'Aruba',
-					'AU' => 'Australia',
-					'AT' => 'Austria',
-					'AZ' => 'Azerbaijan',
-					'BS' => 'Bahamas',
-					'BH' => 'Bahrain',
-					'BD' => 'Bangladesh',
-					'BB' => 'Barbados',
-					'BY' => 'Belarus',
-					'BE' => 'Belgium',
-					'BZ' => 'Belize',
-					'BJ' => 'Benin',
-					'BM' => 'Bermuda',
-					'BT' => 'Bhutan',
-					'BO' => 'Bolivia',
-					'BQ' => 'Bonaire, Saint Eustatius and Saba',
-					'BA' => 'Bosnia and Herzegovina',
-					'BW' => 'Botswana',
-					'BV' => 'Bouvet Island',
-					'BR' => 'Brazil',
-					'IO' => 'British Indian Ocean Territory',
-					'VG' => 'British Virgin Islands',
-					'BN' => 'Brunei',
-					'BG' => 'Bulgaria',
-					'BF' => 'Burkina Faso',
-					'BI' => 'Burundi',
-					'KH' => 'Cambodia',
-					'CM' => 'Cameroon',
-					'CA' => 'Canada',
-					'CV' => 'Cape Verde',
-					'KY' => 'Cayman Islands',
-					'CF' => 'Central African Republic',
-					'TD' => 'Chad',
-					'CL' => 'Chile',
-					'CN' => 'China',
-					'CX' => 'Christmas Island',
-					'CC' => 'Cocos Islands',
-					'CO' => 'Colombia',
-					'KM' => 'Comoros',
-					'CK' => 'Cook Islands',
-					'CR' => 'Costa Rica',
-					'HR' => 'Croatia',
-					'CU' => 'Cuba',
-					'CW' => 'Curacao',
-					'CY' => 'Cyprus',
-					'CZ' => 'Czech Republic',
-					'CD' => 'Democratic Republic of the Congo',
-					'DK' => 'Denmark',
-					'DJ' => 'Djibouti',
-					'DM' => 'Dominica',
-					'DO' => 'Dominican Republic',
-					'TL' => 'East Timor',
-					'EC' => 'Ecuador',
-					'EG' => 'Egypt',
-					'SV' => 'El Salvador',
-					'GQ' => 'Equatorial Guinea',
-					'ER' => 'Eritrea',
-					'EE' => 'Estonia',
-					'ET' => 'Ethiopia',
-					'FK' => 'Falkland Islands',
-					'FO' => 'Faroe Islands',
-					'FJ' => 'Fiji',
-					'FI' => 'Finland',
-					'FR' => 'France',
-					'GF' => 'French Guiana',
-					'PF' => 'French Polynesia',
-					'TF' => 'French Southern Territories',
-					'GA' => 'Gabon',
-					'GM' => 'Gambia',
-					'GE' => 'Georgia',
-					'DE' => 'Germany',
-					'GH' => 'Ghana',
-					'GI' => 'Gibraltar',
-					'GR' => 'Greece',
-					'GL' => 'Greenland',
-					'GD' => 'Grenada',
-					'GP' => 'Guadeloupe',
-					'GU' => 'Guam',
-					'GT' => 'Guatemala',
-					'GG' => 'Guernsey',
-					'GN' => 'Guinea',
-					'GW' => 'Guinea-Bissau',
-					'GY' => 'Guyana',
-					'HT' => 'Haiti',
-					'HM' => 'Heard Island and McDonald Islands',
-					'HN' => 'Honduras',
-					'HK' => 'Hong Kong',
-					'HU' => 'Hungary',
-					'IS' => 'Iceland',
-					'IN' => 'India',
-					'ID' => 'Indonesia',
-					'IR' => 'Iran',
-					'IQ' => 'Iraq',
-					'IE' => 'Ireland',
-					'IM' => 'Isle of Man',
-					'IL' => 'Israel',
-					'IT' => 'Italy',
-					'CI' => 'Ivory Coast',
-					'JM' => 'Jamaica',
-					'JP' => 'Japan',
-					'JE' => 'Jersey',
-					'JO' => 'Jordan',
-					'KZ' => 'Kazakhstan',
-					'KE' => 'Kenya',
-					'KI' => 'Kiribati',
-					'XK' => 'Kosovo',
-					'KW' => 'Kuwait',
-					'KG' => 'Kyrgyzstan',
-					'LA' => 'Laos',
-					'LV' => 'Latvia',
-					'LB' => 'Lebanon',
-					'LS' => 'Lesotho',
-					'LR' => 'Liberia',
-					'LY' => 'Libya',
-					'LI' => 'Liechtenstein',
-					'LT' => 'Lithuania',
-					'LU' => 'Luxembourg',
-					'MO' => 'Macao',
-					'MK' => 'Macedonia',
-					'MG' => 'Madagascar',
-					'MW' => 'Malawi',
-					'MY' => 'Malaysia',
-					'MV' => 'Maldives',
-					'ML' => 'Mali',
-					'MT' => 'Malta',
-					'MH' => 'Marshall Islands',
-					'MQ' => 'Martinique',
-					'MR' => 'Mauritania',
-					'MU' => 'Mauritius',
-					'YT' => 'Mayotte',
-					'MX' => 'Mexico',
-					'FM' => 'Micronesia',
-					'MD' => 'Moldova',
-					'MC' => 'Monaco',
-					'MN' => 'Mongolia',
-					'ME' => 'Montenegro',
-					'MS' => 'Montserrat',
-					'MA' => 'Morocco',
-					'MZ' => 'Mozambique',
-					'MM' => 'Myanmar',
-					'NA' => 'Namibia',
-					'NR' => 'Nauru',
-					'NP' => 'Nepal',
-					'NL' => 'Netherlands',
-					'NC' => 'New Caledonia',
-					'NZ' => 'New Zealand',
-					'NI' => 'Nicaragua',
-					'NE' => 'Niger',
-					'NG' => 'Nigeria',
-					'NU' => 'Niue',
-					'NF' => 'Norfolk Island',
-					'KP' => 'North Korea',
-					'MP' => 'Northern Mariana Islands',
-					'NO' => 'Norway',
-					'OM' => 'Oman',
-					'PK' => 'Pakistan',
-					'PW' => 'Palau',
-					'PS' => 'Palestinian Territory',
-					'PA' => 'Panama',
-					'PG' => 'Papua New Guinea',
-					'PY' => 'Paraguay',
-					'PE' => 'Peru',
-					'PH' => 'Philippines',
-					'PN' => 'Pitcairn',
-					'PL' => 'Poland',
-					'PT' => 'Portugal',
-					'PR' => 'Puerto Rico',
-					'QA' => 'Qatar',
-					'CG' => 'Republic of the Congo',
-					'RE' => 'Reunion',
-					'RO' => 'Romania',
-					'RU' => 'Russia',
-					'RW' => 'Rwanda',
-					'BL' => 'Saint Barthelemy',
-					'SH' => 'Saint Helena',
-					'KN' => 'Saint Kitts and Nevis',
-					'LC' => 'Saint Lucia',
-					'MF' => 'Saint Martin',
-					'PM' => 'Saint Pierre and Miquelon',
-					'VC' => 'Saint Vincent and the Grenadines',
-					'WS' => 'Samoa',
-					'SM' => 'San Marino',
-					'ST' => 'Sao Tome and Principe',
-					'SA' => 'Saudi Arabia',
-					'SN' => 'Senegal',
-					'RS' => 'Serbia',
-					'SC' => 'Seychelles',
-					'SL' => 'Sierra Leone',
-					'SG' => 'Singapore',
-					'SX' => 'Sint Maarten',
-					'SK' => 'Slovakia',
-					'SI' => 'Slovenia',
-					'SB' => 'Solomon Islands',
-					'SO' => 'Somalia',
-					'ZA' => 'South Africa',
-					'GS' => 'South Georgia and the South Sandwich Islands',
-					'KR' => 'South Korea',
-					'SS' => 'South Sudan',
-					'ES' => 'Spain',
-					'LK' => 'Sri Lanka',
-					'SD' => 'Sudan',
-					'SR' => 'Suriname',
-					'SJ' => 'Svalbard and Jan Mayen',
-					'SZ' => 'Swaziland',
-					'SE' => 'Sweden',
-					'CH' => 'Switzerland',
-					'SY' => 'Syria',
-					'TW' => 'Taiwan',
-					'TJ' => 'Tajikistan',
-					'TZ' => 'Tanzania',
-					'TH' => 'Thailand',
-					'TG' => 'Togo',
-					'TK' => 'Tokelau',
-					'TO' => 'Tonga',
-					'TT' => 'Trinidad and Tobago',
-					'TN' => 'Tunisia',
-					'TR' => 'Turkey',
-					'TM' => 'Turkmenistan',
-					'TC' => 'Turks and Caicos Islands',
-					'TV' => 'Tuvalu',
-					'VI' => 'U.S. Virgin Islands',
-					'UG' => 'Uganda',
-					'UA' => 'Ukraine',
-					'AE' => 'United Arab Emirates',
-					'GB' => 'United Kingdom',
-					'US' => 'United States',
-					'UM' => 'United States Minor Outlying Islands',
-					'UY' => 'Uruguay',
-					'UZ' => 'Uzbekistan',
-					'VU' => 'Vanuatu',
-					'VA' => 'Vatican',
-					'VE' => 'Venezuela',
-					'VN' => 'Vietnam',
-					'WF' => 'Wallis and Futuna',
-					'EH' => 'Western Sahara',
-					'YE' => 'Yemen',
-					'ZM' => 'Zambia',
-					'ZW' => 'Zimbabwe',
-				) ?>
-				<td><label><span><?php fs_esc_html_echo_inline( 'Country', 'country', $slug ) ?>:</span> <select id="address_country_code">
-							<?php if ( empty( $billing->address_country_code ) ) : ?>
-								<option value="" selected><?php fs_esc_html_echo_inline( 'Select Country', 'select-country', $slug ) ?></option>
+                    'AF' => 'Afghanistan',
+                    'AX' => 'Aland Islands',
+                    'AL' => 'Albania',
+                    'DZ' => 'Algeria',
+                    'AS' => 'American Samoa',
+                    'AD' => 'Andorra',
+                    'AO' => 'Angola',
+                    'AI' => 'Anguilla',
+                    'AQ' => 'Antarctica',
+                    'AG' => 'Antigua and Barbuda',
+                    'AR' => 'Argentina',
+                    'AM' => 'Armenia',
+                    'AW' => 'Aruba',
+                    'AU' => 'Australia',
+                    'AT' => 'Austria',
+                    'AZ' => 'Azerbaijan',
+                    'BS' => 'Bahamas',
+                    'BH' => 'Bahrain',
+                    'BD' => 'Bangladesh',
+                    'BB' => 'Barbados',
+                    'BY' => 'Belarus',
+                    'BE' => 'Belgium',
+                    'BZ' => 'Belize',
+                    'BJ' => 'Benin',
+                    'BM' => 'Bermuda',
+                    'BT' => 'Bhutan',
+                    'BO' => 'Bolivia',
+                    'BQ' => 'Bonaire, Saint Eustatius and Saba',
+                    'BA' => 'Bosnia and Herzegovina',
+                    'BW' => 'Botswana',
+                    'BV' => 'Bouvet Island',
+                    'BR' => 'Brazil',
+                    'IO' => 'British Indian Ocean Territory',
+                    'VG' => 'British Virgin Islands',
+                    'BN' => 'Brunei',
+                    'BG' => 'Bulgaria',
+                    'BF' => 'Burkina Faso',
+                    'BI' => 'Burundi',
+                    'KH' => 'Cambodia',
+                    'CM' => 'Cameroon',
+                    'CA' => 'Canada',
+                    'CV' => 'Cape Verde',
+                    'KY' => 'Cayman Islands',
+                    'CF' => 'Central African Republic',
+                    'TD' => 'Chad',
+                    'CL' => 'Chile',
+                    'CN' => 'China',
+                    'CX' => 'Christmas Island',
+                    'CC' => 'Cocos Islands',
+                    'CO' => 'Colombia',
+                    'KM' => 'Comoros',
+                    'CK' => 'Cook Islands',
+                    'CR' => 'Costa Rica',
+                    'HR' => 'Croatia',
+                    'CU' => 'Cuba',
+                    'CW' => 'Curacao',
+                    'CY' => 'Cyprus',
+                    'CZ' => 'Czech Republic',
+                    'CD' => 'Democratic Republic of the Congo',
+                    'DK' => 'Denmark',
+                    'DJ' => 'Djibouti',
+                    'DM' => 'Dominica',
+                    'DO' => 'Dominican Republic',
+                    'TL' => 'East Timor',
+                    'EC' => 'Ecuador',
+                    'EG' => 'Egypt',
+                    'SV' => 'El Salvador',
+                    'GQ' => 'Equatorial Guinea',
+                    'ER' => 'Eritrea',
+                    'EE' => 'Estonia',
+                    'ET' => 'Ethiopia',
+                    'FK' => 'Falkland Islands',
+                    'FO' => 'Faroe Islands',
+                    'FJ' => 'Fiji',
+                    'FI' => 'Finland',
+                    'FR' => 'France',
+                    'GF' => 'French Guiana',
+                    'PF' => 'French Polynesia',
+                    'TF' => 'French Southern Territories',
+                    'GA' => 'Gabon',
+                    'GM' => 'Gambia',
+                    'GE' => 'Georgia',
+                    'DE' => 'Germany',
+                    'GH' => 'Ghana',
+                    'GI' => 'Gibraltar',
+                    'GR' => 'Greece',
+                    'GL' => 'Greenland',
+                    'GD' => 'Grenada',
+                    'GP' => 'Guadeloupe',
+                    'GU' => 'Guam',
+                    'GT' => 'Guatemala',
+                    'GG' => 'Guernsey',
+                    'GN' => 'Guinea',
+                    'GW' => 'Guinea-Bissau',
+                    'GY' => 'Guyana',
+                    'HT' => 'Haiti',
+                    'HM' => 'Heard Island and McDonald Islands',
+                    'HN' => 'Honduras',
+                    'HK' => 'Hong Kong',
+                    'HU' => 'Hungary',
+                    'IS' => 'Iceland',
+                    'IN' => 'India',
+                    'ID' => 'Indonesia',
+                    'IR' => 'Iran',
+                    'IQ' => 'Iraq',
+                    'IE' => 'Ireland',
+                    'IM' => 'Isle of Man',
+                    'IL' => 'Israel',
+                    'IT' => 'Italy',
+                    'CI' => 'Ivory Coast',
+                    'JM' => 'Jamaica',
+                    'JP' => 'Japan',
+                    'JE' => 'Jersey',
+                    'JO' => 'Jordan',
+                    'KZ' => 'Kazakhstan',
+                    'KE' => 'Kenya',
+                    'KI' => 'Kiribati',
+                    'XK' => 'Kosovo',
+                    'KW' => 'Kuwait',
+                    'KG' => 'Kyrgyzstan',
+                    'LA' => 'Laos',
+                    'LV' => 'Latvia',
+                    'LB' => 'Lebanon',
+                    'LS' => 'Lesotho',
+                    'LR' => 'Liberia',
+                    'LY' => 'Libya',
+                    'LI' => 'Liechtenstein',
+                    'LT' => 'Lithuania',
+                    'LU' => 'Luxembourg',
+                    'MO' => 'Macao',
+                    'MK' => 'Macedonia',
+                    'MG' => 'Madagascar',
+                    'MW' => 'Malawi',
+                    'MY' => 'Malaysia',
+                    'MV' => 'Maldives',
+                    'ML' => 'Mali',
+                    'MT' => 'Malta',
+                    'MH' => 'Marshall Islands',
+                    'MQ' => 'Martinique',
+                    'MR' => 'Mauritania',
+                    'MU' => 'Mauritius',
+                    'YT' => 'Mayotte',
+                    'MX' => 'Mexico',
+                    'FM' => 'Micronesia',
+                    'MD' => 'Moldova',
+                    'MC' => 'Monaco',
+                    'MN' => 'Mongolia',
+                    'ME' => 'Montenegro',
+                    'MS' => 'Montserrat',
+                    'MA' => 'Morocco',
+                    'MZ' => 'Mozambique',
+                    'MM' => 'Myanmar',
+                    'NA' => 'Namibia',
+                    'NR' => 'Nauru',
+                    'NP' => 'Nepal',
+                    'NL' => 'Netherlands',
+                    'NC' => 'New Caledonia',
+                    'NZ' => 'New Zealand',
+                    'NI' => 'Nicaragua',
+                    'NE' => 'Niger',
+                    'NG' => 'Nigeria',
+                    'NU' => 'Niue',
+                    'NF' => 'Norfolk Island',
+                    'KP' => 'North Korea',
+                    'MP' => 'Northern Mariana Islands',
+                    'NO' => 'Norway',
+                    'OM' => 'Oman',
+                    'PK' => 'Pakistan',
+                    'PW' => 'Palau',
+                    'PS' => 'Palestinian Territory',
+                    'PA' => 'Panama',
+                    'PG' => 'Papua New Guinea',
+                    'PY' => 'Paraguay',
+                    'PE' => 'Peru',
+                    'PH' => 'Philippines',
+                    'PN' => 'Pitcairn',
+                    'PL' => 'Poland',
+                    'PT' => 'Portugal',
+                    'PR' => 'Puerto Rico',
+                    'QA' => 'Qatar',
+                    'CG' => 'Republic of the Congo',
+                    'RE' => 'Reunion',
+                    'RO' => 'Romania',
+                    'RU' => 'Russia',
+                    'RW' => 'Rwanda',
+                    'BL' => 'Saint Barthelemy',
+                    'SH' => 'Saint Helena',
+                    'KN' => 'Saint Kitts and Nevis',
+                    'LC' => 'Saint Lucia',
+                    'MF' => 'Saint Martin',
+                    'PM' => 'Saint Pierre and Miquelon',
+                    'VC' => 'Saint Vincent and the Grenadines',
+                    'WS' => 'Samoa',
+                    'SM' => 'San Marino',
+                    'ST' => 'Sao Tome and Principe',
+                    'SA' => 'Saudi Arabia',
+                    'SN' => 'Senegal',
+                    'RS' => 'Serbia',
+                    'SC' => 'Seychelles',
+                    'SL' => 'Sierra Leone',
+                    'SG' => 'Singapore',
+                    'SX' => 'Sint Maarten',
+                    'SK' => 'Slovakia',
+                    'SI' => 'Slovenia',
+                    'SB' => 'Solomon Islands',
+                    'SO' => 'Somalia',
+                    'ZA' => 'South Africa',
+                    'GS' => 'South Georgia and the South Sandwich Islands',
+                    'KR' => 'South Korea',
+                    'SS' => 'South Sudan',
+                    'ES' => 'Spain',
+                    'LK' => 'Sri Lanka',
+                    'SD' => 'Sudan',
+                    'SR' => 'Suriname',
+                    'SJ' => 'Svalbard and Jan Mayen',
+                    'SZ' => 'Swaziland',
+                    'SE' => 'Sweden',
+                    'CH' => 'Switzerland',
+                    'SY' => 'Syria',
+                    'TW' => 'Taiwan',
+                    'TJ' => 'Tajikistan',
+                    'TZ' => 'Tanzania',
+                    'TH' => 'Thailand',
+                    'TG' => 'Togo',
+                    'TK' => 'Tokelau',
+                    'TO' => 'Tonga',
+                    'TT' => 'Trinidad and Tobago',
+                    'TN' => 'Tunisia',
+                    'TR' => 'Turkey',
+                    'TM' => 'Turkmenistan',
+                    'TC' => 'Turks and Caicos Islands',
+                    'TV' => 'Tuvalu',
+                    'VI' => 'U.S. Virgin Islands',
+                    'UG' => 'Uganda',
+                    'UA' => 'Ukraine',
+                    'AE' => 'United Arab Emirates',
+                    'GB' => 'United Kingdom',
+                    'US' => 'United States',
+                    'UM' => 'United States Minor Outlying Islands',
+                    'UY' => 'Uruguay',
+                    'UZ' => 'Uzbekistan',
+                    'VU' => 'Vanuatu',
+                    'VA' => 'Vatican',
+                    'VE' => 'Venezuela',
+                    'VN' => 'Vietnam',
+                    'WF' => 'Wallis and Futuna',
+                    'EH' => 'Western Sahara',
+                    'YE' => 'Yemen',
+                    'ZM' => 'Zambia',
+                    'ZW' => 'Zimbabwe',
+                ) ?>
+				<td><label><span><?php fs_esc_html_echo_inline('Country', 'country', $slug) ?>:</span> <select id="address_country_code">
+							<?php if (empty($billing->address_country_code)) : ?>
+								<option value="" selected><?php fs_esc_html_echo_inline('Select Country', 'select-country', $slug) ?></option>
 							<?php endif ?>
-							<?php foreach ( $countries as $code => $country ) : ?>
+							<?php foreach ($countries as $code => $country) : ?>
 								<option
-									value="<?php echo $code ?>" <?php selected( $billing->address_country_code, $code ) ?>><?php echo $country ?></option>
+									value="<?php echo $code ?>" <?php selected($billing->address_country_code, $code) ?>><?php echo $country ?></option>
 							<?php endforeach ?>
 						</select></label></td>
-				<td><label><span><?php fs_esc_html_echo_inline( 'State', 'state', $slug ) ?> / <?php fs_esc_html_echo_inline( 'Province', 'province', $slug ) ?>:</span>
-						<input id="address_state" value="<?php echo $billing->address_state ?>" placeholder="<?php fs_esc_html_echo_inline( 'State', 'state', $slug ) ?> / <?php fs_esc_html_echo_inline( 'Province', 'province', $slug ) ?>"></label></td>
+				<td><label><span><?php fs_esc_html_echo_inline('State', 'state', $slug) ?> / <?php fs_esc_html_echo_inline('Province', 'province', $slug) ?>:</span>
+						<input id="address_state" value="<?php echo $billing->address_state ?>" placeholder="<?php fs_esc_html_echo_inline('State', 'state', $slug) ?> / <?php fs_esc_html_echo_inline('Province', 'province', $slug) ?>"></label></td>
 			</tr>
 			<tr>
 				<td colspan="2">
 					<button
-						class="button"><?php echo esc_html( $has_billing ?
-							$edit_text :
-							$update_text
-						) ?></button>
+						class="button"><?php echo esc_html(
+                    $has_billing ?
+                            $edit_text :
+                            $update_text
+                ) ?></button>
 				</td>
 			</tr>
 		</table>
@@ -356,7 +357,7 @@
 			var isEditMode = !$billingAddress.hasClass('fs-read-mode');
 
 			$(this)
-				.html(isEditMode ? '<?php echo esc_js( $update_text ) ?>' : '<?php echo esc_js( $edit_text ) ?>')
+				.html(isEditMode ? '<?php echo esc_js($update_text) ?>' : '<?php echo esc_js($edit_text) ?>')
 				.toggleClass('button-primary');
 
 			if (isEditMode) {
@@ -380,8 +381,8 @@
 					url    : ajaxurl,
 					method : 'POST',
 					data   : {
-						action   : '<?php echo $fs->get_ajax_action( 'update_billing' ) ?>',
-						security : '<?php echo $fs->get_ajax_security( 'update_billing' ) ?>',
+						action   : '<?php echo $fs->get_ajax_action('update_billing') ?>',
+						security : '<?php echo $fs->get_ajax_security('update_billing') ?>',
 						module_id: '<?php echo $fs->get_id() ?>',
 						billing  : billing
 					},
@@ -407,7 +408,7 @@
 
 				$billingAddress.toggleClass('fs-read-mode');
 				$billingAddress.find('.button')
-					.html('<?php echo esc_js( $update_text ) ?>')
+					.html('<?php echo esc_js($update_text) ?>')
 					.toggleClass('button-primary');
 			})
 			// If blured after editing only one field without changes, exit edit mode.
@@ -415,7 +416,7 @@
 				if (!isEditAllFieldsMode && !hasBillingChanged()) {
 					$billingAddress.toggleClass('fs-read-mode');
 					$billingAddress.find('.button')
-						.html('<?php echo esc_js( $edit_text ) ?>')
+						.html('<?php echo esc_js($edit_text) ?>')
 						.toggleClass('button-primary');
 				}
 			});
diff --git a/freemius/templates/account/index.php b/freemius/templates/account/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/templates/account/index.php
+++ b/freemius/templates/account/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/templates/account/partials/activate-license-button.php b/freemius/templates/account/partials/activate-license-button.php
index 216473e099f7e0a70eeefc5181194317f27a3120..cbaca92473a6157934e5c74d84f8103d088bcbe0 100644
--- a/freemius/templates/account/partials/activate-license-button.php
+++ b/freemius/templates/account/partials/activate-license-button.php
@@ -6,7 +6,7 @@
      * @since       2.0.0
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
@@ -21,34 +21,35 @@
     $premium_plan      = $VARS['plan'];
     $slug              = $VARS['slug'];
 
-    $blog_id    = ! empty( $VARS['blog_id'] ) && is_numeric( $VARS['blog_id'] ) ?
+    $blog_id    = ! empty($VARS['blog_id']) && is_numeric($VARS['blog_id']) ?
         $VARS['blog_id'] :
         '';
-    $install_id = ! empty( $VARS['install_id'] ) && FS_Site::is_valid_id( $VARS['install_id'] ) ?
+    $install_id = ! empty($VARS['install_id']) && FS_Site::is_valid_id($VARS['install_id']) ?
         $VARS['install_id'] :
         '';
 
-    $activate_plan_text = fs_text_inline( 'Activate %s Plan', 'activate-x-plan', $slug );
+    $activate_plan_text = fs_text_inline('Activate %s Plan', 'activate-x-plan', $slug);
 
     $action = 'activate_license';
 ?>
-<form action="<?php echo $fs->_get_admin_page_url( 'account' ) ?>" method="POST">
+<form action="<?php echo $fs->_get_admin_page_url('account') ?>" method="POST">
     <input type="hidden" name="fs_action" value="<?php echo $action ?>">
-    <?php wp_nonce_field( trim("{$action}:{$blog_id}:{$install_id}", ':') ) ?>
+    <?php wp_nonce_field(trim("{$action}:{$blog_id}:{$install_id}", ':')) ?>
     <input type="hidden" name="install_id" value="<?php echo $install_id ?>">
     <input type="hidden" name="blog_id" value="<?php echo $blog_id ?>">
     <input type="hidden" name="license_id" value="<?php echo $available_license->id ?>">
-    <input type="submit" class="fs-activate-license button<?php echo ! empty( $VARS['class'] ) ? ' ' . $VARS['class'] : '' ?>"
-           value="<?php echo esc_attr( sprintf(
-               $activate_plan_text . '%s',
-               $premium_plan->title,
-               ( $VARS['is_localhost'] && $available_license->is_free_localhost ) ?
-                   ' [' . fs_text_inline( 'Localhost', 'localhost', $slug ) . ']' :
-                   ( $available_license->is_single_site() ?
+    <input type="submit" class="fs-activate-license button<?php echo ! empty($VARS['class']) ? ' ' . $VARS['class'] : '' ?>"
+           value="<?php echo esc_attr(sprintf(
+    $activate_plan_text . '%s',
+    $premium_plan->title,
+    ($VARS['is_localhost'] && $available_license->is_free_localhost) ?
+                   ' [' . fs_text_inline('Localhost', 'localhost', $slug) . ']' :
+                   (
+                       $available_license->is_single_site() ?
                        '' :
-                       ' [' . ( 1 < $available_license->left() ?
-                           sprintf( fs_text_x_inline( '%s left', 'as 5 licenses left', 'x-left', $slug ), $available_license->left() ) :
-                           strtolower( fs_text_inline( 'Last license', 'last-license', $slug ) ) ) . ']'
+                       ' [' . (1 < $available_license->left() ?
+                           sprintf(fs_text_x_inline('%s left', 'as 5 licenses left', 'x-left', $slug), $available_license->left()) :
+                           strtolower(fs_text_inline('Last license', 'last-license', $slug))) . ']'
                    )
-           ) ) ?> ">
+)) ?> ">
 </form>
\ No newline at end of file
diff --git a/freemius/templates/account/partials/addon.php b/freemius/templates/account/partials/addon.php
index b77cd81c17f0c8820a8be6b87214745109e28652..6bc65039a8c280c8916d17cfcb589fd12a5f7e1b 100644
--- a/freemius/templates/account/partials/addon.php
+++ b/freemius/templates/account/partials/addon.php
@@ -13,40 +13,40 @@
     $active_plugins_directories_map = $VARS['active_plugins_directories_map'];
 
     $addon_info         = $VARS['addon_info'];
-    $is_addon_activated = $fs->is_addon_activated( $addon_id );
+    $is_addon_activated = $fs->is_addon_activated($addon_id);
     $is_addon_connected = $addon_info['is_connected'];
     $is_addon_installed = $VARS['is_addon_installed'];
 
-    $fs_addon = ( $is_addon_connected && $is_addon_installed ) ?
-        freemius( $addon_id ) :
+    $fs_addon = ($is_addon_connected && $is_addon_installed) ?
+        freemius($addon_id) :
         false;
 
     // Aliases.
-    $download_latest_text         = fs_text_x_inline( 'Download Latest', 'as download latest version', 'download-latest', $slug );
-    $downgrading_plan_text        = fs_text_inline( 'Downgrading your plan', 'downgrading-plan', $slug );
-    $cancelling_subscription_text = fs_text_inline( 'Cancelling the subscription', 'cancelling-subscription', $slug );
+    $download_latest_text         = fs_text_x_inline('Download Latest', 'as download latest version', 'download-latest', $slug);
+    $downgrading_plan_text        = fs_text_inline('Downgrading your plan', 'downgrading-plan', $slug);
+    $cancelling_subscription_text = fs_text_inline('Cancelling the subscription', 'cancelling-subscription', $slug);
     /* translators: %1$s: Either 'Downgrading your plan' or 'Cancelling the subscription' */
-    $downgrade_x_confirm_text     = fs_text_inline( '%1$s will immediately stop all future recurring payments and your %s plan license will expire in %s.', 'downgrade-x-confirm', $slug );
-    $prices_increase_text         = fs_text_inline( 'Please note that we will not be able to grandfather outdated pricing for renewals/new subscriptions after a cancellation. If you choose to renew the subscription manually in the future, after a price increase, which typically occurs once a year, you will be charged the updated price.', 'pricing-increase-warning', $slug );
-    $cancel_trial_confirm_text         = fs_text_inline( 'Cancelling the trial will immediately block access to all premium features. Are you sure?', 'cancel-trial-confirm', $slug );
-    $after_downgrade_non_blocking_text = fs_text_inline( 'You can still enjoy all %s features but you will not have access to %s security & feature updates, nor support.', 'after-downgrade-non-blocking', $slug );
-    $after_downgrade_blocking_text     = fs_text_inline( 'Once your license expires you can still use the Free version but you will NOT have access to the %s features.', 'after-downgrade-blocking', $slug );
+    $downgrade_x_confirm_text     = fs_text_inline('%1$s will immediately stop all future recurring payments and your %s plan license will expire in %s.', 'downgrade-x-confirm', $slug);
+    $prices_increase_text         = fs_text_inline('Please note that we will not be able to grandfather outdated pricing for renewals/new subscriptions after a cancellation. If you choose to renew the subscription manually in the future, after a price increase, which typically occurs once a year, you will be charged the updated price.', 'pricing-increase-warning', $slug);
+    $cancel_trial_confirm_text         = fs_text_inline('Cancelling the trial will immediately block access to all premium features. Are you sure?', 'cancel-trial-confirm', $slug);
+    $after_downgrade_non_blocking_text = fs_text_inline('You can still enjoy all %s features but you will not have access to %s security & feature updates, nor support.', 'after-downgrade-non-blocking', $slug);
+    $after_downgrade_blocking_text     = fs_text_inline('Once your license expires you can still use the Free version but you will NOT have access to the %s features.', 'after-downgrade-blocking', $slug);
     /* translators: %s: Plan title (e.g. "Professional") */
-    $activate_plan_text = fs_text_inline( 'Activate %s Plan', 'activate-x-plan', $slug );
-    $version_text       = fs_text_x_inline( 'Version', 'product version', 'version', $slug );
+    $activate_plan_text = fs_text_inline('Activate %s Plan', 'activate-x-plan', $slug);
+    $version_text       = fs_text_x_inline('Version', 'product version', 'version', $slug);
     /* translators: %s: Time period (e.g. Auto renews in "2 months") */
-    $renews_in_text = fs_text_inline( 'Auto renews in %s', 'renews-in', $slug );
+    $renews_in_text = fs_text_inline('Auto renews in %s', 'renews-in', $slug);
     /* translators: %s: Time period (e.g. Expires in "2 months") */
-    $expires_in_text   = fs_text_inline( 'Expires in %s', 'expires-in', $slug );
-    $cancel_trial_text = fs_text_inline( 'Cancel Trial', 'cancel-trial', $slug );
-    $change_plan_text  = fs_text_inline( 'Change Plan', 'change-plan', $slug );
-    $upgrade_text      = fs_text_x_inline( 'Upgrade', 'verb', 'upgrade', $slug );
-    $addons_text       = fs_text_inline( 'Add-Ons', 'add-ons', $slug );
-    $downgrade_text    = fs_text_x_inline( 'Downgrade', 'verb', 'downgrade', $slug );
-    $trial_text        = fs_text_x_inline( 'Trial', 'trial period', 'trial', $slug );
-    $free_text         = fs_text_inline( 'Free', 'free', $slug );
-    $activate_text     = fs_text_inline( 'Activate', 'activate', $slug );
-    $plan_text         = fs_text_x_inline( 'Plan', 'as product pricing plan', 'plan', $slug );
+    $expires_in_text   = fs_text_inline('Expires in %s', 'expires-in', $slug);
+    $cancel_trial_text = fs_text_inline('Cancel Trial', 'cancel-trial', $slug);
+    $change_plan_text  = fs_text_inline('Change Plan', 'change-plan', $slug);
+    $upgrade_text      = fs_text_x_inline('Upgrade', 'verb', 'upgrade', $slug);
+    $addons_text       = fs_text_inline('Add-Ons', 'add-ons', $slug);
+    $downgrade_text    = fs_text_x_inline('Downgrade', 'verb', 'downgrade', $slug);
+    $trial_text        = fs_text_x_inline('Trial', 'trial period', 'trial', $slug);
+    $free_text         = fs_text_inline('Free', 'free', $slug);
+    $activate_text     = fs_text_inline('Activate', 'activate', $slug);
+    $plan_text         = fs_text_x_inline('Plan', 'as product pricing plan', 'plan', $slug);
 
     // Defaults.
     $plan                   = null;
@@ -62,21 +62,21 @@
     $show_upgrade           = false;
     $is_whitelabeled        = $VARS['is_whitelabeled'];
 
-    if ( is_object( $fs_addon ) ) {
+    if (is_object($fs_addon)) {
         $is_paying                  = $fs_addon->is_paying();
         $user                       = $fs_addon->get_user();
         $site                       = $fs_addon->get_site();
         $license                    = $fs_addon->_get_license();
-        $subscription               = ( is_object( $license ) ?
-            $fs_addon->_get_subscription( $license->id ) :
-            null );
+        $subscription               = (is_object($license) ?
+            $fs_addon->_get_subscription($license->id) :
+            null);
         $plan                       = $fs_addon->get_plan();
         $plan_name                  = $plan->name;
         $plan_title                 = $plan->title;
         $is_paid_trial              = $fs_addon->is_paid_trial();
         $version                    = $fs_addon->get_plugin_version();
         $is_whitelabeled            = (
-            $fs_addon->is_whitelabeled( true ) &&
+            $fs_addon->is_whitelabeled(true) &&
             ! $fs_addon->get_parent_instance()->is_data_debug_mode()
         );
         $show_upgrade               = (
@@ -86,10 +86,10 @@
             ! $is_paid_trial &&
             ! $fs_addon->_has_premium_license()
         );
-    } else if ( $is_addon_connected ) {
+    } elseif ($is_addon_connected) {
         if (
-            empty( $addon_info ) ||
-            ! isset( $addon_info['site'] )
+            empty($addon_info) ||
+            ! isset($addon_info['site'])
         ) {
             $is_addon_connected = false;
         } else {
@@ -99,24 +99,24 @@
             $site    = $addon_info['site'];
             $version = $addon_info['version'];
 
-            $plan_name = isset( $addon_info['plan_name'] ) ?
+            $plan_name = isset($addon_info['plan_name']) ?
                 $addon_info['plan_name'] :
                 '';
 
-            $plan_title = isset( $addon_info['plan_title'] ) ?
+            $plan_title = isset($addon_info['plan_title']) ?
                 $addon_info['plan_title'] :
                 '';
 
-            if ( isset( $addon_info['license'] ) ) {
+            if (isset($addon_info['license'])) {
                 $license = $addon_info['license'];
             }
 
-            if ( isset( $addon_info['subscription'] ) ) {
+            if (isset($addon_info['subscription'])) {
                 $subscription = $addon_info['subscription'];
             }
 
             $has_valid_and_active_license = (
-                is_object( $license ) &&
+                is_object($license) &&
                 $license->is_active() &&
                 $license->is_valid()
             );
@@ -124,7 +124,7 @@
             $is_paid_trial = (
                 $site->is_trial() &&
                 $has_valid_and_active_license &&
-                ( $site->trial_plan_id == $license->plan_id )
+                ($site->trial_plan_id == $license->plan_id)
             );
 
             $is_whitelabeled = $addon_info['is_whitelabeled'];
@@ -132,22 +132,22 @@
     }
 
     $has_feature_enabled_license = (
-        is_object( $license ) &&
+        is_object($license) &&
         $license->is_features_enabled()
     );
 
-    $is_active_subscription = ( is_object( $subscription ) && $subscription->is_active() );
+    $is_active_subscription = (is_object($subscription) && $subscription->is_active());
 
-    $show_delete_install_button = ( ! $is_paying && WP_FS__DEV_MODE && ! $is_whitelabeled );
+    $show_delete_install_button = (! $is_paying && WP_FS__DEV_MODE && ! $is_whitelabeled);
 ?>
-<tr<?php if ( $odd ) {
+<tr<?php if ($odd) {
     echo ' class="alternate"';
 } ?>>
     <td>
         <!-- Title -->
         <?php echo $addon_info['title'] ?>
     </td>
-    <?php if ( $is_addon_connected ) : ?>
+    <?php if ($is_addon_connected) : ?>
         <!-- ID -->
         <td><?php echo $site->id ?></td>
         <!--/ ID -->
@@ -157,60 +157,60 @@
         <!--/ Version -->
 
         <!-- Plan Title -->
-        <td><?php echo strtoupper( is_string( $plan_name ) ? $plan_title : $free_text ) ?></td>
+        <td><?php echo strtoupper(is_string($plan_name) ? $plan_title : $free_text) ?></td>
         <!--/ Plan Title -->
 
         <!-- Expiration -->
         <td>
-        <?php if ( $site->is_trial() || is_object( $license ) ) : ?>
+        <?php if ($site->is_trial() || is_object($license)) : ?>
             <?php
                 $tags = array();
 
-                if ( $site->is_trial() ) {
+                if ($site->is_trial()) {
                     $tags[] = array( 'label' => $trial_text, 'type' => 'success' );
 
                     $tags[] = array(
                         'label' => sprintf(
-                            ( $is_paid_trial ?
+                            ($is_paid_trial ?
                                 $renews_in_text :
-                                $expires_in_text ),
-                            human_time_diff( time(), strtotime( $site->trial_ends ) )
+                                $expires_in_text),
+                            human_time_diff(time(), strtotime($site->trial_ends))
                         ),
-                        'type'  => ( $is_paid_trial ? 'success' : 'warn' )
+                        'type'  => ($is_paid_trial ? 'success' : 'warn')
                     );
                 } else {
-                    if ( is_object( $license ) ) {
-                        if ( $license->is_cancelled ) {
+                    if (is_object($license)) {
+                        if ($license->is_cancelled) {
                             $tags[] = array(
-                                'label' => fs_text_inline( 'Cancelled', 'cancelled', $slug ),
+                                'label' => fs_text_inline('Cancelled', 'cancelled', $slug),
                                 'type'  => 'error'
                             );
-                        } else if ( $license->is_expired() ) {
+                        } elseif ($license->is_expired()) {
                             $tags[] = array(
-                                'label' => fs_text_inline( 'Expired', 'expired', $slug ),
+                                'label' => fs_text_inline('Expired', 'expired', $slug),
                                 'type'  => 'error'
                             );
-                        } else if ( $license->is_lifetime() ) {
+                        } elseif ($license->is_lifetime()) {
                             $tags[] = array(
-                                'label' => fs_text_inline( 'No expiration', 'no-expiration', $slug ),
+                                'label' => fs_text_inline('No expiration', 'no-expiration', $slug),
                                 'type'  => 'success'
                             );
-                        } else if ( ! $is_active_subscription && ! $license->is_first_payment_pending() ) {
+                        } elseif (! $is_active_subscription && ! $license->is_first_payment_pending()) {
                             $tags[] = array(
-                                'label' => sprintf( $expires_in_text, human_time_diff( time(), strtotime( $license->expiration ) ) ),
+                                'label' => sprintf($expires_in_text, human_time_diff(time(), strtotime($license->expiration))),
                                 'type'  => 'warn'
                             );
-                        } else if ( $is_active_subscription && ! $subscription->is_first_payment_pending() ) {
+                        } elseif ($is_active_subscription && ! $subscription->is_first_payment_pending()) {
                             $tags[] = array(
-                                'label' => sprintf( $renews_in_text, human_time_diff( time(), strtotime( $subscription->next_payment ) ) ),
+                                'label' => sprintf($renews_in_text, human_time_diff(time(), strtotime($subscription->next_payment))),
                                 'type'  => 'success'
                             );
                         }
                     }
                 }
 
-                foreach ( $tags as $t ) {
-                    printf( '<label class="fs-tag fs-%s">%s</label>' . "\n", $t['type'], $t['label'] );
+                foreach ($tags as $t) {
+                    printf('<label class="fs-tag fs-%s">%s</label>' . "\n", $t['type'], $t['label']);
                 }
             ?>
         <?php endif ?>
@@ -221,53 +221,53 @@
         $buttons = array();
         $is_license_activation_added = false;
 
-        if ( $is_addon_activated ) {
-            if ( ! $is_whitelabeled ) {
-                if ( $is_paying ) {
+        if ($is_addon_activated) {
+            if (! $is_whitelabeled) {
+                if ($is_paying) {
                     $buttons[] = fs_ui_get_action_button(
                         $fs->get_id(),
                         'account',
                         'deactivate_license',
-                        fs_text_inline( 'Deactivate License', 'deactivate-license', $slug ),
+                        fs_text_inline('Deactivate License', 'deactivate-license', $slug),
                         '',
                         array( 'plugin_id' => $addon_id ),
                         false,
                         true
                     );
 
-                    $human_readable_license_expiration = human_time_diff( time(), strtotime( $license->expiration ) );
+                    $human_readable_license_expiration = human_time_diff(time(), strtotime($license->expiration));
                     $downgrade_confirmation_message    = sprintf(
                         $downgrade_x_confirm_text,
-                        ( $fs_addon->is_only_premium() ? $cancelling_subscription_text : $downgrading_plan_text ),
+                        ($fs_addon->is_only_premium() ? $cancelling_subscription_text : $downgrading_plan_text),
                         $plan->title,
                         $human_readable_license_expiration
                     );
 
                     $after_downgrade_message = ! $license->is_block_features ?
-                        sprintf( $after_downgrade_non_blocking_text, $plan->title, $fs_addon->get_module_label( true ) ) :
-                        sprintf( $after_downgrade_blocking_text, $plan->title );
+                        sprintf($after_downgrade_non_blocking_text, $plan->title, $fs_addon->get_module_label(true)) :
+                        sprintf($after_downgrade_blocking_text, $plan->title);
 
-                    if ( ! $license->is_lifetime() && $is_active_subscription ) {
+                    if (! $license->is_lifetime() && $is_active_subscription) {
                         $buttons[] = fs_ui_get_action_button(
                             $fs->get_id(),
                             'account',
                             'downgrade_account',
-                            esc_html( $fs_addon->is_only_premium() ? fs_text_inline( 'Cancel Subscription', 'cancel-subscription', $slug ) : $downgrade_text ),
+                            esc_html($fs_addon->is_only_premium() ? fs_text_inline('Cancel Subscription', 'cancel-subscription', $slug) : $downgrade_text),
                             '',
                             array( 'plugin_id' => $addon_id ),
                             false,
                             false,
                             false,
-                            ( $downgrade_confirmation_message . ' ' . $after_downgrade_message . ' ' . $prices_increase_text ),
+                            ($downgrade_confirmation_message . ' ' . $after_downgrade_message . ' ' . $prices_increase_text),
                             'POST'
                         );
                     }
-                } else if ( $is_paid_trial ) {
+                } elseif ($is_paid_trial) {
                     $buttons[] = fs_ui_get_action_button(
                         $fs->get_id(),
                         'account',
                         'cancel_trial',
-                        esc_html( $cancel_trial_text ),
+                        esc_html($cancel_trial_text),
                         '',
                         array( 'plugin_id' => $addon_id ),
                         false,
@@ -276,22 +276,22 @@
                         $cancel_trial_confirm_text,
                         'POST'
                     );
-                } else if ( ! $has_feature_enabled_license ) {
+                } elseif (! $has_feature_enabled_license) {
                     $premium_licenses = $fs_addon->get_available_premium_licenses();
 
-                    if ( ! empty( $premium_licenses ) ) {
+                    if (! empty($premium_licenses)) {
                         $premium_license               = $premium_licenses[0];
-                        $has_multiple_premium_licenses = ( 1 < count( $premium_licenses ) );
+                        $has_multiple_premium_licenses = (1 < count($premium_licenses));
 
-                        if ( ! $has_multiple_premium_licenses ) {
-                            $premium_plan = $fs_addon->_get_plan_by_id( $premium_license->plan_id );
+                        if (! $has_multiple_premium_licenses) {
+                            $premium_plan = $fs_addon->_get_plan_by_id($premium_license->plan_id);
                             $site         = $fs_addon->get_site();
 
                             $buttons[] = fs_ui_get_action_button(
                                 $fs->get_id(),
                                 'account',
                                 'activate_license',
-                                esc_html( sprintf( $activate_plan_text, $premium_plan->title, ( $site->is_localhost() && $premium_license->is_free_localhost ) ? '[localhost]' : ( 1 < $premium_license->left() ? $premium_license->left() . ' left' : '' ) ) ),
+                                esc_html(sprintf($activate_plan_text, $premium_plan->title, ($site->is_localhost() && $premium_license->is_free_localhost) ? '[localhost]' : (1 < $premium_license->left() ? $premium_license->left() . ' left' : ''))),
                                 ($has_multiple_premium_licenses ?
                                     'activate-license-trigger ' . $fs_addon->get_unique_affix() :
                                     ''),
@@ -310,129 +310,131 @@
             }
 
 //            if ( 0 == count( $buttons ) ) {
-                if ( $fs_addon->is_premium() && ! $is_license_activation_added ) {
-                    $fs_addon->_add_license_activation_dialog_box();
-
-                    $buttons[] = fs_ui_get_action_button(
-                        $fs->get_id(),
-                        'account',
-                        'activate_license',
-                        ( ! $has_feature_enabled_license ) ?
-                            fs_esc_html_inline( 'Activate License', 'activate-license', $slug ) :
-                            fs_esc_html_inline( 'Change License', 'change-license', $slug ),
-                        'activate-license-trigger ' . $fs_addon->get_unique_affix(),
-                        array(
+            if ($fs_addon->is_premium() && ! $is_license_activation_added) {
+                $fs_addon->_add_license_activation_dialog_box();
+
+                $buttons[] = fs_ui_get_action_button(
+                    $fs->get_id(),
+                    'account',
+                    'activate_license',
+                    (! $has_feature_enabled_license) ?
+                            fs_esc_html_inline('Activate License', 'activate-license', $slug) :
+                            fs_esc_html_inline('Change License', 'change-license', $slug),
+                    'activate-license-trigger ' . $fs_addon->get_unique_affix(),
+                    array(
                             'plugin_id' => $addon_id,
                         ),
-                        (! $has_feature_enabled_license),
-                        true
-                    );
+                    (! $has_feature_enabled_license),
+                    true
+                );
 
-                    $is_license_activation_added = true;
-                }
+                $is_license_activation_added = true;
+            }
 
-                if ( $fs_addon->has_paid_plan() ) {
-                    // Add sync license only if non of the other CTAs are visible.
-                    $buttons[] = fs_ui_get_action_button(
-                        $fs->get_id(),
-                        'account',
-                        $fs->get_unique_affix() . '_sync_license',
-                        fs_esc_html_x_inline( 'Sync', 'as synchronize', 'sync', $slug ),
-                        '',
-                        array( 'plugin_id' => $addon_id ),
-                        false,
-                        true
-                    );
-                }
+            if ($fs_addon->has_paid_plan()) {
+                // Add sync license only if non of the other CTAs are visible.
+                $buttons[] = fs_ui_get_action_button(
+                    $fs->get_id(),
+                    'account',
+                    $fs->get_unique_affix() . '_sync_license',
+                    fs_esc_html_x_inline('Sync', 'as synchronize', 'sync', $slug),
+                    '',
+                    array( 'plugin_id' => $addon_id ),
+                    false,
+                    true
+                );
+            }
 //            }
-        } else if ( ! $show_upgrade ) {
-            if ( $fs->is_addon_installed( $addon_id ) ) {
-                $addon_file = $fs->get_addon_basename( $addon_id );
+        } elseif (! $show_upgrade) {
+            if ($fs->is_addon_installed($addon_id)) {
+                $addon_file = $fs->get_addon_basename($addon_id);
 
-                if ( ! isset( $active_plugins_directories_map[ dirname( $addon_file ) ] ) ) {
+                if (! isset($active_plugins_directories_map[ dirname($addon_file) ])) {
                     $buttons[]  = sprintf(
                         '<a class="button button-primary edit" href="%s" title="%s">%s</a>',
-                        wp_nonce_url( 'plugins.php?action=activate&amp;plugin=' . $addon_file, 'activate-plugin_' . $addon_file ),
-                        fs_esc_attr_inline( 'Activate this add-on', 'activate-this-addon', $slug ),
+                        wp_nonce_url('plugins.php?action=activate&amp;plugin=' . $addon_file, 'activate-plugin_' . $addon_file),
+                        fs_esc_attr_inline('Activate this add-on', 'activate-this-addon', $slug),
                         $activate_text
                     );
                 }
             } else {
-                if ( $fs->is_allowed_to_install() ) {
+                if ($fs->is_allowed_to_install()) {
                     $buttons[] = sprintf(
                         '<a class="button button-primary edit" href="%s">%s</a>',
-                        wp_nonce_url( self_admin_url( 'update.php?' . ( ( isset( $addon_info['has_paid_plan'] ) && $addon_info['has_paid_plan'] ) ? 'fs_allow_updater_and_dialog=true&' : '' ) . 'action=install-plugin&plugin=' . $addon_info['slug'] ), 'install-plugin_' . $addon_info['slug'] ),
-                        fs_text_inline( 'Install Now', 'install-now', $slug )
+                        wp_nonce_url(self_admin_url('update.php?' . ((isset($addon_info['has_paid_plan']) && $addon_info['has_paid_plan']) ? 'fs_allow_updater_and_dialog=true&' : '') . 'action=install-plugin&plugin=' . $addon_info['slug']), 'install-plugin_' . $addon_info['slug']),
+                        fs_text_inline('Install Now', 'install-now', $slug)
                     );
                 } else {
                     $buttons[] = sprintf(
                         '<a target="_blank" rel="noopener" class="button button-primary edit" href="%s">%s</a>',
-                        $fs->_get_latest_download_local_url( $addon_id ),
-                        esc_html( $download_latest_text )
+                        $fs->_get_latest_download_local_url($addon_id),
+                        esc_html($download_latest_text)
                     );
                 }
             }
         }
 
-        if ( $show_upgrade ) {
-            $buttons[] = sprintf( '<a href="%s" class="thickbox button button-small button-primary" aria-label="%s" data-title="%s"><i class="dashicons dashicons-cart"></i> %s</a>',
-                esc_url( network_admin_url( 'plugin-install.php?fs_allow_updater_and_dialog=true' . ( ! empty( $fs_blog_id ) ? '&fs_blog_id=' . $fs_blog_id : '' ) . '&tab=plugin-information&parent_plugin_id=' . $fs->get_id() . '&plugin=' . $addon_info['slug'] .
-                                            '&TB_iframe=true&width=600&height=550' ) ),
-                esc_attr( sprintf( fs_text_inline( 'More information about %s', 'more-information-about-x', $slug ), $addon_info['title'] ) ),
-                esc_attr( $addon_info['title'] ),
-                ( $fs_addon->has_free_plan() ?
+        if ($show_upgrade) {
+            $buttons[] = sprintf(
+                '<a href="%s" class="thickbox button button-small button-primary" aria-label="%s" data-title="%s"><i class="dashicons dashicons-cart"></i> %s</a>',
+                esc_url(network_admin_url('plugin-install.php?fs_allow_updater_and_dialog=true' . (! empty($fs_blog_id) ? '&fs_blog_id=' . $fs_blog_id : '') . '&tab=plugin-information&parent_plugin_id=' . $fs->get_id() . '&plugin=' . $addon_info['slug'] .
+                                            '&TB_iframe=true&width=600&height=550')),
+                esc_attr(sprintf(fs_text_inline('More information about %s', 'more-information-about-x', $slug), $addon_info['title'])),
+                esc_attr($addon_info['title']),
+                ($fs_addon->has_free_plan() ?
                     $upgrade_text :
-                    fs_text_x_inline( 'Purchase', 'verb', 'purchase', $slug ) )
+                    fs_text_x_inline('Purchase', 'verb', 'purchase', $slug))
             );
         }
 
-        $buttons_count = count( $buttons );
+        $buttons_count = count($buttons);
         ?>
 
         <!-- Actions -->
-        <td><?php if ( $buttons_count > 1 ) : ?>
+        <td><?php if ($buttons_count > 1) : ?>
             <div class="button-group"><?php endif ?>
-                <?php foreach ( $buttons as $button ) {
-                        echo $button;
-                    } ?>
-                <?php if ( $buttons_count > 1 ) : ?></div><?php endif ?></td>
+                <?php foreach ($buttons as $button) {
+            echo $button;
+        } ?>
+                <?php if ($buttons_count > 1) : ?></div><?php endif ?></td>
         <!--/ Actions -->
 
     <?php else : ?>
         <?php // Add-on NOT Installed or was never connected.
-            $is_addon_installed_by_filesystem = $fs->is_addon_installed( $addon_id );
+            $is_addon_installed_by_filesystem = $fs->is_addon_installed($addon_id);
         ?>
         <!-- Action -->
-        <td colspan="<?php echo ( $is_addon_installed_by_filesystem || $show_delete_install_button ) ? '5' : '4' ?>">
-            <?php if ( $is_addon_installed_by_filesystem ) : ?>
-                <?php $addon_file = $fs->get_addon_basename( $addon_id ) ?>
-                <?php if ( ! isset( $active_plugins_directories_map[ dirname( $addon_file ) ] ) ) : ?>
+        <td colspan="<?php echo ($is_addon_installed_by_filesystem || $show_delete_install_button) ? '5' : '4' ?>">
+            <?php if ($is_addon_installed_by_filesystem) : ?>
+                <?php $addon_file = $fs->get_addon_basename($addon_id) ?>
+                <?php if (! isset($active_plugins_directories_map[ dirname($addon_file) ])) : ?>
                 <a class="button button-primary"
-                   href="<?php echo wp_nonce_url( 'plugins.php?action=activate&amp;plugin=' . $addon_file, 'activate-plugin_' . $addon_file ) ?>"
-                   title="<?php fs_esc_attr_echo_inline( 'Activate this add-on', 'activate-this-addon', $slug ) ?>"
-                   class="edit"><?php echo esc_html( $activate_text ) ?></a>
+                   href="<?php echo wp_nonce_url('plugins.php?action=activate&amp;plugin=' . $addon_file, 'activate-plugin_' . $addon_file) ?>"
+                   title="<?php fs_esc_attr_echo_inline('Activate this add-on', 'activate-this-addon', $slug) ?>"
+                   class="edit"><?php echo esc_html($activate_text) ?></a>
                 <?php endif ?>
             <?php else : ?>
-                <?php if ( $fs->is_allowed_to_install() ) : ?>
+                <?php if ($fs->is_allowed_to_install()) : ?>
                     <a class="button button-primary"
-                       href="<?php echo wp_nonce_url( self_admin_url( 'update.php?' . ( ( isset( $addon_info['has_paid_plan'] ) && $addon_info['has_paid_plan'] ) ? 'fs_allow_updater_and_dialog=true&' : '' ) . 'action=install-plugin&plugin=' . $addon_info['slug'] ), 'install-plugin_' . $addon_info['slug'] ) ?>"><?php fs_esc_html_echo_inline( 'Install Now', 'install-now', $slug ) ?></a>
+                       href="<?php echo wp_nonce_url(self_admin_url('update.php?' . ((isset($addon_info['has_paid_plan']) && $addon_info['has_paid_plan']) ? 'fs_allow_updater_and_dialog=true&' : '') . 'action=install-plugin&plugin=' . $addon_info['slug']), 'install-plugin_' . $addon_info['slug']) ?>"><?php fs_esc_html_echo_inline('Install Now', 'install-now', $slug) ?></a>
                 <?php else : ?>
                     <a target="_blank" rel="noopener" class="button button-primary"
-                       href="<?php echo $fs->_get_latest_download_local_url( $addon_id ) ?>"><?php echo esc_html( $download_latest_text ) ?></a>
+                       href="<?php echo $fs->_get_latest_download_local_url($addon_id) ?>"><?php echo esc_html($download_latest_text) ?></a>
                 <?php endif ?>
             <?php endif ?>
         </td>
         <!--/ Action -->
     <?php endif ?>
-    <?php if ( $show_delete_install_button ) : ?>
+    <?php if ($show_delete_install_button) : ?>
     <!-- Optional Delete Action -->
         <td>
             <?php
-                if ( $is_addon_activated ) {
+                if ($is_addon_activated) {
                     fs_ui_action_button(
-                        $fs->get_id(), 'account',
+                        $fs->get_id(),
+                        'account',
                         'delete_account',
-                        fs_text_x_inline( 'Delete', 'verb', 'delete', $slug ),
+                        fs_text_x_inline('Delete', 'verb', 'delete', $slug),
                         '',
                         array( 'plugin_id' => $addon_id ),
                         false,
diff --git a/freemius/templates/account/partials/deactivate-license-button.php b/freemius/templates/account/partials/deactivate-license-button.php
index 123b092f750f776bcb9e61327c06c47529964c7a..df202b717f54a992fbda067b0381e885492da023 100644
--- a/freemius/templates/account/partials/deactivate-license-button.php
+++ b/freemius/templates/account/partials/deactivate-license-button.php
@@ -6,7 +6,7 @@
      * @since       2.0.0
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
@@ -18,19 +18,19 @@
     $slug = $VARS['slug'];
     $fs   = $VARS['freemius'];
 
-    $blog_id    = ! empty( $VARS['blog_id'] ) && is_numeric( $VARS['blog_id'] ) ?
+    $blog_id    = ! empty($VARS['blog_id']) && is_numeric($VARS['blog_id']) ?
         $VARS['blog_id'] :
         '';
-    $install_id = ! empty( $VARS['install_id'] ) && FS_Site::is_valid_id( $VARS['install_id'] ) ?
+    $install_id = ! empty($VARS['install_id']) && FS_Site::is_valid_id($VARS['install_id']) ?
         $VARS['install_id'] :
         '';
 
     $action = 'deactivate_license';
 ?>
-<form action="<?php echo $fs->_get_admin_page_url( 'account' ) ?>" method="POST">
+<form action="<?php echo $fs->_get_admin_page_url('account') ?>" method="POST">
     <input type="hidden" name="fs_action" value="<?php echo $action ?>">
-    <?php wp_nonce_field( trim("{$action}:{$blog_id}:{$install_id}", ':') ) ?>
+    <?php wp_nonce_field(trim("{$action}:{$blog_id}:{$install_id}", ':')) ?>
     <input type="hidden" name="install_id" value="<?php echo $install_id ?>">
     <input type="hidden" name="blog_id" value="<?php echo $blog_id ?>">
-    <button type="button" class="fs-deactivate-license button<?php echo ! empty( $VARS['class'] ) ? ' ' . $VARS['class'] : '' ?>"><?php fs_echo_inline( 'Deactivate License', 'deactivate-license', $slug ) ?></button>
+    <button type="button" class="fs-deactivate-license button<?php echo ! empty($VARS['class']) ? ' ' . $VARS['class'] : '' ?>"><?php fs_echo_inline('Deactivate License', 'deactivate-license', $slug) ?></button>
 </form>
\ No newline at end of file
diff --git a/freemius/templates/account/partials/index.php b/freemius/templates/account/partials/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/templates/account/partials/index.php
+++ b/freemius/templates/account/partials/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/templates/account/partials/site.php b/freemius/templates/account/partials/site.php
index fd9b23708e8ed7e0c9f6673a624b3e6322198d83..8d0496ed4e4c4b6c4f876d07c2cb86d0d5f39ead 100644
--- a/freemius/templates/account/partials/site.php
+++ b/freemius/templates/account/partials/site.php
@@ -6,7 +6,7 @@
      * @since       2.0.0
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
@@ -27,105 +27,106 @@
     $blog_id               = $site['blog_id'];
 
     $install       = $VARS['install'];
-    $is_registered = ! empty( $install );
+    $is_registered = ! empty($install);
     $license       = null;
     $trial_plan    = $fs->get_trial_plan();
-    $free_text     = fs_text_inline( 'Free', 'free', $slug );
+    $free_text     = fs_text_inline('Free', 'free', $slug);
 
-    if ( $is_whitelabeled && $fs->is_delegated_connection( $blog_id ) ) {
-        $is_whitelabeled = $fs->is_whitelabeled( true, $blog_id );
+    if ($is_whitelabeled && $fs->is_delegated_connection($blog_id)) {
+        $is_whitelabeled = $fs->is_whitelabeled(true, $blog_id);
     }
 ?>
-    <tr class="fs-site-details" data-blog-id="<?php echo $blog_id ?>"<?php if ( $is_registered ) : ?> data-install-id="<?php echo $install->id ?>"<?php endif ?>>
+    <tr class="fs-site-details" data-blog-id="<?php echo $blog_id ?>"<?php if ($is_registered) : ?> data-install-id="<?php echo $install->id ?>"<?php endif ?>>
         <!-- Install ID or Opt-in option -->
-        <td><?php if ( $is_registered ) : ?>
+        <td><?php if ($is_registered) : ?>
                 <?php echo $install->id ?>
             <?php else : ?>
                 <?php $action = 'opt_in' ?>
-                <form action="<?php echo $fs->_get_admin_page_url( 'account' ) ?>" method="POST">
+                <form action="<?php echo $fs->_get_admin_page_url('account') ?>" method="POST">
                     <input type="hidden" name="fs_action" value="<?php echo $action ?>">
-                    <?php wp_nonce_field( trim( "{$action}:{$blog_id}", ':' ) ) ?>
+                    <?php wp_nonce_field(trim("{$action}:{$blog_id}", ':')) ?>
                     <input type="hidden" name="blog_id" value="<?php echo $blog_id ?>">
-                    <button class="fs-opt-in button button-small"><?php fs_esc_html_echo_inline( 'Opt In', 'opt-in', $slug ) ?></button>
+                    <button class="fs-opt-in button button-small"><?php fs_esc_html_echo_inline('Opt In', 'opt-in', $slug) ?></button>
                 </form>
             <?php endif ?>
         </td>
         <!--/ Install ID or Opt-in option -->
 
         <!-- Site URL -->
-        <td class="fs-field-url fs-main-column"><?php echo fs_strip_url_protocol( $site['url'] ) ?></td>
+        <td class="fs-field-url fs-main-column"><?php echo fs_strip_url_protocol($site['url']) ?></td>
         <!--/ Site URL -->
 
         <!-- License Activation / Deactivation -->
-        <td><?php if ( $has_paid_plan ) {
-                $view_params = array(
+        <td><?php if ($has_paid_plan) {
+    $view_params = array(
                     'freemius' => $fs,
                     'slug'     => $slug,
                     'blog_id'  => $blog_id,
                     'class'    => 'button-small',
                 );
 
-                $license = null;
-                if ( $is_registered ) {
-                    $view_params['install_id']   = $install->id;
-                    $view_params['is_localhost'] = $install->is_localhost();
+    $license = null;
+    if ($is_registered) {
+        $view_params['install_id']   = $install->id;
+        $view_params['is_localhost'] = $install->is_localhost();
 
-                    $has_license = FS_Plugin_License::is_valid_id( $install->license_id );
-                    $license     = $has_license ?
-                        $fs->_get_license_by_id( $install->license_id ) :
+        $has_license = FS_Plugin_License::is_valid_id($install->license_id);
+        $license     = $has_license ?
+                        $fs->_get_license_by_id($install->license_id) :
                         null;
-                } else {
-                    $view_params['is_localhost'] = FS_Site::is_localhost_by_address( $site['url'] );
-                }
+    } else {
+        $view_params['is_localhost'] = FS_Site::is_localhost_by_address($site['url']);
+    }
 
-                if ( ! $is_whitelabeled ) {
-                    if ( is_object( $license ) ) {
-                        $view_params['license'] = $license;
+    if (! $is_whitelabeled) {
+        if (is_object($license)) {
+            $view_params['license'] = $license;
 
-                        // Show license deactivation button.
-                        fs_require_template( 'account/partials/deactivate-license-button.php', $view_params );
-                    } else {
-                        if ( is_object( $main_license ) && $main_license->can_activate( $view_params['is_localhost'] ) ) {
-                            // Main license is available for activation.
-                            $available_license = $main_license;
-                        } else {
-                            // Try to find any available license for activation.
-                            $available_license = $fs->_get_available_premium_license( $view_params['is_localhost'] );
-                        }
+            // Show license deactivation button.
+            fs_require_template('account/partials/deactivate-license-button.php', $view_params);
+        } else {
+            if (is_object($main_license) && $main_license->can_activate($view_params['is_localhost'])) {
+                // Main license is available for activation.
+                $available_license = $main_license;
+            } else {
+                // Try to find any available license for activation.
+                $available_license = $fs->_get_available_premium_license($view_params['is_localhost']);
+            }
 
-                        if ( is_object( $available_license ) ) {
-                            $premium_plan = $fs->_get_plan_by_id( $available_license->plan_id );
+            if (is_object($available_license)) {
+                $premium_plan = $fs->_get_plan_by_id($available_license->plan_id);
 
-                            $view_params['license'] = $available_license;
-                            $view_params['class'] .= ' button-primary';
-                            $view_params['plan'] = $premium_plan;
+                $view_params['license'] = $available_license;
+                $view_params['class'] .= ' button-primary';
+                $view_params['plan'] = $premium_plan;
 
-                            fs_require_template( 'account/partials/activate-license-button.php', $view_params );
-                        }
-                    }
-                }
-            } ?></td>
+                fs_require_template('account/partials/activate-license-button.php', $view_params);
+            }
+        }
+    }
+} ?></td>
         <!--/ License Activation / Deactivation -->
 
         <!-- Plan -->
-        <td><?php if ( $is_registered ) : ?>
+        <td><?php if ($is_registered) : ?>
                 <?php
-                if ( ! $has_paid_plan ) {
+                if (! $has_paid_plan) {
                     $plan_title = $free_text;
                 } else {
-                    if ( $install->is_trial() ) {
-                        if ( is_object( $trial_plan ) && $trial_plan->id == $install->trial_plan_id ) {
-                            $plan_title = is_string( $trial_plan->name ) ?
-                                strtoupper( $trial_plan->title ) :
-                                fs_text_inline( 'Trial', 'trial', $slug );
+                    if ($install->is_trial()) {
+                        if (is_object($trial_plan) && $trial_plan->id == $install->trial_plan_id) {
+                            $plan_title = is_string($trial_plan->name) ?
+                                strtoupper($trial_plan->title) :
+                                fs_text_inline('Trial', 'trial', $slug);
                         } else {
-                            $plan_title = fs_text_inline( 'Trial', 'trial', $slug );
+                            $plan_title = fs_text_inline('Trial', 'trial', $slug);
                         }
                     } else {
-                        $plan       = $fs->_get_plan_by_id( $install->plan_id );
-                        $plan_title = strtoupper( is_string( $plan->title ) ?
+                        $plan       = $fs->_get_plan_by_id($install->plan_id);
+                        $plan_title = strtoupper(
+                            is_string($plan->title) ?
                             $plan->title :
-                            strtoupper( $free_text )
+                            strtoupper($free_text)
                         );
                     }
                 }
@@ -135,13 +136,13 @@
         <!--/ Plan -->
 
         <!-- More details button -->
-        <td><?php if ( $is_registered ) : ?>
+        <td><?php if ($is_registered) : ?>
                 <button class="fs-show-install-details button button-small">More details <i
                         class="dashicons dashicons-arrow-right-alt2"></i>
                 </button><?php endif ?></td>
         <!--/ More details button -->
     </tr>
-<?php if ( $is_registered ) : ?>
+<?php if ($is_registered) : ?>
     <!-- More details -->
     <tr class="fs-install-details" data-install-id="<?php echo $install->id ?>" style="display: none">
         <td colspan="5">
@@ -149,24 +150,24 @@
                 <tbody>
                 <?php $row_index = 0 ?>
                 <!-- Blog ID -->
-                <tr <?php if ( 1 == $row_index % 2 ) {
+                <tr <?php if (1 == $row_index % 2) {
                     echo ' class="alternate"';
                 } ?>>
                     <td>
-                        <nobr><?php fs_esc_html_echo_inline( 'Blog ID', 'blog-id', $slug ) ?>:</nobr>
+                        <nobr><?php fs_esc_html_echo_inline('Blog ID', 'blog-id', $slug) ?>:</nobr>
                     </td>
                     <td><code><?php echo $blog_id ?></code></td>
-                    <td><?php if ( ! FS_Plugin_License::is_valid_id( $install->license_id ) ) : ?>
+                    <td><?php if (! FS_Plugin_License::is_valid_id($install->license_id)) : ?>
                         <!-- Toggle Usage Tracking -->
                         <?php $action = 'toggle_tracking' ?>
-                        <form action="<?php echo $fs->_get_admin_page_url( 'account' ) ?>" method="POST">
+                        <form action="<?php echo $fs->_get_admin_page_url('account') ?>" method="POST">
                             <input type="hidden" name="fs_action" value="<?php echo $action ?>">
-                            <?php wp_nonce_field( trim( "{$action}:{$blog_id}:{$install->id}", ':' ) ) ?>
+                            <?php wp_nonce_field(trim("{$action}:{$blog_id}:{$install->id}", ':')) ?>
                             <input type="hidden" name="install_id" value="<?php echo $install->id ?>">
                             <input type="hidden" name="blog_id" value="<?php echo $blog_id ?>">
-                            <button class="fs-toggle-tracking button button-small<?php if ( $install->is_disconnected ) {
-                                echo ' button-primary';
-                            } ?>" data-is-disconnected="<?php echo $install->is_disconnected ? 'true' : 'false' ?>"><?php $install->is_disconnected ? fs_esc_html_echo_inline( 'Opt In', 'opt-in', $slug ) : fs_esc_html_echo_inline( 'Opt Out', 'opt-out', $slug ) ?></button>
+                            <button class="fs-toggle-tracking button button-small<?php if ($install->is_disconnected) {
+                    echo ' button-primary';
+                } ?>" data-is-disconnected="<?php echo $install->is_disconnected ? 'true' : 'false' ?>"><?php $install->is_disconnected ? fs_esc_html_echo_inline('Opt In', 'opt-in', $slug) : fs_esc_html_echo_inline('Opt Out', 'opt-out', $slug) ?></button>
                         </form>
                     <!--/ Toggle Usage Tracking -->
                     <?php endif ?></td>
@@ -174,43 +175,43 @@
                 <?php $row_index ++ ?>
                 <!--/ Blog ID -->
 
-                <?php if ( $is_registered && $install->user_id != $main_user->id ) : ?>
+                <?php if ($is_registered && $install->user_id != $main_user->id) : ?>
                     <?php
                     /**
                      * @var FS_User $user
                      */
-                    $user = Freemius::_get_user_by_id( $install->user_id ) ?>
-                    <?php if ( is_object( $user ) ) : ?>
+                    $user = Freemius::_get_user_by_id($install->user_id) ?>
+                    <?php if (is_object($user)) : ?>
                         <!-- User Name -->
-                        <tr <?php if ( 1 == $row_index % 2 ) {
-                            echo ' class="alternate"';
-                        } ?>>
+                        <tr <?php if (1 == $row_index % 2) {
+                        echo ' class="alternate"';
+                    } ?>>
                             <td>
-                                <nobr><?php fs_esc_html_echo_inline( 'Owner Name', 'owner-name', $slug ) ?>:</nobr>
+                                <nobr><?php fs_esc_html_echo_inline('Owner Name', 'owner-name', $slug) ?>:</nobr>
                             </td>
-                            <td colspan="2"><code><?php echo htmlspecialchars( $user->get_name() ) ?></code></td>
+                            <td colspan="2"><code><?php echo htmlspecialchars($user->get_name()) ?></code></td>
                         </tr>
                         <?php $row_index ++ ?>
                         <!--/ User Name -->
 
                         <!-- User Email -->
-                        <tr <?php if ( 1 == $row_index % 2 ) {
-                            echo ' class="alternate"';
-                        } ?>>
+                        <tr <?php if (1 == $row_index % 2) {
+                        echo ' class="alternate"';
+                    } ?>>
                             <td>
-                                <nobr><?php fs_esc_html_echo_inline( 'Owner Email', 'owner-email', $slug ) ?>:</nobr>
+                                <nobr><?php fs_esc_html_echo_inline('Owner Email', 'owner-email', $slug) ?>:</nobr>
                             </td>
-                            <td colspan="2"><code><?php echo htmlspecialchars( $user->email ) ?></code></td>
+                            <td colspan="2"><code><?php echo htmlspecialchars($user->email) ?></code></td>
                         </tr>
                         <?php $row_index ++ ?>
                         <!--/ User Email -->
 
                         <!-- User ID -->
-                        <tr <?php if ( 1 == $row_index % 2 ) {
-                            echo ' class="alternate"';
-                        } ?>>
+                        <tr <?php if (1 == $row_index % 2) {
+                        echo ' class="alternate"';
+                    } ?>>
                             <td>
-                                <nobr><?php fs_esc_html_echo_inline( 'Owner ID', 'owner-id', $slug ) ?>:</nobr>
+                                <nobr><?php fs_esc_html_echo_inline('Owner ID', 'owner-id', $slug) ?>:</nobr>
                             </td>
                             <td colspan="2"><code><?php echo $user->id ?></code></td>
                         </tr>
@@ -220,121 +221,121 @@
                 <?php endif ?>
 
                 <!-- Public Key -->
-                <tr <?php if ( 1 == $row_index % 2 ) {
-                    echo ' class="alternate"';
-                } ?>>
+                <tr <?php if (1 == $row_index % 2) {
+                        echo ' class="alternate"';
+                    } ?>>
                     <td>
-                        <nobr><?php fs_esc_html_echo_inline( 'Public Key', 'public-key', $slug ) ?>:</nobr>
+                        <nobr><?php fs_esc_html_echo_inline('Public Key', 'public-key', $slug) ?>:</nobr>
                     </td>
-                    <td colspan="2"><code><?php echo htmlspecialchars( $install->public_key ) ?></code></td>
+                    <td colspan="2"><code><?php echo htmlspecialchars($install->public_key) ?></code></td>
                 </tr>
                 <?php $row_index ++ ?>
                 <!--/ Public Key -->
 
                 <!-- Secret Key -->
-                <tr <?php if ( 1 == $row_index % 2 ) {
-                    echo ' class="alternate"';
-                } ?>>
+                <tr <?php if (1 == $row_index % 2) {
+                        echo ' class="alternate"';
+                    } ?>>
                     <td>
-                        <nobr><?php fs_esc_html_echo_inline( 'Secret Key', 'secret-key', $slug ) ?>:</nobr>
+                        <nobr><?php fs_esc_html_echo_inline('Secret Key', 'secret-key', $slug) ?>:</nobr>
                     </td>
                     <td>
-                        <code><?php echo FS_Plugin_License::mask_secret_key_for_html( $install->secret_key ) ?></code>
-                        <?php if ( ! $is_whitelabeled ) : ?>
-                        <input type="text" value="<?php echo htmlspecialchars( $install->secret_key ) ?>"
+                        <code><?php echo FS_Plugin_License::mask_secret_key_for_html($install->secret_key) ?></code>
+                        <?php if (! $is_whitelabeled) : ?>
+                        <input type="text" value="<?php echo htmlspecialchars($install->secret_key) ?>"
                                style="display: none" readonly/></td>
                         <?php endif ?>
-                    <?php if ( ! $is_whitelabeled ) : ?>
-                    <td><button class="button button-small fs-toggle-visibility"><?php fs_esc_html_echo_x_inline( 'Show', 'verb', 'show', $slug ) ?></button></td>
+                    <?php if (! $is_whitelabeled) : ?>
+                    <td><button class="button button-small fs-toggle-visibility"><?php fs_esc_html_echo_x_inline('Show', 'verb', 'show', $slug) ?></button></td>
                     <?php endif ?>
                 </tr>
                 <?php $row_index ++ ?>
                 <!--/ Secret Key -->
 
-                <?php if ( is_object( $license ) ) : ?>
+                <?php if (is_object($license)) : ?>
                     <!-- License Key -->
-                    <tr <?php if ( 1 == $row_index % 2 ) {
+                    <tr <?php if (1 == $row_index % 2) {
                         echo ' class="alternate"';
                     } ?>>
                         <td>
-                            <nobr><?php fs_esc_html_echo_inline( 'License Key', 'license-key', $slug ) ?>:</nobr>
+                            <nobr><?php fs_esc_html_echo_inline('License Key', 'license-key', $slug) ?>:</nobr>
                         </td>
                         <td>
                             <code><?php echo $license->get_html_escaped_masked_secret_key() ?></code>
-                            <?php if ( ! $is_whitelabeled ) : ?>
-                            <input type="text" value="<?php echo htmlspecialchars( $license->secret_key ) ?>"
+                            <?php if (! $is_whitelabeled) : ?>
+                            <input type="text" value="<?php echo htmlspecialchars($license->secret_key) ?>"
                                    style="display: none" readonly/></td>
                             <?php endif ?>
-                        <?php if ( ! $is_whitelabeled ) : ?>
+                        <?php if (! $is_whitelabeled) : ?>
                         <td>
-                            <button class="button button-small fs-toggle-visibility"><?php fs_esc_html_echo_x_inline( 'Show', 'verb', 'show', $slug ) ?></button>
-                            <button class="button button-small activate-license-trigger <?php echo $fs->get_unique_affix() ?>"><?php fs_esc_html_echo_inline( 'Change License', 'change-license', $slug ) ?></button>
+                            <button class="button button-small fs-toggle-visibility"><?php fs_esc_html_echo_x_inline('Show', 'verb', 'show', $slug) ?></button>
+                            <button class="button button-small activate-license-trigger <?php echo $fs->get_unique_affix() ?>"><?php fs_esc_html_echo_inline('Change License', 'change-license', $slug) ?></button>
                         </td>
                         <?php endif ?>
                     </tr>
                     <?php $row_index ++ ?>
                     <!--/ License Key -->
 
-                    <?php if ( ! is_object( $main_license ) || $main_license->id != $license->id ) : ?>
-                        <?php $subscription = $fs->_get_subscription( $license->id ) ?>
-                        <?php if ( ! $license->is_lifetime() && is_object( $subscription ) ) : ?>
+                    <?php if (! is_object($main_license) || $main_license->id != $license->id) : ?>
+                        <?php $subscription = $fs->_get_subscription($license->id) ?>
+                        <?php if (! $license->is_lifetime() && is_object($subscription)) : ?>
                             <!-- Subscription -->
-                            <tr <?php if ( 1 == $row_index % 2 ) {
-                                echo ' class="alternate"';
-                            } ?>>
+                            <tr <?php if (1 == $row_index % 2) {
+                        echo ' class="alternate"';
+                    } ?>>
                                 <td>
-                                    <nobr><?php fs_esc_html_echo_inline( 'Subscription', 'subscription', $slug ) ?>:</nobr>
+                                    <nobr><?php fs_esc_html_echo_inline('Subscription', 'subscription', $slug) ?>:</nobr>
                                 </td>
                                 <?php
                                     $is_active_subscription = $subscription->is_active();
 
-                                    $renews_in_text = fs_text_inline( 'Auto renews in %s', 'renews-in', $slug );
+                                    $renews_in_text = fs_text_inline('Auto renews in %s', 'renews-in', $slug);
                                     /* translators: %s: Time period (e.g. Expires in "2 months") */
-                                    $expires_in_text = fs_text_inline( 'Expires in %s', 'expires-in', $slug );
+                                    $expires_in_text = fs_text_inline('Expires in %s', 'expires-in', $slug);
                                 ?>
                                 <td>
                                     <code><?php echo $subscription->id ?> - <?php
-                                        echo ( 12 == $subscription->billing_cycle ?
-                                            _fs_text_inline( 'Annual', 'annual', $slug ) :
-                                            _fs_text_inline( 'Monthly', 'monthly', $slug )
+                                        echo(12 == $subscription->billing_cycle ?
+                                            _fs_text_inline('Annual', 'annual', $slug) :
+                                            _fs_text_inline('Monthly', 'monthly', $slug)
                                         );
                                         ?>
                                     </code>
-                                    <?php if ( ! $is_active_subscription && ! $license->is_first_payment_pending() ) : ?>
-                                        <label class="fs-tag fs-warn"><?php echo esc_html( sprintf( $expires_in_text, human_time_diff( time(), strtotime( $license->expiration ) ) ) ) ?></label>
-                                    <?php elseif ( $is_active_subscription && ! $subscription->is_first_payment_pending() ) : ?>
-                                        <label class="fs-tag fs-success"><?php echo esc_html( sprintf( $renews_in_text, human_time_diff( time(), strtotime( $subscription->next_payment ) ) ) ) ?></label>
+                                    <?php if (! $is_active_subscription && ! $license->is_first_payment_pending()) : ?>
+                                        <label class="fs-tag fs-warn"><?php echo esc_html(sprintf($expires_in_text, human_time_diff(time(), strtotime($license->expiration)))) ?></label>
+                                    <?php elseif ($is_active_subscription && ! $subscription->is_first_payment_pending()) : ?>
+                                        <label class="fs-tag fs-success"><?php echo esc_html(sprintf($renews_in_text, human_time_diff(time(), strtotime($subscription->next_payment)))) ?></label>
                                     <?php endif ?>
                                 </td>
-                                <td><?php if ( $is_active_subscription ) : ?>
+                                <td><?php if ($is_active_subscription) : ?>
                                 <?php
-                                        $downgrading_plan_text        = fs_text_inline( 'Downgrading your plan', 'downgrading-plan', $slug );
-                                        $cancelling_subscription_text = fs_text_inline( 'Cancelling the subscription', 'cancelling-subscription', $slug );
+                                        $downgrading_plan_text        = fs_text_inline('Downgrading your plan', 'downgrading-plan', $slug);
+                                        $cancelling_subscription_text = fs_text_inline('Cancelling the subscription', 'cancelling-subscription', $slug);
                                         /* translators: %1$s: Either 'Downgrading your plan' or 'Cancelling the subscription' */
-                                        $downgrade_x_confirm_text          = fs_text_inline( '%1$s will immediately stop all future recurring payments and your %2$s plan license will expire in %3$s.', 'downgrade-x-confirm', $slug );
-                                        $prices_increase_text              = fs_text_inline( 'Please note that we will not be able to grandfather outdated pricing for renewals/new subscriptions after a cancellation. If you choose to renew the subscription manually in the future, after a price increase, which typically occurs once a year, you will be charged the updated price.', 'pricing-increase-warning', $slug );
-                                        $after_downgrade_non_blocking_text = fs_text_inline( 'You can still enjoy all %s features but you will not have access to %s security & feature updates, nor support.', 'after-downgrade-non-blocking', $slug );
-                                        $after_downgrade_blocking_text     = fs_text_inline( 'Once your license expires you can still use the Free version but you will NOT have access to the %s features.', 'after-downgrade-blocking', $slug );
-                                        $downgrade_text                    = fs_text_x_inline( 'Downgrade', 'verb', 'downgrade', $slug );
+                                        $downgrade_x_confirm_text          = fs_text_inline('%1$s will immediately stop all future recurring payments and your %2$s plan license will expire in %3$s.', 'downgrade-x-confirm', $slug);
+                                        $prices_increase_text              = fs_text_inline('Please note that we will not be able to grandfather outdated pricing for renewals/new subscriptions after a cancellation. If you choose to renew the subscription manually in the future, after a price increase, which typically occurs once a year, you will be charged the updated price.', 'pricing-increase-warning', $slug);
+                                        $after_downgrade_non_blocking_text = fs_text_inline('You can still enjoy all %s features but you will not have access to %s security & feature updates, nor support.', 'after-downgrade-non-blocking', $slug);
+                                        $after_downgrade_blocking_text     = fs_text_inline('Once your license expires you can still use the Free version but you will NOT have access to the %s features.', 'after-downgrade-blocking', $slug);
+                                        $downgrade_text                    = fs_text_x_inline('Downgrade', 'verb', 'downgrade', $slug);
 
-                                    $human_readable_license_expiration = human_time_diff( time(), strtotime( $license->expiration ) );
+                                    $human_readable_license_expiration = human_time_diff(time(), strtotime($license->expiration));
                                     $downgrade_confirmation_message    = sprintf(
                                         $downgrade_x_confirm_text,
-                                        ( $fs->is_only_premium() ? $cancelling_subscription_text : $downgrading_plan_text ),
+                                        ($fs->is_only_premium() ? $cancelling_subscription_text : $downgrading_plan_text),
                                         $plan->title,
                                         $human_readable_license_expiration
                                     );
 
                                     $after_downgrade_message = ! $license->is_block_features ?
-                                        sprintf( $after_downgrade_non_blocking_text, $plan->title, $fs->get_module_label( true ) ) :
-                                        sprintf( $after_downgrade_blocking_text, $plan->title );
+                                        sprintf($after_downgrade_non_blocking_text, $plan->title, $fs->get_module_label(true)) :
+                                        sprintf($after_downgrade_blocking_text, $plan->title);
                                 ?>
                                     <?php $action = 'downgrade_account' ?>
-                                    <form id="fs_downgrade" action="<?php echo $fs->_get_admin_page_url( 'account' ) ?>" method="POST">
+                                    <form id="fs_downgrade" action="<?php echo $fs->_get_admin_page_url('account') ?>" method="POST">
                                         <input type="hidden" name="fs_action" value="<?php echo $action ?>">
-                                        <?php wp_nonce_field( trim( "{$action}:{$blog_id}", ':' ) ) ?>
+                                        <?php wp_nonce_field(trim("{$action}:{$blog_id}", ':')) ?>
                                         <input type="hidden" name="blog_id" value="<?php echo $blog_id ?>">
-                                        <button class="button button-small" onclick="if (confirm('<?php echo esc_attr( $downgrade_confirmation_message . ' ' . $after_downgrade_message . ' ' . $prices_increase_text ) ?>')) { this.parentNode.submit(); } else { return false; }"><?php echo $downgrade_text ?></button>
+                                        <button class="button button-small" onclick="if (confirm('<?php echo esc_attr($downgrade_confirmation_message . ' ' . $after_downgrade_message . ' ' . $prices_increase_text) ?>')) { this.parentNode.submit(); } else { return false; }"><?php echo $downgrade_text ?></button>
                                     </form>
                                 <?php endif ?></td>
                             </tr>
diff --git a/freemius/templates/account/payments.php b/freemius/templates/account/payments.php
index fd54c9bb0980d97c4dc86f31dac4376abd6a7402..e3f19092a9fb72c87941dddd12b2c7f76e0525c6 100644
--- a/freemius/templates/account/payments.php
+++ b/freemius/templates/account/payments.php
@@ -1,53 +1,53 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2016, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.2.0
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2016, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.2.0
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	/**
-	 * @var array $VARS
-	 * @var Freemius $fs
-	 */
-	$fs = freemius( $VARS['id'] );
+    /**
+     * @var array $VARS
+     * @var Freemius $fs
+     */
+    $fs = freemius($VARS['id']);
 
-	$slug = $fs->get_slug();
+    $slug = $fs->get_slug();
 
-	$payments = $fs->_fetch_payments();
+    $payments = $fs->_fetch_payments();
 
-	$show_payments = ( is_array( $payments ) && 0 < count( $payments ) );
+    $show_payments = (is_array($payments) && 0 < count($payments));
 
-	if ( $show_payments ) :
+    if ($show_payments) :
 ?>
 <div class="postbox">
 	<div id="fs_payments">
-		<h3><span class="dashicons dashicons-paperclip"></span> <?php fs_esc_html_echo_inline( 'Payments', 'payments', $slug ) ?></h3>
+		<h3><span class="dashicons dashicons-paperclip"></span> <?php fs_esc_html_echo_inline('Payments', 'payments', $slug) ?></h3>
 
 		<div class="inside">
 			<table class="widefat">
 				<thead>
 				<tr>
-					<th><?php fs_esc_html_echo_inline( 'ID', 'id', $slug ) ?></th>
-					<th><?php fs_esc_html_echo_inline( 'Date', 'date', $slug ) ?></th>
-					<th><?php fs_esc_html_echo_inline( 'Amount', 'amount', $slug ) ?></th>
-					<th><?php fs_esc_html_echo_inline( 'Invoice', 'invoice', $slug ) ?></th>
+					<th><?php fs_esc_html_echo_inline('ID', 'id', $slug) ?></th>
+					<th><?php fs_esc_html_echo_inline('Date', 'date', $slug) ?></th>
+					<th><?php fs_esc_html_echo_inline('Amount', 'amount', $slug) ?></th>
+					<th><?php fs_esc_html_echo_inline('Invoice', 'invoice', $slug) ?></th>
 				</tr>
 				</thead>
 				<tbody>
 				<?php $odd = true ?>
-				<?php foreach ( $payments as $payment ) : ?>
+				<?php foreach ($payments as $payment) : ?>
 					<tr<?php echo $odd ? ' class="alternate"' : '' ?>>
 						<td><?php echo $payment->id ?></td>
-						<td><?php echo date( 'M j, Y', strtotime( $payment->created ) ) ?></td>
+						<td><?php echo date('M j, Y', strtotime($payment->created)) ?></td>
 						<td><?php echo $payment->formatted_gross() ?></td>
-						<td><?php if (! $payment->is_migrated() ) : ?><a href="<?php echo $fs->_get_invoice_api_url( $payment->id ) ?>"
+						<td><?php if (! $payment->is_migrated()) : ?><a href="<?php echo $fs->_get_invoice_api_url($payment->id) ?>"
 						       class="button button-small"
-						       target="_blank" rel="noopener"><?php fs_esc_html_echo_inline( 'Invoice', 'invoice', $slug ) ?></a><?php endif ?></td>
+						       target="_blank" rel="noopener"><?php fs_esc_html_echo_inline('Invoice', 'invoice', $slug) ?></a><?php endif ?></td>
 					</tr>
 					<?php $odd = ! $odd; endforeach ?>
 				</tbody>
@@ -56,4 +56,4 @@
 	</div>
 </div>
 <?php
-	endif;
\ No newline at end of file
+    endif;
diff --git a/freemius/templates/add-ons.php b/freemius/templates/add-ons.php
index d67a0bdb569bb3150aba1d23c185c9a9c49a9f7e..bb294dc6dc6279e7a1e987352020d379745952f1 100644
--- a/freemius/templates/add-ons.php
+++ b/freemius/templates/add-ons.php
@@ -1,155 +1,155 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.3
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.3
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	/**
-	 * @var array $VARS
-	 * @var Freemius
-	 */
-	$fs = freemius( $VARS['id'] );
+    /**
+     * @var array $VARS
+     * @var Freemius
+     */
+    $fs = freemius($VARS['id']);
 
-	$slug = $fs->get_slug();
+    $slug = $fs->get_slug();
 
-	$open_addon_slug = fs_request_get( 'slug' );
+    $open_addon_slug = fs_request_get('slug');
 
-	$open_addon = false;
+    $open_addon = false;
 
     $is_data_debug_mode = $fs->is_data_debug_mode();
     $is_whitelabeled    = $fs->is_whitelabeled();
 
-	/**
-	 * @var FS_Plugin[]
-	 */
-	$addons = $fs->get_addons();
+    /**
+     * @var FS_Plugin[]
+     */
+    $addons = $fs->get_addons();
 
-	$has_addons = ( is_array( $addons ) && 0 < count( $addons ) );
+    $has_addons = (is_array($addons) && 0 < count($addons));
 
     $account_addon_ids = $fs->get_updated_account_addons();
 
-    $download_latest_text = fs_text_x_inline( 'Download Latest', 'as download latest version', 'download-latest', $slug );
-    $view_details_text    = fs_text_inline( 'View details', 'view-details', $slug );
+    $download_latest_text = fs_text_x_inline('Download Latest', 'as download latest version', 'download-latest', $slug);
+    $view_details_text    = fs_text_inline('View details', 'view-details', $slug);
 
-	$has_tabs = $fs->_add_tabs_before_content();
+    $has_tabs = $fs->_add_tabs_before_content();
 
-    $fs_blog_id = ( is_multisite() && ! is_network_admin() ) ?
+    $fs_blog_id = (is_multisite() && ! is_network_admin()) ?
         get_current_blog_id() :
         0;
 ?>
 	<div id="fs_addons" class="wrap fs-section">
-		<?php if ( ! $has_tabs ) : ?>
-		<h2><?php echo esc_html( sprintf( fs_text_inline( 'Add Ons for %s', 'add-ons-for-x', $slug ), $fs->get_plugin_name() ) ) ?></h2>
+		<?php if (! $has_tabs) : ?>
+		<h2><?php echo esc_html(sprintf(fs_text_inline('Add Ons for %s', 'add-ons-for-x', $slug), $fs->get_plugin_name())) ?></h2>
 		<?php endif ?>
 
-		<?php $fs->do_action( 'addons/after_title' ) ?>
+		<?php $fs->do_action('addons/after_title') ?>
 
 		<div id="poststuff">
-			<?php if ( ! $has_addons ) : ?>
-				<h3><?php echo esc_html( sprintf(
-						'%s... %s',
-						fs_text_x_inline( 'Oops', 'exclamation', 'oops', $slug ),
-						fs_text_inline( 'We couldn\'t load the add-ons list. It\'s probably an issue on our side, please try to come back in few minutes.', 'add-ons-missing', $slug )
-					) ) ?></h3>
+			<?php if (! $has_addons) : ?>
+				<h3><?php echo esc_html(sprintf(
+    '%s... %s',
+    fs_text_x_inline('Oops', 'exclamation', 'oops', $slug),
+    fs_text_inline('We couldn\'t load the add-ons list. It\'s probably an issue on our side, please try to come back in few minutes.', 'add-ons-missing', $slug)
+)) ?></h3>
 			<?php endif ?>
 			<ul class="fs-cards-list">
-				<?php if ( $has_addons ) : ?>
+				<?php if ($has_addons) : ?>
 					<?php
                     $plans_and_pricing_by_addon_id = $fs->_get_addons_plans_and_pricing_map_by_id();
 
-                    $active_plugins_directories_map = Freemius::get_active_plugins_directories_map( $fs_blog_id );
-					?>
+                    $active_plugins_directories_map = Freemius::get_active_plugins_directories_map($fs_blog_id);
+                    ?>
                     <?php
                         $hide_all_addons_data = false;
 
-                        if ( $fs->is_whitelabeled_by_flag() ) {
+                        if ($fs->is_whitelabeled_by_flag()) {
                             $hide_all_addons_data = true;
 
                             $addon_ids        = $fs->get_updated_account_addons();
                             $installed_addons = $fs->get_installed_addons();
-                            foreach ( $installed_addons as $fs_addon ) {
+                            foreach ($installed_addons as $fs_addon) {
                                 $addon_ids[] = $fs_addon->get_id();
                             }
 
-                            if ( ! empty( $addon_ids ) ) {
-                                $addon_ids = array_unique( $addon_ids );
+                            if (! empty($addon_ids)) {
+                                $addon_ids = array_unique($addon_ids);
                             }
 
-                            foreach ( $addon_ids as $addon_id ) {
-                                $addon = $fs->get_addon( $addon_id );
+                            foreach ($addon_ids as $addon_id) {
+                                $addon = $fs->get_addon($addon_id);
 
-                                if ( ! is_object( $addon ) ) {
+                                if (! is_object($addon)) {
                                     continue;
                                 }
 
-                                $addon_storage = FS_Storage::instance( WP_FS__MODULE_TYPE_PLUGIN, $addon->slug );
+                                $addon_storage = FS_Storage::instance(WP_FS__MODULE_TYPE_PLUGIN, $addon->slug);
 
-                                if ( ! $addon_storage->is_whitelabeled ) {
+                                if (! $addon_storage->is_whitelabeled) {
                                     $hide_all_addons_data = false;
                                     break;
                                 }
 
-                                if ( $is_data_debug_mode ) {
+                                if ($is_data_debug_mode) {
                                     $is_whitelabeled = false;
                                 }
                             }
                         }
                     ?>
-					<?php foreach ( $addons as $addon ) : ?>
+					<?php foreach ($addons as $addon) : ?>
 						<?php
-                        $basename = $fs->get_addon_basename( $addon->id );
+                        $basename = $fs->get_addon_basename($addon->id);
 
-                        $is_addon_installed = file_exists( fs_normalize_path( WP_PLUGIN_DIR . '/' . $basename ) );
+                        $is_addon_installed = file_exists(fs_normalize_path(WP_PLUGIN_DIR . '/' . $basename));
 
-                        if ( ! $is_addon_installed && $hide_all_addons_data ) {
+                        if (! $is_addon_installed && $hide_all_addons_data) {
                             continue;
                         }
 
                         $is_addon_activated = $is_addon_installed ?
-                            $fs->is_addon_activated( $addon->id ) :
+                            $fs->is_addon_activated($addon->id) :
                             false;
 
                         $is_plugin_active = (
                             $is_addon_activated ||
-                            isset( $active_plugins_directories_map[ dirname( $basename ) ] )
+                            isset($active_plugins_directories_map[ dirname($basename) ])
                         );
 
-						$open_addon = ( $open_addon || ( $open_addon_slug === $addon->slug ) );
+                        $open_addon = ($open_addon || ($open_addon_slug === $addon->slug));
 
-						$price     = 0;
-						$has_trial = false;
-						$has_free_plan = false;
-						$has_paid_plan = false;
+                        $price     = 0;
+                        $has_trial = false;
+                        $has_free_plan = false;
+                        $has_paid_plan = false;
 
-						if ( isset( $plans_and_pricing_by_addon_id[$addon->id] ) ) {
-							$plans = $plans_and_pricing_by_addon_id[$addon->id];
+                        if (isset($plans_and_pricing_by_addon_id[$addon->id])) {
+                            $plans = $plans_and_pricing_by_addon_id[$addon->id];
 
-							if ( is_array( $plans ) && 0 < count( $plans ) ) {
-								foreach ( $plans as $plan ) {
-									if ( ! isset( $plan->pricing ) ||
-									     ! is_array( $plan->pricing ) ||
-									     0 == count( $plan->pricing )
-									) {
-										// No pricing means a free plan.
-										$has_free_plan = true;
-										continue;
-									}
+                            if (is_array($plans) && 0 < count($plans)) {
+                                foreach ($plans as $plan) {
+                                    if (! isset($plan->pricing) ||
+                                         ! is_array($plan->pricing) ||
+                                         0 == count($plan->pricing)
+                                    ) {
+                                        // No pricing means a free plan.
+                                        $has_free_plan = true;
+                                        continue;
+                                    }
 
 
-									$has_paid_plan = true;
-									$has_trial     = $has_trial || ( is_numeric( $plan->trial_period ) && ( $plan->trial_period > 0 ) );
+                                    $has_paid_plan = true;
+                                    $has_trial     = $has_trial || (is_numeric($plan->trial_period) && ($plan->trial_period > 0));
 
-									$min_price = 999999;
-									foreach ( $plan->pricing as $pricing ) {
-                                        $pricing = new FS_Pricing( $pricing );
+                                    $min_price = 999999;
+                                    foreach ($plan->pricing as $pricing) {
+                                        $pricing = new FS_Pricing($pricing);
 
-                                        if ( ! $pricing->is_usd() ) {
+                                        if (! $pricing->is_usd()) {
                                             /**
                                              * Skip non-USD pricing.
                                              *
@@ -159,35 +159,35 @@
                                             continue;
                                         }
 
-                                        if ( $pricing->has_annual() ) {
-											$min_price = min( $min_price, $pricing->annual_price );
-										} else if ( $pricing->has_monthly() ) {
-											$min_price = min( $min_price, 12 * $pricing->monthly_price );
-										}
-									}
-
-									if ( $min_price < 999999 ) {
-										$price = $min_price;
-									}
+                                        if ($pricing->has_annual()) {
+                                            $min_price = min($min_price, $pricing->annual_price);
+                                        } elseif ($pricing->has_monthly()) {
+                                            $min_price = min($min_price, 12 * $pricing->monthly_price);
+                                        }
+                                    }
 
-								}
-							}
+                                    if ($min_price < 999999) {
+                                        $price = $min_price;
+                                    }
+                                }
+                            }
 
-							if ( ! $has_paid_plan && ! $has_free_plan ) {
-							    continue;
+                            if (! $has_paid_plan && ! $has_free_plan) {
+                                continue;
                             }
-						}
-						?>
+                        }
+                        ?>
 						<li class="fs-card fs-addon" data-slug="<?php echo $addon->slug ?>">
 							<?php
-								$view_details_link = sprintf( '<a href="%s" aria-label="%s" data-title="%s"',
-									esc_url( network_admin_url( 'plugin-install.php?fs_allow_updater_and_dialog=true' . ( ! empty( $fs_blog_id ) ? '&fs_blog_id=' . $fs_blog_id : '' ) . '&tab=plugin-information&parent_plugin_id=' . $fs->get_id() . '&plugin=' . $addon->slug .
-									                            '&TB_iframe=true&width=600&height=550' ) ),
-									esc_attr( sprintf( fs_text_inline( 'More information about %s', 'more-information-about-x', $slug ), $addon->title ) ),
-									esc_attr( $addon->title )
-								) . ' class="thickbox%s">%s</a>';
-
-								echo sprintf(
+                                $view_details_link = sprintf(
+                            '<a href="%s" aria-label="%s" data-title="%s"',
+                            esc_url(network_admin_url('plugin-install.php?fs_allow_updater_and_dialog=true' . (! empty($fs_blog_id) ? '&fs_blog_id=' . $fs_blog_id : '') . '&tab=plugin-information&parent_plugin_id=' . $fs->get_id() . '&plugin=' . $addon->slug .
+                                                                '&TB_iframe=true&width=600&height=550')),
+                            esc_attr(sprintf(fs_text_inline('More information about %s', 'more-information-about-x', $slug), $addon->title)),
+                            esc_attr($addon->title)
+                        ) . ' class="thickbox%s">%s</a>';
+
+                                echo sprintf(
                                     $view_details_link,
                                     /**
                                      * Additional class.
@@ -206,28 +206,29 @@
                                      */
                                     ''
                                 );
-							?>
+                            ?>
 							<?php
-								if ( is_null( $addon->info ) ) {
-									$addon->info = new stdClass();
-								}
-								if ( ! isset( $addon->info->card_banner_url ) ) {
-									$addon->info->card_banner_url = '//dashboard.freemius.com/assets/img/marketing/blueprint-300x100.jpg';
-								}
-								if ( ! isset( $addon->info->short_description ) ) {
-									$addon->info->short_description = 'What\'s the one thing your add-on does really, really well?';
-								}
-							?>
+                                if (is_null($addon->info)) {
+                                    $addon->info = new stdClass();
+                                }
+                                if (! isset($addon->info->card_banner_url)) {
+                                    $addon->info->card_banner_url = '//dashboard.freemius.com/assets/img/marketing/blueprint-300x100.jpg';
+                                }
+                                if (! isset($addon->info->short_description)) {
+                                    $addon->info->short_description = 'What\'s the one thing your add-on does really, really well?';
+                                }
+                            ?>
 							<div class="fs-inner">
 								<ul>
 									<li class="fs-card-banner"
                                         style="background-image: url('<?php echo $addon->info->card_banner_url ?>');"><?php
-                                        if ( $is_plugin_active || $is_addon_installed ) {
+                                        if ($is_plugin_active || $is_addon_installed) {
                                             echo sprintf(
                                                 '<span class="fs-badge fs-installed-addon-badge">%s</span>',
-                                                esc_html( $is_plugin_active ?
-                                                    fs_text_x_inline( 'Active', 'active add-on', 'active-addon', $slug ) :
-                                                    fs_text_x_inline( 'Installed', 'installed add-on', 'installed-addon', $slug )
+                                                esc_html(
+                                                    $is_plugin_active ?
+                                                    fs_text_x_inline('Active', 'active add-on', 'active-addon', $slug) :
+                                                    fs_text_x_inline('Installed', 'installed add-on', 'installed-addon', $slug)
                                                 )
                                             );
                                         }
@@ -237,25 +238,27 @@
 									<li class="fs-offer">
 									<span
 										class="fs-price"><?php
-                                        if ( $is_whitelabeled ) {
+                                        if ($is_whitelabeled) {
                                             echo '&nbsp;';
                                         } else {
-											$descriptors = array();
+                                            $descriptors = array();
 
-											if ($has_free_plan)
-												$descriptors[] = fs_text_inline( 'Free', 'free', $slug );
-											if ($has_paid_plan && $price > 0)
-												$descriptors[] = '$' . number_format( $price, 2 );
-											if ($has_trial)
-												$descriptors[] = fs_text_x_inline( 'Trial', 'trial period',  'trial', $slug );
-
-											echo implode(' - ', $descriptors);
+                                            if ($has_free_plan) {
+                                                $descriptors[] = fs_text_inline('Free', 'free', $slug);
+                                            }
+                                            if ($has_paid_plan && $price > 0) {
+                                                $descriptors[] = '$' . number_format($price, 2);
+                                            }
+                                            if ($has_trial) {
+                                                $descriptors[] = fs_text_x_inline('Trial', 'trial period', 'trial', $slug);
+                                            }
 
+                                            echo implode(' - ', $descriptors);
                                         } ?></span>
 									</li>
-									<li class="fs-description"><?php echo ! empty( $addon->info->short_description ) ? $addon->info->short_description : 'SHORT DESCRIPTION' ?></li>
+									<li class="fs-description"><?php echo ! empty($addon->info->short_description) ? $addon->info->short_description : 'SHORT DESCRIPTION' ?></li>
                                     <?php
-                                        $is_free_only_wp_org_compliant = ( ! $has_paid_plan && $addon->is_wp_org_compliant );
+                                        $is_free_only_wp_org_compliant = (! $has_paid_plan && $addon->is_wp_org_compliant);
 
                                         $is_allowed_to_install = (
                                             $fs->is_allowed_to_install() ||
@@ -264,9 +267,9 @@
 
                                         $show_premium_activation_or_installation_action = true;
 
-                                        if ( ! in_array( $addon->id, $account_addon_ids ) ) {
+                                        if (! in_array($addon->id, $account_addon_ids)) {
                                             $show_premium_activation_or_installation_action = false;
-                                        } else if ( $is_addon_installed ) {
+                                        } elseif ($is_addon_installed) {
                                             /**
                                              * If any add-on's version (free or premium) is installed, check if the
                                              * premium version can be activated and show the relevant action. Otherwise,
@@ -276,22 +279,22 @@
                                              * @since 2.4.5
                                              */
                                             $fs_addon = $is_addon_activated ?
-                                                $fs->get_addon_instance( $addon->id ) :
+                                                $fs->get_addon_instance($addon->id) :
                                                 null;
 
-                                            $premium_plugin_basename = is_object( $fs_addon ) ?
+                                            $premium_plugin_basename = is_object($fs_addon) ?
                                                 $fs_addon->premium_plugin_basename() :
                                                 "{$addon->premium_slug}/{$addon->slug}.php";
 
                                             if (
-                                                ( $is_addon_activated && $fs_addon->is_premium() ) ||
-                                                file_exists( fs_normalize_path( WP_PLUGIN_DIR . '/' . $premium_plugin_basename ) )
+                                                ($is_addon_activated && $fs_addon->is_premium()) ||
+                                                file_exists(fs_normalize_path(WP_PLUGIN_DIR . '/' . $premium_plugin_basename))
                                             ) {
                                                 $basename = $premium_plugin_basename;
                                             }
 
                                             $show_premium_activation_or_installation_action = (
-                                                ( ! $is_addon_activated || ! $fs_addon->is_premium() ) &&
+                                                (! $is_addon_activated || ! $fs_addon->is_premium()) &&
                                                 /**
                                                  * This check is needed for cases when an active add-on doesn't have an
                                                  * associated Freemius instance.
@@ -299,65 +302,65 @@
                                                  * @author Leo Fajardo (@leorw)
                                                  * @since 2.4.5
                                                  */
-                                                ( ! $is_plugin_active )
+                                                (! $is_plugin_active)
                                             );
                                         }
                                     ?>
-                                    <?php if ( ! $show_premium_activation_or_installation_action ) : ?>
-									<li class="fs-cta"><a class="button"><?php echo esc_html( $view_details_text ) ?></a></li>
+                                    <?php if (! $show_premium_activation_or_installation_action) : ?>
+									<li class="fs-cta"><a class="button"><?php echo esc_html($view_details_text) ?></a></li>
                                     <?php else : ?>
                                         <?php
                                             $latest_download_local_url = $is_free_only_wp_org_compliant ?
                                                 null :
-                                                $fs->_get_latest_download_local_url( $addon->id );
+                                                $fs->_get_latest_download_local_url($addon->id);
                                         ?>
 
                                         <li class="fs-cta fs-dropdown">
                                         <div class="button-group">
-                                            <?php if ( $is_allowed_to_install ) : ?>
+                                            <?php if ($is_allowed_to_install) : ?>
                                             <?php
-                                                if ( ! $is_addon_installed ) {
+                                                if (! $is_addon_installed) {
                                                     echo sprintf(
                                                         '<a class="button button-primary" href="%s">%s</a>',
-                                                        wp_nonce_url( self_admin_url( 'update.php?' . ( ( $has_paid_plan || ! $addon->is_wp_org_compliant ) ? 'fs_allow_updater_and_dialog=true&' : '' ) . 'action=install-plugin&plugin=' . $addon->slug ), 'install-plugin_' . $addon->slug ),
-                                                        fs_esc_html_inline( 'Install Now', 'install-now', $slug )
+                                                        wp_nonce_url(self_admin_url('update.php?' . (($has_paid_plan || ! $addon->is_wp_org_compliant) ? 'fs_allow_updater_and_dialog=true&' : '') . 'action=install-plugin&plugin=' . $addon->slug), 'install-plugin_' . $addon->slug),
+                                                        fs_esc_html_inline('Install Now', 'install-now', $slug)
                                                     );
                                                 } else {
                                                     echo sprintf(
                                                         '<a class="button button-primary edit" href="%s" title="%s" target="_parent">%s</a>',
-                                                        wp_nonce_url( 'plugins.php?action=activate&amp;plugin=' . $basename, 'activate-plugin_' . $basename ),
-                                                        fs_esc_attr_inline( 'Activate this add-on', 'activate-this-addon', $addon->slug ),
-                                                        fs_text_inline( 'Activate', 'activate', $addon->slug )
+                                                        wp_nonce_url('plugins.php?action=activate&amp;plugin=' . $basename, 'activate-plugin_' . $basename),
+                                                        fs_esc_attr_inline('Activate this add-on', 'activate-this-addon', $addon->slug),
+                                                        fs_text_inline('Activate', 'activate', $addon->slug)
                                                     );
                                                 }
                                             ?>
                                             <?php else : ?>
-                                            <a target="_blank" rel="noopener" class="button button-primary" href="<?php echo $latest_download_local_url ?>"><?php echo esc_html( $download_latest_text ) ?></a>
+                                            <a target="_blank" rel="noopener" class="button button-primary" href="<?php echo $latest_download_local_url ?>"><?php echo esc_html($download_latest_text) ?></a>
                                             <?php endif ?>
                                             <div class="button button-primary fs-dropdown-arrow-button"><span class="fs-dropdown-arrow"></span><ul class="fs-dropdown-list" style="display: none">
-		                                            <?php if ( $is_allowed_to_install && ! empty( $latest_download_local_url ) ) : ?>
-			                                            <li><a target="_blank" rel="noopener" href="<?php echo $latest_download_local_url ?>"><?php echo esc_html( $download_latest_text ) ?></a></li>
+		                                            <?php if ($is_allowed_to_install && ! empty($latest_download_local_url)) : ?>
+			                                            <li><a target="_blank" rel="noopener" href="<?php echo $latest_download_local_url ?>"><?php echo esc_html($download_latest_text) ?></a></li>
 		                                            <?php endif ?>
 		                                            <li><?php
-				                                            echo sprintf(
-					                                            $view_details_link,
-					                                            /**
-					                                             * No additional class.
-					                                             *
-					                                             * @author Leo Fajardo (@leorw)
-					                                             * @since 2.2.4
-					                                             */
-					                                            '',
-					                                            /**
-					                                             * Set the view details link text to a non-empty string since it is an
-					                                             * item in the dropdown list and the text should be visible.
-					                                             *
-					                                             * @author Leo Fajardo (@leorw)
-					                                             * @since 2.2.4
-					                                             */
-					                                            esc_html( $view_details_text )
-				                                            );
-			                                            ?></li>
+                                                            echo sprintf(
+                                                $view_details_link,
+                                                                /**
+                                                                 * No additional class.
+                                                                 *
+                                                                 * @author Leo Fajardo (@leorw)
+                                                                 * @since 2.2.4
+                                                                 */
+                                                                '',
+                                                                /**
+                                                                 * Set the view details link text to a non-empty string since it is an
+                                                                 * item in the dropdown list and the text should be visible.
+                                                                 *
+                                                                 * @author Leo Fajardo (@leorw)
+                                                                 * @since 2.2.4
+                                                                 */
+                                                                esc_html($view_details_text)
+                                            );
+                                                        ?></li>
 	                                            </ul></div>
                                         </div>
                                     </li>
@@ -370,25 +373,25 @@
 			</ul>
 		</div>
 
-		<?php $fs->do_action( 'addons/after_addons' ) ?>
+		<?php $fs->do_action('addons/after_addons') ?>
 	</div>
 	<script type="text/javascript">
 		(function( $, undef ) {
-			<?php if ( $open_addon ) : ?>
+			<?php if ($open_addon) : ?>
 
 			var interval = setInterval(function () {
 				// Open add-on information page.
 				<?php
-				/**
-				 * @author Vova Feldman
-				 *
-				 * This code does NOT expose an XSS vulnerability because:
-				 *  1. This page only renders for admins, so if an attacker manage to get
-				 *     admin access, they can do more harm.
-				 *  2. This code won't be rendered unless $open_addon_slug matches any of
-				 *     the plugin's add-ons slugs.
-				 */
-				?>
+                /**
+                 * @author Vova Feldman
+                 *
+                 * This code does NOT expose an XSS vulnerability because:
+                 *  1. This page only renders for admins, so if an attacker manage to get
+                 *     admin access, they can do more harm.
+                 *  2. This code won't be rendered unless $open_addon_slug matches any of
+                 *     the plugin's add-ons slugs.
+                 */
+                ?>
 				$('.fs-card[data-slug=<?php echo $open_addon_slug ?>] a').click();
 				if ($('#TB_iframeContent').length > 0) {
 					clearInterval(interval);
@@ -488,15 +491,15 @@
 		})( jQuery );
 	</script>
 <?php
-	if ( $has_tabs ) {
-		$fs->_add_tabs_after_content();
-	}
-
-	$params = array(
-		'page'           => 'addons',
-		'module_id'      => $fs->get_id(),
-		'module_type'    => $fs->get_module_type(),
-		'module_slug'    => $slug,
-		'module_version' => $fs->get_plugin_version(),
-	);
-	fs_require_template( 'powered-by.php', $params );
\ No newline at end of file
+    if ($has_tabs) {
+        $fs->_add_tabs_after_content();
+    }
+
+    $params = array(
+        'page'           => 'addons',
+        'module_id'      => $fs->get_id(),
+        'module_type'    => $fs->get_module_type(),
+        'module_slug'    => $slug,
+        'module_version' => $fs->get_plugin_version(),
+    );
+    fs_require_template('powered-by.php', $params);
diff --git a/freemius/templates/add-trial-to-pricing.php b/freemius/templates/add-trial-to-pricing.php
index 24fc8850228060d3b86f59599d5fd0c0780961d1..4523eb987d60a0716f675c4a17933707c737b935 100644
--- a/freemius/templates/add-trial-to-pricing.php
+++ b/freemius/templates/add-trial-to-pricing.php
@@ -1,22 +1,22 @@
 <?php
-	/**
-	 * Add "&trial=true" to pricing menu item href when running in trial
-	 * promotion context.
-	 *
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2016, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.2.1.5
-	 */
+    /**
+     * Add "&trial=true" to pricing menu item href when running in trial
+     * promotion context.
+     *
+     * @package     Freemius
+     * @copyright   Copyright (c) 2016, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.2.1.5
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	/**
-	 * @var Freemius $fs
-	 */
-	$fs = freemius( $VARS['id'] );
+    /**
+     * @var Freemius $fs
+     */
+    $fs = freemius($VARS['id']);
 ?>
 <script type="text/javascript">
 	(function ($) {
diff --git a/freemius/templates/admin-notice.php b/freemius/templates/admin-notice.php
index 6079e7126aba038c5d70643926e7ef4f8d20ea38..0c86e07222e2bd958ded789d13707cf3061e3eac 100644
--- a/freemius/templates/admin-notice.php
+++ b/freemius/templates/admin-notice.php
@@ -1,76 +1,76 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.3
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.3
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	$dismiss_text = fs_text_x_inline( 'Dismiss', 'as close a window', 'dismiss' );
+    $dismiss_text = fs_text_x_inline('Dismiss', 'as close a window', 'dismiss');
 
-	$slug = '';
-	$type = '';
+    $slug = '';
+    $type = '';
 
-	if ( ! empty( $VARS['manager_id'] ) ) {
-		/**
-		 * @var array $VARS
-		 */
-		$slug = $VARS['manager_id'];
+    if (! empty($VARS['manager_id'])) {
+        /**
+         * @var array $VARS
+         */
+        $slug = $VARS['manager_id'];
 
-		$type = WP_FS__MODULE_TYPE_PLUGIN;
+        $type = WP_FS__MODULE_TYPE_PLUGIN;
 
-		if ( false !== strpos( $slug, ':' ) ) {
-			$parts = explode( ':', $slug );
+        if (false !== strpos($slug, ':')) {
+            $parts = explode(':', $slug);
 
-			$slug = $parts[0];
+            $slug = $parts[0];
 
-			$parts_count = count( $parts );
+            $parts_count = count($parts);
 
-			if ( 1 < $parts_count && WP_FS__MODULE_TYPE_THEME == $parts[1] ) {
-				$type = $parts[1];
-			}
-		}
-	}
+            if (1 < $parts_count && WP_FS__MODULE_TYPE_THEME == $parts[1]) {
+                $type = $parts[1];
+            }
+        }
+    }
 ?>
-<div<?php if ( ! empty( $VARS['id'] ) ) : ?> data-id="<?php echo $VARS['id'] ?>"<?php endif ?><?php if ( ! empty( $VARS['manager_id'] ) ) : ?> data-manager-id="<?php echo $VARS['manager_id'] ?>"<?php endif ?><?php if ( ! empty( $slug ) ) : ?> data-slug="<?php echo $slug ?>"<?php endif ?><?php if ( ! empty( $type ) ) : ?> data-type="<?php echo $type ?>"<?php endif ?>
+<div<?php if (! empty($VARS['id'])) : ?> data-id="<?php echo $VARS['id'] ?>"<?php endif ?><?php if (! empty($VARS['manager_id'])) : ?> data-manager-id="<?php echo $VARS['manager_id'] ?>"<?php endif ?><?php if (! empty($slug)) : ?> data-slug="<?php echo $slug ?>"<?php endif ?><?php if (! empty($type)) : ?> data-type="<?php echo $type ?>"<?php endif ?>
 	class="<?php
-		switch ( $VARS['type'] ) {
-			case 'error':
-				echo 'error form-invalid';
-				break;
-			case 'promotion':
-				echo 'updated promotion';
-				break;
-			case 'update':
+        switch ($VARS['type']) {
+            case 'error':
+                echo 'error form-invalid';
+                break;
+            case 'promotion':
+                echo 'updated promotion';
+                break;
+            case 'update':
 //			echo 'update-nag update';
 //			break;
-			case 'success':
-			default:
-				echo 'updated success';
-				break;
-		}
-	?> fs-notice<?php if ( ! empty( $VARS['sticky'] ) ) {
-		echo ' fs-sticky';
-	} ?><?php if ( ! empty( $VARS['plugin'] ) ) {
-		echo ' fs-has-title';
-	} ?><?php if ( ! empty( $slug ) ) {
-		echo " fs-slug-{$slug}";
-	} ?><?php if ( ! empty( $type ) ) {
-		echo " fs-type-{$type}";
-	} ?>"><?php if ( ! empty( $VARS['plugin'] ) ) : ?>
+            case 'success':
+            default:
+                echo 'updated success';
+                break;
+        }
+    ?> fs-notice<?php if (! empty($VARS['sticky'])) {
+        echo ' fs-sticky';
+    } ?><?php if (! empty($VARS['plugin'])) {
+        echo ' fs-has-title';
+    } ?><?php if (! empty($slug)) {
+        echo " fs-slug-{$slug}";
+    } ?><?php if (! empty($type)) {
+        echo " fs-type-{$type}";
+    } ?>"><?php if (! empty($VARS['plugin'])) : ?>
 		<label class="fs-plugin-title"><?php echo $VARS['plugin'] ?></label>
 	<?php endif ?>
-	<?php if ( ! empty( $VARS['sticky'] ) ) : ?>
+	<?php if (! empty($VARS['sticky'])) : ?>
 		<div class="fs-close"><i class="dashicons dashicons-no"
-		                         title="<?php echo esc_attr( $dismiss_text ) ?>"></i> <span><?php echo esc_html( $dismiss_text ) ?></span>
+		                         title="<?php echo esc_attr($dismiss_text) ?>"></i> <span><?php echo esc_html($dismiss_text) ?></span>
 		</div>
 	<?php endif ?>
 	<div class="fs-notice-body">
-		<?php if ( ! empty( $VARS['title'] ) ) : ?><b><?php echo $VARS['title'] ?></b> <?php endif ?>
+		<?php if (! empty($VARS['title'])) : ?><b><?php echo $VARS['title'] ?></b> <?php endif ?>
 		<?php echo $VARS['message'] ?>
 	</div>
 </div>
diff --git a/freemius/templates/ajax-loader.php b/freemius/templates/ajax-loader.php
index bc116f8774854f5bf0d9b10a9efa2e895e6e3acd..af9b7117d1308b56f05e43d93e1fdd71e3b1745d 100644
--- a/freemius/templates/ajax-loader.php
+++ b/freemius/templates/ajax-loader.php
@@ -1 +1 @@
-<div class="fs-ajax-loader" style="display: none"><?php for ( $i = 1; $i <= 8; $i ++ ) : ?><div class="fs-ajax-loader-bar fs-ajax-loader-bar-<?php echo $i ?>"></div><?php endfor ?></div>
\ No newline at end of file
+<div class="fs-ajax-loader" style="display: none"><?php for ($i = 1; $i <= 8; $i ++) : ?><div class="fs-ajax-loader-bar fs-ajax-loader-bar-<?php echo $i ?>"></div><?php endfor ?></div>
\ No newline at end of file
diff --git a/freemius/templates/auto-installation.php b/freemius/templates/auto-installation.php
index 6b8183cfbe3bf79f08c9f077b44bb2ecea05bddb..70254412c21ec2523c6bc6d8abf9e94d4ebe3bc1 100644
--- a/freemius/templates/auto-installation.php
+++ b/freemius/templates/auto-installation.php
@@ -1,114 +1,114 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.2.1.5
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	/**
-	 * @var array    $VARS
-	 * @var Freemius $fs
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.2.1.5
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    /**
+     * @var array    $VARS
+     * @var Freemius $fs
+     */
     $slug      = $VARS['slug'];
     $plugin_id = $VARS['target_module_id'];
 
-    $fs = freemius( $VARS['id'] );
+    $fs = freemius($VARS['id']);
 
-	$action = $fs->is_tracking_allowed() ?
-		'stop_tracking' :
-		'allow_tracking';
+    $action = $fs->is_tracking_allowed() ?
+        'stop_tracking' :
+        'allow_tracking';
 
-	$title = $fs->get_plugin_title();
+    $title = $fs->get_plugin_title();
 
-	if ( $plugin_id != $fs->get_id() ) {
-		$addon = $fs->get_addon( $plugin_id );
+    if ($plugin_id != $fs->get_id()) {
+        $addon = $fs->get_addon($plugin_id);
 
-		if ( is_object( $addon ) ) {
-			$title = $addon->title . ' ' . fs_text_inline( 'Add-On', 'addon', $slug );
-		}
-	}
+        if (is_object($addon)) {
+            $title = $addon->title . ' ' . fs_text_inline('Add-On', 'addon', $slug);
+        }
+    }
 
-	$plugin_title = sprintf(
-		'<strong>%s</strong>',
-		esc_html( $title )
-	);
+    $plugin_title = sprintf(
+        '<strong>%s</strong>',
+        esc_html($title)
+    );
 
-	$sec_countdown  = 30;
-	$countdown_html = sprintf(
-		esc_js(
-			/* translators: %s: Number of seconds */
-			fs_text_inline( '%s sec', 'x-sec', $slug )
-		),
-		sprintf( '<span class="fs-countdown">%s</span>', $sec_countdown )
-	);
+    $sec_countdown  = 30;
+    $countdown_html = sprintf(
+        esc_js(
+            /* translators: %s: Number of seconds */
+            fs_text_inline('%s sec', 'x-sec', $slug)
+        ),
+        sprintf('<span class="fs-countdown">%s</span>', $sec_countdown)
+    );
 
-	fs_enqueue_local_style( 'fs_dialog_boxes', '/admin/dialog-boxes.css' );
-	fs_enqueue_local_style( 'fs_common', '/admin/common.css' );
+    fs_enqueue_local_style('fs_dialog_boxes', '/admin/dialog-boxes.css');
+    fs_enqueue_local_style('fs_common', '/admin/common.css');
 
-	$params      = array();
-	$loader_html = fs_get_template( 'ajax-loader.php', $params );
+    $params      = array();
+    $loader_html = fs_get_template('ajax-loader.php', $params);
 
-	// Pass unique auto installation URL if WP_Filesystem is needed.
-	$install_url = $fs->_get_sync_license_url(
-		$plugin_id,
-		true,
-		array( 'auto_install' => 'true' )
-	);
+    // Pass unique auto installation URL if WP_Filesystem is needed.
+    $install_url = $fs->_get_sync_license_url(
+        $plugin_id,
+        true,
+        array( 'auto_install' => 'true' )
+    );
 
 
-	ob_start();
+    ob_start();
 
-	$method = ''; // Leave blank so WP_Filesystem can populate it as necessary.
+    $method = ''; // Leave blank so WP_Filesystem can populate it as necessary.
 
-	$credentials = request_filesystem_credentials(
-		esc_url_raw( $install_url ),
-		$method,
-		false,
-		WP_PLUGIN_DIR,
-		array()
-	);
+    $credentials = request_filesystem_credentials(
+        esc_url_raw($install_url),
+        $method,
+        false,
+        WP_PLUGIN_DIR,
+        array()
+    );
 
-	$credentials_form = ob_get_clean();
+    $credentials_form = ob_get_clean();
 
-	$require_credentials = ! empty( $credentials_form );
+    $require_credentials = ! empty($credentials_form);
 ?>
 <div class="fs-modal fs-modal-auto-install">
 	<div class="fs-modal-dialog">
 		<div class="fs-modal-header">
-			<h4><?php echo esc_js( fs_text_inline( 'Automatic Installation', 'auto-installation', $slug ) ) ?></h4>
+			<h4><?php echo esc_js(fs_text_inline('Automatic Installation', 'auto-installation', $slug)) ?></h4>
 		</div>
 		<div class="fs-modal-body">
 			<div class="fs-notice-error" style="display: none"><p></p></div>
-			<?php if ( $require_credentials ) : ?>
+			<?php if ($require_credentials) : ?>
 				<div id="request-filesystem-credentials-dialog">
 					<?php echo $credentials_form ?>
 				</div>
 			<?php else : ?>
 				<p class="fs-installation-notice"><?php echo sprintf(
-						fs_esc_html_inline( 'An automated download and installation of %s (paid version) from %s will start in %s. If you would like to do it manually - click the cancellation button now.', 'installing-in-n', $slug ),
-						$plugin_title,
-						sprintf(
-							'<a href="%s" target="_blank" rel="noopener">%s</a>',
-							'https://freemius.com',
-							'freemius.com'
-						),
-						$countdown_html
-					) ?></p>
+    fs_esc_html_inline('An automated download and installation of %s (paid version) from %s will start in %s. If you would like to do it manually - click the cancellation button now.', 'installing-in-n', $slug),
+    $plugin_title,
+    sprintf(
+                            '<a href="%s" target="_blank" rel="noopener">%s</a>',
+                            'https://freemius.com',
+                            'freemius.com'
+                        ),
+    $countdown_html
+) ?></p>
 			<?php endif ?>
 			<p class="fs-installing"
-			   style="display: none"><?php echo sprintf( fs_esc_html_inline( 'The installation process has started and may take a few minutes to complete. Please wait until it is done - do not refresh this page.', 'installing-module-x', $slug ), $plugin_title ) ?></p>
+			   style="display: none"><?php echo sprintf(fs_esc_html_inline('The installation process has started and may take a few minutes to complete. Please wait until it is done - do not refresh this page.', 'installing-module-x', $slug), $plugin_title) ?></p>
 		</div>
 		<div class="fs-modal-footer">
 			<?php echo $loader_html ?>
 			<button
-				class="button button-secondary button-cancel"><?php fs_esc_html_echo_inline( 'Cancel Installation', 'cancel-installation', $slug ) ?><?php if ( ! $require_credentials ) : ?> (<?php echo $countdown_html ?>)<?php endif ?></button>
+				class="button button-secondary button-cancel"><?php fs_esc_html_echo_inline('Cancel Installation', 'cancel-installation', $slug) ?><?php if (! $require_credentials) : ?> (<?php echo $countdown_html ?>)<?php endif ?></button>
 			<button
-				class="button button-primary"><?php fs_esc_html_echo_inline( 'Install Now', 'install-now', $slug ) ?></button>
+				class="button button-primary"><?php fs_esc_html_echo_inline('Install Now', 'install-now', $slug) ?></button>
 		</div>
 	</div>
 </div>'
@@ -119,7 +119,7 @@
 			var $modal             = $('.fs-modal-auto-install'),
 			    $body              = $('body'),
 			    $countdown         = $modal.find('.fs-countdown'),
-			    requireCredentials = <?php echo json_encode( $require_credentials ) ?>,
+			    requireCredentials = <?php echo json_encode($require_credentials) ?>,
 			    $credentialsForm   = $('#request-filesystem-credentials-dialog'),
 			    $errorNotice       = $modal.find('.fs-notice-error'),
 			    installing         = false;
@@ -146,8 +146,8 @@
 				$modal.find('.fs-ajax-loader').show();
 
 				var data = {
-					action          : '<?php echo $fs->get_ajax_action( 'install_premium_version' ) ?>',
-					security        : '<?php echo $fs->get_ajax_security( 'install_premium_version' ) ?>',
+					action          : '<?php echo $fs->get_ajax_action('install_premium_version') ?>',
+					security        : '<?php echo $fs->get_ajax_security('install_premium_version') ?>',
 					slug            : '<?php echo $slug ?>',
 					module_id       : '<?php echo $fs->get_id() ?>',
                     target_module_id: '<?php echo $plugin_id ?>'
@@ -186,7 +186,7 @@
 									$modal.removeClass('fs-warn');
 									$modal.find('.fs-installing').hide();
 									$modal.find('.fs-ajax-loader').hide();
-									$modal.find('.button-cancel').html(<?php fs_json_encode_echo_inline( 'Cancel Installation', 'cancel-installation', $slug ) ?>);
+									$modal.find('.button-cancel').html(<?php fs_json_encode_echo_inline('Cancel Installation', 'cancel-installation', $slug) ?>);
 									$modal.find('button').show();
 
 									$errorNotice.find('p').text(resultObj.error.message);
diff --git a/freemius/templates/checkout.php b/freemius/templates/checkout.php
index a0969ccf144350966a6c0c40beb099a3e029b428..38dd92b74b2108a3f33536f2f00b70d6c2c72c12 100644
--- a/freemius/templates/checkout.php
+++ b/freemius/templates/checkout.php
@@ -1,185 +1,185 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.3
-	 */
-
-	/**
-	 * Note for WordPress.org Theme/Plugin reviewer:
-	 *  Freemius is an SDK for plugin and theme developers. Since the core
-	 *  of the SDK is relevant both for plugins and themes, for obvious reasons,
-	 *  we only develop and maintain one code base.
-	 *
-	 *  This code (and page) will not run for wp.org themes (only plugins).
-	 *
-	 *  In addition, this page loads an i-frame. We intentionally named it 'frame'
-	 *  so it will pass the "Theme Check" that is looking for the string "i" . "frame".
-	 *
-	 * UPDATE:
-	 *  After ongoing conversations with the WordPress.org TRT we received
-	 *  an official approval for including i-frames in the theme's WP Admin setting's
-	 *  page tab (the SDK will never add any i-frames on the sitefront). i-frames
-	 *  were never against the guidelines, but we wanted to get the team's blessings
-	 *  before we move forward. For the record, I got the final approval from
-	 *  Ulrich Pogson (@grapplerulrich), a team lead at the TRT during WordCamp
-	 *  Europe 2017 (June 16th, 2017).
-	 *
-	 * If you have any questions or need clarifications, please don't hesitate
-	 * pinging me on slack, my username is @svovaf.
-	 *
-	 * @author Vova Feldman (@svovaf)
-	 * @since 1.2.2
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	wp_enqueue_script( 'jquery' );
-	wp_enqueue_script( 'json2' );
-	fs_enqueue_local_script( 'postmessage', 'nojquery.ba-postmessage.min.js' );
-	fs_enqueue_local_script( 'fs-postmessage', 'postmessage.js' );
-	fs_enqueue_local_style( 'fs_common', '/admin/common.css' );
-
-	fs_enqueue_local_style( 'fs_checkout', '/admin/checkout.css' );
-
-	/**
-	 * @var array    $VARS
-	 * @var Freemius $fs
-	 */
-	$fs   = freemius( $VARS['id'] );
-	$slug = $fs->get_slug();
-
-	$timestamp = time();
-
-	$context_params = array(
-		'plugin_id'      => $fs->get_id(),
-		'public_key'     => $fs->get_public_key(),
-		'plugin_version' => $fs->get_plugin_version(),
-		'mode'           => 'dashboard',
-		'trial'          => fs_request_get_bool( 'trial' ),
-	);
-
-	$plan_id = fs_request_get( 'plan_id' );
-	if ( FS_Plugin_Plan::is_valid_id( $plan_id ) ) {
-		$context_params['plan_id'] = $plan_id;
-	}
-
-	$licenses = fs_request_get( 'licenses' );
-	if ( $licenses === strval( intval( $licenses ) ) && $licenses > 0 ) {
-		$context_params['licenses'] = $licenses;
-	}
-
-	$plugin_id = fs_request_get( 'plugin_id' );
-	if ( ! FS_Plugin::is_valid_id( $plugin_id ) ) {
-		$plugin_id = $fs->get_id();
-	}
-
-	if ( $plugin_id == $fs->get_id() ) {
-		$is_premium = $fs->is_premium();
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.3
+     */
+
+    /**
+     * Note for WordPress.org Theme/Plugin reviewer:
+     *  Freemius is an SDK for plugin and theme developers. Since the core
+     *  of the SDK is relevant both for plugins and themes, for obvious reasons,
+     *  we only develop and maintain one code base.
+     *
+     *  This code (and page) will not run for wp.org themes (only plugins).
+     *
+     *  In addition, this page loads an i-frame. We intentionally named it 'frame'
+     *  so it will pass the "Theme Check" that is looking for the string "i" . "frame".
+     *
+     * UPDATE:
+     *  After ongoing conversations with the WordPress.org TRT we received
+     *  an official approval for including i-frames in the theme's WP Admin setting's
+     *  page tab (the SDK will never add any i-frames on the sitefront). i-frames
+     *  were never against the guidelines, but we wanted to get the team's blessings
+     *  before we move forward. For the record, I got the final approval from
+     *  Ulrich Pogson (@grapplerulrich), a team lead at the TRT during WordCamp
+     *  Europe 2017 (June 16th, 2017).
+     *
+     * If you have any questions or need clarifications, please don't hesitate
+     * pinging me on slack, my username is @svovaf.
+     *
+     * @author Vova Feldman (@svovaf)
+     * @since 1.2.2
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    wp_enqueue_script('jquery');
+    wp_enqueue_script('json2');
+    fs_enqueue_local_script('postmessage', 'nojquery.ba-postmessage.min.js');
+    fs_enqueue_local_script('fs-postmessage', 'postmessage.js');
+    fs_enqueue_local_style('fs_common', '/admin/common.css');
+
+    fs_enqueue_local_style('fs_checkout', '/admin/checkout.css');
+
+    /**
+     * @var array    $VARS
+     * @var Freemius $fs
+     */
+    $fs   = freemius($VARS['id']);
+    $slug = $fs->get_slug();
+
+    $timestamp = time();
+
+    $context_params = array(
+        'plugin_id'      => $fs->get_id(),
+        'public_key'     => $fs->get_public_key(),
+        'plugin_version' => $fs->get_plugin_version(),
+        'mode'           => 'dashboard',
+        'trial'          => fs_request_get_bool('trial'),
+    );
+
+    $plan_id = fs_request_get('plan_id');
+    if (FS_Plugin_Plan::is_valid_id($plan_id)) {
+        $context_params['plan_id'] = $plan_id;
+    }
+
+    $licenses = fs_request_get('licenses');
+    if ($licenses === strval(intval($licenses)) && $licenses > 0) {
+        $context_params['licenses'] = $licenses;
+    }
+
+    $plugin_id = fs_request_get('plugin_id');
+    if (! FS_Plugin::is_valid_id($plugin_id)) {
+        $plugin_id = $fs->get_id();
+    }
+
+    if ($plugin_id == $fs->get_id()) {
+        $is_premium = $fs->is_premium();
 
         $bundle_id = $fs->get_bundle_id();
-        if ( ! is_null( $bundle_id ) ) {
+        if (! is_null($bundle_id)) {
             $context_params['bundle_id'] = $bundle_id;
         }
     } else {
-		// Identify the module code version of the checkout context module.
-		if ( $fs->is_addon_activated( $plugin_id ) ) {
-			$fs_addon   = Freemius::get_instance_by_id( $plugin_id );
-			$is_premium = $fs_addon->is_premium();
-		} else {
-			// If add-on isn't activated assume the premium version isn't installed.
-			$is_premium = false;
-		}
-	}
-
-	// Get site context secure params.
-	if ( $fs->is_registered() ) {
-		$site = $fs->get_site();
-
-		if ( $plugin_id != $fs->get_id() ) {
-			if ( $fs->is_addon_activated( $plugin_id ) ) {
-                $fs_addon   = Freemius::get_instance_by_id( $plugin_id );
+        // Identify the module code version of the checkout context module.
+        if ($fs->is_addon_activated($plugin_id)) {
+            $fs_addon   = Freemius::get_instance_by_id($plugin_id);
+            $is_premium = $fs_addon->is_premium();
+        } else {
+            // If add-on isn't activated assume the premium version isn't installed.
+            $is_premium = false;
+        }
+    }
+
+    // Get site context secure params.
+    if ($fs->is_registered()) {
+        $site = $fs->get_site();
+
+        if ($plugin_id != $fs->get_id()) {
+            if ($fs->is_addon_activated($plugin_id)) {
+                $fs_addon   = Freemius::get_instance_by_id($plugin_id);
                 $addon_site = $fs_addon->get_site();
-                if ( is_object( $addon_site ) ) {
+                if (is_object($addon_site)) {
                     $site = $addon_site;
                 }
-			}
-		}
-
-		$context_params = array_merge( $context_params, FS_Security::instance()->get_context_params(
-			$site,
-			$timestamp,
-			'checkout'
-		) );
-	} else {
-		$current_user = Freemius::_get_current_wp_user();
-
-		// Add site and user info to the request, this information
-		// is NOT being stored unless the user complete the purchase
-		// and agrees to the TOS.
-		$context_params = array_merge( $context_params, array(
-			'user_firstname' => $current_user->user_firstname,
-			'user_lastname'  => $current_user->user_lastname,
-			'user_email'     => $current_user->user_email,
-			'home_url'       => home_url(),
-		) );
-
-		$fs_user = Freemius::_get_user_by_email( $current_user->user_email );
-
-		if ( is_object( $fs_user ) && $fs_user->is_verified() ) {
-			$context_params = array_merge( $context_params, FS_Security::instance()->get_context_params(
-				$fs_user,
-				$timestamp,
-				'checkout'
-			) );
-		}
-	}
-
-	if ( $fs->is_payments_sandbox() ) {
-		// Append plugin secure token for sandbox mode authentication.
-		$context_params['sandbox'] = FS_Security::instance()->get_secure_token(
-			$fs->get_plugin(),
-			$timestamp,
-			'checkout'
-		);
-
-		/**
-		 * @since 1.1.7.3 Add security timestamp for sandbox even for anonymous user.
-		 */
-		if ( empty( $context_params['s_ctx_ts'] ) ) {
-			$context_params['s_ctx_ts'] = $timestamp;
-		}
-	}
-
-	$return_url = $fs->_get_sync_license_url( $plugin_id );
-
-	$can_user_install = (
-		( $fs->is_plugin() && current_user_can( 'install_plugins' ) ) ||
-		( $fs->is_theme() && current_user_can( 'install_themes' ) )
-	);
-
-	$query_params = array_merge( $context_params, $_GET, array(
-		// Current plugin version.
-		'plugin_version' => $fs->get_plugin_version(),
-		'sdk_version'    => WP_FS__SDK_VERSION,
-		'is_premium'     => $is_premium ? 'true' : 'false',
-		'can_install'    => $can_user_install ? 'true' : 'false',
-		'return_url'     => $return_url,
-	) );
-
-	$xdebug_session = fs_request_get( 'XDEBUG_SESSION' );
-	if ( false !== $xdebug_session ) {
-		$query_params['XDEBUG_SESSION'] = $xdebug_session;
-	}
-
-	$view_params = array(
-		'id'   => $VARS['id'],
-		'page' => strtolower( $fs->get_text_inline( 'Checkout', 'checkout' ) ) . ' ' . $fs->get_text_inline( 'PCI compliant', 'pci-compliant' ),
-	);
-	fs_require_once_template('secure-https-header.php', $view_params);
+            }
+        }
+
+        $context_params = array_merge($context_params, FS_Security::instance()->get_context_params(
+            $site,
+            $timestamp,
+            'checkout'
+        ));
+    } else {
+        $current_user = Freemius::_get_current_wp_user();
+
+        // Add site and user info to the request, this information
+        // is NOT being stored unless the user complete the purchase
+        // and agrees to the TOS.
+        $context_params = array_merge($context_params, array(
+            'user_firstname' => $current_user->user_firstname,
+            'user_lastname'  => $current_user->user_lastname,
+            'user_email'     => $current_user->user_email,
+            'home_url'       => home_url(),
+        ));
+
+        $fs_user = Freemius::_get_user_by_email($current_user->user_email);
+
+        if (is_object($fs_user) && $fs_user->is_verified()) {
+            $context_params = array_merge($context_params, FS_Security::instance()->get_context_params(
+                $fs_user,
+                $timestamp,
+                'checkout'
+            ));
+        }
+    }
+
+    if ($fs->is_payments_sandbox()) {
+        // Append plugin secure token for sandbox mode authentication.
+        $context_params['sandbox'] = FS_Security::instance()->get_secure_token(
+            $fs->get_plugin(),
+            $timestamp,
+            'checkout'
+        );
+
+        /**
+         * @since 1.1.7.3 Add security timestamp for sandbox even for anonymous user.
+         */
+        if (empty($context_params['s_ctx_ts'])) {
+            $context_params['s_ctx_ts'] = $timestamp;
+        }
+    }
+
+    $return_url = $fs->_get_sync_license_url($plugin_id);
+
+    $can_user_install = (
+        ($fs->is_plugin() && current_user_can('install_plugins')) ||
+        ($fs->is_theme() && current_user_can('install_themes'))
+    );
+
+    $query_params = array_merge($context_params, $_GET, array(
+        // Current plugin version.
+        'plugin_version' => $fs->get_plugin_version(),
+        'sdk_version'    => WP_FS__SDK_VERSION,
+        'is_premium'     => $is_premium ? 'true' : 'false',
+        'can_install'    => $can_user_install ? 'true' : 'false',
+        'return_url'     => $return_url,
+    ));
+
+    $xdebug_session = fs_request_get('XDEBUG_SESSION');
+    if (false !== $xdebug_session) {
+        $query_params['XDEBUG_SESSION'] = $xdebug_session;
+    }
+
+    $view_params = array(
+        'id'   => $VARS['id'],
+        'page' => strtolower($fs->get_text_inline('Checkout', 'checkout')) . ' ' . $fs->get_text_inline('PCI compliant', 'pci-compliant'),
+    );
+    fs_require_once_template('secure-https-header.php', $view_params);
 ?>
 	<div id="fs_checkout" class="wrap fs-section fs-full-size-wrapper">
 		<div id="fs_frame"></div>
@@ -239,7 +239,7 @@
 						base_url     = '<?php echo FS_CHECKOUT__ADDRESS ?>',
 						// Pass the parent page URL into the i-frame in a meaningful way (this URL could be
 						// passed via query string or hard coded into the child page, it depends on your needs).
-						src          = base_url + '/?<?php echo http_build_query( $query_params ) ?>#' + encodeURIComponent(document.location.href),
+						src          = base_url + '/?<?php echo http_build_query($query_params) ?>#' + encodeURIComponent(document.location.href),
 						// Append the i-frame into the DOM.
 						frame        = $('<i' + 'frame " src="' + src + '" width="100%" height="' + frame_height + 'px" scrolling="no" frameborder="0" style="background: transparent; width: 1px; min-width: 100%;"><\/i' + 'frame>')
 							.appendTo('#fs_frame');
@@ -269,10 +269,10 @@
 							requestData.auto_install = true;
 
 						// Post data to activation URL.
-						$.form('<?php echo fs_nonce_url( $fs->_get_admin_page_url( 'account', array(
-							'fs_action' => $fs->get_unique_affix() . '_activate_new',
-							'plugin_id' => $plugin_id
-						) ), $fs->get_unique_affix() . '_activate_new' ) ?>', requestData).submit();
+						$.form('<?php echo fs_nonce_url($fs->_get_admin_page_url('account', array(
+                            'fs_action' => $fs->get_unique_affix() . '_activate_new',
+                            'plugin_id' => $plugin_id
+                        )), $fs->get_unique_affix() . '_activate_new') ?>', requestData).submit();
 					});
 
 					FS.PostMessage.receiveOnce('pending_activation', function (data) {
@@ -283,11 +283,11 @@
 						if (true === data.auto_install)
 							requestData.auto_install = true;
 
-						$.form('<?php echo fs_nonce_url( $fs->_get_admin_page_url( 'account', array(
-							'fs_action'          => $fs->get_unique_affix() . '_activate_new',
-							'plugin_id'          => $plugin_id,
-							'pending_activation' => true,
-						) ), $fs->get_unique_affix() . '_activate_new' ) ?>', requestData).submit();
+						$.form('<?php echo fs_nonce_url($fs->_get_admin_page_url('account', array(
+                            'fs_action'          => $fs->get_unique_affix() . '_activate_new',
+                            'plugin_id'          => $plugin_id,
+                            'pending_activation' => true,
+                        )), $fs->get_unique_affix() . '_activate_new') ?>', requestData).submit();
 					});
 
 					FS.PostMessage.receiveOnce('get_context', function () {
@@ -298,17 +298,23 @@
 						// and then click the purchase button, the context information
 						// of the user will be shared with Freemius in order to complete the
 						// purchase workflow and activate the license for the right user.
-						<?php $install_data = array_merge( $fs->get_opt_in_params(),
-						array(
-							'activation_url' => fs_nonce_url( $fs->_get_admin_page_url( '',
-								array(
-									'fs_action' => $fs->get_unique_affix() . '_activate_new',
-									'plugin_id' => $plugin_id,
-
-								) ),
-								$fs->get_unique_affix() . '_activate_new' )
-						) ) ?>
-						FS.PostMessage.post('context', <?php echo json_encode( $install_data ) ?>, frame[0]);
+						<?php $install_data = array_merge(
+                            $fs->get_opt_in_params(),
+                            array(
+                            'activation_url' => fs_nonce_url(
+                                $fs->_get_admin_page_url(
+                                '',
+                                array(
+                                    'fs_action' => $fs->get_unique_affix() . '_activate_new',
+                                    'plugin_id' => $plugin_id,
+
+                                )
+                            ),
+                                $fs->get_unique_affix() . '_activate_new'
+                            )
+                        )
+                        ) ?>
+						FS.PostMessage.post('context', <?php echo json_encode($install_data) ?>, frame[0]);
 					});
 
 					FS.PostMessage.receiveOnce('purchaseCompleted', <?php echo $fs->apply_filters('checkout/purchaseCompleted', 'function (data) {
diff --git a/freemius/templates/connect.php b/freemius/templates/connect.php
index 9cc7cab68fbfe7491c46dd7e7479c2aa2e1b2d44..6b98bb9d5a19b0da390d0f9e97c37959ba5ba5e2 100644
--- a/freemius/templates/connect.php
+++ b/freemius/templates/connect.php
@@ -1,293 +1,294 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.7
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	/**
-	 * @var array    $VARS
-	 * @var Freemius $fs
-	 */
-	$fs   = freemius( $VARS['id'] );
-	$slug = $fs->get_slug();
-
-	$is_pending_activation = $fs->is_pending_activation();
-	$is_premium_only       = $fs->is_only_premium();
-	$has_paid_plans        = $fs->has_paid_plan();
-	$is_premium_code       = $fs->is_premium();
-	$is_freemium           = $fs->is_freemium();
-
-	$fs->_enqueue_connect_essentials();
-
-	$current_user = Freemius::_get_current_wp_user();
-
-	$first_name = $current_user->user_firstname;
-	if ( empty( $first_name ) ) {
-		$first_name = $current_user->nickname;
-	}
-
-	$site_url     = get_site_url();
-	$protocol_pos = strpos( $site_url, '://' );
-	if ( false !== $protocol_pos ) {
-		$site_url = substr( $site_url, $protocol_pos + 3 );
-	}
-
-	$freemius_site_www = 'https://freemius.com';
-
-	$freemius_usage_tracking_url = $fs->get_usage_tracking_terms_url();
-	$freemius_plugin_terms_url   = $fs->get_eula_url();
-
-	$freemius_site_url = $fs->is_premium() ?
-		$freemius_site_www :
-		$freemius_usage_tracking_url;
-
-	if ( $fs->is_premium() ) {
-		$freemius_site_url .= '?' . http_build_query( array(
-				'id'   => $fs->get_id(),
-				'slug' => $slug,
-			) );
-	}
-
-	$freemius_link = '<a href="' . $freemius_site_url . '" target="_blank" rel="noopener" tabindex="1">freemius.com</a>';
-
-	$error = fs_request_get( 'error' );
-
-	$require_license_key = $is_premium_only ||
-	                       ( $is_freemium && $is_premium_code && fs_request_get_bool( 'require_license', true ) );
-
-	if ( $is_pending_activation ) {
-		$require_license_key = false;
-	}
-
-	if ( $require_license_key ) {
-		$fs->_add_license_activation_dialog_box();
-	}
-
-	$is_optin_dialog = (
-		$fs->is_theme() &&
-		$fs->is_themes_page() &&
-		$fs->show_opt_in_on_themes_page()
-	);
-
-	if ( $is_optin_dialog ) {
-		$show_close_button             = false;
-		$previous_theme_activation_url = '';
-
-		if ( ! $is_premium_code ) {
-			$show_close_button = true;
-		} else if ( $is_premium_only ) {
-			$previous_theme_activation_url = $fs->get_previous_theme_activation_url();
-			$show_close_button             = ( ! empty( $previous_theme_activation_url ) );
-		}
-	}
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.7
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    /**
+     * @var array    $VARS
+     * @var Freemius $fs
+     */
+    $fs   = freemius($VARS['id']);
+    $slug = $fs->get_slug();
+
+    $is_pending_activation = $fs->is_pending_activation();
+    $is_premium_only       = $fs->is_only_premium();
+    $has_paid_plans        = $fs->has_paid_plan();
+    $is_premium_code       = $fs->is_premium();
+    $is_freemium           = $fs->is_freemium();
+
+    $fs->_enqueue_connect_essentials();
+
+    $current_user = Freemius::_get_current_wp_user();
+
+    $first_name = $current_user->user_firstname;
+    if (empty($first_name)) {
+        $first_name = $current_user->nickname;
+    }
 
-	$is_network_level_activation = (
-		fs_is_network_admin() &&
-		$fs->is_network_active() &&
-		! $fs->is_network_delegated_connection()
-	);
+    $site_url     = get_site_url();
+    $protocol_pos = strpos($site_url, '://');
+    if (false !== $protocol_pos) {
+        $site_url = substr($site_url, $protocol_pos + 3);
+    }
+
+    $freemius_site_www = 'https://freemius.com';
+
+    $freemius_usage_tracking_url = $fs->get_usage_tracking_terms_url();
+    $freemius_plugin_terms_url   = $fs->get_eula_url();
+
+    $freemius_site_url = $fs->is_premium() ?
+        $freemius_site_www :
+        $freemius_usage_tracking_url;
 
-	$fs_user = Freemius::_get_user_by_email( $current_user->user_email );
+    if ($fs->is_premium()) {
+        $freemius_site_url .= '?' . http_build_query(array(
+                'id'   => $fs->get_id(),
+                'slug' => $slug,
+            ));
+    }
+
+    $freemius_link = '<a href="' . $freemius_site_url . '" target="_blank" rel="noopener" tabindex="1">freemius.com</a>';
 
-	$activate_with_current_user = (
-		is_object( $fs_user ) &&
-		! $is_pending_activation &&
-		// If requires a license for activation, use the user associated with the license for the opt-in.
-		! $require_license_key &&
-		! $is_network_level_activation
-	);
+    $error = fs_request_get('error');
 
-    $optin_params = $fs->get_opt_in_params( array(), $is_network_level_activation );
-    $sites        = isset( $optin_params['sites'] ) ? $optin_params['sites'] : array();
+    $require_license_key = $is_premium_only ||
+                           ($is_freemium && $is_premium_code && fs_request_get_bool('require_license', true));
 
-    $is_network_upgrade_mode = ( fs_is_network_admin() && $fs->is_network_upgrade_mode() );
+    if ($is_pending_activation) {
+        $require_license_key = false;
+    }
+
+    if ($require_license_key) {
+        $fs->_add_license_activation_dialog_box();
+    }
+
+    $is_optin_dialog = (
+        $fs->is_theme() &&
+        $fs->is_themes_page() &&
+        $fs->show_opt_in_on_themes_page()
+    );
+
+    if ($is_optin_dialog) {
+        $show_close_button             = false;
+        $previous_theme_activation_url = '';
+
+        if (! $is_premium_code) {
+            $show_close_button = true;
+        } elseif ($is_premium_only) {
+            $previous_theme_activation_url = $fs->get_previous_theme_activation_url();
+            $show_close_button             = (! empty($previous_theme_activation_url));
+        }
+    }
+
+    $is_network_level_activation = (
+        fs_is_network_admin() &&
+        $fs->is_network_active() &&
+        ! $fs->is_network_delegated_connection()
+    );
+
+    $fs_user = Freemius::_get_user_by_email($current_user->user_email);
+
+    $activate_with_current_user = (
+        is_object($fs_user) &&
+        ! $is_pending_activation &&
+        // If requires a license for activation, use the user associated with the license for the opt-in.
+        ! $require_license_key &&
+        ! $is_network_level_activation
+    );
+
+    $optin_params = $fs->get_opt_in_params(array(), $is_network_level_activation);
+    $sites        = isset($optin_params['sites']) ? $optin_params['sites'] : array();
+
+    $is_network_upgrade_mode = (fs_is_network_admin() && $fs->is_network_upgrade_mode());
 
     /* translators: %s: name (e.g. Hey John,) */
-    $hey_x_text = esc_html( sprintf( fs_text_x_inline( 'Hey %s,', 'greeting', 'hey-x', $slug ), $first_name ) );
+    $hey_x_text = esc_html(sprintf(fs_text_x_inline('Hey %s,', 'greeting', 'hey-x', $slug), $first_name));
 
-    $is_gdpr_required = ( ! $is_pending_activation && ! $require_license_key ) ?
-	    FS_GDPR_Manager::instance()->is_required() :
+    $is_gdpr_required = (! $is_pending_activation && ! $require_license_key) ?
+        FS_GDPR_Manager::instance()->is_required() :
         false;
 
-    if ( is_null( $is_gdpr_required ) ) {
+    if (is_null($is_gdpr_required)) {
         $is_gdpr_required = $fs->fetch_and_store_current_user_gdpr_anonymously();
     }
 ?>
 <?php
-	if ( $is_optin_dialog ) { ?>
+    if ($is_optin_dialog) { ?>
 <div id="fs_theme_connect_wrapper">
 	<?php
-		if ( $show_close_button ) { ?>
+        if ($show_close_button) { ?>
 			<button class="close dashicons dashicons-no"><span class="screen-reader-text">Close connect dialog</span>
 			</button>
 			<?php
-		}
-	?>
+        }
+    ?>
 	<?php
-		}
-
-		/**
-		 * Allows developers to include custom HTML before the opt-in content.
-		 *
-		 * @author Vova Feldman
-		 * @since 2.3.2
-		 */
-		$fs->do_action( 'connect/before' );
-	?>
+        }
+
+        /**
+         * Allows developers to include custom HTML before the opt-in content.
+         *
+         * @author Vova Feldman
+         * @since 2.3.2
+         */
+        $fs->do_action('connect/before');
+    ?>
 	<div id="fs_connect"
-	     class="wrap<?php if ( ! fs_is_network_admin() && ( ! $fs->is_enable_anonymous() || $is_pending_activation || $require_license_key ) ) {
-		     echo ' fs-anonymous-disabled';
-	     } ?><?php echo $require_license_key ? ' require-license-key' : '' ?>">
+	     class="wrap<?php if (! fs_is_network_admin() && (! $fs->is_enable_anonymous() || $is_pending_activation || $require_license_key)) {
+        echo ' fs-anonymous-disabled';
+    } ?><?php echo $require_license_key ? ' require-license-key' : '' ?>">
 		<div class="fs-visual">
 			<b class="fs-site-icon"><i class="dashicons dashicons-wordpress"></i></b>
 			<i class="dashicons dashicons-plus fs-first"></i>
 			<?php
-				$vars = array( 'id' => $fs->get_id() );
-				fs_require_once_template( 'plugin-icon.php', $vars );
-			?>
+                $vars = array( 'id' => $fs->get_id() );
+                fs_require_once_template('plugin-icon.php', $vars);
+            ?>
 			<i class="dashicons dashicons-plus fs-second"></i>
 			<img class="fs-connect-logo" width="80" height="80" src="//img.freemius.com/connect-logo.png"/>
 		</div>
 		<div class="fs-content">
-			<?php if ( ! empty( $error ) ) : ?>
-				<p class="fs-error"><?php echo esc_html( $error ) ?></p>
+			<?php if (! empty($error)) : ?>
+				<p class="fs-error"><?php echo esc_html($error) ?></p>
 			<?php endif ?>
 			<p><?php
-					$button_label = fs_text_inline( 'Allow & Continue', 'opt-in-connect', $slug );
-					$message = '';
-
-					if ( $is_pending_activation ) {
-						$button_label = fs_text_inline( 'Re-send activation email', 'resend-activation-email', $slug );
-
-						$message = $fs->apply_filters( 'pending_activation_message', sprintf(
-						    /* translators: %s: name (e.g. Thanks John!) */
-							fs_text_inline( 'Thanks %s!', 'thanks-x', $slug ) . '<br>' .
-							fs_text_inline( 'You should receive an activation email for %s to your mailbox at %s. Please make sure you click the activation button in that email to %s.', 'pending-activation-message', $slug ),
-							$first_name,
-							'<b>' . $fs->get_plugin_name() . '</b>',
-							'<b>' . $current_user->user_email . '</b>',
-							fs_text_inline( 'complete the install', 'complete-the-install', $slug )
-						) );
-					} else if ( $require_license_key ) {
-						$button_label = $is_network_upgrade_mode ?
-                            fs_text_inline( 'Activate License', 'agree-activate-license', $slug ) :
-                            fs_text_inline( 'Agree & Activate License', 'agree-activate-license', $slug );
-
-						$message = $fs->apply_filters(
-						    'connect-message_on-premium',
-							sprintf( fs_text_inline( 'Welcome to %s! To get started, please enter your license key:', 'thanks-for-purchasing', $slug ), '<b>' . $fs->get_plugin_name() . '</b>' ),
-							$first_name,
-							$fs->get_plugin_name()
-						);
-					} else {
-						$filter                = 'connect_message';
-						$default_optin_message = $is_gdpr_required ?
-							fs_text_inline( 'Never miss an important update - opt in to our security & feature updates notifications, educational content, offers, and non-sensitive diagnostic tracking with %4$s.', 'connect-message', $slug) :
-							fs_text_inline( 'Never miss an important update - opt in to our security and feature updates notifications, and non-sensitive diagnostic tracking with %4$s.', 'connect-message', $slug);
-
-						if ( $fs->is_plugin_update() ) {
-							// If Freemius was added on a plugin update, set different
-							// opt-in message.
-							$default_optin_message = $is_gdpr_required ?
-								fs_text_inline( 'Never miss an important update - opt in to our security & feature updates notifications, educational content, offers, and non-sensitive diagnostic tracking with %4$s. If you skip this, that\'s okay! %1$s will still work just fine.', 'connect-message_on-update', $slug ) :
-								fs_text_inline( 'Never miss an important update - opt in to our security & feature updates notifications, and non-sensitive diagnostic tracking with %4$s. If you skip this, that\'s okay! %1$s will still work just fine.', 'connect-message_on-update', $slug );
-
-							// If user customized the opt-in message on update, use
-							// that message. Otherwise, fallback to regular opt-in
-							// custom message if exist.
-							if ( $fs->has_filter( 'connect_message_on_update' ) ) {
-								$filter = 'connect_message_on_update';
-							}
-						}
+                    $button_label = fs_text_inline('Allow & Continue', 'opt-in-connect', $slug);
+                    $message = '';
+
+                    if ($is_pending_activation) {
+                        $button_label = fs_text_inline('Re-send activation email', 'resend-activation-email', $slug);
+
+                        $message = $fs->apply_filters('pending_activation_message', sprintf(
+                            /* translators: %s: name (e.g. Thanks John!) */
+                            fs_text_inline('Thanks %s!', 'thanks-x', $slug) . '<br>' .
+                            fs_text_inline('You should receive an activation email for %s to your mailbox at %s. Please make sure you click the activation button in that email to %s.', 'pending-activation-message', $slug),
+                            $first_name,
+                            '<b>' . $fs->get_plugin_name() . '</b>',
+                            '<b>' . $current_user->user_email . '</b>',
+                            fs_text_inline('complete the install', 'complete-the-install', $slug)
+                        ));
+                    } elseif ($require_license_key) {
+                        $button_label = $is_network_upgrade_mode ?
+                            fs_text_inline('Activate License', 'agree-activate-license', $slug) :
+                            fs_text_inline('Agree & Activate License', 'agree-activate-license', $slug);
+
+                        $message = $fs->apply_filters(
+                            'connect-message_on-premium',
+                            sprintf(fs_text_inline('Welcome to %s! To get started, please enter your license key:', 'thanks-for-purchasing', $slug), '<b>' . $fs->get_plugin_name() . '</b>'),
+                            $first_name,
+                            $fs->get_plugin_name()
+                        );
+                    } else {
+                        $filter                = 'connect_message';
+                        $default_optin_message = $is_gdpr_required ?
+                            fs_text_inline('Never miss an important update - opt in to our security & feature updates notifications, educational content, offers, and non-sensitive diagnostic tracking with %4$s.', 'connect-message', $slug) :
+                            fs_text_inline('Never miss an important update - opt in to our security and feature updates notifications, and non-sensitive diagnostic tracking with %4$s.', 'connect-message', $slug);
+
+                        if ($fs->is_plugin_update()) {
+                            // If Freemius was added on a plugin update, set different
+                            // opt-in message.
+                            $default_optin_message = $is_gdpr_required ?
+                                fs_text_inline('Never miss an important update - opt in to our security & feature updates notifications, educational content, offers, and non-sensitive diagnostic tracking with %4$s. If you skip this, that\'s okay! %1$s will still work just fine.', 'connect-message_on-update', $slug) :
+                                fs_text_inline('Never miss an important update - opt in to our security & feature updates notifications, and non-sensitive diagnostic tracking with %4$s. If you skip this, that\'s okay! %1$s will still work just fine.', 'connect-message_on-update', $slug);
+
+                            // If user customized the opt-in message on update, use
+                            // that message. Otherwise, fallback to regular opt-in
+                            // custom message if exist.
+                            if ($fs->has_filter('connect_message_on_update')) {
+                                $filter = 'connect_message_on_update';
+                            }
+                        }
 
-						$message = $fs->apply_filters(
-						    $filter,
-                            ($is_network_upgrade_mode ?
+                        $message = $fs->apply_filters(
+                            $filter,
+                            (
+                                $is_network_upgrade_mode ?
                                 '' :
                                 /* translators: %s: name (e.g. Hey John,) */
                                 $hey_x_text . '<br>'
                             ) .
-							sprintf(
-								esc_html( $default_optin_message ),
-								'<b>' . esc_html( $fs->get_plugin_name() ) . '</b>',
-								'<b>' . $current_user->user_login . '</b>',
-								'<a href="' . $site_url . '" target="_blank" rel="noopener noreferrer">' . $site_url . '</a>',
-								$freemius_link
-							),
-							$first_name,
-							$fs->get_plugin_name(),
-							$current_user->user_login,
-							'<a href="' . $site_url . '" target="_blank" rel="noopener noreferrer">' . $site_url . '</a>',
-							$freemius_link,
-							$is_gdpr_required
-						);
-					}
+                            sprintf(
+                                esc_html($default_optin_message),
+                                '<b>' . esc_html($fs->get_plugin_name()) . '</b>',
+                                '<b>' . $current_user->user_login . '</b>',
+                                '<a href="' . $site_url . '" target="_blank" rel="noopener noreferrer">' . $site_url . '</a>',
+                                $freemius_link
+                            ),
+                            $first_name,
+                            $fs->get_plugin_name(),
+                            $current_user->user_login,
+                            '<a href="' . $site_url . '" target="_blank" rel="noopener noreferrer">' . $site_url . '</a>',
+                            $freemius_link,
+                            $is_gdpr_required
+                        );
+                    }
 
-					if ( $is_network_upgrade_mode ) {
-                        $network_integration_text = esc_html( fs_text_inline( 'We\'re excited to introduce the Freemius network-level integration.', 'connect_message_network_upgrade', $slug ) );
+                    if ($is_network_upgrade_mode) {
+                        $network_integration_text = esc_html(fs_text_inline('We\'re excited to introduce the Freemius network-level integration.', 'connect_message_network_upgrade', $slug));
 
-                        if ($is_premium_code){
-                            $message = $network_integration_text . ' ' . sprintf( fs_text_inline( 'During the update process we detected %d site(s) that are still pending license activation.', 'connect_message_network_upgrade-premium', $slug ), count( $sites ) );
+                        if ($is_premium_code) {
+                            $message = $network_integration_text . ' ' . sprintf(fs_text_inline('During the update process we detected %d site(s) that are still pending license activation.', 'connect_message_network_upgrade-premium', $slug), count($sites));
 
-                            $message .= '<br><br>' . sprintf( fs_text_inline( 'If you\'d like to use the %s on those sites, please enter your license key below and click the activation button.', 'connect_message_network_upgrade-premium-activate-license', $slug ), $is_premium_only ? $fs->get_module_label( true ) : sprintf(
+                            $message .= '<br><br>' . sprintf(fs_text_inline('If you\'d like to use the %s on those sites, please enter your license key below and click the activation button.', 'connect_message_network_upgrade-premium-activate-license', $slug), $is_premium_only ? $fs->get_module_label(true) : sprintf(
                                 /* translators: %s: module type (plugin, theme, or add-on) */
-                                    fs_text_inline( "%s's paid features", 'x-paid-features', $slug ),
-                                    $fs->get_module_label( true )
-                                ) );
+                                    fs_text_inline("%s's paid features", 'x-paid-features', $slug),
+                                $fs->get_module_label(true)
+                            ));
 
                             /* translators: %s: module type (plugin, theme, or add-on) */
-                            $message .= ' ' . sprintf( fs_text_inline( 'Alternatively, you can skip it for now and activate the license later, in your %s\'s network-level Account page.', 'connect_message_network_upgrade-premium-skip-license', $slug ), $fs->get_module_label( true ) );
-                        }else {
-                            $message = $network_integration_text . ' ' . sprintf( fs_text_inline( 'During the update process we detected %s site(s) in the network that are still pending your attention.', 'connect_message_network_upgrade-free', $slug ), count( $sites ) ) . '<br><br>' . ( fs_starts_with( $message, $hey_x_text . '<br>' ) ? substr( $message, strlen( $hey_x_text . '<br>' ) ) : $message );
+                            $message .= ' ' . sprintf(fs_text_inline('Alternatively, you can skip it for now and activate the license later, in your %s\'s network-level Account page.', 'connect_message_network_upgrade-premium-skip-license', $slug), $fs->get_module_label(true));
+                        } else {
+                            $message = $network_integration_text . ' ' . sprintf(fs_text_inline('During the update process we detected %s site(s) in the network that are still pending your attention.', 'connect_message_network_upgrade-free', $slug), count($sites)) . '<br><br>' . (fs_starts_with($message, $hey_x_text . '<br>') ? substr($message, strlen($hey_x_text . '<br>')) : $message);
                         }
                     }
 
-					echo $message;
-				?></p>
-			<?php if ( $require_license_key ) : ?>
+                    echo $message;
+                ?></p>
+			<?php if ($require_license_key) : ?>
 				<div class="fs-license-key-container">
 					<input id="fs_license_key" name="fs_key" type="text" required maxlength="<?php echo $fs->apply_filters('license_key_maxlength', 32) ?>"
-					       placeholder="<?php fs_esc_attr_echo_inline( 'License key', 'license-key', $slug ) ?>" tabindex="1"/>
+					       placeholder="<?php fs_esc_attr_echo_inline('License key', 'license-key', $slug) ?>" tabindex="1"/>
 					<i class="dashicons dashicons-admin-network"></i>
 					<a class="show-license-resend-modal show-license-resend-modal-<?php echo $fs->get_unique_affix() ?>"
-					   href="#"><?php fs_esc_html_echo_inline( "Can't find your license key?", 'cant-find-license-key', $slug ); ?></a>
+					   href="#"><?php fs_esc_html_echo_inline("Can't find your license key?", 'cant-find-license-key', $slug); ?></a>
 				</div>
 
 				<?php
-				/**
-				 * Allows developers to include custom HTML after the license input container.
-				 *
-				 * @author Vova Feldman
-				 * @since 2.1.2
-				 */
-				 $fs->do_action( 'connect/after_license_input' );
-				?>
+                /**
+                 * Allows developers to include custom HTML after the license input container.
+                 *
+                 * @author Vova Feldman
+                 * @since 2.1.2
+                 */
+                 $fs->do_action('connect/after_license_input');
+                ?>
 
                 <?php
                     $send_updates_text = sprintf(
-                        '%s<span class="action-description"> - %s</span>',
-                        $fs->get_text_inline( 'Yes', 'yes' ),
-                        $fs->get_text_inline( 'send me security & feature updates, educational content and offers.', 'send-updates' )
-                    );
+                    '%s<span class="action-description"> - %s</span>',
+                    $fs->get_text_inline('Yes', 'yes'),
+                    $fs->get_text_inline('send me security & feature updates, educational content and offers.', 'send-updates')
+                );
 
                     $do_not_send_updates_text = sprintf(
                         '%s<span class="action-description"> - %s</span>',
-                        $fs->get_text_inline( 'No', 'no' ),
+                        $fs->get_text_inline('No', 'no'),
                         sprintf(
-                            $fs->get_text_inline( 'do %sNOT%s send me security & feature updates, educational content and offers.', 'do-not-send-updates' ),
+                            $fs->get_text_inline('do %sNOT%s send me security & feature updates, educational content and offers.', 'do-not-send-updates'),
                             '<span class="underlined">',
                             '</span>'
                         )
                     );
                 ?>
                 <div id="fs_marketing_optin">
-                    <span class="fs-message"><?php fs_echo_inline( "Please let us know if you'd like us to contact you for security & feature updates, educational content, and occasional offers:", 'contact-for-updates' ) ?></span>
+                    <span class="fs-message"><?php fs_echo_inline("Please let us know if you'd like us to contact you for security & feature updates, educational content, and occasional offers:", 'contact-for-updates') ?></span>
                     <div class="fs-input-container">
                         <label>
                             <input type="radio" name="allow-marketing" value="true" tabindex="1" />
@@ -300,7 +301,7 @@
                     </div>
                 </div>
 			<?php endif ?>
-			<?php if ( $is_network_level_activation ) : ?>
+			<?php if ($is_network_level_activation) : ?>
             <?php
                 $vars = array(
                     'id'                  => $fs->get_id(),
@@ -308,209 +309,208 @@
                     'require_license_key' => $require_license_key
                 );
 
-                echo fs_get_template( 'partials/network-activation.php', $vars );
+                echo fs_get_template('partials/network-activation.php', $vars);
             ?>
 			<?php endif ?>
 		</div>
 		<div class="fs-actions">
-			<?php if ( $fs->is_enable_anonymous() && ! $is_pending_activation && ( ! $require_license_key || $is_network_upgrade_mode ) ) : ?>
-				<a id="skip_activation" href="<?php echo fs_nonce_url( $fs->_get_admin_page_url( '', array( 'fs_action' => $fs->get_unique_affix() . '_skip_activation' ), $is_network_level_activation ), $fs->get_unique_affix() . '_skip_activation' ) ?>"
-				   class="button button-secondary" tabindex="2"><?php fs_esc_html_echo_x_inline( 'Skip', 'verb', 'skip', $slug ) ?></a>
+			<?php if ($fs->is_enable_anonymous() && ! $is_pending_activation && (! $require_license_key || $is_network_upgrade_mode)) : ?>
+				<a id="skip_activation" href="<?php echo fs_nonce_url($fs->_get_admin_page_url('', array( 'fs_action' => $fs->get_unique_affix() . '_skip_activation' ), $is_network_level_activation), $fs->get_unique_affix() . '_skip_activation') ?>"
+				   class="button button-secondary" tabindex="2"><?php fs_esc_html_echo_x_inline('Skip', 'verb', 'skip', $slug) ?></a>
 			<?php endif ?>
-			<?php if ( $is_network_level_activation && $fs->apply_filters( 'show_delegation_option', true ) ) : ?>
-				<a id="delegate_to_site_admins" class="fs-tooltip-trigger <?php echo is_rtl() ? ' rtl' : '' ?>" href="<?php echo fs_nonce_url( $fs->_get_admin_page_url( '', array( 'fs_action' => $fs->get_unique_affix() . '_delegate_activation' ) ), $fs->get_unique_affix() . '_delegate_activation' ) ?>"><?php fs_esc_html_echo_inline( 'Delegate to Site Admins', 'delegate-to-site-admins', $slug ) ?><span class="fs-tooltip"><?php fs_esc_html_echo_inline( 'If you click it, this decision will be delegated to the sites administrators.', 'delegate-sites-tooltip', $slug ) ?></span></a>
+			<?php if ($is_network_level_activation && $fs->apply_filters('show_delegation_option', true)) : ?>
+				<a id="delegate_to_site_admins" class="fs-tooltip-trigger <?php echo is_rtl() ? ' rtl' : '' ?>" href="<?php echo fs_nonce_url($fs->_get_admin_page_url('', array( 'fs_action' => $fs->get_unique_affix() . '_delegate_activation' )), $fs->get_unique_affix() . '_delegate_activation') ?>"><?php fs_esc_html_echo_inline('Delegate to Site Admins', 'delegate-to-site-admins', $slug) ?><span class="fs-tooltip"><?php fs_esc_html_echo_inline('If you click it, this decision will be delegated to the sites administrators.', 'delegate-sites-tooltip', $slug) ?></span></a>
 			<?php endif ?>
-			<?php if ( $activate_with_current_user ) : ?>
+			<?php if ($activate_with_current_user) : ?>
 				<form action="" method="POST">
 					<input type="hidden" name="fs_action"
 					       value="<?php echo $fs->get_unique_affix() ?>_activate_existing">
-					<?php wp_nonce_field( 'activate_existing_' . $fs->get_public_key() ) ?>
+					<?php wp_nonce_field('activate_existing_' . $fs->get_public_key()) ?>
 					<input type="hidden" name="is_extensions_tracking_allowed" value="1">
 					<button class="button button-primary" tabindex="1"
-					        type="submit"><?php echo esc_html( $button_label ) ?></button>
+					        type="submit"><?php echo esc_html($button_label) ?></button>
 				</form>
 			<?php else : ?>
 				<form method="post" action="<?php echo WP_FS__ADDRESS ?>/action/service/user/install/">
-					<?php unset( $optin_params['sites']); ?>
-					<?php foreach ( $optin_params as $name => $value ) : ?>
-						<input type="hidden" name="<?php echo $name ?>" value="<?php echo esc_attr( $value ) ?>">
+					<?php unset($optin_params['sites']); ?>
+					<?php foreach ($optin_params as $name => $value) : ?>
+						<input type="hidden" name="<?php echo $name ?>" value="<?php echo esc_attr($value) ?>">
 					<?php endforeach ?>
 					<input type="hidden" name="is_extensions_tracking_allowed" value="1">
 					<button class="button button-primary" tabindex="1"
-					        type="submit"<?php if ( $require_license_key ) {
-						echo ' disabled="disabled"';
-					} ?>><?php echo esc_html( $button_label ) ?></button>
+					        type="submit"<?php if ($require_license_key) {
+                echo ' disabled="disabled"';
+            } ?>><?php echo esc_html($button_label) ?></button>
 				</form>
 			<?php endif ?>
-            <?php if ( $require_license_key ) : ?>
-                <a id="license_issues_link" href="<?php echo $fs->apply_filters( 'known_license_issues_url', 'https://freemius.com/help/documentation/wordpress-sdk/license-activation-issues/' ) ?>" target="_blank"><?php fs_esc_html_echo_inline( 'License issues?', 'license-issues', $slug ) ?></a>
+            <?php if ($require_license_key) : ?>
+                <a id="license_issues_link" href="<?php echo $fs->apply_filters('known_license_issues_url', 'https://freemius.com/help/documentation/wordpress-sdk/license-activation-issues/') ?>" target="_blank"><?php fs_esc_html_echo_inline('License issues?', 'license-issues', $slug) ?></a>
             <?php endif ?>
 		</div><?php
 
-			// Set core permission list items.
-			$permissions = array();
+            // Set core permission list items.
+            $permissions = array();
 
-			/**
-			 * When activating a license key the information of the admin is not collected, we gather the user info from the license.
-			 *
-			 * @since 2.3.2
-			 * @author Vova Feldman
-			 */
-			if ( ! $require_license_key ) {
-				$permissions['profile'] = array(
-					'icon-class' => 'dashicons dashicons-admin-users',
-					'label'      => $fs->get_text_inline( 'Your Profile Overview', 'permissions-profile' ),
-					'desc'       => $fs->get_text_inline( 'Name and email address', 'permissions-profile_desc' ),
-					'priority'   => 5,
-				);
-			}
+            /**
+             * When activating a license key the information of the admin is not collected, we gather the user info from the license.
+             *
+             * @since 2.3.2
+             * @author Vova Feldman
+             */
+            if (! $require_license_key) {
+                $permissions['profile'] = array(
+                    'icon-class' => 'dashicons dashicons-admin-users',
+                    'label'      => $fs->get_text_inline('Your Profile Overview', 'permissions-profile'),
+                    'desc'       => $fs->get_text_inline('Name and email address', 'permissions-profile_desc'),
+                    'priority'   => 5,
+                );
+            }
 
             $permissions['site'] = array(
                 'icon-class' => 'dashicons dashicons-admin-settings',
-                'tooltip'    => ( $require_license_key ? sprintf( $fs->get_text_inline( 'So you can manage and control your license remotely from the User Dashboard.', 'permissions-site_tooltip' ), $fs->get_module_type() ) : '' ),
-                'label'      => $fs->get_text_inline( 'Your Site Overview', 'permissions-site' ),
-                'desc'       => $fs->get_text_inline( 'Site URL, WP version, PHP info', 'permissions-site_desc' ),
+                'tooltip'    => ($require_license_key ? sprintf($fs->get_text_inline('So you can manage and control your license remotely from the User Dashboard.', 'permissions-site_tooltip'), $fs->get_module_type()) : ''),
+                'label'      => $fs->get_text_inline('Your Site Overview', 'permissions-site'),
+                'desc'       => $fs->get_text_inline('Site URL, WP version, PHP info', 'permissions-site_desc'),
                 'priority'   => 10,
             );
 
-            if ( ! $require_license_key ) {
+            if (! $require_license_key) {
                 $permissions['notices'] = array(
                     'icon-class' => 'dashicons dashicons-testimonial',
-                    'label'      => $fs->get_text_inline( 'Admin Notices', 'permissions-admin-notices' ),
-                    'desc'       => $fs->get_text_inline( 'Updates, announcements, marketing, no spam', 'permissions-newsletter_desc' ),
+                    'label'      => $fs->get_text_inline('Admin Notices', 'permissions-admin-notices'),
+                    'desc'       => $fs->get_text_inline('Updates, announcements, marketing, no spam', 'permissions-newsletter_desc'),
                     'priority'   => 13,
                 );
             }
 
             $permissions['events'] = array(
-                'icon-class' => 'dashicons dashicons-admin-' . ( $fs->is_plugin() ? 'plugins' : 'appearance' ),
-                'tooltip'    => ( $require_license_key ? sprintf( $fs->get_text_inline( 'So you can reuse the license when the %s is no longer active.', 'permissions-events_tooltip' ), $fs->get_module_type() ) : '' ),
-                'label'      => sprintf( $fs->get_text_inline( 'Current %s Status', 'permissions-events' ), ucfirst( $fs->get_module_type() ) ),
-                'desc'       => $fs->get_text_inline( 'Active, deactivated, or uninstalled', 'permissions-events_desc' ),
+                'icon-class' => 'dashicons dashicons-admin-' . ($fs->is_plugin() ? 'plugins' : 'appearance'),
+                'tooltip'    => ($require_license_key ? sprintf($fs->get_text_inline('So you can reuse the license when the %s is no longer active.', 'permissions-events_tooltip'), $fs->get_module_type()) : ''),
+                'label'      => sprintf($fs->get_text_inline('Current %s Status', 'permissions-events'), ucfirst($fs->get_module_type())),
+                'desc'       => $fs->get_text_inline('Active, deactivated, or uninstalled', 'permissions-events_desc'),
                 'priority'   => 20,
             );
 
-			// Add newsletter permissions if enabled.
-			if ( $is_gdpr_required || $fs->is_permission_requested( 'newsletter' ) ) {
-				$permissions['newsletter'] = array(
-					'icon-class' => 'dashicons dashicons-email-alt',
-					'label'      => $fs->get_text_inline( 'Newsletter', 'permissions-newsletter' ),
-					'desc'       => $fs->get_text_inline( 'Updates, announcements, marketing, no spam', 'permissions-newsletter_desc' ),
-					'priority'   => 15,
-				);
-			}
+            // Add newsletter permissions if enabled.
+            if ($is_gdpr_required || $fs->is_permission_requested('newsletter')) {
+                $permissions['newsletter'] = array(
+                    'icon-class' => 'dashicons dashicons-email-alt',
+                    'label'      => $fs->get_text_inline('Newsletter', 'permissions-newsletter'),
+                    'desc'       => $fs->get_text_inline('Updates, announcements, marketing, no spam', 'permissions-newsletter_desc'),
+                    'priority'   => 15,
+                );
+            }
 
             $permissions['extensions'] = array(
                 'icon-class' => 'dashicons dashicons-menu',
-                'label'      => $fs->get_text_inline( 'Plugins & Themes', 'permissions-extensions' ) . ( $require_license_key ? ' (' . $fs->get_text_inline( 'optional' ) . ')' : '' ),
-                'tooltip'    => $fs->get_text_inline( 'To help us troubleshoot any potential issues that may arise from other plugin or theme conflicts.', 'permissions-events_tooltip' ),
-                'desc'       => $fs->get_text_inline( 'Title, slug, version, and is active', 'permissions-extensions_desc' ),
+                'label'      => $fs->get_text_inline('Plugins & Themes', 'permissions-extensions') . ($require_license_key ? ' (' . $fs->get_text_inline('optional') . ')' : ''),
+                'tooltip'    => $fs->get_text_inline('To help us troubleshoot any potential issues that may arise from other plugin or theme conflicts.', 'permissions-events_tooltip'),
+                'desc'       => $fs->get_text_inline('Title, slug, version, and is active', 'permissions-extensions_desc'),
                 'priority'   => 25,
                 'optional'   => true,
-                'default'    => $fs->apply_filters( 'permission_extensions_default', ! $require_license_key )
+                'default'    => $fs->apply_filters('permission_extensions_default', ! $require_license_key)
             );
 
-			// Allow filtering of the permissions list.
-			$permissions = $fs->apply_filters( 'permission_list', $permissions );
+            // Allow filtering of the permissions list.
+            $permissions = $fs->apply_filters('permission_list', $permissions);
 
-			// Sort by priority.
-			uasort( $permissions, 'fs_sort_by_priority' );
+            // Sort by priority.
+            uasort($permissions, 'fs_sort_by_priority');
 
-			if ( ! empty( $permissions ) ) : ?>
+            if (! empty($permissions)) : ?>
 				<div class="fs-permissions">
-					<?php if ( $require_license_key ) : ?>
+					<?php if ($require_license_key) : ?>
 						<p class="fs-license-sync-disclaimer"><?php
                                 echo sprintf(
-									fs_esc_html_inline( 'The %1$s will periodically send %2$s to %3$s for security & feature updates delivery, and license management.', 'license-sync-disclaimer', $slug ),
-									$fs->get_module_label( true ),
-									sprintf('<a class="fs-trigger" href="#" tabindex="1">%s</a>', fs_esc_html_inline('diagnostic data', 'send-data')),
-									'<a class="fs-tooltip-trigger' . (is_rtl() ? ' rtl' : '') . '" href="' . $freemius_site_url . '" target="_blank" rel="noopener" tabindex="1">freemius.com <i class="dashicons dashicons-editor-help" style="text-decoration: none;"><span class="fs-tooltip" style="width: 170px">' . $fs->get_text_inline( 'Freemius is our licensing and software updates engine', 'permissions-extensions_desc' ) . '</span></i></a>'
-								) ?></p>
+                fs_esc_html_inline('The %1$s will periodically send %2$s to %3$s for security & feature updates delivery, and license management.', 'license-sync-disclaimer', $slug),
+                $fs->get_module_label(true),
+                sprintf('<a class="fs-trigger" href="#" tabindex="1">%s</a>', fs_esc_html_inline('diagnostic data', 'send-data')),
+                '<a class="fs-tooltip-trigger' . (is_rtl() ? ' rtl' : '') . '" href="' . $freemius_site_url . '" target="_blank" rel="noopener" tabindex="1">freemius.com <i class="dashicons dashicons-editor-help" style="text-decoration: none;"><span class="fs-tooltip" style="width: 170px">' . $fs->get_text_inline('Freemius is our licensing and software updates engine', 'permissions-extensions_desc') . '</span></i></a>'
+            ) ?></p>
 					<?php else : ?>
-					<a class="fs-trigger" href="#" tabindex="1"><?php fs_esc_html_echo_inline( 'What permissions are being granted?', 'what-permissions', $slug ) ?></a>
+					<a class="fs-trigger" href="#" tabindex="1"><?php fs_esc_html_echo_inline('What permissions are being granted?', 'what-permissions', $slug) ?></a>
                     <?php endif ?>
 					<ul><?php
-							foreach ( $permissions as $id => $permission ) : ?>
-								<li id="fs-permission-<?php echo esc_attr( $id ); ?>"
-								    class="fs-permission fs-<?php echo esc_attr( $id ); ?>">
-									<i class="<?php echo esc_attr( $permission['icon-class'] ); ?>"></i>
-									<?php if ( isset( $permission['optional'] ) && true === $permission['optional'] ) : ?>
-										<div class="fs-switch fs-small fs-round fs-<?php echo (! isset( $permission['default'] ) || true === $permission['default'] ) ?  'on' : 'off' ?>">
+                            foreach ($permissions as $id => $permission) : ?>
+								<li id="fs-permission-<?php echo esc_attr($id); ?>"
+								    class="fs-permission fs-<?php echo esc_attr($id); ?>">
+									<i class="<?php echo esc_attr($permission['icon-class']); ?>"></i>
+									<?php if (isset($permission['optional']) && true === $permission['optional']) : ?>
+										<div class="fs-switch fs-small fs-round fs-<?php echo (! isset($permission['default']) || true === $permission['default']) ?  'on' : 'off' ?>">
 											<div class="fs-toggle"></div>
 										</div>
 									<?php endif ?>
 
 									<div class="fs-permission-description">
-										<span<?php if ( ! empty($permission['tooltip']) ) : ?> class="fs-tooltip-trigger"<?php endif ?>><?php echo esc_html( $permission['label'] ); ?><?php if ( ! empty($permission['tooltip']) ) : ?><i class="dashicons dashicons-editor-help"><span class="fs-tooltip" style="width: 200px"><?php echo $permission['tooltip'] ?></span></i><?php endif ?></span>
+										<span<?php if (! empty($permission['tooltip'])) : ?> class="fs-tooltip-trigger"<?php endif ?>><?php echo esc_html($permission['label']); ?><?php if (! empty($permission['tooltip'])) : ?><i class="dashicons dashicons-editor-help"><span class="fs-tooltip" style="width: 200px"><?php echo $permission['tooltip'] ?></span></i><?php endif ?></span>
 
-										<p><?php echo esc_html( $permission['desc'] ); ?></p>
+										<p><?php echo esc_html($permission['desc']); ?></p>
 									</div>
 								</li>
 							<?php endforeach; ?>
 					</ul>
 				</div>
 			<?php endif ?>
-		<?php if ( $is_premium_code && $is_freemium ) : ?>
+		<?php if ($is_premium_code && $is_freemium) : ?>
 			<div class="fs-freemium-licensing">
 				<p>
-					<?php if ( $require_license_key ) : ?>
-						<?php fs_esc_html_echo_inline( 'Don\'t have a license key?', 'dont-have-license-key', $slug ) ?>
-						<a data-require-license="false" tabindex="1"><?php fs_esc_html_echo_inline( 'Activate Free Version', 'activate-free-version', $slug ) ?></a>
+					<?php if ($require_license_key) : ?>
+						<?php fs_esc_html_echo_inline('Don\'t have a license key?', 'dont-have-license-key', $slug) ?>
+						<a data-require-license="false" tabindex="1"><?php fs_esc_html_echo_inline('Activate Free Version', 'activate-free-version', $slug) ?></a>
 					<?php else : ?>
-						<?php fs_echo_inline( 'Have a license key?', 'have-license-key', $slug ) ?>
-						<a data-require-license="true" tabindex="1"><?php fs_esc_html_echo_inline( 'Activate License', 'activate-license', $slug ) ?></a>
+						<?php fs_echo_inline('Have a license key?', 'have-license-key', $slug) ?>
+						<a data-require-license="true" tabindex="1"><?php fs_esc_html_echo_inline('Activate License', 'activate-license', $slug) ?></a>
 					<?php endif ?>
 				</p>
 			</div>
 		<?php endif ?>
 		<div class="fs-terms">
 			<a href="https://freemius.com/privacy/" target="_blank" rel="noopener"
-			   tabindex="1"><?php fs_esc_html_echo_inline( 'Privacy Policy', 'privacy-policy', $slug ) ?></a>
+			   tabindex="1"><?php fs_esc_html_echo_inline('Privacy Policy', 'privacy-policy', $slug) ?></a>
 			&nbsp;&nbsp;-&nbsp;&nbsp;
-			<a href="<?php echo $require_license_key ? $freemius_plugin_terms_url : $freemius_usage_tracking_url ?>" target="_blank" rel="noopener" tabindex="1"><?php $require_license_key ? fs_echo_inline( 'License Agreement', 'license-agreement', $slug ) : fs_echo_inline( 'Terms of Service', 'tos', $slug ) ?></a>
+			<a href="<?php echo $require_license_key ? $freemius_plugin_terms_url : $freemius_usage_tracking_url ?>" target="_blank" rel="noopener" tabindex="1"><?php $require_license_key ? fs_echo_inline('License Agreement', 'license-agreement', $slug) : fs_echo_inline('Terms of Service', 'tos', $slug) ?></a>
 		</div>
 	</div>
 	<?php
-		/**
-		 * Allows developers to include custom HTML after the opt-in content.
-		 *
-		 * @author Vova Feldman
-		 * @since 2.3.2
-		 */
-		$fs->do_action( 'connect/after' );
-
-		if ( $is_optin_dialog ) { ?>
+        /**
+         * Allows developers to include custom HTML after the opt-in content.
+         *
+         * @author Vova Feldman
+         * @since 2.3.2
+         */
+        $fs->do_action('connect/after');
+
+        if ($is_optin_dialog) { ?>
 </div>
 <?php
-	}
+    }
 ?>
 <script type="text/javascript">
 	(function ($) {
 		var $html = $('html');
 
 		<?php
-		if ( $is_optin_dialog ) {
-		if ( $show_close_button ) { ?>
+        if ($is_optin_dialog) {
+            if ($show_close_button) { ?>
 		var $themeConnectWrapper = $('#fs_theme_connect_wrapper');
 
 		$themeConnectWrapper.find('button.close').on('click', function () {
-			<?php if ( ! empty( $previous_theme_activation_url ) ) { ?>
-			location.href = '<?php echo html_entity_decode( $previous_theme_activation_url ); ?>';
+			<?php if (! empty($previous_theme_activation_url)) { ?>
+			location.href = '<?php echo html_entity_decode($previous_theme_activation_url); ?>';
 			<?php } else { ?>
 			$themeConnectWrapper.remove();
 			$html.css({overflow: $html.attr('fs-optin-overflow')});
 			<?php } ?>
 		});
 		<?php
-		}
-		?>
+        } ?>
 
 		$html.attr('fs-optin-overflow', $html.css('overflow'));
 		$html.css({overflow: 'hidden'});
 
 		<?php
-		}
-		?>
+        }
+        ?>
 
 		var $primaryCta          = $('.fs-actions .button.button-primary'),
             primaryCtaLabel      = $primaryCta.html(),
@@ -558,11 +558,11 @@
 				$allSitesOptions            = $( '.fs-all-sites-options' ),
 				$applyOnAllSites            = $( '.fs-apply-on-all-sites-checkbox' ),
 				$sitesListContainer         = $( '.fs-sites-list-container' ),
-				totalSites                  = <?php echo count( $sites ) ?>,
+				totalSites                  = <?php echo count($sites) ?>,
 				maxSitesListHeight          = null,
 				$skipActivationButton       = $( '#skip_activation' ),
 				$delegateToSiteAdminsButton = $( '#delegate_to_site_admins' ),
-                hasAnyInstall               = <?php echo ! is_null( $fs->find_first_install() ) ? 'true' : 'false' ?>;
+                hasAnyInstall               = <?php echo ! is_null($fs->find_first_install()) ? 'true' : 'false' ?>;
 
 			$applyOnAllSites.click(function() {
 				var isChecked = $( this ).is( ':checked' );
@@ -629,7 +629,7 @@
                 $skipActivationButton.click(function(){
                     $delegateToSiteAdminsButton.hide();
 
-                    $skipActivationButton.html('<?php fs_esc_js_echo_inline( 'Skipping, please wait', 'skipping-wait', $slug ) ?>...');
+                    $skipActivationButton.html('<?php fs_esc_js_echo_inline('Skipping, please wait', 'skipping-wait', $slug) ?>...');
 
                     pauseCtaLabelUpdate = true;
 
@@ -644,7 +644,7 @@
                 });
 
                 $delegateToSiteAdminsButton.click(function(){
-                    $delegateToSiteAdminsButton.html('<?php fs_esc_js_echo_inline( 'Delegating, please wait', 'delegating-wait', $slug ) ?>...');
+                    $delegateToSiteAdminsButton.html('<?php fs_esc_js_echo_inline('Delegating, please wait', 'delegating-wait', $slug) ?>...');
 
                     pauseCtaLabelUpdate = true;
 
@@ -687,17 +687,17 @@
             if (pauseCtaLabelUpdate)
                 return;
 
-			var text = '<?php fs_esc_js_echo_inline( 'Continue', 'continue', $slug ) ?>';
+			var text = '<?php fs_esc_js_echo_inline('Continue', 'continue', $slug) ?>';
 
 			switch ( actionType ) {
 				case 'allow':
-					text = '<?php fs_esc_js_echo_inline( 'Allow & Continue', 'opt-in-connect', $slug ) ?>';
+					text = '<?php fs_esc_js_echo_inline('Allow & Continue', 'opt-in-connect', $slug) ?>';
 					break;
 				case 'delegate':
-					text = '<?php fs_esc_js_echo_inline( 'Delegate to Site Admins & Continue', 'delegate-to-site-admins-and-continue', $slug ) ?>';
+					text = '<?php fs_esc_js_echo_inline('Delegate to Site Admins & Continue', 'delegate-to-site-admins-and-continue', $slug) ?>';
 					break;
 				case 'skip':
-					text = '<?php fs_esc_js_echo_x_inline( 'Skip', 'verb', 'skip', $slug ) ?>';
+					text = '<?php fs_esc_js_echo_x_inline('Skip', 'verb', 'skip', $slug) ?>';
 					break;
 			}
 
@@ -728,11 +728,11 @@
                         security = null;
 
 				    if ( requireLicenseKey && ! isNetworkDelegating ) {
-                        action   = '<?php echo $fs->get_ajax_action( 'activate_license' ) ?>';
-                        security = '<?php echo $fs->get_ajax_security( 'activate_license' ) ?>';
+                        action   = '<?php echo $fs->get_ajax_action('activate_license') ?>';
+                        security = '<?php echo $fs->get_ajax_security('activate_license') ?>';
                     } else {
-                        action   = '<?php echo $fs->get_ajax_action( 'network_activate' ) ?>';
-                        security = '<?php echo $fs->get_ajax_security( 'network_activate' ) ?>';
+                        action   = '<?php echo $fs->get_ajax_action('network_activate') ?>';
+                        security = '<?php echo $fs->get_ajax_security('network_activate') ?>';
                     }
 
 					$('.fs-error').remove();
@@ -862,10 +862,11 @@
 			console.log('Primary button was clicked');
 
 			$(this).addClass('fs-loading');
-			$(this).html('<?php echo esc_js( $is_pending_activation ?
-				fs_text_x_inline( 'Sending email', 'as in the process of sending an email', 'sending-email', $slug ) :
-				fs_text_x_inline( 'Activating', 'as activating plugin', 'activating', $slug )
-			) ?>...');
+			$(this).html('<?php echo esc_js(
+            $is_pending_activation ?
+                fs_text_x_inline('Sending email', 'as in the process of sending an email', 'sending-email', $slug) :
+                fs_text_x_inline('Activating', 'as activating plugin', 'activating', $slug)
+        ) ?>...');
 		});
 
 		$('.fs-permissions .fs-trigger').on('click', function () {
@@ -1002,14 +1003,14 @@
 
                         $primaryCta.addClass('fs-loading');
                         $primaryCta.attr('disabled', 'disabled');
-                        $primaryCta.html('<?php fs_esc_js_echo_inline( 'Please wait', 'please-wait', $slug ) ?>...');
+                        $primaryCta.html('<?php fs_esc_js_echo_inline('Please wait', 'please-wait', $slug) ?>...');
 
                         $.ajax({
                             url    : ajaxurl,
                             method : 'POST',
                             data   : {
-                                action     : '<?php echo $fs->get_ajax_action( 'fetch_is_marketing_required_flag_value' ) ?>',
-                                security   : '<?php echo $fs->get_ajax_security( 'fetch_is_marketing_required_flag_value' ) ?>',
+                                action     : '<?php echo $fs->get_ajax_action('fetch_is_marketing_required_flag_value') ?>',
+                                security   : '<?php echo $fs->get_ajax_security('fetch_is_marketing_required_flag_value') ?>',
                                 license_key: licenseKey,
                                 module_id  : '<?php echo $fs->get_id() ?>'
                             },
diff --git a/freemius/templates/contact.php b/freemius/templates/contact.php
index bba101835d3b743bf348edcf0cf7ca9ff2a3b5cf..6c20d53948c16ed261437eb9f4da183c63ec7e90 100644
--- a/freemius/templates/contact.php
+++ b/freemius/templates/contact.php
@@ -1,89 +1,89 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.3
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.3
+     */
 
-	/**
-	 * Note for WordPress.org Theme/Plugin reviewer:
-	 *  Freemius is an SDK for plugin and theme developers. Since the core
-	 *  of the SDK is relevant both for plugins and themes, for obvious reasons,
-	 *  we only develop and maintain one code base.
-	 *
-	 *  This code (and page) will not run for wp.org themes (only plugins).
-	 *
-	 *  In addition, this page loads an i-frame. We intentionally named it 'frame'
-	 *  so it will pass the "Theme Check" that is looking for the string "i" . "frame".
-	 *
-	 * UPDATE:
-	 *  After ongoing conversations with the WordPress.org TRT we received
-	 *  an official approval for including i-frames in the theme's WP Admin setting's
-	 *  page tab (the SDK will never add any i-frames on the sitefront). i-frames
-	 *  were never against the guidelines, but we wanted to get the team's blessings
-	 *  before we move forward. For the record, I got the final approval from
-	 *  Ulrich Pogson (@grapplerulrich), a team lead at the TRT during WordCamp
-	 *  Europe 2017 (June 16th, 2017).
-	 *
-	 * If you have any questions or need clarifications, please don't hesitate
-	 * pinging me on slack, my username is @svovaf.
-	 *
-	 * @author Vova Feldman (@svovaf)
-	 * @since 1.2.2
-	 */
+    /**
+     * Note for WordPress.org Theme/Plugin reviewer:
+     *  Freemius is an SDK for plugin and theme developers. Since the core
+     *  of the SDK is relevant both for plugins and themes, for obvious reasons,
+     *  we only develop and maintain one code base.
+     *
+     *  This code (and page) will not run for wp.org themes (only plugins).
+     *
+     *  In addition, this page loads an i-frame. We intentionally named it 'frame'
+     *  so it will pass the "Theme Check" that is looking for the string "i" . "frame".
+     *
+     * UPDATE:
+     *  After ongoing conversations with the WordPress.org TRT we received
+     *  an official approval for including i-frames in the theme's WP Admin setting's
+     *  page tab (the SDK will never add any i-frames on the sitefront). i-frames
+     *  were never against the guidelines, but we wanted to get the team's blessings
+     *  before we move forward. For the record, I got the final approval from
+     *  Ulrich Pogson (@grapplerulrich), a team lead at the TRT during WordCamp
+     *  Europe 2017 (June 16th, 2017).
+     *
+     * If you have any questions or need clarifications, please don't hesitate
+     * pinging me on slack, my username is @svovaf.
+     *
+     * @author Vova Feldman (@svovaf)
+     * @since 1.2.2
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	wp_enqueue_script( 'jquery' );
-	wp_enqueue_script( 'json2' );
-	fs_enqueue_local_script( 'postmessage', 'nojquery.ba-postmessage.min.js' );
-	fs_enqueue_local_script( 'fs-postmessage', 'postmessage.js' );
-	fs_enqueue_local_style( 'fs_checkout', '/admin/common.css' );
+    wp_enqueue_script('jquery');
+    wp_enqueue_script('json2');
+    fs_enqueue_local_script('postmessage', 'nojquery.ba-postmessage.min.js');
+    fs_enqueue_local_script('fs-postmessage', 'postmessage.js');
+    fs_enqueue_local_style('fs_checkout', '/admin/common.css');
 
-	/**
-	 * @var array    $VARS
-	 * @var Freemius $fs
-	 */
-	$fs   = freemius( $VARS['id'] );
-	$slug = $fs->get_slug();
+    /**
+     * @var array    $VARS
+     * @var Freemius $fs
+     */
+    $fs   = freemius($VARS['id']);
+    $slug = $fs->get_slug();
 
-	$context_params = array(
-		'plugin_id'         => $fs->get_id(),
-		'plugin_public_key' => $fs->get_public_key(),
-		'plugin_version'    => $fs->get_plugin_version(),
-	);
+    $context_params = array(
+        'plugin_id'         => $fs->get_id(),
+        'plugin_public_key' => $fs->get_public_key(),
+        'plugin_version'    => $fs->get_plugin_version(),
+    );
 
 
-	// Get site context secure params.
-	if ( $fs->is_registered() ) {
-		$context_params = array_merge( $context_params, FS_Security::instance()->get_context_params(
-			$fs->get_site(),
-			time(),
-			'contact'
-		) );
-	}
+    // Get site context secure params.
+    if ($fs->is_registered()) {
+        $context_params = array_merge($context_params, FS_Security::instance()->get_context_params(
+            $fs->get_site(),
+            time(),
+            'contact'
+        ));
+    }
 
-	$query_params = array_merge( $_GET, array_merge( $context_params, array(
-		'plugin_version' => $fs->get_plugin_version(),
-		'wp_login_url'   => wp_login_url(),
-		'site_url'       => get_site_url(),
+    $query_params = array_merge($_GET, array_merge($context_params, array(
+        'plugin_version' => $fs->get_plugin_version(),
+        'wp_login_url'   => wp_login_url(),
+        'site_url'       => get_site_url(),
 //		'wp_admin_css' => get_bloginfo('wpurl') . "/wp-admin/load-styles.php?c=1&load=buttons,wp-admin,dashicons",
-	) ) );
+    )));
 
-	$view_params = array(
-		'id'   => $VARS['id'],
-		'page' => strtolower( $fs->get_text_inline( 'Contact', 'contact' ) ),
-	);
-	fs_require_once_template('secure-https-header.php', $view_params);
+    $view_params = array(
+        'id'   => $VARS['id'],
+        'page' => strtolower($fs->get_text_inline('Contact', 'contact')),
+    );
+    fs_require_once_template('secure-https-header.php', $view_params);
 
-	$has_tabs = $fs->_add_tabs_before_content();
+    $has_tabs = $fs->_add_tabs_before_content();
 
-	if ( $has_tabs ) {
-		$query_params['tabs'] = 'true';
-	}
+    if ($has_tabs) {
+        $query_params['tabs'] = 'true';
+    }
 ?>
 	<div id="fs_contact" class="wrap fs-section fs-full-size-wrapper">
 		<div id="fs_frame"></div>
@@ -114,15 +114,15 @@
 		</script>
 	</div>
 <?php
-	if ( $has_tabs ) {
-		$fs->_add_tabs_after_content();
-	}
+    if ($has_tabs) {
+        $fs->_add_tabs_after_content();
+    }
 
-	$params = array(
-		'page'           => 'contact',
-		'module_id'      => $fs->get_id(),
-		'module_type'    => $fs->get_module_type(),
-		'module_slug'    => $slug,
-		'module_version' => $fs->get_plugin_version(),
-	);
-	fs_require_template( 'powered-by.php', $params );
\ No newline at end of file
+    $params = array(
+        'page'           => 'contact',
+        'module_id'      => $fs->get_id(),
+        'module_type'    => $fs->get_module_type(),
+        'module_slug'    => $slug,
+        'module_version' => $fs->get_plugin_version(),
+    );
+    fs_require_template('powered-by.php', $params);
diff --git a/freemius/templates/debug.php b/freemius/templates/debug.php
index 8903631111e252210acd3bd0f127ab059d12bdac..f176e9d584a4dc51098649525b3a02aab4c0f9c9 100644
--- a/freemius/templates/debug.php
+++ b/freemius/templates/debug.php
@@ -6,22 +6,22 @@
      * @since       1.1.1
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
     global $fs_active_plugins;
 
-    $fs_options = FS_Options::instance( WP_FS__ACCOUNTS_OPTION_NAME, true );
+    $fs_options = FS_Options::instance(WP_FS__ACCOUNTS_OPTION_NAME, true);
 
-    $off_text = fs_text_x_inline( 'Off', 'as turned off' );
-    $on_text  = fs_text_x_inline( 'On', 'as turned on' );
+    $off_text = fs_text_x_inline('Off', 'as turned off');
+    $on_text  = fs_text_x_inline('On', 'as turned on');
 ?>
-<h1><?php echo fs_text_inline( 'Freemius Debug' ) . ' - ' . fs_text_inline( 'SDK' ) . ' v.' . $fs_active_plugins->newest->version ?></h1>
+<h1><?php echo fs_text_inline('Freemius Debug') . ' - ' . fs_text_inline('SDK') . ' v.' . $fs_active_plugins->newest->version ?></h1>
 <div>
     <!-- Debugging Switch -->
-    <?php //$debug_mode = get_option( 'fs_debug_mode', null ) ?>
-    <span class="fs-switch-label"><?php fs_esc_html_echo_x_inline( 'Debugging', 'as code debugging' ) ?></span>
+    <?php //$debug_mode = get_option( 'fs_debug_mode', null )?>
+    <span class="fs-switch-label"><?php fs_esc_html_echo_x_inline('Debugging', 'as code debugging') ?></span>
 
     <div class="fs-switch fs-round <?php echo WP_FS__DEBUG_SDK ? 'fs-on' : 'fs-off' ?>">
         <div class="fs-toggle"></div>
@@ -49,7 +49,7 @@
         }(jQuery));
     </script>
 </div>
-<h2><?php fs_esc_html_echo_inline( 'Actions', 'actions' ) ?></h2>
+<h2><?php fs_esc_html_echo_inline('Actions', 'actions') ?></h2>
 <table>
     <tbody>
     <tr>
@@ -57,48 +57,48 @@
             <!-- Delete All Accounts -->
             <form action="" method="POST">
                 <input type="hidden" name="fs_action" value="restart_freemius">
-                <?php wp_nonce_field( 'restart_freemius' ) ?>
+                <?php wp_nonce_field('restart_freemius') ?>
                 <button class="button button-primary"
-                        onclick="if (confirm('<?php fs_esc_attr_echo_inline( 'Are you sure you want to delete all Freemius data?', 'delete-all-confirm' ) ?>')) this.parentNode.submit(); return false;"><?php fs_esc_html_echo_inline( 'Delete All Accounts' ) ?></button>
+                        onclick="if (confirm('<?php fs_esc_attr_echo_inline('Are you sure you want to delete all Freemius data?', 'delete-all-confirm') ?>')) this.parentNode.submit(); return false;"><?php fs_esc_html_echo_inline('Delete All Accounts') ?></button>
             </form>
         </td>
         <td>
             <!-- Clear API Cache -->
             <form action="" method="POST">
                 <input type="hidden" name="fs_clear_api_cache" value="true">
-                <button class="button button-primary"><?php fs_esc_html_echo_inline( 'Clear API Cache' ) ?></button>
+                <button class="button button-primary"><?php fs_esc_html_echo_inline('Clear API Cache') ?></button>
             </form>
         </td>
         <td>
             <!-- Clear Updates Transients -->
             <form action="" method="POST">
                 <input type="hidden" name="fs_action" value="clear_updates_data">
-                <?php wp_nonce_field( 'clear_updates_data' ) ?>
-                <button class="button"><?php fs_esc_html_echo_inline( 'Clear Updates Transients' ) ?></button>
+                <?php wp_nonce_field('clear_updates_data') ?>
+                <button class="button"><?php fs_esc_html_echo_inline('Clear Updates Transients') ?></button>
             </form>
         </td>
         <td>
             <!-- Sync Data with Server -->
             <form action="" method="POST">
                 <input type="hidden" name="background_sync" value="true">
-                <button class="button button-primary"><?php fs_esc_html_echo_inline( 'Sync Data From Server' ) ?></button>
+                <button class="button button-primary"><?php fs_esc_html_echo_inline('Sync Data From Server') ?></button>
             </form>
         </td>
-        <?php if ( fs_is_network_admin() && true !== $fs_options->get_option( 'ms_migration_complete', false, true ) ) : ?>
+        <?php if (fs_is_network_admin() && true !== $fs_options->get_option('ms_migration_complete', false, true)) : ?>
         <td>
             <!-- Migrate Options to Network -->
             <form action="" method="POST">
                 <input type="hidden" name="fs_action" value="migrate_options_to_network">
-                <?php wp_nonce_field( 'migrate_options_to_network' ) ?>
-                <button class="button button-primary"><?php fs_esc_html_echo_inline( 'Migrate Options to Network' ) ?></button>
+                <?php wp_nonce_field('migrate_options_to_network') ?>
+                <button class="button button-primary"><?php fs_esc_html_echo_inline('Migrate Options to Network') ?></button>
             </form>
         </td>
         <?php endif ?>
         <td>
-            <button id="fs_load_db_option" class="button"><?php fs_esc_html_echo_inline( 'Load DB Option' ) ?></button>
+            <button id="fs_load_db_option" class="button"><?php fs_esc_html_echo_inline('Load DB Option') ?></button>
         </td>
         <td>
-            <button id="fs_set_db_option" class="button"><?php fs_esc_html_echo_inline( 'Set DB Option' ) ?></button>
+            <button id="fs_set_db_option" class="button"><?php fs_esc_html_echo_inline('Set DB Option') ?></button>
         </td>
     </tr>
     </tbody>
@@ -111,7 +111,7 @@
             if (optionName) {
                 $.post(ajaxurl, {
                     action     : 'fs_get_db_option',
-                    _wpnonce   : '<?php echo wp_create_nonce( 'fs_get_db_option' ) ?>',
+                    _wpnonce   : '<?php echo wp_create_nonce('fs_get_db_option') ?>',
                     option_name: optionName
                 }, function (response) {
                     if (response.data.value)
@@ -131,7 +131,7 @@
                 if (optionValue) {
                     $.post(ajaxurl, {
                         action      : 'fs_set_db_option',
-                        _wpnonce   : '<?php echo wp_create_nonce( 'fs_set_db_option' ) ?>',
+                        _wpnonce   : '<?php echo wp_create_nonce('fs_set_db_option') ?>',
                         option_name : optionName,
                         option_value: optionValue
                     }, function () {
@@ -143,11 +143,11 @@
     })(jQuery);
 </script>
 <?php
-    if ( ! defined( 'FS_API__ADDRESS' ) ) {
-        define( 'FS_API__ADDRESS', '://api.freemius.com' );
+    if (! defined('FS_API__ADDRESS')) {
+        define('FS_API__ADDRESS', '://api.freemius.com');
     }
-    if ( ! defined( 'FS_API__SANDBOX_ADDRESS' ) ) {
-        define( 'FS_API__SANDBOX_ADDRESS', '://sandbox-api.freemius.com' );
+    if (! defined('FS_API__SANDBOX_ADDRESS')) {
+        define('FS_API__SANDBOX_ADDRESS', '://sandbox-api.freemius.com');
     }
 
     $defines = array(
@@ -177,16 +177,16 @@
 <table class="widefat">
     <thead>
     <tr>
-        <th><?php fs_esc_html_echo_inline( 'Key', 'key' ) ?></th>
-        <th><?php fs_esc_html_echo_inline( 'Value', 'value' ) ?></th>
+        <th><?php fs_esc_html_echo_inline('Key', 'key') ?></th>
+        <th><?php fs_esc_html_echo_inline('Value', 'value') ?></th>
     </tr>
     </thead>
     <tbody>
     <?php $alternate = false;
-        foreach ( $defines as $p ) : ?>
-            <tr<?php if ( $alternate ) {
-                echo ' class="alternate"';
-            } ?>>
+        foreach ($defines as $p) : ?>
+            <tr<?php if ($alternate) {
+            echo ' class="alternate"';
+        } ?>>
                 <td><?php echo $p['key'] ?></td>
                 <td><?php echo $p['val'] ?></td>
             </tr>
@@ -194,26 +194,26 @@
         <?php endforeach ?>
     </tbody>
 </table>
-<h2><?php fs_esc_html_echo_x_inline( 'SDK Versions', 'as software development kit versions', 'sdk-versions' ) ?></h2>
+<h2><?php fs_esc_html_echo_x_inline('SDK Versions', 'as software development kit versions', 'sdk-versions') ?></h2>
 <table id="fs_sdks" class="widefat">
     <thead>
     <tr>
-        <th><?php fs_esc_html_echo_x_inline( 'Version', 'product version' ) ?></th>
-        <th><?php fs_esc_html_echo_inline( 'SDK Path' ) ?></th>
-        <th><?php fs_esc_html_echo_inline( 'Module Path' ) ?></th>
-        <th><?php fs_esc_html_echo_inline( 'Is Active' ) ?></th>
+        <th><?php fs_esc_html_echo_x_inline('Version', 'product version') ?></th>
+        <th><?php fs_esc_html_echo_inline('SDK Path') ?></th>
+        <th><?php fs_esc_html_echo_inline('Module Path') ?></th>
+        <th><?php fs_esc_html_echo_inline('Is Active') ?></th>
     </tr>
     </thead>
     <tbody>
-    <?php foreach ( $fs_active_plugins->plugins as $sdk_path => $data ) : ?>
-        <?php $is_active = ( WP_FS__SDK_VERSION == $data->version ) ?>
-        <tr<?php if ( $is_active ) {
+    <?php foreach ($fs_active_plugins->plugins as $sdk_path => $data) : ?>
+        <?php $is_active = (WP_FS__SDK_VERSION == $data->version) ?>
+        <tr<?php if ($is_active) {
             echo ' style="background: #E6FFE6; font-weight: bold"';
         } ?>>
             <td><?php echo $data->version ?></td>
             <td><?php echo $sdk_path ?></td>
             <td><?php echo $data->plugin_path ?></td>
-            <td><?php echo ( $is_active ) ? 'Active' : 'Inactive' ?></td>
+            <td><?php echo ($is_active) ? 'Active' : 'Inactive' ?></td>
         </tr>
     <?php endforeach ?>
     </tbody>
@@ -226,47 +226,47 @@
     );
 ?>
 
-<?php foreach ( $module_types as $module_type ) : ?>
-    <?php $modules = fs_get_entities( $fs_options->get_option( $module_type . 's' ), FS_Plugin::get_class_name() ) ?>
-    <?php if ( is_array( $modules ) && count( $modules ) > 0 ) : ?>
-        <h2><?php echo esc_html( ( WP_FS__MODULE_TYPE_PLUGIN == $module_type ) ? fs_text_inline( 'Plugins', 'plugins' ) : fs_text_inline( 'Themes', 'themes' ) ) ?></h2>
+<?php foreach ($module_types as $module_type) : ?>
+    <?php $modules = fs_get_entities($fs_options->get_option($module_type . 's'), FS_Plugin::get_class_name()) ?>
+    <?php if (is_array($modules) && count($modules) > 0) : ?>
+        <h2><?php echo esc_html((WP_FS__MODULE_TYPE_PLUGIN == $module_type) ? fs_text_inline('Plugins', 'plugins') : fs_text_inline('Themes', 'themes')) ?></h2>
         <table id="fs_<?php echo $module_type ?>" class="widefat">
             <thead>
             <tr>
-                <th><?php fs_esc_html_echo_inline( 'ID', 'id' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'Slug' ) ?></th>
-                <th><?php fs_esc_html_echo_x_inline( 'Version', 'product version' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'Title' ) ?></th>
-                <th><?php fs_esc_html_echo_x_inline( 'API', 'as application program interface' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'Freemius State' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'Module Path' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'Public Key' ) ?></th>
-                <?php if ( is_multisite() ) : ?>
-                    <th><?php fs_esc_html_echo_inline( 'Network Blog' ) ?></th>
-                    <th><?php fs_esc_html_echo_inline( 'Network User' ) ?></th>
+                <th><?php fs_esc_html_echo_inline('ID', 'id') ?></th>
+                <th><?php fs_esc_html_echo_inline('Slug') ?></th>
+                <th><?php fs_esc_html_echo_x_inline('Version', 'product version') ?></th>
+                <th><?php fs_esc_html_echo_inline('Title') ?></th>
+                <th><?php fs_esc_html_echo_x_inline('API', 'as application program interface') ?></th>
+                <th><?php fs_esc_html_echo_inline('Freemius State') ?></th>
+                <th><?php fs_esc_html_echo_inline('Module Path') ?></th>
+                <th><?php fs_esc_html_echo_inline('Public Key') ?></th>
+                <?php if (is_multisite()) : ?>
+                    <th><?php fs_esc_html_echo_inline('Network Blog') ?></th>
+                    <th><?php fs_esc_html_echo_inline('Network User') ?></th>
                 <?php endif ?>
-                <th><?php fs_esc_html_echo_inline( 'Actions' ) ?></th>
+                <th><?php fs_esc_html_echo_inline('Actions') ?></th>
             </tr>
             </thead>
             <tbody>
-            <?php foreach ( $modules as $slug => $data ) : ?>
+            <?php foreach ($modules as $slug => $data) : ?>
                 <?php
-                if ( WP_FS__MODULE_TYPE_THEME !== $module_type ) {
-                    $is_active = is_plugin_active( $data->file );
+                if (WP_FS__MODULE_TYPE_THEME !== $module_type) {
+                    $is_active = is_plugin_active($data->file);
                 } else {
                     $current_theme = wp_get_theme();
-                    $is_active     = ( $current_theme->stylesheet === $data->file );
+                    $is_active     = ($current_theme->stylesheet === $data->file);
 
-                    if ( ! $is_active && is_child_theme() ) {
+                    if (! $is_active && is_child_theme()) {
                         $parent_theme = $current_theme->parent();
 
-                        $is_active = ( ( $parent_theme instanceof WP_Theme ) && $parent_theme->stylesheet === $data->file );
+                        $is_active = (($parent_theme instanceof WP_Theme) && $parent_theme->stylesheet === $data->file);
                     }
                 }
                 ?>
-                <?php $fs = $is_active ? freemius( $data->id ) : null ?>
-                <tr<?php if ( $is_active ) {
-                    if ( $fs->has_api_connectivity() && $fs->is_on() ) {
+                <?php $fs = $is_active ? freemius($data->id) : null ?>
+                <tr<?php if ($is_active) {
+                    if ($fs->has_api_connectivity() && $fs->is_on()) {
                         echo ' style="background: #E6FFE6; font-weight: bold"';
                     } else {
                         echo ' style="background: #ffd0d0; font-weight: bold"';
@@ -276,60 +276,62 @@
                     <td><?php echo $slug ?></td>
                     <td><?php echo $data->version ?></td>
                     <td><?php echo $data->title ?></td>
-                    <td<?php if ( $is_active && ! $fs->has_api_connectivity() ) {
-                        echo ' style="color: red; text-transform: uppercase;"';
-                    } ?>><?php if ( $is_active ) {
-                            echo esc_html( $fs->has_api_connectivity() ?
-                                fs_text_x_inline( 'Connected', 'as connection was successful' ) :
-                                fs_text_x_inline( 'Blocked', 'as connection blocked' )
-                            );
-                        } ?></td>
-                    <td<?php if ( $is_active && ! $fs->is_on() ) {
-                        echo ' style="color: red; text-transform: uppercase;"';
-                    } ?>><?php if ( $is_active ) {
-                            echo esc_html( $fs->is_on() ?
+                    <td<?php if ($is_active && ! $fs->has_api_connectivity()) {
+                    echo ' style="color: red; text-transform: uppercase;"';
+                } ?>><?php if ($is_active) {
+                    echo esc_html(
+                        $fs->has_api_connectivity() ?
+                                fs_text_x_inline('Connected', 'as connection was successful') :
+                                fs_text_x_inline('Blocked', 'as connection blocked')
+                    );
+                } ?></td>
+                    <td<?php if ($is_active && ! $fs->is_on()) {
+                    echo ' style="color: red; text-transform: uppercase;"';
+                } ?>><?php if ($is_active) {
+                    echo esc_html(
+                        $fs->is_on() ?
                                 $on_text :
                                 $off_text
-                            );
-                        } ?></td>
+                    );
+                } ?></td>
                     <td><?php echo $data->file ?></td>
                     <td><?php echo $data->public_key ?></td>
-                    <?php if ( is_multisite() ) : ?>
+                    <?php if (is_multisite()) : ?>
                         <?php
                         $network_blog_id = null;
                         $network_user    = null;
 
-                        if ( is_object( $fs ) ) {
+                        if (is_object($fs)) {
                             $network_blog_id = $fs->get_network_install_blog_id();
                             $network_user    = $fs->get_network_user();
                         }
                         ?>
-                        <td><?php echo is_numeric( $network_blog_id ) ? $network_blog_id : '' ?></td>
-                        <td><?php if ( is_object( $network_user ) ) {
-                                echo $network_user->email;
-                            } ?></td>
+                        <td><?php echo is_numeric($network_blog_id) ? $network_blog_id : '' ?></td>
+                        <td><?php if (is_object($network_user)) {
+                            echo $network_user->email;
+                        } ?></td>
                     <?php endif ?>
                     <td>
-                        <?php if ( $is_active ) : ?>
-                            <?php if ( $fs->has_trial_plan() ) : ?>
+                        <?php if ($is_active) : ?>
+                            <?php if ($fs->has_trial_plan()) : ?>
                                 <form action="" method="POST">
                                     <input type="hidden" name="fs_action" value="simulate_trial">
                                     <input type="hidden" name="module_id" value="<?php echo $fs->get_id() ?>">
-                                    <?php wp_nonce_field( 'simulate_trial' ) ?>
+                                    <?php wp_nonce_field('simulate_trial') ?>
 
-                                    <button type="submit" class="button button-primary simulate-trial"><?php fs_esc_html_echo_inline( 'Simulate Trial Promotion' ) ?></button>
+                                    <button type="submit" class="button button-primary simulate-trial"><?php fs_esc_html_echo_inline('Simulate Trial Promotion') ?></button>
                                 </form>
                             <?php endif ?>
-                            <?php if ( $fs->is_registered() ) : ?>
-                                <a class="button" href="<?php echo $fs->get_account_url() ?>"><?php fs_esc_html_echo_inline( 'Account', 'account' ) ?></a>
+                            <?php if ($fs->is_registered()) : ?>
+                                <a class="button" href="<?php echo $fs->get_account_url() ?>"><?php fs_esc_html_echo_inline('Account', 'account') ?></a>
                             <?php endif ?>
-                            <?php if ( fs_is_network_admin() && ! $fs->is_network_upgrade_mode() ) : ?>
+                            <?php if (fs_is_network_admin() && ! $fs->is_network_upgrade_mode()) : ?>
                                 <form action="" method="POST">
                                     <input type="hidden" name="fs_action" value="simulate_network_upgrade">
                                     <input type="hidden" name="module_id" value="<?php echo $fs->get_id() ?>">
-                                    <?php wp_nonce_field( 'simulate_network_upgrade' ) ?>
+                                    <?php wp_nonce_field('simulate_network_upgrade') ?>
 
-                                    <button type="submit" class="button button-small"><?php fs_esc_html_echo_inline( 'Simulate Network Upgrade' ) ?></button>
+                                    <button type="submit" class="button button-small"><?php fs_esc_html_echo_inline('Simulate Network Upgrade') ?></button>
                                 </form>
                             <?php endif ?>
                         <?php endif ?>
@@ -340,7 +342,7 @@
         </table>
     <?php endif ?>
 <?php endforeach ?>
-<?php foreach ( $module_types as $module_type ) : ?>
+<?php foreach ($module_types as $module_type) : ?>
     <?php
     /**
      * @var array $VARS
@@ -351,61 +353,61 @@
     $is_multisite = is_multisite();
     $all_plans    = false;
     ?>
-    <?php if ( is_array( $sites_map ) && count( $sites_map ) > 0 ) : ?>
-        <h2><?php echo esc_html( sprintf(
+    <?php if (is_array($sites_map) && count($sites_map) > 0) : ?>
+        <h2><?php echo esc_html(sprintf(
             /* translators: %s: 'plugin' or 'theme' */
-                fs_text_inline( '%s Installs', 'module-installs' ),
-                ( WP_FS__MODULE_TYPE_PLUGIN === $module_type ? fs_text_inline( 'Plugin', 'plugin' ) : fs_text_inline( 'Theme', 'theme' ) )
-            ) ) ?> / <?php fs_esc_html_echo_x_inline( 'Sites', 'like websites', 'sites' ) ?></h2>
+                fs_text_inline('%s Installs', 'module-installs'),
+        (WP_FS__MODULE_TYPE_PLUGIN === $module_type ? fs_text_inline('Plugin', 'plugin') : fs_text_inline('Theme', 'theme'))
+    )) ?> / <?php fs_esc_html_echo_x_inline('Sites', 'like websites', 'sites') ?></h2>
         <table id="fs_<?php echo $module_type ?>_installs" class="widefat">
             <thead>
             <tr>
-                <th><?php fs_esc_html_echo_inline( 'ID', 'id' ) ?></th>
-                <?php if ( $is_multisite ) : ?>
-                    <th><?php fs_esc_html_echo_inline( 'Blog ID' ) ?></th>
-                    <th><?php fs_esc_html_echo_inline( 'Address' ) ?></th>
+                <th><?php fs_esc_html_echo_inline('ID', 'id') ?></th>
+                <?php if ($is_multisite) : ?>
+                    <th><?php fs_esc_html_echo_inline('Blog ID') ?></th>
+                    <th><?php fs_esc_html_echo_inline('Address') ?></th>
                 <?php endif ?>
-                <th><?php fs_esc_html_echo_inline( 'Slug' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'User ID' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'License ID' ) ?></th>
-                <th><?php fs_esc_html_echo_x_inline( 'Plan', 'as product pricing plan', 'plan' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'Public Key' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'Secret Key' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'Actions' ) ?></th>
+                <th><?php fs_esc_html_echo_inline('Slug') ?></th>
+                <th><?php fs_esc_html_echo_inline('User ID') ?></th>
+                <th><?php fs_esc_html_echo_inline('License ID') ?></th>
+                <th><?php fs_esc_html_echo_x_inline('Plan', 'as product pricing plan', 'plan') ?></th>
+                <th><?php fs_esc_html_echo_inline('Public Key') ?></th>
+                <th><?php fs_esc_html_echo_inline('Secret Key') ?></th>
+                <th><?php fs_esc_html_echo_inline('Actions') ?></th>
             </tr>
             </thead>
             <tbody>
-            <?php foreach ( $sites_map as $slug => $sites ) : ?>
-                <?php if ( ! is_array( $sites ) ) {
-                    $sites = array( $sites );
-                } ?>
-                <?php foreach ( $sites as $site ) : ?>
+            <?php foreach ($sites_map as $slug => $sites) : ?>
+                <?php if (! is_array($sites)) {
+                $sites = array( $sites );
+            } ?>
+                <?php foreach ($sites as $site) : ?>
                     <tr>
                         <td><?php echo $site->id ?></td>
-                        <?php if ( $is_multisite ) : ?>
+                        <?php if ($is_multisite) : ?>
                             <td><?php echo $site->blog_id ?></td>
-                            <td><?php echo fs_strip_url_protocol( $site->url ) ?></td>
+                            <td><?php echo fs_strip_url_protocol($site->url) ?></td>
                         <?php endif ?>
                         <td><?php echo $slug ?></td>
                         <td><?php echo $site->user_id ?></td>
                         <td><?php echo !empty($site->license_id) ? $site->license_id : '' ?></td>
                         <td><?php
                                 $plan_name = '';
-                                if ( FS_Plugin_Plan::is_valid_id( $site->plan_id ) ) {
-                                    if ( false === $all_plans ) {
+                                if (FS_Plugin_Plan::is_valid_id($site->plan_id)) {
+                                    if (false === $all_plans) {
                                         $option_name = 'plans';
-                                        if ( WP_FS__MODULE_TYPE_PLUGIN !== $module_type ) {
+                                        if (WP_FS__MODULE_TYPE_PLUGIN !== $module_type) {
                                             $option_name = $module_type . '_' . $option_name;
                                         }
 
-                                        $all_plans = fs_get_entities( $fs_options->get_option( $option_name, array() ), FS_Plugin_Plan::get_class_name() );
+                                        $all_plans = fs_get_entities($fs_options->get_option($option_name, array()), FS_Plugin_Plan::get_class_name());
                                     }
 
-                                    foreach ( $all_plans[ $slug ] as $plan ) {
-                                        $plan_id = Freemius::_decrypt( $plan->id );
+                                    foreach ($all_plans[ $slug ] as $plan) {
+                                        $plan_id = Freemius::_decrypt($plan->id);
 
-                                        if ( $site->plan_id == $plan_id ) {
-                                            $plan_name = Freemius::_decrypt( $plan->name );
+                                        if ($site->plan_id == $plan_id) {
+                                            $plan_name = Freemius::_decrypt($plan->name);
                                             break;
                                         }
                                     }
@@ -415,23 +417,23 @@
                             ?></td>
                         <td><?php echo $site->public_key ?></td>
                         <td><?php
-                                $plugin_storage = FS_Storage::instance( $module_type, $slug );
+                                $plugin_storage = FS_Storage::instance($module_type, $slug);
 
                                 echo $plugin_storage->is_whitelabeled ?
-                                    FS_Plugin_License::mask_secret_key_for_html( $site->secret_key ) :
-                                    esc_html( $site->secret_key );
+                                    FS_Plugin_License::mask_secret_key_for_html($site->secret_key) :
+                                    esc_html($site->secret_key);
                         ?></td>
                         <td>
                             <form action="" method="POST">
                                 <input type="hidden" name="fs_action" value="delete_install">
-                                <?php wp_nonce_field( 'delete_install' ) ?>
+                                <?php wp_nonce_field('delete_install') ?>
                                 <input type="hidden" name="module_id" value="<?php echo $site->plugin_id ?>">
-                                <?php if ( $is_multisite ) : ?>
+                                <?php if ($is_multisite) : ?>
                                     <input type="hidden" name="blog_id" value="<?php echo $site->blog_id ?>">
                                 <?php endif ?>
                                 <input type="hidden" name="module_type" value="<?php echo $module_type ?>">
                                 <input type="hidden" name="slug" value="<?php echo $slug ?>">
-                                <button type="submit" class="button"><?php fs_esc_html_echo_x_inline( 'Delete', 'verb', 'delete' ) ?></button>
+                                <button type="submit" class="button"><?php fs_esc_html_echo_x_inline('Delete', 'verb', 'delete') ?></button>
                             </form>
                         </td>
                     </tr>
@@ -444,17 +446,17 @@
 <?php
     $addons = $VARS['addons'];
 ?>
-<?php foreach ( $addons as $plugin_id => $plugin_addons ) : ?>
-    <h2><?php echo esc_html( sprintf( fs_text_inline( 'Add Ons of module %s', 'addons-of-x' ), $plugin_id ) ) ?></h2>
+<?php foreach ($addons as $plugin_id => $plugin_addons) : ?>
+    <h2><?php echo esc_html(sprintf(fs_text_inline('Add Ons of module %s', 'addons-of-x'), $plugin_id)) ?></h2>
     <table id="fs_addons" class="widefat">
         <thead>
         <tr>
-            <th><?php fs_esc_html_echo_inline( 'ID', 'id' ) ?></th>
-            <th><?php fs_esc_html_echo_inline( 'Title' ) ?></th>
-            <th><?php fs_esc_html_echo_inline( 'Slug' ) ?></th>
-            <th><?php fs_esc_html_echo_x_inline( 'Version', 'product version' ) ?></th>
-            <th><?php fs_esc_html_echo_inline( 'Public Key' ) ?></th>
-            <th><?php fs_esc_html_echo_inline( 'Secret Key' ) ?></th>
+            <th><?php fs_esc_html_echo_inline('ID', 'id') ?></th>
+            <th><?php fs_esc_html_echo_inline('Title') ?></th>
+            <th><?php fs_esc_html_echo_inline('Slug') ?></th>
+            <th><?php fs_esc_html_echo_x_inline('Version', 'product version') ?></th>
+            <th><?php fs_esc_html_echo_inline('Public Key') ?></th>
+            <th><?php fs_esc_html_echo_inline('Secret Key') ?></th>
         </tr>
         </thead>
         <tbody>
@@ -462,14 +464,14 @@
             /**
              * @var FS_Plugin[] $plugin_addons
              */
-            foreach ( $plugin_addons as $addon ) : ?>
+            foreach ($plugin_addons as $addon) : ?>
                 <tr>
                     <td><?php echo $addon->id ?></td>
                     <td><?php echo $addon->title ?></td>
                     <td><?php echo $addon->slug ?></td>
                     <td><?php echo $addon->version ?></td>
                     <td><?php echo $addon->public_key ?></td>
-                    <td><?php echo esc_html( $addon->secret_key ) ?></td>
+                    <td><?php echo esc_html($addon->secret_key) ?></td>
                 </tr>
             <?php endforeach ?>
         </tbody>
@@ -482,55 +484,55 @@
     $users                              = $VARS['users'];
     $users_with_developer_license_by_id = array();
 
-    foreach ( $module_types as $module_type ) {
+    foreach ($module_types as $module_type) {
         /**
          * @var FS_Plugin_License[] $licenses
          */
         $licenses = $VARS[ $module_type . '_licenses' ];
 
-        foreach ( $licenses as $license ) {
-            if ( $license->is_whitelabeled ) {
+        foreach ($licenses as $license) {
+            if ($license->is_whitelabeled) {
                 $users_with_developer_license_by_id[ $license->user_id ] = true;
             }
         }
     }
 
 ?>
-<?php if ( is_array( $users ) && 0 < count( $users ) ) : ?>
-    <h2><?php fs_esc_html_echo_inline( 'Users' ) ?></h2>
+<?php if (is_array($users) && 0 < count($users)) : ?>
+    <h2><?php fs_esc_html_echo_inline('Users') ?></h2>
     <table id="fs_users" class="widefat">
         <thead>
         <tr>
-            <th><?php fs_esc_html_echo_inline( 'ID', 'id' ) ?></th>
-            <th><?php fs_esc_html_echo_inline( 'Name' ) ?></th>
-            <th><?php fs_esc_html_echo_inline( 'Email' ) ?></th>
-            <th><?php fs_esc_html_echo_inline( 'Verified' ) ?></th>
-            <th><?php fs_esc_html_echo_inline( 'Public Key' ) ?></th>
-            <th><?php fs_esc_html_echo_inline( 'Secret Key' ) ?></th>
-            <th><?php fs_esc_html_echo_inline( 'Actions' ) ?></th>
+            <th><?php fs_esc_html_echo_inline('ID', 'id') ?></th>
+            <th><?php fs_esc_html_echo_inline('Name') ?></th>
+            <th><?php fs_esc_html_echo_inline('Email') ?></th>
+            <th><?php fs_esc_html_echo_inline('Verified') ?></th>
+            <th><?php fs_esc_html_echo_inline('Public Key') ?></th>
+            <th><?php fs_esc_html_echo_inline('Secret Key') ?></th>
+            <th><?php fs_esc_html_echo_inline('Actions') ?></th>
         </tr>
         </thead>
         <tbody>
-        <?php foreach ( $users as $user_id => $user ) : ?>
-            <?php $has_developer_license = isset( $users_with_developer_license_by_id[ $user_id ] ) ?>
+        <?php foreach ($users as $user_id => $user) : ?>
+            <?php $has_developer_license = isset($users_with_developer_license_by_id[ $user_id ]) ?>
             <tr>
                 <td><?php echo $user->id ?></td>
                 <td><?php echo $has_developer_license ? '' : $user->get_name() ?></td>
                 <td>
-                    <?php if ( ! $has_developer_license ) : ?>
-                    <a href="mailto:<?php echo esc_attr( $user->email ) ?>"><?php echo $user->email ?></a>
+                    <?php if (! $has_developer_license) : ?>
+                    <a href="mailto:<?php echo esc_attr($user->email) ?>"><?php echo $user->email ?></a>
                     <?php endif ?>
                 </td>
-                <td><?php echo $has_developer_license ? '' : json_encode( $user->is_verified ) ?></td>
+                <td><?php echo $has_developer_license ? '' : json_encode($user->is_verified) ?></td>
                 <td><?php echo $user->public_key ?></td>
-                <td><?php echo $has_developer_license ? FS_Plugin_License::mask_secret_key_for_html($user->secret_key) : esc_html( $user->secret_key ) ?></td>
+                <td><?php echo $has_developer_license ? FS_Plugin_License::mask_secret_key_for_html($user->secret_key) : esc_html($user->secret_key) ?></td>
                 <td>
-                    <?php if ( ! $has_developer_license ) : ?>
+                    <?php if (! $has_developer_license) : ?>
                     <form action="" method="POST">
                         <input type="hidden" name="fs_action" value="delete_user">
-                        <?php wp_nonce_field( 'delete_user' ) ?>
+                        <?php wp_nonce_field('delete_user') ?>
                         <input type="hidden" name="user_id" value="<?php echo $user->id ?>">
-                        <button type="submit" class="button"><?php fs_esc_html_echo_x_inline( 'Delete', 'verb', 'delete' ) ?></button>
+                        <button type="submit" class="button"><?php fs_esc_html_echo_x_inline('Delete', 'verb', 'delete') ?></button>
                     </form>
                     <?php endif ?>
                 </td>
@@ -539,44 +541,44 @@
         </tbody>
     </table>
 <?php endif ?>
-<?php foreach ( $module_types as $module_type ) : ?>
+<?php foreach ($module_types as $module_type) : ?>
     <?php
     /**
      * @var FS_Plugin_License[] $licenses
      */
     $licenses = $VARS[ $module_type . '_licenses' ] ?>
-    <?php if ( is_array( $licenses ) && count( $licenses ) > 0 ) : ?>
-        <h2><?php echo esc_html( sprintf( fs_text_inline( '%s Licenses', 'module-licenses' ), ( WP_FS__MODULE_TYPE_PLUGIN === $module_type ? fs_text_inline( 'Plugin', 'plugin' ) : fs_text_inline( 'Theme', 'theme' ) ) ) ) ?></h2>
+    <?php if (is_array($licenses) && count($licenses) > 0) : ?>
+        <h2><?php echo esc_html(sprintf(fs_text_inline('%s Licenses', 'module-licenses'), (WP_FS__MODULE_TYPE_PLUGIN === $module_type ? fs_text_inline('Plugin', 'plugin') : fs_text_inline('Theme', 'theme')))) ?></h2>
         <table id="fs_<?php echo $module_type ?>_licenses" class="widefat">
             <thead>
             <tr>
-                <th><?php fs_esc_html_echo_inline( 'ID', 'id' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'Plugin ID' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'User ID' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'Plan ID' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'Quota' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'Activated' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'Blocking' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'Type' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'License Key' ) ?></th>
-                <th><?php fs_esc_html_echo_x_inline( 'Expiration', 'as expiration date' ) ?></th>
+                <th><?php fs_esc_html_echo_inline('ID', 'id') ?></th>
+                <th><?php fs_esc_html_echo_inline('Plugin ID') ?></th>
+                <th><?php fs_esc_html_echo_inline('User ID') ?></th>
+                <th><?php fs_esc_html_echo_inline('Plan ID') ?></th>
+                <th><?php fs_esc_html_echo_inline('Quota') ?></th>
+                <th><?php fs_esc_html_echo_inline('Activated') ?></th>
+                <th><?php fs_esc_html_echo_inline('Blocking') ?></th>
+                <th><?php fs_esc_html_echo_inline('Type') ?></th>
+                <th><?php fs_esc_html_echo_inline('License Key') ?></th>
+                <th><?php fs_esc_html_echo_x_inline('Expiration', 'as expiration date') ?></th>
             </tr>
             </thead>
             <tbody>
-            <?php foreach ( $licenses as $license ) : ?>
+            <?php foreach ($licenses as $license) : ?>
                 <tr>
                     <td><?php echo $license->id ?></td>
                     <td><?php echo $license->plugin_id ?></td>
                     <td><?php echo $license->user_id ?></td>
                     <td><?php echo $license->plan_id ?></td>
-                    <td><?php echo $license->is_unlimited() ? 'Unlimited' : ( $license->is_single_site() ? 'Single Site' : $license->quota ) ?></td>
+                    <td><?php echo $license->is_unlimited() ? 'Unlimited' : ($license->is_single_site() ? 'Single Site' : $license->quota) ?></td>
                     <td><?php echo $license->activated ?></td>
                     <td><?php echo $license->is_block_features ? 'Blocking' : 'Flexible' ?></td>
                     <td><?php echo $license->is_whitelabeled ? 'Whitelabeled' : 'Normal' ?></td>
                     <td><?php
                             echo $license->is_whitelabeled ?
                                 $license->get_html_escaped_masked_secret_key() :
-                                esc_html( $license->secret_key );
+                                esc_html($license->secret_key);
                     ?></td>
                     <td><?php echo $license->expiration ?></td>
                 </tr>
@@ -585,39 +587,39 @@
         </table>
     <?php endif ?>
 <?php endforeach ?>
-<?php if ( FS_Logger::is_storage_logging_on() ) : ?>
+<?php if (FS_Logger::is_storage_logging_on()) : ?>
 
-    <h2><?php fs_esc_html_echo_inline( 'Debug Log', 'debug-log' ) ?></h2>
+    <h2><?php fs_esc_html_echo_inline('Debug Log', 'debug-log') ?></h2>
 
     <div id="fs_debug_filters">
         <select name="type">
-            <option value="" selected="selected"><?php fs_esc_html_echo_inline( 'All Types', 'all-types' ) ?></option>
+            <option value="" selected="selected"><?php fs_esc_html_echo_inline('All Types', 'all-types') ?></option>
             <option value="warn_error">Warnings & Errors</option>
             <option value="error">Errors</option>
             <option value="warn">Warnings</option>
             <option value="info">Info</option>
         </select>
         <select name="request_type">
-            <option value="" selected="selected"><?php fs_esc_html_echo_inline( 'All Requests', 'all-requests' ) ?></option>
+            <option value="" selected="selected"><?php fs_esc_html_echo_inline('All Requests', 'all-requests') ?></option>
             <option value="call">Sync</option>
             <option value="ajax">AJAX</option>
             <option value="cron">WP Cron</option>
         </select>
-        <input name="file" type="text" placeholder="<?php fs_esc_attr_echo_inline( 'File' ) ?>"/>
-        <input name="function" type="text" placeholder="<?php fs_esc_attr_echo_inline( 'Function' ) ?>"/>
-        <input name="process_id" type="text" placeholder="<?php fs_esc_attr_echo_inline( 'Process ID' ) ?>"/>
-        <input name="logger" type="text" placeholder="<?php fs_esc_attr_echo_inline( 'Logger' ) ?>"/>
-        <input name="message" type="text" placeholder="<?php fs_esc_attr_echo_inline( 'Message' ) ?>"/>
+        <input name="file" type="text" placeholder="<?php fs_esc_attr_echo_inline('File') ?>"/>
+        <input name="function" type="text" placeholder="<?php fs_esc_attr_echo_inline('Function') ?>"/>
+        <input name="process_id" type="text" placeholder="<?php fs_esc_attr_echo_inline('Process ID') ?>"/>
+        <input name="logger" type="text" placeholder="<?php fs_esc_attr_echo_inline('Logger') ?>"/>
+        <input name="message" type="text" placeholder="<?php fs_esc_attr_echo_inline('Message') ?>"/>
         <div style="margin: 10px 0">
-			<button id="fs_filter" class="button" style="float: left"><i class="dashicons dashicons-filter"></i> <?php fs_esc_html_echo_inline( 'Filter', 'filter' ) ?>
+			<button id="fs_filter" class="button" style="float: left"><i class="dashicons dashicons-filter"></i> <?php fs_esc_html_echo_inline('Filter', 'filter') ?>
             </button>
 
             <form action="" method="POST" style="float: left; margin-left: 10px;">
                 <input type="hidden" name="fs_action" value="download_logs">
-                <?php wp_nonce_field( 'download_logs' ) ?>
+                <?php wp_nonce_field('download_logs') ?>
                 <div class="fs-filters"></div>
                 <button id="fs_download" class="button" type="submit"><i
-						class="dashicons dashicons-download"></i> <?php fs_esc_html_echo_inline( 'Download' ) ?></button>
+						class="dashicons dashicons-download"></i> <?php fs_esc_html_echo_inline('Download') ?></button>
             </form>
             <div style="clear: both"></div>
         </div>
@@ -628,12 +630,12 @@
             <thead>
             <tr>
                 <th>#</th>
-                <th><?php fs_esc_html_echo_inline( 'Type' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'ID', 'id' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'Function' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'Message' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'File' ) ?></th>
-                <th><?php fs_esc_html_echo_inline( 'Timestamp' ) ?></th>
+                <th><?php fs_esc_html_echo_inline('Type') ?></th>
+                <th><?php fs_esc_html_echo_inline('ID', 'id') ?></th>
+                <th><?php fs_esc_html_echo_inline('Function') ?></th>
+                <th><?php fs_esc_html_echo_inline('Message') ?></th>
+                <th><?php fs_esc_html_echo_inline('File') ?></th>
+                <th><?php fs_esc_html_echo_inline('Timestamp') ?></th>
             </tr>
             </thead>
             <tbody>
diff --git a/freemius/templates/debug/api-calls.php b/freemius/templates/debug/api-calls.php
index ea4e823b594a25bcbdba2b35928e2dd5b05bef7a..ac181bc20af7a9ec2bb02cb53627e510fccc197b 100644
--- a/freemius/templates/debug/api-calls.php
+++ b/freemius/templates/debug/api-calls.php
@@ -1,154 +1,155 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.1.7.3
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.1.7.3
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	if ( class_exists( 'Freemius_Api_WordPress' ) ) {
-		$logger = Freemius_Api_WordPress::GetLogger();
-	} else {
-		$logger = array();
-	}
+    if (class_exists('Freemius_Api_WordPress')) {
+        $logger = Freemius_Api_WordPress::GetLogger();
+    } else {
+        $logger = array();
+    }
 
-	$counters = array(
-		'GET'    => 0,
-		'POST'   => 0,
-		'PUT'    => 0,
-		'DELETE' => 0
-	);
+    $counters = array(
+        'GET'    => 0,
+        'POST'   => 0,
+        'PUT'    => 0,
+        'DELETE' => 0
+    );
 
-	$show_body = false;
-	foreach ( $logger as $log ) {
-		$counters[ $log['method'] ] ++;
+    $show_body = false;
+    foreach ($logger as $log) {
+        $counters[ $log['method'] ] ++;
 
-		if ( ! is_null( $log['body'] ) ) {
-			$show_body = true;
-		}
-	}
+        if (! is_null($log['body'])) {
+            $show_body = true;
+        }
+    }
 
-	$pretty_print = $show_body && defined( 'JSON_PRETTY_PRINT' ) && version_compare( phpversion(), '5.3', '>=' );
+    $pretty_print = $show_body && defined('JSON_PRETTY_PRINT') && version_compare(phpversion(), '5.3', '>=');
 
-	/**
-	 * This template is used for debugging, therefore, when possible
-	 * we'd like to prettify the output of a JSON encoded variable.
-	 * This will only be executed when $pretty_print is `true`, and
-	 * the var is `true` only for PHP 5.3 and higher. Due to the
-	 * limitations of the current Theme Check, it throws an error
-	 * that using the "options" parameter (the 2nd param) is not
-	 * supported in PHP 5.2 and lower. Thus, we added this alias
-	 * variable to work around that false-positive.
-	 *
-	 * @author Vova Feldman (@svovaf)
-	 * @since  1.2.2.7
-	 */
-	$encode = 'json_encode';
+    /**
+     * This template is used for debugging, therefore, when possible
+     * we'd like to prettify the output of a JSON encoded variable.
+     * This will only be executed when $pretty_print is `true`, and
+     * the var is `true` only for PHP 5.3 and higher. Due to the
+     * limitations of the current Theme Check, it throws an error
+     * that using the "options" parameter (the 2nd param) is not
+     * supported in PHP 5.2 and lower. Thus, we added this alias
+     * variable to work around that false-positive.
+     *
+     * @author Vova Feldman (@svovaf)
+     * @since  1.2.2.7
+     */
+    $encode = 'json_encode';
 
-	$root_path_len = strlen( ABSPATH );
+    $root_path_len = strlen(ABSPATH);
 
-	$ms_text = fs_text_x_inline( 'ms', 'milliseconds' );
+    $ms_text = fs_text_x_inline('ms', 'milliseconds');
 ?>
-<h1><?php fs_echo_inline( 'API' ) ?></h1>
+<h1><?php fs_echo_inline('API') ?></h1>
 
 <h2><span>Total Time:</span><?php echo Freemius_Debug_Bar_Panel::total_time() ?></h2>
 
 <h2><span>Total Requests:</span><?php echo Freemius_Debug_Bar_Panel::requests_count() ?></h2>
-<?php foreach ( $counters as $method => $count ) : ?>
-	<h2><span><?php echo $method ?>:</span><?php echo number_format( $count ) ?></h2>
+<?php foreach ($counters as $method => $count) : ?>
+	<h2><span><?php echo $method ?>:</span><?php echo number_format($count) ?></h2>
 <?php endforeach ?>
 <table class="widefat">
 	<thead>
 	<tr>
 		<th>#</th>
-		<th><?php fs_esc_html_echo_inline( 'Method' ) ?></th>
-		<th><?php fs_esc_html_echo_inline( 'Code' ) ?></th>
-		<th><?php fs_esc_html_echo_inline( 'Length' ) ?></th>
-		<th><?php fs_esc_html_echo_x_inline( 'Path', 'as file/folder path' ) ?></th>
-		<?php if ( $show_body ) : ?>
-			<th><?php fs_esc_html_echo_inline( 'Body' ) ?></th>
+		<th><?php fs_esc_html_echo_inline('Method') ?></th>
+		<th><?php fs_esc_html_echo_inline('Code') ?></th>
+		<th><?php fs_esc_html_echo_inline('Length') ?></th>
+		<th><?php fs_esc_html_echo_x_inline('Path', 'as file/folder path') ?></th>
+		<?php if ($show_body) : ?>
+			<th><?php fs_esc_html_echo_inline('Body') ?></th>
 		<?php endif ?>
-		<th><?php fs_esc_html_echo_inline( 'Result' ) ?></th>
-		<th><?php fs_esc_html_echo_inline( 'Start' ) ?></th>
-		<th><?php fs_esc_html_echo_inline( 'End' ) ?></th>
+		<th><?php fs_esc_html_echo_inline('Result') ?></th>
+		<th><?php fs_esc_html_echo_inline('Start') ?></th>
+		<th><?php fs_esc_html_echo_inline('End') ?></th>
 	</tr>
 	</thead>
 	<tbody>
-	<?php foreach ( $logger as $log ) : ?>
+	<?php foreach ($logger as $log) : ?>
 		<tr>
 			<td><?php echo $log['id'] ?>.</td>
 			<td><?php echo $log['method'] ?></td>
 			<td><?php echo $log['code'] ?></td>
-			<td><?php echo number_format( 100 * $log['total'], 2 ) . ' ' . $ms_text ?></td>
+			<td><?php echo number_format(100 * $log['total'], 2) . ' ' . $ms_text ?></td>
 			<td>
 				<?php
-					printf( '<a href="#" onclick="jQuery(this).parent().find(\'table\').toggle(); return false;">%s</a>',
-						$log['path']
-					);
-				?>
+                    printf(
+    '<a href="#" onclick="jQuery(this).parent().find(\'table\').toggle(); return false;">%s</a>',
+    $log['path']
+);
+                ?>
 				<table class="widefat" style="display: none">
 					<tbody>
-					<?php for ( $i = 0, $bt = $log['backtrace'], $len = count( $bt ); $i < $len; $i ++ ) : ?>
+					<?php for ($i = 0, $bt = $log['backtrace'], $len = count($bt); $i < $len; $i ++) : ?>
 						<tr>
-							<td><?php echo( $len - $i ) ?></td>
-							<td><?php if ( isset( $bt[ $i ]['function'] ) ) {
-									echo ( isset( $bt[ $i ]['class'] ) ? $bt[ $i ]['class'] . $bt[ $i ]['type'] : '' ) . $bt[ $i ]['function'];
-								} ?></td>
-							<td><?php if ( isset( $bt[ $i ]['file'] ) ) {
-									echo substr( $bt[ $i ]['file'], $root_path_len ) . ':' . $bt[ $i ]['line'];
-								} ?></td>
+							<td><?php echo($len - $i) ?></td>
+							<td><?php if (isset($bt[ $i ]['function'])) {
+                    echo(isset($bt[ $i ]['class']) ? $bt[ $i ]['class'] . $bt[ $i ]['type'] : '') . $bt[ $i ]['function'];
+                } ?></td>
+							<td><?php if (isset($bt[ $i ]['file'])) {
+                    echo substr($bt[ $i ]['file'], $root_path_len) . ':' . $bt[ $i ]['line'];
+                } ?></td>
 						</tr>
 					<?php endfor ?>
 					</tbody>
 				</table>
 			</td>
-			<?php if ( $show_body ) : ?>
+			<?php if ($show_body) : ?>
 				<td>
-					<?php if ( 'GET' !== $log['method'] ) : ?>
+					<?php if ('GET' !== $log['method']) : ?>
 						<?php
-						$body = $log['body'];
-						printf(
-							'<a href="#" onclick="jQuery(this).parent().find(\'pre\').toggle(); return false;">%s</a>',
-							substr( $body, 0, 32 ) . ( 32 < strlen( $body ) ? '...' : '' )
-						);
-						if ( $pretty_print ) {
-							$body = $encode( json_decode( $log['body'] ), JSON_PRETTY_PRINT );
-						}
-						?>
-						<pre style="display: none"><code><?php echo esc_html( $body ) ?></code></pre>
+                        $body = $log['body'];
+                        printf(
+                            '<a href="#" onclick="jQuery(this).parent().find(\'pre\').toggle(); return false;">%s</a>',
+                            substr($body, 0, 32) . (32 < strlen($body) ? '...' : '')
+                        );
+                        if ($pretty_print) {
+                            $body = $encode(json_decode($log['body']), JSON_PRETTY_PRINT);
+                        }
+                        ?>
+						<pre style="display: none"><code><?php echo esc_html($body) ?></code></pre>
 					<?php endif ?>
 				</td>
 			<?php endif ?>
 			<td>
 				<?php
-					$result = $log['result'];
+                    $result = $log['result'];
 
-					$is_not_empty_result = ( is_string( $result ) && ! empty( $result ) );
+                    $is_not_empty_result = (is_string($result) && ! empty($result));
 
-					if ( $is_not_empty_result ) {
-						printf(
-							'<a href="#" onclick="jQuery(this).parent().find(\'pre\').toggle(); return false;">%s</a>',
-							substr( $result, 0, 32 ) . ( 32 < strlen( $result ) ? '...' : '' )
-						);
-					}
+                    if ($is_not_empty_result) {
+                        printf(
+                            '<a href="#" onclick="jQuery(this).parent().find(\'pre\').toggle(); return false;">%s</a>',
+                            substr($result, 0, 32) . (32 < strlen($result) ? '...' : '')
+                        );
+                    }
 
-					if ( $is_not_empty_result && $pretty_print ) {
-						$decoded = json_decode( $result );
-						if ( ! is_null( $decoded ) ) {
-							$result = $encode( $decoded, JSON_PRETTY_PRINT );
-						}
-					} else {
-						$result = is_string( $result ) ? $result : json_encode( $result );
-					}
-				?>
-				<pre<?php if ( $is_not_empty_result ) : ?> style="display: none"<?php endif ?>><code><?php echo esc_html( $result ) ?></code></pre>
+                    if ($is_not_empty_result && $pretty_print) {
+                        $decoded = json_decode($result);
+                        if (! is_null($decoded)) {
+                            $result = $encode($decoded, JSON_PRETTY_PRINT);
+                        }
+                    } else {
+                        $result = is_string($result) ? $result : json_encode($result);
+                    }
+                ?>
+				<pre<?php if ($is_not_empty_result) : ?> style="display: none"<?php endif ?>><code><?php echo esc_html($result) ?></code></pre>
 			</td>
-			<td><?php echo number_format( 100 * ( $log['start'] - WP_FS__SCRIPT_START_TIME ), 2 ) . ' ' . $ms_text ?></td>
-			<td><?php echo number_format( 100 * ( $log['end'] - WP_FS__SCRIPT_START_TIME ), 2 ) . ' ' . $ms_text ?></td>
+			<td><?php echo number_format(100 * ($log['start'] - WP_FS__SCRIPT_START_TIME), 2) . ' ' . $ms_text ?></td>
+			<td><?php echo number_format(100 * ($log['end'] - WP_FS__SCRIPT_START_TIME), 2) . ' ' . $ms_text ?></td>
 		</tr>
 	<?php endforeach ?>
 	</tbody>
diff --git a/freemius/templates/debug/index.php b/freemius/templates/debug/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/templates/debug/index.php
+++ b/freemius/templates/debug/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/templates/debug/logger.php b/freemius/templates/debug/logger.php
index 852497a19b63dd520f7049f70eafdd51d1045905..3bd8ecef211f12b6935457aac1136b3187fc3516 100644
--- a/freemius/templates/debug/logger.php
+++ b/freemius/templates/debug/logger.php
@@ -1,65 +1,65 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.1.7.3
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.1.7.3
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	$log_book = FS_Logger::get_log();
+    $log_book = FS_Logger::get_log();
 ?>
-<h1><?php fs_echo_inline( 'Log' ) ?></h1>
+<h1><?php fs_echo_inline('Log') ?></h1>
 
 <table class="widefat" style="font-size: 11px;">
 	<thead>
 	<tr>
 		<th>#</th>
-		<th><?php fs_esc_html_echo_inline( 'ID', 'id' ) ?></th>
-		<th><?php fs_esc_html_echo_inline( 'Type' ) ?></th>
-		<th><?php fs_esc_html_echo_inline( 'Function' ) ?></th>
-		<th><?php fs_esc_html_echo_inline( 'Message' ) ?></th>
-		<th><?php fs_esc_html_echo_inline( 'File' ) ?></th>
-		<th><?php fs_esc_html_echo_inline( 'Timestamp' ) ?></th>
+		<th><?php fs_esc_html_echo_inline('ID', 'id') ?></th>
+		<th><?php fs_esc_html_echo_inline('Type') ?></th>
+		<th><?php fs_esc_html_echo_inline('Function') ?></th>
+		<th><?php fs_esc_html_echo_inline('Message') ?></th>
+		<th><?php fs_esc_html_echo_inline('File') ?></th>
+		<th><?php fs_esc_html_echo_inline('Timestamp') ?></th>
 	</tr>
 	</thead>
 	<tbody>
 
 	<?php $i = 0;
-		foreach ( $log_book as $log ) : ?>
+        foreach ($log_book as $log) : ?>
 			<?php
-			/**
-			 * @var FS_Logger $logger
-			 */
-			$logger = $log['logger'];
-			?>
-			<tr<?php if ( $i % 2 ) {
-				echo ' class="alternate"';
-			} ?>>
+            /**
+             * @var FS_Logger $logger
+             */
+            $logger = $log['logger'];
+            ?>
+			<tr<?php if ($i % 2) {
+                echo ' class="alternate"';
+            } ?>>
 				<td><?php echo $log['cnt'] ?>.</td>
 				<td><?php echo $logger->get_id() ?></td>
 				<td><?php echo $log['log_type'] ?></td>
-				<td><b><code style="color: blue;"><?php echo ( ! empty( $log['class'] ) ? $log['class'] . $log['type'] : '' ) . $log['function'] ?></code></b></td>
+				<td><b><code style="color: blue;"><?php echo(! empty($log['class']) ? $log['class'] . $log['type'] : '') . $log['function'] ?></code></b></td>
 				<td>
 					<?php
-						printf(
-							'<a href="#" style="color: darkorange !important;" onclick="jQuery(this).parent().find(\'div\').toggle(); return false;"><nobr>%s</nobr></a>',
-							esc_html( substr( $log['msg'], 0, 32 ) ) . ( 32 < strlen( $log['msg'] ) ? '...' : '' )
-						);
-					?>
+                        printf(
+                '<a href="#" style="color: darkorange !important;" onclick="jQuery(this).parent().find(\'div\').toggle(); return false;"><nobr>%s</nobr></a>',
+                esc_html(substr($log['msg'], 0, 32)) . (32 < strlen($log['msg']) ? '...' : '')
+            );
+                    ?>
 					<div style="display: none;">
-						<b style="color: darkorange;"><?php echo esc_html( $log['msg'] ) ?></b>
+						<b style="color: darkorange;"><?php echo esc_html($log['msg']) ?></b>
 					</div>
 				</td>
 				<td><?php
-						if ( isset( $log['file'] ) ) {
-							echo substr( $log['file'], $logger->get_file() ) . ':' . $log['line'];
-						}
-					?></td>
-				<td><?php echo number_format( 100 * ( $log['timestamp'] - WP_FS__SCRIPT_START_TIME ), 2 ) . ' ' . fs_text_x_inline( 'ms', 'milliseconds' ) ?></td>
+                        if (isset($log['file'])) {
+                            echo substr($log['file'], $logger->get_file()) . ':' . $log['line'];
+                        }
+                    ?></td>
+				<td><?php echo number_format(100 * ($log['timestamp'] - WP_FS__SCRIPT_START_TIME), 2) . ' ' . fs_text_x_inline('ms', 'milliseconds') ?></td>
 			</tr>
 			<?php $i ++; endforeach ?>
 	</tbody>
diff --git a/freemius/templates/debug/plugins-themes-sync.php b/freemius/templates/debug/plugins-themes-sync.php
index 8508cd16a90d368ce65a9d0ba361da45c231a209..593ec11a8123ff51fc20dd2a20407be3d474191d 100644
--- a/freemius/templates/debug/plugins-themes-sync.php
+++ b/freemius/templates/debug/plugins-themes-sync.php
@@ -1,75 +1,75 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.1.7.3
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.1.7.3
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	$fs_options  = FS_Options::instance( WP_FS__ACCOUNTS_OPTION_NAME, true );
-	$all_plugins = $fs_options->get_option( 'all_plugins' );
-	$all_themes  = $fs_options->get_option( 'all_themes' );
+    $fs_options  = FS_Options::instance(WP_FS__ACCOUNTS_OPTION_NAME, true);
+    $all_plugins = $fs_options->get_option('all_plugins');
+    $all_themes  = $fs_options->get_option('all_themes');
 
     /* translators: %s: time period (e.g. In "2 hours") */
-	$in_x_text = fs_text_inline( 'In %s', 'in-x' );
+    $in_x_text = fs_text_inline('In %s', 'in-x');
     /* translators: %s: time period (e.g. "2 hours" ago) */
-	$x_ago_text = fs_text_inline( '%s ago', 'x-ago' );
-	$sec_text   = fs_text_x_inline( 'sec', 'seconds' );
+    $x_ago_text = fs_text_inline('%s ago', 'x-ago');
+    $sec_text   = fs_text_x_inline('sec', 'seconds');
 ?>
-<h1><?php fs_esc_html_echo_inline( 'Plugins & Themes Sync', 'plugins-themes-sync' ) ?></h1>
+<h1><?php fs_esc_html_echo_inline('Plugins & Themes Sync', 'plugins-themes-sync') ?></h1>
 <table class="widefat">
 	<thead>
 	<tr>
 		<th></th>
-		<th><?php fs_esc_html_echo_inline( 'Total', 'total' ) ?></th>
-		<th><?php fs_esc_html_echo_inline( 'Last', 'last' ) ?></th>
+		<th><?php fs_esc_html_echo_inline('Total', 'total') ?></th>
+		<th><?php fs_esc_html_echo_inline('Last', 'last') ?></th>
 	</tr>
 	</thead>
 	<tbody>
-	<?php if ( is_object( $all_plugins ) ) : ?>
+	<?php if (is_object($all_plugins)) : ?>
 		<tr>
-			<td><?php fs_esc_html_echo_inline( 'Plugins', 'plugins' ) ?></td>
-			<td><?php echo count( $all_plugins->plugins ) ?></td>
+			<td><?php fs_esc_html_echo_inline('Plugins', 'plugins') ?></td>
+			<td><?php echo count($all_plugins->plugins) ?></td>
 			<td><?php
-					if ( isset( $all_plugins->timestamp ) && is_numeric( $all_plugins->timestamp ) ) {
-						$diff       = abs( WP_FS__SCRIPT_START_TIME - $all_plugins->timestamp );
-						$human_diff = ( $diff < MINUTE_IN_SECONDS ) ?
-							$diff . ' ' . $sec_text :
-							human_time_diff( WP_FS__SCRIPT_START_TIME, $all_plugins->timestamp );
+                    if (isset($all_plugins->timestamp) && is_numeric($all_plugins->timestamp)) {
+                        $diff       = abs(WP_FS__SCRIPT_START_TIME - $all_plugins->timestamp);
+                        $human_diff = ($diff < MINUTE_IN_SECONDS) ?
+                            $diff . ' ' . $sec_text :
+                            human_time_diff(WP_FS__SCRIPT_START_TIME, $all_plugins->timestamp);
 
-                        echo esc_html( sprintf(
-                            ( ( WP_FS__SCRIPT_START_TIME < $all_plugins->timestamp ) ?
+                        echo esc_html(sprintf(
+                            ((WP_FS__SCRIPT_START_TIME < $all_plugins->timestamp) ?
                                 $in_x_text :
-                                $x_ago_text ),
+                                $x_ago_text),
                             $human_diff
-                        ) );
-					}
-				?></td>
+                        ));
+                    }
+                ?></td>
 		</tr>
 	<?php endif ?>
-	<?php if ( is_object( $all_themes ) ) : ?>
+	<?php if (is_object($all_themes)) : ?>
 		<tr>
-			<td><?php fs_esc_html_echo_inline( 'Themes', 'themes' ) ?></td>
-			<td><?php echo count( $all_themes->themes ) ?></td>
+			<td><?php fs_esc_html_echo_inline('Themes', 'themes') ?></td>
+			<td><?php echo count($all_themes->themes) ?></td>
 			<td><?php
-					if ( isset( $all_themes->timestamp ) && is_numeric( $all_themes->timestamp ) ) {
-						$diff       = abs( WP_FS__SCRIPT_START_TIME - $all_themes->timestamp );
-						$human_diff = ( $diff < MINUTE_IN_SECONDS ) ?
-							$diff . ' ' . $sec_text :
-							human_time_diff( WP_FS__SCRIPT_START_TIME, $all_themes->timestamp );
+                    if (isset($all_themes->timestamp) && is_numeric($all_themes->timestamp)) {
+                        $diff       = abs(WP_FS__SCRIPT_START_TIME - $all_themes->timestamp);
+                        $human_diff = ($diff < MINUTE_IN_SECONDS) ?
+                            $diff . ' ' . $sec_text :
+                            human_time_diff(WP_FS__SCRIPT_START_TIME, $all_themes->timestamp);
 
-                        echo esc_html( sprintf(
-                            ( ( WP_FS__SCRIPT_START_TIME < $all_themes->timestamp ) ?
+                        echo esc_html(sprintf(
+                            ((WP_FS__SCRIPT_START_TIME < $all_themes->timestamp) ?
                                 $in_x_text :
-                                $x_ago_text ),
+                                $x_ago_text),
                             $human_diff
-                        ) );
-					}
-				?></td>
+                        ));
+                    }
+                ?></td>
 		</tr>
 	<?php endif ?>
 	</tbody>
diff --git a/freemius/templates/debug/scheduled-crons.php b/freemius/templates/debug/scheduled-crons.php
index 47a715ea462e5d15f21c18afa226ed4b85d9dcef..62dcab55e2a7b20924ae98cc9153ed3ad507fc00 100644
--- a/freemius/templates/debug/scheduled-crons.php
+++ b/freemius/templates/debug/scheduled-crons.php
@@ -1,134 +1,134 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.1.7.3
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.1.7.3
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	$fs_options      = FS_Options::instance( WP_FS__ACCOUNTS_OPTION_NAME, true );
-	$scheduled_crons = array();
+    $fs_options      = FS_Options::instance(WP_FS__ACCOUNTS_OPTION_NAME, true);
+    $scheduled_crons = array();
 
-	$module_types = array(
-		WP_FS__MODULE_TYPE_PLUGIN,
-		WP_FS__MODULE_TYPE_THEME
-	);
+    $module_types = array(
+        WP_FS__MODULE_TYPE_PLUGIN,
+        WP_FS__MODULE_TYPE_THEME
+    );
 
-	foreach ( $module_types as $module_type ) {
-		$modules = fs_get_entities( $fs_options->get_option( $module_type . 's' ), FS_Plugin::get_class_name() );
-		if ( is_array( $modules ) && count( $modules ) > 0 ) {
-			foreach ( $modules as $slug => $data ) {
-				if ( WP_FS__MODULE_TYPE_THEME === $module_type ) {
-					$current_theme = wp_get_theme();
-					$is_active = ( $current_theme->stylesheet === $data->file );
-				} else {
-					$is_active = is_plugin_active( $data->file );
-				}
+    foreach ($module_types as $module_type) {
+        $modules = fs_get_entities($fs_options->get_option($module_type . 's'), FS_Plugin::get_class_name());
+        if (is_array($modules) && count($modules) > 0) {
+            foreach ($modules as $slug => $data) {
+                if (WP_FS__MODULE_TYPE_THEME === $module_type) {
+                    $current_theme = wp_get_theme();
+                    $is_active = ($current_theme->stylesheet === $data->file);
+                } else {
+                    $is_active = is_plugin_active($data->file);
+                }
 
-				/**
-				 * @author Vova Feldman
-				 *
-				 * @since 1.2.1 Don't load data from inactive modules.
-				 */
-				if ( $is_active ) {
-					$fs = freemius( $data->id );
+                /**
+                 * @author Vova Feldman
+                 *
+                 * @since 1.2.1 Don't load data from inactive modules.
+                 */
+                if ($is_active) {
+                    $fs = freemius($data->id);
 
-					$next_execution = $fs->next_sync_cron();
-					$last_execution = $fs->last_sync_cron();
+                    $next_execution = $fs->next_sync_cron();
+                    $last_execution = $fs->last_sync_cron();
 
-					if ( false !== $next_execution ) {
-						$scheduled_crons[ $slug ][] = array(
-							'name' => $fs->get_plugin_name(),
-							'slug' => $slug,
-							'module_type' => $fs->get_module_type(),
-							'type' => 'sync_cron',
-							'last' => $last_execution,
-							'next' => $next_execution,
-						);
-					}
+                    if (false !== $next_execution) {
+                        $scheduled_crons[ $slug ][] = array(
+                            'name' => $fs->get_plugin_name(),
+                            'slug' => $slug,
+                            'module_type' => $fs->get_module_type(),
+                            'type' => 'sync_cron',
+                            'last' => $last_execution,
+                            'next' => $next_execution,
+                        );
+                    }
 
-					$next_install_execution = $fs->next_install_sync();
-					$last_install_execution = $fs->last_install_sync();
+                    $next_install_execution = $fs->next_install_sync();
+                    $last_install_execution = $fs->last_install_sync();
 
-					if (false !== $next_install_execution ||
-						false !== $last_install_execution
-					) {
-						$scheduled_crons[ $slug ][] = array(
-							'name' => $fs->get_plugin_name(),
-							'slug' => $slug,
-							'module_type' => $fs->get_module_type(),
-							'type' => 'install_sync',
-							'last' => $last_install_execution,
-							'next' => $next_install_execution,
-						);
-					}
-				}
-			}
-		}
-	}
+                    if (false !== $next_install_execution ||
+                        false !== $last_install_execution
+                    ) {
+                        $scheduled_crons[ $slug ][] = array(
+                            'name' => $fs->get_plugin_name(),
+                            'slug' => $slug,
+                            'module_type' => $fs->get_module_type(),
+                            'type' => 'install_sync',
+                            'last' => $last_install_execution,
+                            'next' => $next_install_execution,
+                        );
+                    }
+                }
+            }
+        }
+    }
 
-	$sec_text = fs_text_x_inline( 'sec', 'seconds' );
+    $sec_text = fs_text_x_inline('sec', 'seconds');
 ?>
-<h1><?php fs_esc_html_echo_inline( 'Scheduled Crons' ) ?></h1>
+<h1><?php fs_esc_html_echo_inline('Scheduled Crons') ?></h1>
 <table class="widefat">
 	<thead>
 	<tr>
-		<th><?php fs_esc_html_echo_inline( 'Slug' ) ?></th>
-		<th><?php fs_esc_html_echo_inline( 'Module' ) ?></th>
-		<th><?php fs_esc_html_echo_inline( 'Module Type' ) ?></th>
-		<th><?php fs_esc_html_echo_inline( 'Cron Type' ) ?></th>
-		<th><?php fs_esc_html_echo_inline( 'Last' ) ?></th>
-		<th><?php fs_esc_html_echo_inline( 'Next' ) ?></th>
+		<th><?php fs_esc_html_echo_inline('Slug') ?></th>
+		<th><?php fs_esc_html_echo_inline('Module') ?></th>
+		<th><?php fs_esc_html_echo_inline('Module Type') ?></th>
+		<th><?php fs_esc_html_echo_inline('Cron Type') ?></th>
+		<th><?php fs_esc_html_echo_inline('Last') ?></th>
+		<th><?php fs_esc_html_echo_inline('Next') ?></th>
 	</tr>
 	</thead>
 	<tbody>
 	<?php
-		/* translators: %s: time period (e.g. In "2 hours") */
-		$in_x_text = fs_text_inline( 'In %s', 'in-x' );
-		/* translators: %s: time period (e.g. "2 hours" ago) */
-		$x_ago_text = fs_text_inline( '%s ago', 'x-ago' );
-	?>
-	<?php foreach ( $scheduled_crons as $slug => $crons ) : ?>
-		<?php foreach ( $crons as $cron ) : ?>
+        /* translators: %s: time period (e.g. In "2 hours") */
+        $in_x_text = fs_text_inline('In %s', 'in-x');
+        /* translators: %s: time period (e.g. "2 hours" ago) */
+        $x_ago_text = fs_text_inline('%s ago', 'x-ago');
+    ?>
+	<?php foreach ($scheduled_crons as $slug => $crons) : ?>
+		<?php foreach ($crons as $cron) : ?>
 			<tr>
 				<td><?php echo $slug ?></td>
 				<td><?php echo $cron['name'] ?></td>
 				<td><?php echo $cron['module_type'] ?></td>
 				<td><?php echo $cron['type'] ?></td>
 				<td><?php
-						if ( is_numeric( $cron['last'] ) ) {
-							$diff       = abs( WP_FS__SCRIPT_START_TIME - $cron['last'] );
-							$human_diff = ( $diff < MINUTE_IN_SECONDS ) ?
-								$diff . ' ' . $sec_text :
-								human_time_diff( WP_FS__SCRIPT_START_TIME, $cron['last'] );
+                        if (is_numeric($cron['last'])) {
+                            $diff       = abs(WP_FS__SCRIPT_START_TIME - $cron['last']);
+                            $human_diff = ($diff < MINUTE_IN_SECONDS) ?
+                                $diff . ' ' . $sec_text :
+                                human_time_diff(WP_FS__SCRIPT_START_TIME, $cron['last']);
 
-							echo esc_html( sprintf(
-								( ( WP_FS__SCRIPT_START_TIME < $cron['last'] ) ?
-									$in_x_text :
-									$x_ago_text ),
-								$human_diff
-							) );
-						}
-					?></td>
+                            echo esc_html(sprintf(
+                                ((WP_FS__SCRIPT_START_TIME < $cron['last']) ?
+                                    $in_x_text :
+                                    $x_ago_text),
+                                $human_diff
+                            ));
+                        }
+                    ?></td>
 				<td><?php
-						if ( is_numeric( $cron['next'] ) ) {
-							$diff       = abs( WP_FS__SCRIPT_START_TIME - $cron['next'] );
-							$human_diff = ( $diff < MINUTE_IN_SECONDS ) ?
-								$diff . ' ' . $sec_text :
-								human_time_diff( WP_FS__SCRIPT_START_TIME, $cron['next'] );
+                        if (is_numeric($cron['next'])) {
+                            $diff       = abs(WP_FS__SCRIPT_START_TIME - $cron['next']);
+                            $human_diff = ($diff < MINUTE_IN_SECONDS) ?
+                                $diff . ' ' . $sec_text :
+                                human_time_diff(WP_FS__SCRIPT_START_TIME, $cron['next']);
 
-							echo esc_html( sprintf(
-								( ( WP_FS__SCRIPT_START_TIME < $cron['next'] ) ?
-									$in_x_text :
-									$x_ago_text ),
-								$human_diff
-							) );
-						}
-					?></td>
+                            echo esc_html(sprintf(
+                                ((WP_FS__SCRIPT_START_TIME < $cron['next']) ?
+                                    $in_x_text :
+                                    $x_ago_text),
+                                $human_diff
+                            ));
+                        }
+                    ?></td>
 			</tr>
 		<?php endforeach ?>
 	<?php endforeach ?>
diff --git a/freemius/templates/email.php b/freemius/templates/email.php
index 598c7834677f7276618b46aba7e15a7d3639d908..d00499034d864ff736d3ae46005d51be8e6be677 100644
--- a/freemius/templates/email.php
+++ b/freemius/templates/email.php
@@ -1,49 +1,46 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.1.1
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.1.1
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	/**
-	 * @var array $VARS
-	 */
-	$sections = $VARS['sections'];
+    /**
+     * @var array $VARS
+     */
+    $sections = $VARS['sections'];
 ?>
 <table>
 	<?php
-	foreach ( $sections as $section_id => $section ) {
-		?>
+    foreach ($sections as $section_id => $section) {
+        ?>
 		<thead>
 			<tr><th colspan="2" style="text-align: left; background: #333; color: #fff; padding: 5px;"><?php echo esc_html($section['title']) ?></th></tr>
 		</thead>
 		<tbody>
 		<?php
-		foreach ( $section['rows'] as $row_id => $row ) {
-			$col_count = count( $row );
-			?>
+        foreach ($section['rows'] as $row_id => $row) {
+            $col_count = count($row); ?>
 			<tr>
 				<?php
-				if ( 1 === $col_count ) { ?>
+                if (1 === $col_count) { ?>
 					<td style="vertical-align: top;" colspan="2"><?php echo $row[0] ?></td>
 					<?php
-				} else { ?>
+                } else { ?>
 					<td style="vertical-align: top;"><b><?php echo esc_html($row[0]) ?>:</b></td>
 					<td><?php echo $row[1]; ?></td>
 					<?php
-				}
-				?>
+                } ?>
 			</tr>
 			<?php
-		}
-		?>
+        } ?>
 		</tbody>
 		<?php
-	}
-	?>
+    }
+    ?>
 </table>
\ No newline at end of file
diff --git a/freemius/templates/firewall-issues-js.php b/freemius/templates/firewall-issues-js.php
index 2abfbc0e7600cc34e081f3f0a93c6fdd04802ebb..7c0809e3659bb9058c365a937f98d35254a85461 100644
--- a/freemius/templates/firewall-issues-js.php
+++ b/freemius/templates/firewall-issues-js.php
@@ -1,18 +1,18 @@
 <?php
-	/**
-	 * API connectivity issues (CloudFlare's firewall) handler for handling different
-	 * scenarios selected by the user after connectivity issue is detected, by sending
-	 * AJAX call to the server in order to make the actual actions.
-	 *
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.9
-	 */
+    /**
+     * API connectivity issues (CloudFlare's firewall) handler for handling different
+     * scenarios selected by the user after connectivity issue is detected, by sending
+     * AJAX call to the server in order to make the actual actions.
+     *
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.9
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 ?>
 <script type="text/javascript">
 	jQuery( document ).ready(function( $ ) {
diff --git a/freemius/templates/forms/affiliation.php b/freemius/templates/forms/affiliation.php
index fe6d694c7fc1b579457ae6d9d45f9ad08ac0e805..fb978f85d69760275f3c4d15e2066570400e25e3 100644
--- a/freemius/templates/forms/affiliation.php
+++ b/freemius/templates/forms/affiliation.php
@@ -6,7 +6,7 @@
      * @since       1.2.3
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
@@ -14,7 +14,7 @@
      * @var array    $VARS
      * @var Freemius $fs
      */
-    $fs = freemius( $VARS['id'] );
+    $fs = freemius($VARS['id']);
 
     $slug = $fs->get_slug();
 
@@ -30,14 +30,14 @@
     $commission = $affiliate_terms->get_formatted_commission();
 
     $readonly                      = false;
-    $is_affiliate                  = is_object( $affiliate );
+    $is_affiliate                  = is_object($affiliate);
     $is_pending_affiliate          = false;
-    $email_address                 = ( is_object( $user ) ?
+    $email_address                 = (is_object($user) ?
         $user->email :
-        '' );
-    $full_name                     = ( is_object( $user ) ?
+        '');
+    $full_name                     = (is_object($user) ?
         $user->get_name() :
-        '' );
+        '');
     $paypal_email_address          = '';
     $domain                        = '';
     $extra_domains                 = array();
@@ -49,7 +49,7 @@
 
     $affiliate_application_data = $fs->get_affiliate_application_data();
 
-    if ( $is_affiliate && $affiliate->is_pending() ) {
+    if ($is_affiliate && $affiliate->is_pending()) {
         $readonly             = 'readonly';
         $is_pending_affiliate = true;
 
@@ -58,31 +58,31 @@
         $statistics_information       = $affiliate_application_data['stats_description'];
         $promotion_method_description = $affiliate_application_data['promotion_method_description'];
 
-        if ( ! empty( $affiliate_application_data['additional_domains'] ) ) {
+        if (! empty($affiliate_application_data['additional_domains'])) {
             $extra_domains = $affiliate_application_data['additional_domains'];
         }
 
-        if ( ! empty( $affiliate_application_data['promotion_methods'] ) ) {
-            $promotion_methods             = explode( ',', $affiliate_application_data['promotion_methods'] );
-            $promotion_method_social_media = in_array( 'social_media', $promotion_methods );
-            $promotion_method_mobile_apps  = in_array( 'mobile_apps', $promotion_methods );
+        if (! empty($affiliate_application_data['promotion_methods'])) {
+            $promotion_methods             = explode(',', $affiliate_application_data['promotion_methods']);
+            $promotion_method_social_media = in_array('social_media', $promotion_methods);
+            $promotion_method_mobile_apps  = in_array('mobile_apps', $promotion_methods);
         }
     } else {
         $current_user  = Freemius::_get_current_wp_user();
-        $full_name     = trim( $current_user->user_firstname . ' ' . $current_user->user_lastname );
+        $full_name     = trim($current_user->user_firstname . ' ' . $current_user->user_lastname);
         $email_address = $current_user->user_email;
-        $domain        = fs_strip_url_protocol( get_site_url() );
+        $domain        = fs_strip_url_protocol(get_site_url());
     }
 
     $affiliate_tracking = 30;
 
-    if ( is_object( $affiliate_terms ) ) {
-        $affiliate_tracking = ( ! is_null( $affiliate_terms->cookie_days ) ?
-            ( $affiliate_terms->cookie_days . '-day' ) :
-            fs_text_inline( 'Non-expiring', 'non-expiring', $slug ) );
+    if (is_object($affiliate_terms)) {
+        $affiliate_tracking = (! is_null($affiliate_terms->cookie_days) ?
+            ($affiliate_terms->cookie_days . '-day') :
+            fs_text_inline('Non-expiring', 'non-expiring', $slug));
     }
 
-    $apply_to_become_affiliate_text = fs_text_inline( 'Apply to become an affiliate', 'apply-to-become-an-affiliate', $slug );
+    $apply_to_become_affiliate_text = fs_text_inline('Apply to become an affiliate', 'apply-to-become-an-affiliate', $slug);
 
     $module_id                   = $fs->get_id();
     $affiliate_program_terms_url = "https://freemius.com/plugin/{$module_id}/{$slug}/legal/affiliate-program/";
@@ -99,128 +99,128 @@
                         <div id="message" class="updated" style="display: none">
                             <p><strong></strong></p>
                         </div>
-                        <?php if ( $is_affiliate ) : ?>
-                            <?php if ( $affiliate->is_active() ) : ?>
+                        <?php if ($is_affiliate) : ?>
+                            <?php if ($affiliate->is_active()) : ?>
                                 <div class="updated">
                                     <p><strong><?php
                                         echo sprintf(
-                                            fs_esc_html_inline( "Your affiliate application for %s has been accepted! Log in to your affiliate area at: %s.", 'affiliate-application-accepted', $slug ),
-                                            $plugin_title,
-                                            sprintf(
+    fs_esc_html_inline("Your affiliate application for %s has been accepted! Log in to your affiliate area at: %s.", 'affiliate-application-accepted', $slug),
+    $plugin_title,
+    sprintf(
                                                 '<a href="%s" target="_blank" rel="noopener">%s</a>',
                                                 $members_dashboard_login_url,
                                                 $members_dashboard_login_url
                                             )
-                                        );
+);
                                     ?></strong></p>
                                 </div>
                             <?php else : ?>
                                     <?php
                                     $message_text = '';
 
-                                    if ( $is_pending_affiliate ) {
-                                        $message_text            = fs_text_inline( "Thank you for applying for our affiliate program, we'll review your details during the next 14 days and will get back to you with further information.", 'affiliate-application-thank-you', $slug );
+                                    if ($is_pending_affiliate) {
+                                        $message_text            = fs_text_inline("Thank you for applying for our affiliate program, we'll review your details during the next 14 days and will get back to you with further information.", 'affiliate-application-thank-you', $slug);
                                         $message_container_class = 'updated';
-                                    } else if ( $affiliate->is_suspended() ) {
-                                        $message_text            = fs_text_inline( 'Your affiliation account was temporarily suspended.', 'affiliate-account-suspended', $slug );
+                                    } elseif ($affiliate->is_suspended()) {
+                                        $message_text            = fs_text_inline('Your affiliation account was temporarily suspended.', 'affiliate-account-suspended', $slug);
                                         $message_container_class = 'notice notice-warning';
-                                    } else if ( $affiliate->is_rejected() ) {
-                                        $message_text            = fs_text_inline( "Thank you for applying for our affiliate program, unfortunately, we've decided at this point to reject your application. Please try again in 30 days.", 'affiliate-application-rejected', $slug );
+                                    } elseif ($affiliate->is_rejected()) {
+                                        $message_text            = fs_text_inline("Thank you for applying for our affiliate program, unfortunately, we've decided at this point to reject your application. Please try again in 30 days.", 'affiliate-application-rejected', $slug);
                                         $message_container_class = 'error';
-                                    } else if ( $affiliate->is_blocked() ) {
-                                        $message_text            = fs_text_inline( 'Due to violation of our affiliation terms, we decided to temporarily block your affiliation account. If you have any questions, please contact support.', 'affiliate-account-blocked', $slug );
+                                    } elseif ($affiliate->is_blocked()) {
+                                        $message_text            = fs_text_inline('Due to violation of our affiliation terms, we decided to temporarily block your affiliation account. If you have any questions, please contact support.', 'affiliate-account-blocked', $slug);
                                         $message_container_class = 'error';
                                     }
                                     ?>
                                     <div class="<?php echo $message_container_class ?>">
-                                        <p><strong><?php echo esc_html( $message_text ) ?></strong></p>
+                                        <p><strong><?php echo esc_html($message_text) ?></strong></p>
                                     </div>
                                 <?php endif ?>
                             <?php endif ?>
                         </div>
                         <div class="entry-content">
-                            <?php if ( ! $is_affiliate ) : ?>
+                            <?php if (! $is_affiliate) : ?>
                                 <div id="application_messages_container">
-                                    <p><?php echo esc_html( sprintf( fs_text_inline( 'Like the %s? Become our ambassador and earn cash ;-)', 'become-an-ambassador', $slug ), $module_type ) ) ?></p>
-                                    <p><?php echo esc_html( sprintf( fs_text_inline( 'Refer new customers to our %s and earn %s commission on each successful sale you refer!', 'refer-new-customers', $slug ), $module_type, $commission ) ) ?></p>
+                                    <p><?php echo esc_html(sprintf(fs_text_inline('Like the %s? Become our ambassador and earn cash ;-)', 'become-an-ambassador', $slug), $module_type)) ?></p>
+                                    <p><?php echo esc_html(sprintf(fs_text_inline('Refer new customers to our %s and earn %s commission on each successful sale you refer!', 'refer-new-customers', $slug), $module_type, $commission)) ?></p>
                                 </div>
                             <?php endif ?>
-                            <h3><?php fs_esc_html_echo_inline( 'Program Summary', 'program-summary', $slug ) ?></h3>
+                            <h3><?php fs_esc_html_echo_inline('Program Summary', 'program-summary', $slug) ?></h3>
                             <ul>
-                                <li><?php echo esc_html( sprintf( fs_text_inline( '%s commission when a customer purchases a new license.', 'commission-on-new-license-purchase', $slug ), $commission ) ) ?></li>
-                                <?php if ( is_object( $affiliate_terms ) && $affiliate_terms->has_renewals_commission() ) : ?>
-                                    <li><?php echo esc_html( sprintf( fs_text_inline( 'Get commission for automated subscription renewals.', 'renewals-commission', $slug ) ) ) ?></li>
+                                <li><?php echo esc_html(sprintf(fs_text_inline('%s commission when a customer purchases a new license.', 'commission-on-new-license-purchase', $slug), $commission)) ?></li>
+                                <?php if (is_object($affiliate_terms) && $affiliate_terms->has_renewals_commission()) : ?>
+                                    <li><?php echo esc_html(sprintf(fs_text_inline('Get commission for automated subscription renewals.', 'renewals-commission', $slug))) ?></li>
                                 <?php endif ?>
-                                <?php if ( is_object( $affiliate_terms ) && ( ! $affiliate_terms->is_session_cookie() ) ) : ?>
-                                    <li><?php echo esc_html( sprintf( fs_text_inline( '%s tracking cookie after the first visit to maximize earnings potential.', 'affiliate-tracking', $slug ), $affiliate_tracking ) ) ?></li>
+                                <?php if (is_object($affiliate_terms) && (! $affiliate_terms->is_session_cookie())) : ?>
+                                    <li><?php echo esc_html(sprintf(fs_text_inline('%s tracking cookie after the first visit to maximize earnings potential.', 'affiliate-tracking', $slug), $affiliate_tracking)) ?></li>
                                 <?php endif ?>
-                                <?php if ( is_object( $affiliate_terms ) && $affiliate_terms->has_lifetime_commission() ) : ?>
-                                    <li><?php fs_esc_html_echo_inline( 'Unlimited commissions.', 'unlimited-commissions', $slug ) ?></li>
+                                <?php if (is_object($affiliate_terms) && $affiliate_terms->has_lifetime_commission()) : ?>
+                                    <li><?php fs_esc_html_echo_inline('Unlimited commissions.', 'unlimited-commissions', $slug) ?></li>
                                 <?php endif ?>
-                                <li><?php echo esc_html( sprintf( fs_text_inline( '%s minimum payout amount.', 'minimum-payout-amount', $slug ), '$100' ) ) ?></li>
-                                <li><?php fs_esc_html_echo_inline( 'Payouts are in USD and processed monthly via PayPal.', 'payouts-unit-and-processing', $slug ) ?></li>
-                                <li><?php fs_esc_html_echo_inline( 'As we reserve 30 days for potential refunds, we only pay commissions that are older than 30 days.', 'commission-payment', $slug ) ?></li>
+                                <li><?php echo esc_html(sprintf(fs_text_inline('%s minimum payout amount.', 'minimum-payout-amount', $slug), '$100')) ?></li>
+                                <li><?php fs_esc_html_echo_inline('Payouts are in USD and processed monthly via PayPal.', 'payouts-unit-and-processing', $slug) ?></li>
+                                <li><?php fs_esc_html_echo_inline('As we reserve 30 days for potential refunds, we only pay commissions that are older than 30 days.', 'commission-payment', $slug) ?></li>
                             </ul>
-                            <div id="application_form_container" <?php echo ( $is_pending_affiliate ) ? '' : 'style="display: none"' ?>>
-                                <h3><?php fs_esc_html_echo_inline( 'Affiliate', 'affiliate', $slug ) ?></h3>
+                            <div id="application_form_container" <?php echo ($is_pending_affiliate) ? '' : 'style="display: none"' ?>>
+                                <h3><?php fs_esc_html_echo_inline('Affiliate', 'affiliate', $slug) ?></h3>
                                 <form>
                                     <div class="input-container input-container-text">
-                                        <label class="input-label"><?php fs_esc_html_echo_inline( 'Email address', 'email-address', $slug ) ?></label>
-                                        <input id="email_address" type="text" value="<?php echo esc_attr( $email_address ) ?>" class="regular-text" <?php echo ( $readonly || is_object( $user ) ) ? 'readonly' : '' ?>>
+                                        <label class="input-label"><?php fs_esc_html_echo_inline('Email address', 'email-address', $slug) ?></label>
+                                        <input id="email_address" type="text" value="<?php echo esc_attr($email_address) ?>" class="regular-text" <?php echo ($readonly || is_object($user)) ? 'readonly' : '' ?>>
                                     </div>
                                     <div class="input-container input-container-text">
-                                        <label class="input-label"><?php fs_esc_html_echo_inline( 'Full name', 'full-name', $slug ) ?></label>
-                                        <input id="full_name" type="text" value="<?php echo esc_attr( $full_name ) ?>" class="regular-text" <?php echo $readonly ?>>
+                                        <label class="input-label"><?php fs_esc_html_echo_inline('Full name', 'full-name', $slug) ?></label>
+                                        <input id="full_name" type="text" value="<?php echo esc_attr($full_name) ?>" class="regular-text" <?php echo $readonly ?>>
                                     </div>
                                     <div class="input-container input-container-text">
-                                        <label class="input-label"><?php fs_esc_html_echo_inline( 'PayPal account email address', 'paypal-account-email-address', $slug ) ?></label>
-                                        <input id="paypal_email" type="text" value="<?php echo esc_attr( $paypal_email_address ) ?>" class="regular-text" <?php echo $readonly ?>>
+                                        <label class="input-label"><?php fs_esc_html_echo_inline('PayPal account email address', 'paypal-account-email-address', $slug) ?></label>
+                                        <input id="paypal_email" type="text" value="<?php echo esc_attr($paypal_email_address) ?>" class="regular-text" <?php echo $readonly ?>>
                                     </div>
                                     <div class="input-container input-container-text">
-                                        <label class="input-label"><?php echo esc_html( sprintf( fs_text_inline( 'Where are you going to promote the %s?', 'domain-field-label', $slug ), $module_type ) ) ?></label>
-                                        <input id="domain" type="text" value="<?php echo esc_attr( $domain ) ?>" class="domain regular-text" <?php echo $readonly ?>>
-                                        <p class="description"><?php echo esc_html( sprintf( fs_text_inline( 'Enter the domain of your website or other websites from where you plan to promote the %s.', 'domain-field-desc', $slug ), $module_type ) ) ?></p>
-                                        <?php if ( ! $is_affiliate ) : ?>
-                                        <a id="add_domain" href="#" class="disabled">+ <?php fs_esc_html_echo_inline( 'Add another domain', 'add-another-domain', $slug ) ?>...</a>
+                                        <label class="input-label"><?php echo esc_html(sprintf(fs_text_inline('Where are you going to promote the %s?', 'domain-field-label', $slug), $module_type)) ?></label>
+                                        <input id="domain" type="text" value="<?php echo esc_attr($domain) ?>" class="domain regular-text" <?php echo $readonly ?>>
+                                        <p class="description"><?php echo esc_html(sprintf(fs_text_inline('Enter the domain of your website or other websites from where you plan to promote the %s.', 'domain-field-desc', $slug), $module_type)) ?></p>
+                                        <?php if (! $is_affiliate) : ?>
+                                        <a id="add_domain" href="#" class="disabled">+ <?php fs_esc_html_echo_inline('Add another domain', 'add-another-domain', $slug) ?>...</a>
                                         <?php endif ?>
                                     </div>
                                     <div id="extra_domains_container" class="input-container input-container-text" <?php echo $is_pending_affiliate ? '' : 'style="display: none"' ?>>
-                                        <label class="input-label"><?php fs_esc_html_echo_inline( 'Extra Domains', 'extra-domain-fields-label', $slug ) ?></label>
-                                        <p class="description"><?php fs_esc_html_echo_inline( 'Extra domains where you will be marketing the product from.', 'extra-domain-fields-desc', $slug ) ?></p>
-                                        <?php if ( $is_pending_affiliate && ! empty( $extra_domains ) ) : ?>
-                                            <?php foreach ( $extra_domains as $extra_domain ) : ?>
+                                        <label class="input-label"><?php fs_esc_html_echo_inline('Extra Domains', 'extra-domain-fields-label', $slug) ?></label>
+                                        <p class="description"><?php fs_esc_html_echo_inline('Extra domains where you will be marketing the product from.', 'extra-domain-fields-desc', $slug) ?></p>
+                                        <?php if ($is_pending_affiliate && ! empty($extra_domains)) : ?>
+                                            <?php foreach ($extra_domains as $extra_domain) : ?>
                                                 <div class="extra-domain-input-container">
-                                                    <input type="text" value="<?php echo esc_attr( $extra_domain ) ?>" class="domain regular-text" <?php echo $readonly ?>>
+                                                    <input type="text" value="<?php echo esc_attr($extra_domain) ?>" class="domain regular-text" <?php echo $readonly ?>>
                                                 </div>
                                             <?php endforeach ?>
                                         <?php endif ?>
                                     </div>
                                     <div class="input-container">
-                                        <label class="input-label"><?php fs_esc_html_echo_inline( 'Promotion methods', 'promotion-methods', $slug ) ?></label>
+                                        <label class="input-label"><?php fs_esc_html_echo_inline('Promotion methods', 'promotion-methods', $slug) ?></label>
                                         <div>
-                                            <input id="promotion_method_social_media" type="checkbox" <?php checked( $promotion_method_social_media ) ?> <?php disabled( $is_affiliate ) ?>/>
-                                            <label for="promotion_method_social_media"><?php fs_esc_html_echo_inline( 'Social media (Facebook, Twitter, etc.)', 'social-media', $slug ) ?></label>
+                                            <input id="promotion_method_social_media" type="checkbox" <?php checked($promotion_method_social_media) ?> <?php disabled($is_affiliate) ?>/>
+                                            <label for="promotion_method_social_media"><?php fs_esc_html_echo_inline('Social media (Facebook, Twitter, etc.)', 'social-media', $slug) ?></label>
                                         </div>
                                         <div>
-                                            <input id="promotion_method_mobile_apps" type="checkbox" <?php checked( $promotion_method_mobile_apps ) ?> <?php disabled( $is_affiliate ) ?>/>
-                                            <label for="promotion_method_mobile_apps"><?php fs_esc_html_echo_inline( 'Mobile apps', 'mobile-apps', $slug ) ?></label>
+                                            <input id="promotion_method_mobile_apps" type="checkbox" <?php checked($promotion_method_mobile_apps) ?> <?php disabled($is_affiliate) ?>/>
+                                            <label for="promotion_method_mobile_apps"><?php fs_esc_html_echo_inline('Mobile apps', 'mobile-apps', $slug) ?></label>
                                         </div>
                                     </div>
                                     <div class="input-container input-container-text">
-                                    <label class="input-label"><nobr><?php fs_esc_html_echo_inline( 'Website, email, and social media statistics (optional)', 'statistics-information-field-label', $slug ) ?></nobr></label>
+                                    <label class="input-label"><nobr><?php fs_esc_html_echo_inline('Website, email, and social media statistics (optional)', 'statistics-information-field-label', $slug) ?></nobr></label>
                                         <textarea id="statistics_information" rows="5" <?php echo $readonly ?> class="regular-text"><?php echo $statistics_information ?></textarea>
-                                        <?php if ( ! $is_affiliate ) : ?>
-                                            <p class="description"><?php fs_esc_html_echo_inline( 'Please feel free to provide any relevant website or social media statistics, e.g. monthly unique site visits, number of email subscribers, followers, etc. (we will keep this information confidential).', 'statistics-information-field-desc', $slug ) ?></p>
+                                        <?php if (! $is_affiliate) : ?>
+                                            <p class="description"><?php fs_esc_html_echo_inline('Please feel free to provide any relevant website or social media statistics, e.g. monthly unique site visits, number of email subscribers, followers, etc. (we will keep this information confidential).', 'statistics-information-field-desc', $slug) ?></p>
                                         <?php endif ?>
                                     </div>
                                     <div class="input-container input-container-text">
-                                        <label class="input-label"><?php fs_esc_html_echo_inline( 'How will you promote us?', 'promotion-method-desc-field-label', $slug ) ?></label>
+                                        <label class="input-label"><?php fs_esc_html_echo_inline('How will you promote us?', 'promotion-method-desc-field-label', $slug) ?></label>
                                         <textarea id="promotion_method_description" rows="5" <?php echo $readonly ?> class="regular-text"><?php echo $promotion_method_description ?></textarea>
-                                        <?php if ( ! $is_affiliate ) : ?>
-                                            <p class="description"><?php echo esc_html( sprintf( fs_text_inline( 'Please provide details on how you intend to promote %s (please be as specific as possible).', 'promotion-method-desc-field-desc', $slug ), $plugin_title ) ) ?></p>
+                                        <?php if (! $is_affiliate) : ?>
+                                            <p class="description"><?php echo esc_html(sprintf(fs_text_inline('Please provide details on how you intend to promote %s (please be as specific as possible).', 'promotion-method-desc-field-desc', $slug), $plugin_title)) ?></p>
                                         <?php endif ?>
                                     </div>
-                                    <?php if ( ! $is_affiliate ) : ?>
+                                    <?php if (! $is_affiliate) : ?>
                                     <div>
                                         <input type="checkbox" id="legal_consent_checkbox">
                                         <label for="legal_consent_checkbox">I agree to the <a href="<?php echo $affiliate_program_terms_url ?>" target="_blank" rel="noopener">Referrer Program</a>'s terms & conditions.</label>
@@ -228,10 +228,10 @@
                                     <?php endif ?>
                                 </form>
                             </div>
-                            <?php if ( ! $is_affiliate ) : ?>
-                                <a id="cancel_button" href="#" class="button button-secondary button-cancel" style="display: none"><?php fs_esc_html_echo_inline( 'Cancel', 'cancel', $slug ) ?></a>
-                                <a id="submit_button" class="button button-primary disabled" href="#" style="display: none"><?php echo esc_html( $apply_to_become_affiliate_text ) ?></a>
-                                <a id="apply_button" class="button button-primary" href="#"><?php fs_esc_html_echo_inline( 'Become an affiliate', 'become-an-affiliate', $slug ) ?></a>
+                            <?php if (! $is_affiliate) : ?>
+                                <a id="cancel_button" href="#" class="button button-secondary button-cancel" style="display: none"><?php fs_esc_html_echo_inline('Cancel', 'cancel', $slug) ?></a>
+                                <a id="submit_button" class="button button-primary disabled" href="#" style="display: none"><?php echo esc_html($apply_to_become_affiliate_text) ?></a>
+                                <a id="apply_button" class="button button-primary" href="#"><?php fs_esc_html_echo_inline('Become an affiliate', 'become-an-affiliate', $slug) ?></a>
                             <?php endif ?>
                         </div>
                     </div>
@@ -287,13 +287,13 @@
                         emailAddress = $emailAddress.val().trim();
 
                         if (0 === emailAddress.length) {
-                            showErrorMessage('<?php fs_esc_js_echo_inline( 'Email address is required.', 'email-address-is-required', $slug ) ?>');
+                            showErrorMessage('<?php fs_esc_js_echo_inline('Email address is required.', 'email-address-is-required', $slug) ?>');
                             return;
                         }
                     }
 
                     if (0 === paypalEmailAddress.length) {
-                        showErrorMessage('<?php fs_esc_js_echo_inline( 'PayPal email address is required.', 'paypal-email-address-is-required', $slug ) ?>');
+                        showErrorMessage('<?php fs_esc_js_echo_inline('PayPal email address is required.', 'paypal-email-address-is-required', $slug) ?>');
                         return;
                     }
 
@@ -303,10 +303,10 @@
                         extraDomains  = [];
 
                     if (0 === domain.length) {
-                        showErrorMessage('<?php fs_esc_js_echo_inline( 'Domain is required.', 'domain-is-required', $slug ) ?>');
+                        showErrorMessage('<?php fs_esc_js_echo_inline('Domain is required.', 'domain-is-required', $slug) ?>');
                         return;
                     } else if ('freemius.com' === domain) {
-                        showErrorMessage('<?php fs_esc_js_echo_inline( 'Invalid domain', 'invalid-domain', $slug ) ?>' + ' [' + domain + '].');
+                        showErrorMessage('<?php fs_esc_js_echo_inline('Invalid domain', 'invalid-domain', $slug) ?>' + ' [' + domain + '].');
                         return;
                     }
 
@@ -320,7 +320,7 @@
                             if (0 === extraDomain.length || extraDomain === domain) {
                                 return true;
                             } else if ('freemius.com' === extraDomain) {
-                                showErrorMessage('<?php fs_esc_js_echo_inline( 'Invalid domain', 'invalid-domain', $slug ) ?>' + ' [' + extraDomain + '].');
+                                showErrorMessage('<?php fs_esc_js_echo_inline('Invalid domain', 'invalid-domain', $slug) ?>' + ' [' + extraDomain + '].');
                                 hasError = true;
                                 return false;
                             }
@@ -368,15 +368,15 @@
                         url       : ajaxurl,
                         method    : 'POST',
                         data      : {
-                            action   : '<?php echo $fs->get_ajax_action( 'submit_affiliate_application' ) ?>',
-                            security : '<?php echo $fs->get_ajax_security( 'submit_affiliate_application' ) ?>',
+                            action   : '<?php echo $fs->get_ajax_action('submit_affiliate_application') ?>',
+                            security : '<?php echo $fs->get_ajax_security('submit_affiliate_application') ?>',
                             module_id: '<?php echo $module_id ?>',
                             affiliate: affiliate
                         },
                         beforeSend: function () {
                             $cancelButton.addClass('disabled');
                             $submitButton.addClass('disabled');
-                            $submitButton.text('<?php fs_esc_js_echo_inline( 'Submitting', 'submitting' ) ?>...');
+                            $submitButton.text('<?php fs_esc_js_echo_inline('Submitting', 'submitting') ?>...');
                         },
                         success   : function (result) {
                             if (result.success) {
@@ -388,7 +388,7 @@
 
                                 $cancelButton.removeClass('disabled');
                                 $submitButton.removeClass('disabled');
-                                $submitButton.text('<?php echo esc_js( $apply_to_become_affiliate_text ) ?>')
+                                $submitButton.text('<?php echo esc_js($apply_to_become_affiliate_text) ?>')
                             }
                         }
                     });
@@ -431,7 +431,7 @@
                     var
                         $extraDomainInputContainer = $('<div class="extra-domain-input-container"><input type="text" class="domain regular-text"/></div>'),
                         $extraDomainInput          = $extraDomainInputContainer.find('input'),
-                        $removeDomain              = $('<a href="#" class="remove-domain"><i class="dashicons dashicons-no" title="<?php fs_esc_js_echo_inline( 'Remove', 'remove', $slug ) ?>"></i></a>');
+                        $removeDomain              = $('<a href="#" class="remove-domain"><i class="dashicons dashicons-no" title="<?php fs_esc_js_echo_inline('Remove', 'remove', $slug) ?>"></i></a>');
 
                     $extraDomainInputContainer.append($removeDomain);
 
@@ -505,5 +505,5 @@
         'module_slug'    => $slug,
         'module_version' => $fs->get_plugin_version(),
     );
-    fs_require_template( 'powered-by.php', $params );
+    fs_require_template('powered-by.php', $params);
 ?>
\ No newline at end of file
diff --git a/freemius/templates/forms/data-debug-mode.php b/freemius/templates/forms/data-debug-mode.php
index 44cb44213d9aba8d6dbc6d4bc4cd85507469e850..d70cc7d67323598596e4ed3c8176c20268f08a3b 100644
--- a/freemius/templates/forms/data-debug-mode.php
+++ b/freemius/templates/forms/data-debug-mode.php
@@ -1,53 +1,53 @@
 <?php
-	/**
-	 * @package   Freemius
-	 * @copyright Copyright (c) 2015, Freemius, Inc.
-	 * @license   https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since     2.3.1
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	/**
+    /**
+     * @package   Freemius
+     * @copyright Copyright (c) 2015, Freemius, Inc.
+     * @license   https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since     2.3.1
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    /**
      * @var array $VARS
      *
-	 * @var Freemius $fs
-	 */
-	$fs                       = freemius( $VARS['id'] );
-	$slug                     = $fs->get_slug();
+     * @var Freemius $fs
+     */
+    $fs                       = freemius($VARS['id']);
+    $slug                     = $fs->get_slug();
     $unique_affix             = $fs->get_unique_affix();
     $last_license_user_id     = $fs->get_last_license_user_id();
-    $has_last_license_user_id = FS_User::is_valid_id( $last_license_user_id );
+    $has_last_license_user_id = FS_User::is_valid_id($last_license_user_id);
     
-	$message_above_input_field = ( ! $has_last_license_user_id ) ?
-		fs_text_inline( 'Please enter the license key to enable the debug mode:', 'submit-developer-license-key-message', $slug ) :
-		sprintf(
-			fs_text_inline( 'To enter the debug mode, please enter the secret key of the license owner (UserID = %d), which you can find in your "My Profile" section of your User Dashboard:', 'submit-addon-developer-key-message', $slug ),
-			$last_license_user_id
-		);
-
-    $processing_text          = ( fs_esc_js_inline( 'Processing', 'processing', $slug ) . '...' );
-    $submit_button_text       = fs_text_inline( 'Submit', 'submit', $slug );
-    $debug_license_link_text  = fs_esc_html_inline( 'Start Debug', 'start-debug-license', $slug );
-    $license_or_user_key_text = ( ! $has_last_license_user_id ) ?
-        fs_text_inline( 'License key', 'license-key' , $slug ) :
-        fs_text_inline( 'User key', 'user-key' , $slug );
+    $message_above_input_field = (! $has_last_license_user_id) ?
+        fs_text_inline('Please enter the license key to enable the debug mode:', 'submit-developer-license-key-message', $slug) :
+        sprintf(
+            fs_text_inline('To enter the debug mode, please enter the secret key of the license owner (UserID = %d), which you can find in your "My Profile" section of your User Dashboard:', 'submit-addon-developer-key-message', $slug),
+            $last_license_user_id
+        );
+
+    $processing_text          = (fs_esc_js_inline('Processing', 'processing', $slug) . '...');
+    $submit_button_text       = fs_text_inline('Submit', 'submit', $slug);
+    $debug_license_link_text  = fs_esc_html_inline('Start Debug', 'start-debug-license', $slug);
+    $license_or_user_key_text = (! $has_last_license_user_id) ?
+        fs_text_inline('License key', 'license-key', $slug) :
+        fs_text_inline('User key', 'user-key', $slug);
     $input_html               = "<input class='fs-license-or-user-key' type='password' placeholder='{$license_or_user_key_text}' tabindex='1' />";
 
-	$modal_content_html = <<< HTML
+    $modal_content_html = <<< HTML
 	<div class="notice notice-error inline license-or-user-key-submission-message"><p></p></div>
 	<p>{$message_above_input_field}</p>
 	{$input_html}
 HTML;
 
-	fs_enqueue_local_style( 'fs_dialog_boxes', '/admin/dialog-boxes.css' );
+    fs_enqueue_local_style('fs_dialog_boxes', '/admin/dialog-boxes.css');
 ?>
 <script type="text/javascript">
 ( function( $ ) {
 	$( document ).ready( function() {
-		var modalContentHtml          = <?php echo json_encode( $modal_content_html ) ?>,
+		var modalContentHtml          = <?php echo json_encode($modal_content_html) ?>,
 			modalHtml                 =
 				'<div class="fs-modal fs-modal-developer-license-debug-mode fs-modal-developer-license-debug-mode-<?php echo $unique_affix ?>">'
 				+ '	<div class="fs-modal-dialog">'
@@ -55,8 +55,8 @@ HTML;
 				+ '			<div class="fs-modal-panel active">' + modalContentHtml + '</div>'
 				+ '		</div>'
 				+ '		<div class="fs-modal-footer">'
-				+ '			<button class="button button-secondary button-close" tabindex="4"><?php fs_esc_js_echo_inline( 'Cancel', 'cancel', $slug ) ?></button>'
-				+ '			<button class="button button-primary button-submit-license-or-user-key"  tabindex="3"><?php echo esc_js( $submit_button_text ) ?></button>'
+				+ '			<button class="button button-secondary button-close" tabindex="4"><?php fs_esc_js_echo_inline('Cancel', 'cancel', $slug) ?></button>'
+				+ '			<button class="button button-primary button-submit-license-or-user-key"  tabindex="3"><?php echo esc_js($submit_button_text) ?></button>'
 				+ '		</div>'
 				+ '	</div>'
 				+ '</div>',
@@ -132,8 +132,8 @@ HTML;
 
 		function setDeveloperLicenseDebugMode( licenseOrUserKey ) {
             var data = {
-                action             : '<?php echo $fs->get_ajax_action( 'set_data_debug_mode' ) ?>',
-                security           : '<?php echo $fs->get_ajax_security( 'set_data_debug_mode' ) ?>',
+                action             : '<?php echo $fs->get_ajax_action('set_data_debug_mode') ?>',
+                security           : '<?php echo $fs->get_ajax_security('set_data_debug_mode') ?>',
                 license_or_user_key: licenseOrUserKey,
                 is_debug_mode      : isDebugMode,
                 module_id          : '<?php echo $fs->get_id() ?>'
@@ -159,7 +159,7 @@ HTML;
                     }
                 },
                 error     : function () {
-                    showError( <?php echo json_encode( fs_text_inline( 'An unknown error has occurred.', 'unknown-error', $slug ) ) ?> );
+                    showError( <?php echo json_encode(fs_text_inline('An unknown error has occurred.', 'unknown-error', $slug)) ?> );
                     resetButtons();
                 }
             });
@@ -183,8 +183,8 @@ HTML;
 
 		function resetButtons() {
 			enableSubmitButton();
-			$submitKeyButton.text( <?php echo json_encode( $submit_button_text ) ?> );
-			$debugLicenseLink.find('span').text( <?php echo json_encode( $debug_license_link_text ) ?> );
+			$submitKeyButton.text( <?php echo json_encode($submit_button_text) ?> );
+			$debugLicenseLink.find('span').text( <?php echo json_encode($debug_license_link_text) ?> );
 		}
 
 		function resetModal() {
diff --git a/freemius/templates/forms/deactivation/contact.php b/freemius/templates/forms/deactivation/contact.php
index 24d67e723bdff2909184f3ecbc431b81d29e7fec..051ac650158e595b9b1e526c9dd6915ad9158c1b 100644
--- a/freemius/templates/forms/deactivation/contact.php
+++ b/freemius/templates/forms/deactivation/contact.php
@@ -6,18 +6,19 @@
      * @since       1.2.0
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
     /**
      * @var array $VARS
      */
-    $fs   = freemius( $VARS['id'] );
+    $fs   = freemius($VARS['id']);
     $slug = $fs->get_slug();
 
-    echo fs_text_inline( 'Sorry for the inconvenience and we are here to help if you give us a chance.', 'contact-support-before-deactivation', $slug )
-            . sprintf(" <a href='%s' class='button button-small button-primary'>%s</a>",
-                $fs->contact_url( 'technical_support' ),
-                fs_text_inline( 'Contact Support', 'contact-support', $slug )
+    echo fs_text_inline('Sorry for the inconvenience and we are here to help if you give us a chance.', 'contact-support-before-deactivation', $slug)
+            . sprintf(
+                " <a href='%s' class='button button-small button-primary'>%s</a>",
+                $fs->contact_url('technical_support'),
+                fs_text_inline('Contact Support', 'contact-support', $slug)
             );
diff --git a/freemius/templates/forms/deactivation/form.php b/freemius/templates/forms/deactivation/form.php
index 0bdcae01f198a773032621abec481cd925219757..39a4990d38e94daa0d237d64f2aa73dd987c37c3 100644
--- a/freemius/templates/forms/deactivation/form.php
+++ b/freemius/templates/forms/deactivation/form.php
@@ -1,45 +1,45 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.1.2
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.1.2
+     */
 
-	/**
-	 * @var array $VARS
-	 */
-	$fs   = freemius( $VARS['id'] );
-	$slug = $fs->get_slug();
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    /**
+     * @var array $VARS
+     */
+    $fs   = freemius($VARS['id']);
+    $slug = $fs->get_slug();
 
     $subscription_cancellation_dialog_box_template_params = $VARS['subscription_cancellation_dialog_box_template_params'];
     $show_deactivation_feedback_form                      = $VARS['show_deactivation_feedback_form'];
-	$confirmation_message                                 = $VARS['uninstall_confirmation_message'];
+    $confirmation_message                                 = $VARS['uninstall_confirmation_message'];
 
-    $is_anonymous                     = ( ! $fs->is_registered() );
+    $is_anonymous                     = (! $fs->is_registered());
     $anonymous_feedback_checkbox_html = '';
 
     $reasons_list_items_html = '';
 
-    if ( $show_deactivation_feedback_form ) {
+    if ($show_deactivation_feedback_form) {
         $reasons = $VARS['reasons'];
 
-        foreach ( $reasons as $reason ) {
-            $list_item_classes    = 'reason' . ( ! empty( $reason['input_type'] ) ? ' has-input' : '' );
+        foreach ($reasons as $reason) {
+            $list_item_classes    = 'reason' . (! empty($reason['input_type']) ? ' has-input' : '');
 
-            if ( isset( $reason['internal_message'] ) && ! empty( $reason['internal_message'] ) ) {
+            if (isset($reason['internal_message']) && ! empty($reason['internal_message'])) {
                 $list_item_classes .= ' has-internal-message';
                 $reason_internal_message = $reason['internal_message'];
             } else {
                 $reason_internal_message = '';
             }
 
-            $reason_input_type = ( ! empty( $reason['input_type'] ) ? $reason['input_type'] : '' );
-            $reason_input_placeholder = ( ! empty( $reason['input_placeholder'] ) ? $reason['input_placeholder'] : '' );
+            $reason_input_type = (! empty($reason['input_type']) ? $reason['input_type'] : '');
+            $reason_input_placeholder = (! empty($reason['input_placeholder']) ? $reason['input_placeholder'] : '');
 
             $reason_list_item_html = <<< HTML
                 <li class="{$list_item_classes}"
@@ -58,42 +58,42 @@ HTML;
             $reasons_list_items_html .= $reason_list_item_html;
         }
 
-        if ( $is_anonymous ) {
+        if ($is_anonymous) {
             $anonymous_feedback_checkbox_html = sprintf(
                 '<label class="anonymous-feedback-label"><input type="checkbox" class="anonymous-feedback-checkbox"> %s</label>',
-                fs_esc_html_inline( 'Anonymous feedback', 'anonymous-feedback', $slug )
+                fs_esc_html_inline('Anonymous feedback', 'anonymous-feedback', $slug)
             );
         }
     }
 
-	// Aliases.
-	$deactivate_text = fs_text_inline( 'Deactivate', 'deactivate', $slug );
-	$theme_text      = fs_text_inline( 'Theme', 'theme', $slug );
-	$activate_x_text = fs_text_inline( 'Activate %s', 'activate-x', $slug );
+    // Aliases.
+    $deactivate_text = fs_text_inline('Deactivate', 'deactivate', $slug);
+    $theme_text      = fs_text_inline('Theme', 'theme', $slug);
+    $activate_x_text = fs_text_inline('Activate %s', 'activate-x', $slug);
 
-	fs_enqueue_local_style( 'fs_dialog_boxes', '/admin/dialog-boxes.css' );
+    fs_enqueue_local_style('fs_dialog_boxes', '/admin/dialog-boxes.css');
 
-    if ( ! empty( $subscription_cancellation_dialog_box_template_params ) ) {
-        fs_require_template( 'forms/subscription-cancellation.php', $subscription_cancellation_dialog_box_template_params );
+    if (! empty($subscription_cancellation_dialog_box_template_params)) {
+        fs_require_template('forms/subscription-cancellation.php', $subscription_cancellation_dialog_box_template_params);
     }
 ?>
 <script type="text/javascript">
 (function ($) {
-	var reasonsHtml                    = <?php echo json_encode( $reasons_list_items_html ) ?>,
+	var reasonsHtml                    = <?php echo json_encode($reasons_list_items_html) ?>,
 	    modalHtml                      =
-		    '<div class="fs-modal fs-modal-deactivation-feedback<?php echo empty( $confirmation_message ) ? ' no-confirmation-message' : ''; ?>">'
+		    '<div class="fs-modal fs-modal-deactivation-feedback<?php echo empty($confirmation_message) ? ' no-confirmation-message' : ''; ?>">'
 		    + '	<div class="fs-modal-dialog">'
 		    + '		<div class="fs-modal-header">'
-		    + '		    <h4><?php fs_esc_attr_echo_inline( 'Quick Feedback', 'quick-feedback' , $slug ) ?></h4>'
+		    + '		    <h4><?php fs_esc_attr_echo_inline('Quick Feedback', 'quick-feedback', $slug) ?></h4>'
 		    + '		</div>'
 		    + '		<div class="fs-modal-body">'
 		    + '			<div class="fs-modal-panel" data-panel-id="confirm"><p><?php echo $confirmation_message; ?></p></div>'
-		    + '			<div class="fs-modal-panel active" data-panel-id="reasons"><h3><strong><?php echo esc_js( sprintf( fs_text_inline( 'If you have a moment, please let us know why you are %s', 'deactivation-share-reason' , $slug ), ( $fs->is_plugin() ? fs_text_inline( 'deactivating', 'deactivating', $slug ) : fs_text_inline( 'switching', 'switching', $slug ) ) ) ) ?>:</strong></h3><ul id="reasons-list">' + reasonsHtml + '</ul></div>'
+		    + '			<div class="fs-modal-panel active" data-panel-id="reasons"><h3><strong><?php echo esc_js(sprintf(fs_text_inline('If you have a moment, please let us know why you are %s', 'deactivation-share-reason', $slug), ($fs->is_plugin() ? fs_text_inline('deactivating', 'deactivating', $slug) : fs_text_inline('switching', 'switching', $slug)))) ?>:</strong></h3><ul id="reasons-list">' + reasonsHtml + '</ul></div>'
 		    + '		</div>'
 		    + '		<div class="fs-modal-footer">'
 			+ '         <?php echo $anonymous_feedback_checkbox_html ?>'
 		    + '			<a href="#" class="button button-secondary button-deactivate"></a>'
-		    + '			<a href="#" class="button button-secondary button-close"><?php fs_esc_js_echo_inline( 'Cancel', 'cancel', $slug ) ?></a>'
+		    + '			<a href="#" class="button button-secondary button-close"><?php fs_esc_js_echo_inline('Cancel', 'cancel', $slug) ?></a>'
 		    + '		</div>'
 		    + '	</div>'
 		    + '</div>',
@@ -101,18 +101,18 @@ HTML;
 	    selectedReasonID               = false,
 	    redirectLink                   = '',
 		$anonymousFeedback             = $modal.find( '.anonymous-feedback-label' ),
-		isAnonymous                    = <?php echo ( $is_anonymous ? 'true' : 'false' ); ?>,
+		isAnonymous                    = <?php echo($is_anonymous ? 'true' : 'false'); ?>,
 		otherReasonID                  = <?php echo Freemius::REASON_OTHER; ?>,
 		dontShareDataReasonID          = <?php echo Freemius::REASON_DONT_LIKE_TO_SHARE_MY_INFORMATION; ?>,
         deleteThemeUpdateData          = <?php echo $fs->is_theme() && $fs->is_premium() && ! $fs->has_any_active_valid_license() ? 'true' : 'false' ?>,
         $subscriptionCancellationModal = $( '.fs-modal-subscription-cancellation-<?php echo $fs->get_id() ?>' ),
-        showDeactivationFeedbackForm   = <?php echo ( $show_deactivation_feedback_form ? 'true' : 'false' ) ?>,
+        showDeactivationFeedbackForm   = <?php echo($show_deactivation_feedback_form ? 'true' : 'false') ?>,
         $body                          = $( 'body' );
 
 	$modal.appendTo( $body );
 
 	if ( 0 !== $subscriptionCancellationModal.length ) {
-        $subscriptionCancellationModal.on( '<?php echo $fs->get_action_tag( 'subscription_cancellation_action' ) ?>', function( evt, cancelSubscription ) {
+        $subscriptionCancellationModal.on( '<?php echo $fs->get_action_tag('subscription_cancellation_action') ?>', function( evt, cancelSubscription ) {
             var shouldDeactivateModule = ( $modal.hasClass( 'no-confirmation-message' ) && ! showDeactivationFeedbackForm );
 
             if ( false === cancelSubscription ) {
@@ -130,16 +130,16 @@ HTML;
 
                 <?php
                 $subscription_cancellation_context = $fs->is_paid_trial() ?
-                    fs_text_inline( 'trial', 'trial', $slug ) :
-                    fs_text_inline( 'subscription', 'subscription', $slug );
+                    fs_text_inline('trial', 'trial', $slug) :
+                    fs_text_inline('subscription', 'subscription', $slug);
                 ?>
 
                 $.ajax({
                     url       : ajaxurl,
                     method    : 'POST',
                     data      : {
-                        action   : '<?php echo $fs->get_ajax_action( 'cancel_subscription_or_trial' ) ?>',
-                        security : '<?php echo $fs->get_ajax_security( 'cancel_subscription_or_trial' ) ?>',
+                        action   : '<?php echo $fs->get_ajax_action('cancel_subscription_or_trial') ?>',
+                        security : '<?php echo $fs->get_ajax_security('cancel_subscription_or_trial') ?>',
                         module_id: '<?php echo $fs->get_id() ?>'
                     },
                     beforeSend: function() {
@@ -147,8 +147,8 @@ HTML;
 
                         $subscriptionCancellationModal.find( '.fs-modal-footer .button' ).addClass( 'disabled' );
                         $subscriptionCancellationModal.find( '.fs-modal-footer .button-primary' ).text( '<?php echo esc_js(
-                            sprintf( fs_text_inline( 'Cancelling %s...', 'cancelling-x' , $slug ), $subscription_cancellation_context )
-                        ) ?>' );
+                    sprintf(fs_text_inline('Cancelling %s...', 'cancelling-x', $slug), $subscription_cancellation_context)
+                ) ?>' );
                     },
                     success: function( result ) {
                         if ( result.success ) {
@@ -167,10 +167,10 @@ HTML;
                             $errorMessage.show();
 
                             $subscriptionCancellationModal.find( '.fs-modal-footer .button' ).removeClass( 'disabled' );
-                            $subscriptionCancellationModal.find( '.fs-modal-footer .button-primary' ).html( <?php echo json_encode( sprintf(
-                                fs_text_inline( 'Cancel %s & Proceed', 'cancel-x-and-proceed', $slug ),
-                                ucfirst( $subscription_cancellation_context )
-                            ) ) ?> );
+                            $subscriptionCancellationModal.find( '.fs-modal-footer .button-primary' ).html( <?php echo json_encode(sprintf(
+                            fs_text_inline('Cancel %s & Proceed', 'cancel-x-and-proceed', $slug),
+                            ucfirst($subscription_cancellation_context)
+                        )) ?> );
                         }
                     }
                 });
@@ -198,19 +198,19 @@ HTML;
 		});
 
 		<?php
-        if ( ! $fs->is_plugin() ) {
-		/**
-		 * For "theme" module type, the modal is shown when the current user clicks on
-		 * the "Activate" button of any other theme. The "Activate" button is actually
-		 * a link to the "Themes" page (/wp-admin/themes.php) containing query params
-		 * that tell WordPress to deactivate the current theme and activate a different theme.
-		 *
-		 * @author Leo Fajardo (@leorw)
-		 * @since 1.2.2
-		 *        
-		 * @since 1.2.2.7 Don't trigger the deactivation feedback form if activating the premium version of the theme.
-		 */
-		?>
+        if (! $fs->is_plugin()) {
+            /**
+             * For "theme" module type, the modal is shown when the current user clicks on
+             * the "Activate" button of any other theme. The "Activate" button is actually
+             * a link to the "Themes" page (/wp-admin/themes.php) containing query params
+             * that tell WordPress to deactivate the current theme and activate a different theme.
+             *
+             * @author Leo Fajardo (@leorw)
+             * @since 1.2.2
+             *
+             * @since 1.2.2.7 Don't trigger the deactivation feedback form if activating the premium version of the theme.
+             */
+        ?>
 		$('body').on('click', '.theme-browser .theme:not([data-slug=<?php echo $fs->get_premium_slug() ?>]) .theme-actions .button.activate', function (evt) {
 			evt.preventDefault();
 
@@ -227,7 +227,7 @@ HTML;
             }
 		});
 		<?php
-		} ?>
+        } ?>
 
 		$modal.on('input propertychange', '.reason-input input', function () {
 			if (!isOtherReasonSelected()) {
@@ -287,8 +287,8 @@ HTML;
                             url       : ajaxurl,
                             method    : 'POST',
                             data      : {
-                                action   : '<?php echo $fs->get_ajax_action( 'delete_theme_update_data' ) ?>',
-                                security : '<?php echo $fs->get_ajax_security( 'delete_theme_update_data' ) ?>',
+                                action   : '<?php echo $fs->get_ajax_action('delete_theme_update_data') ?>',
+                                security : '<?php echo $fs->get_ajax_security('delete_theme_update_data') ?>',
                                 module_id: '<?php echo $fs->get_id() ?>'
                             },
                             beforeSend: function() {
@@ -316,8 +316,8 @@ HTML;
 					url       : ajaxurl,
 					method    : 'POST',
 					data      : {
-						action      : '<?php echo $fs->get_ajax_action( 'submit_uninstall_reason' ) ?>',
-						security    : '<?php echo $fs->get_ajax_security( 'submit_uninstall_reason' ) ?>',
+						action      : '<?php echo $fs->get_ajax_action('submit_uninstall_reason') ?>',
+						security    : '<?php echo $fs->get_ajax_security('submit_uninstall_reason') ?>',
 						module_id   : '<?php echo $fs->get_id() ?>',
 						reason_id   : $radio.val(),
 						reason_info : userReason,
@@ -365,12 +365,12 @@ HTML;
 
 			$modal.find('.reason-input').remove();
 			$modal.find( '.internal-message' ).hide();
-			$modal.find('.button-deactivate').html('<?php echo esc_js( sprintf(
-				fs_text_inline( 'Submit & %s', 'deactivation-modal-button-submit' , $slug ),
-				$fs->is_plugin() ?
-					$deactivate_text :
-					sprintf( $activate_x_text, $theme_text )
-			) ) ?>');
+			$modal.find('.button-deactivate').html('<?php echo esc_js(sprintf(
+            fs_text_inline('Submit & %s', 'deactivation-modal-button-submit', $slug),
+            $fs->is_plugin() ?
+                    $deactivate_text :
+                    sprintf($activate_x_text, $theme_text)
+        )) ?>');
 
 			enableDeactivateButton();
 
@@ -387,7 +387,7 @@ HTML;
 				_parent.find('input, textarea').attr('placeholder', inputPlaceholder).focus();
 
 				if (isOtherReasonSelected()) {
-					showMessage('<?php echo esc_js( fs_text_inline( 'Kindly tell us the reason so we can improve.', 'ask-for-reason-message' , $slug ) ); ?>');
+					showMessage('<?php echo esc_js(fs_text_inline('Kindly tell us the reason so we can improve.', 'ask-for-reason-message', $slug)); ?>');
 					disableDeactivateButton();
 				}
 			}
@@ -511,19 +511,19 @@ HTML;
 
         // Reset the deactivate button's text.
         if ( 'confirm' === getCurrentPanel() ) {
-            $deactivateButton.text( <?php echo json_encode( sprintf(
-                fs_text_inline( 'Yes - %s', 'deactivation-modal-button-confirm', $slug ),
+            $deactivateButton.text( <?php echo json_encode(sprintf(
+                fs_text_inline('Yes - %s', 'deactivation-modal-button-confirm', $slug),
                 $fs->is_plugin() ?
                     $deactivate_text :
-                    sprintf( $activate_x_text, $theme_text )
-            ) ) ?> );
+                    sprintf($activate_x_text, $theme_text)
+            )) ?> );
 		} else {
-            $deactivateButton.html( <?php echo json_encode( sprintf(
-				fs_text_inline('Skip & %s', 'skip-and-x', $slug ),
-				$fs->is_plugin() ?
-					$deactivate_text :
-					sprintf( $activate_x_text, $theme_text )
-			) ) ?> );
+            $deactivateButton.html( <?php echo json_encode(sprintf(
+                fs_text_inline('Skip & %s', 'skip-and-x', $slug),
+                $fs->is_plugin() ?
+                    $deactivate_text :
+                    sprintf($activate_x_text, $theme_text)
+            )) ?> );
 		}
 	}
 
diff --git a/freemius/templates/forms/deactivation/index.php b/freemius/templates/forms/deactivation/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/templates/forms/deactivation/index.php
+++ b/freemius/templates/forms/deactivation/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/templates/forms/deactivation/retry-skip.php b/freemius/templates/forms/deactivation/retry-skip.php
index 17321029d797921224d59afd1a1bfe13618f0671..85d214db83db457118f20407e7b722ddb0cf1d68 100644
--- a/freemius/templates/forms/deactivation/retry-skip.php
+++ b/freemius/templates/forms/deactivation/retry-skip.php
@@ -6,19 +6,19 @@
      * @since       1.2.0
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
     /**
      * @var array $VARS
      */
-    $fs   = freemius( $VARS['id'] );
+    $fs   = freemius($VARS['id']);
     $slug = $fs->get_slug();
 
-    $skip_url                    = fs_nonce_url( $fs->_get_admin_page_url( '', array( 'fs_action' => $fs->get_unique_affix() . '_skip_activation' ) ), $fs->get_unique_affix() . '_skip_activation' );
-    $skip_text                   = strtolower( fs_text_x_inline( 'Skip', 'verb', 'skip', $slug ) );
-    $use_plugin_anonymously_text = fs_text_inline( 'Click here to use the plugin anonymously', 'click-here-to-use-plugin-anonymously', $slug );
+    $skip_url                    = fs_nonce_url($fs->_get_admin_page_url('', array( 'fs_action' => $fs->get_unique_affix() . '_skip_activation' )), $fs->get_unique_affix() . '_skip_activation');
+    $skip_text                   = strtolower(fs_text_x_inline('Skip', 'verb', 'skip', $slug));
+    $use_plugin_anonymously_text = fs_text_inline('Click here to use the plugin anonymously', 'click-here-to-use-plugin-anonymously', $slug);
 
-    echo sprintf( fs_text_inline( "You might have missed it, but you don't have to share any data and can just %s the opt-in.", 'dont-have-to-share-any-data', $slug ), "<a href='{$skip_url}'>{$skip_text}</a>" )
-            . " <a href='{$skip_url}' class='button button-small button-secondary'>{$use_plugin_anonymously_text}</a>";
\ No newline at end of file
+    echo sprintf(fs_text_inline("You might have missed it, but you don't have to share any data and can just %s the opt-in.", 'dont-have-to-share-any-data', $slug), "<a href='{$skip_url}'>{$skip_text}</a>")
+            . " <a href='{$skip_url}' class='button button-small button-secondary'>{$use_plugin_anonymously_text}</a>";
diff --git a/freemius/templates/forms/index.php b/freemius/templates/forms/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/templates/forms/index.php
+++ b/freemius/templates/forms/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/templates/forms/license-activation.php b/freemius/templates/forms/license-activation.php
index facc12a3f856cf52981640ee162baa3b8f5d422d..ea284ad1884f4c83629d9fb4665ad2fd9e172463 100644
--- a/freemius/templates/forms/license-activation.php
+++ b/freemius/templates/forms/license-activation.php
@@ -1,52 +1,52 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.1.9
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	/**
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.1.9
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    /**
      * @var array $VARS
      *
-	 * @var Freemius $fs
-	 */
-	$fs           = freemius( $VARS['id'] );
-	$slug         = $fs->get_slug();
+     * @var Freemius $fs
+     */
+    $fs           = freemius($VARS['id']);
+    $slug         = $fs->get_slug();
     $unique_affix = $fs->get_unique_affix();
 
-	$cant_find_license_key_text = fs_text_inline( "Can't find your license key?", 'cant-find-license-key', $slug );
-	$message_above_input_field  = fs_text_inline( 'Please enter the license key that you received in the email right after the purchase:', 'activate-license-message', $slug );
-	$message_below_input_field  = '';
+    $cant_find_license_key_text = fs_text_inline("Can't find your license key?", 'cant-find-license-key', $slug);
+    $message_above_input_field  = fs_text_inline('Please enter the license key that you received in the email right after the purchase:', 'activate-license-message', $slug);
+    $message_below_input_field  = '';
 
-	$header_title = $fs->is_free_plan() ?
-		fs_text_inline( 'Activate License', 'activate-license', $slug ) :
-		fs_text_inline( 'Update License', 'update-license', $slug );
+    $header_title = $fs->is_free_plan() ?
+        fs_text_inline('Activate License', 'activate-license', $slug) :
+        fs_text_inline('Update License', 'update-license', $slug);
 
-	if ( $fs->is_registered() ) {
-		$activate_button_text = $header_title;
-	} else {
-		$freemius_site_url = $fs->has_paid_plan() ?
-			'https://freemius.com/' :
-			// Insights platform information.
-			$fs->get_usage_tracking_terms_url();
+    if ($fs->is_registered()) {
+        $activate_button_text = $header_title;
+    } else {
+        $freemius_site_url = $fs->has_paid_plan() ?
+            'https://freemius.com/' :
+            // Insights platform information.
+            $fs->get_usage_tracking_terms_url();
 
-		$freemius_link = '<a href="' . $freemius_site_url . '" target="_blank" rel="noopener" tabindex="0">freemius.com</a>';
+        $freemius_link = '<a href="' . $freemius_site_url . '" target="_blank" rel="noopener" tabindex="0">freemius.com</a>';
 
-		$message_below_input_field = sprintf(
-			fs_text_inline( 'The %1$s will be periodically sending data to %2$s to check for security and feature updates, and verify the validity of your license.', 'license-sync-disclaimer', $slug ),
-			$fs->get_module_label( true ),
-			$freemius_link
-		);
+        $message_below_input_field = sprintf(
+            fs_text_inline('The %1$s will be periodically sending data to %2$s to check for security and feature updates, and verify the validity of your license.', 'license-sync-disclaimer', $slug),
+            $fs->get_module_label(true),
+            $freemius_link
+        );
 
-		$activate_button_text = fs_text_inline( 'Agree & Activate License', 'agree-activate-license', $slug );
-	}
+        $activate_button_text = fs_text_inline('Agree & Activate License', 'agree-activate-license', $slug);
+    }
 
-	$license_key_text = fs_text_inline( 'License key', 'license-key' , $slug );
+    $license_key_text = fs_text_inline('License key', 'license-key', $slug);
 
     $is_network_activation   = (
         $fs->is_network_active() &&
@@ -56,46 +56,46 @@
     $network_activation_html = '';
 
     $sites_details = array();
-    if ( $is_network_activation ) {
+    if ($is_network_activation) {
         $all_sites = Freemius::get_sites();
 
-        foreach ( $all_sites as $site ) {
-            $site_details = $fs->get_site_info( $site );
+        foreach ($all_sites as $site) {
+            $site_details = $fs->get_site_info($site);
 
-            $blog_id = Freemius::get_site_blog_id( $site );
+            $blog_id = Freemius::get_site_blog_id($site);
             $install = $fs->get_install_by_blog_id($blog_id);
 
-            if ( is_object( $install ) && FS_Plugin_License::is_valid_id( $install->license_id ) ) {
+            if (is_object($install) && FS_Plugin_License::is_valid_id($install->license_id)) {
                 $site_details['license_id'] = $install->license_id;
             }
 
             $sites_details[] = $site_details;
         }
 
-        if ( $is_network_activation ) {
+        if ($is_network_activation) {
             $vars = array(
                 'id'                  => $fs->get_id(),
                 'sites'               => $sites_details,
                 'require_license_key' => true
             );
 
-            $network_activation_html = fs_get_template( 'partials/network-activation.php', $vars );
+            $network_activation_html = fs_get_template('partials/network-activation.php', $vars);
         }
     }
 
     $premium_licenses   = $fs->get_available_premium_licenses();
     $available_licenses = array();
-    foreach ( $premium_licenses as $premium_license ) {
+    foreach ($premium_licenses as $premium_license) {
         $activations_left = $premium_license->left();
-        if ( ! ( $activations_left > 0 ) ) {
+        if (! ($activations_left > 0)) {
             continue;
         }
 
         $available_licenses[ $activations_left . '_' . $premium_license->id ] = $premium_license;
     }
 
-    $total_available_licenses = count( $available_licenses );
-    if ( $total_available_licenses > 0 ) {
+    $total_available_licenses = count($available_licenses);
+    if ($total_available_licenses > 0) {
         $license_input_html = <<< HTML
         <div class="fs-license-options-container">
             <table>
@@ -105,25 +105,26 @@
                         <td>
 HTML;
 
-        if ( $total_available_licenses > 1 ) {
+        if ($total_available_licenses > 1) {
             // Sort the licenses by number of activations left in descending order.
-            krsort( $available_licenses );
+            krsort($available_licenses);
 
             $license_input_html .= '<select class="fs-licenses">';
 
             /**
              * @var FS_Plugin_License $license
              */
-            foreach ( $available_licenses as $license ) {
-                $plan = $fs->_get_plan_by_id( $license->plan_id );
+            foreach ($available_licenses as $license) {
+                $plan = $fs->_get_plan_by_id($license->plan_id);
 
                 $label = sprintf(
                     "%s-Site %s License - %s",
-                    ( 1 == $license->quota ?
+                    (
+                        1 == $license->quota ?
                         'Single' :
-                        ( $license->is_unlimited() ? 'Unlimited' : $license->quota )
+                        ($license->is_unlimited() ? 'Unlimited' : $license->quota)
                     ),
-                    ( is_object( $plan ) ? $plan->title : '' ),
+                    (is_object($plan) ? $plan->title : ''),
                     $license->get_html_escaped_masked_secret_key()
                 );
 
@@ -132,7 +133,7 @@ HTML;
 
             $license_input_html .= '</select>';
         } else {
-            $available_licenses = array_values( $available_licenses );
+            $available_licenses = array_values($available_licenses);
 
             /**
              * @var FS_Plugin_License $available_license
@@ -140,11 +141,12 @@ HTML;
             $available_license  = $available_licenses[0];
             $value              = sprintf(
                 "%s-Site %s License - %s",
-                ( 1 == $available_license->quota ?
+                (
+                    1 == $available_license->quota ?
                     'Single' :
-                    ( $available_license->is_unlimited() ? 'Unlimited' : $available_license->quota )
+                    ($available_license->is_unlimited() ? 'Unlimited' : $available_license->quota)
                 ),
-                $fs->_get_plan_by_id( $available_license->plan_id )->title,
+                $fs->_get_plan_by_id($available_license->plan_id)->title,
                 $available_license->get_html_escaped_masked_secret_key()
             );
 
@@ -180,16 +182,16 @@ HTML;
         $license_input_html = "<input class='fs-license-key' type='text' placeholder='{$license_key_text}' tabindex='1' />";
     }
 
-    $ownership_change_option_text = fs_text_inline( "Associate with the license owner's account.", 'associate-account-with-license-owner', $slug );
+    $ownership_change_option_text = fs_text_inline("Associate with the license owner's account.", 'associate-account-with-license-owner', $slug);
     $ownership_change_option_html = "<div class='ownership-change-option-container' style='display: none'><label><input type='checkbox' /> <strong>{$ownership_change_option_text}</strong></label></div>";
 
-	/**
-	 * IMPORTANT:
-	 *  DO NOT ADD MAXLENGTH OR LIMIT THE LICENSE KEY LENGTH SINCE
-	 *  WE DO WANT TO ALLOW INPUT OF LONGER KEYS (E.G. WooCommerce Keys)
-	 *  FOR MIGRATED MODULES.
-	 */
-	$modal_content_html = <<< HTML
+    /**
+     * IMPORTANT:
+     *  DO NOT ADD MAXLENGTH OR LIMIT THE LICENSE KEY LENGTH SINCE
+     *  WE DO WANT TO ALLOW INPUT OF LONGER KEYS (E.G. WooCommerce Keys)
+     *  FOR MIGRATED MODULES.
+     */
+    $modal_content_html = <<< HTML
 	<div class="notice notice-error inline license-activation-message"><p></p></div>
 	<p>{$message_above_input_field}</p>
 	{$license_input_html}
@@ -206,9 +208,9 @@ HTML;
      * @author Leo Fajardo (@leorw)
      * @since 2.3.2
      */
-	$is_user_change_supported = ( ! $fs->is_addon() || ! $fs->get_parent_instance()->has_active_valid_license() );
+    $is_user_change_supported = (! $fs->is_addon() || ! $fs->get_parent_instance()->has_active_valid_license());
 
-	fs_enqueue_local_style( 'fs_dialog_boxes', '/admin/dialog-boxes.css' );
+    fs_enqueue_local_style('fs_dialog_boxes', '/admin/dialog-boxes.css');
 ?>
 <script type="text/javascript">
 (function( $ ) {
@@ -219,14 +221,14 @@ HTML;
 				+ '	<div class="fs-modal-dialog">'
 				+ '		<div class="fs-modal-header">'
 				+ '		    <h4><?php echo esc_js($header_title) ?></h4>'
-				+ '         <a href="!#" class="fs-close"><i class="dashicons dashicons-no" title="<?php echo esc_js( fs_text_x_inline( 'Dismiss', 'as close a window', 'dismiss', $slug ) ) ?>"></i></a>'
+				+ '         <a href="!#" class="fs-close"><i class="dashicons dashicons-no" title="<?php echo esc_js(fs_text_x_inline('Dismiss', 'as close a window', 'dismiss', $slug)) ?>"></i></a>'
 				+ '		</div>'
 				+ '		<div class="fs-modal-body">'
 				+ '			<div class="fs-modal-panel active">' + modalContentHtml + '</div>'
 				+ '		</div>'
 				+ '		<div class="fs-modal-footer">'
-				+ '			<button class="button button-secondary button-close" tabindex="4"><?php fs_esc_js_echo_inline( 'Cancel', 'cancel', $slug ) ?></button>'
-				+ '			<button class="button button-primary button-activate-license"  tabindex="3"><?php echo esc_js( $activate_button_text ) ?></button>'
+				+ '			<button class="button button-secondary button-close" tabindex="4"><?php fs_esc_js_echo_inline('Cancel', 'cancel', $slug) ?></button>'
+				+ '			<button class="button button-primary button-activate-license"  tabindex="3"><?php echo esc_js($activate_button_text) ?></button>'
 				+ '		</div>'
 				+ '	</div>'
 				+ '</div>',
@@ -254,7 +256,7 @@ HTML;
             hasLicensesDropdown  = ( $licensesDropdown.length > 0 ),
             hasLicenseTypes      = ( $licenseTypes.length > 0 ),
             maxSitesListHeight   = null,
-            totalSites           = <?php echo count( $sites_details ) ?>,
+            totalSites           = <?php echo count($sites_details) ?>,
             singleBlogID         = null;
 
         var
@@ -266,7 +268,7 @@ HTML;
              */
             resetLoadingMode = function () {
                 // Reset loading mode.
-                $activateLicenseButton.text( <?php echo json_encode( $activate_button_text ) ?> );
+                $activateLicenseButton.text( <?php echo json_encode($activate_button_text) ?> );
                 $activateLicenseButton.prop( 'disabled', false );
                 $( document.body ).css( { 'cursor': 'auto' } );
                 $( '.fs-loading' ).removeClass( 'fs-loading' );
@@ -338,14 +340,14 @@ HTML;
 
                 $activateLicenseButton.addClass( 'fs-loading' );
                 $activateLicenseButton.attr( 'disabled', 'disabled' );
-                $activateLicenseButton.html( '<?php fs_esc_js_echo_inline( 'Please wait', 'please-wait', $slug ) ?>...' );
+                $activateLicenseButton.html( '<?php fs_esc_js_echo_inline('Please wait', 'please-wait', $slug) ?>...' );
 
                 $.ajax( {
                     url    : ajaxurl,
                     method : 'POST',
                     data   : {
-                        action     : '<?php echo $fs->get_ajax_action( 'fetch_is_marketing_required_flag_value' ) ?>',
-                        security   : '<?php echo $fs->get_ajax_security( 'fetch_is_marketing_required_flag_value' ) ?>',
+                        action     : '<?php echo $fs->get_ajax_action('fetch_is_marketing_required_flag_value') ?>',
+                        security   : '<?php echo $fs->get_ajax_security('fetch_is_marketing_required_flag_value') ?>',
                         license_key: licenseKey,
                         module_id  : '<?php echo $fs->get_id() ?>'
                     },
@@ -562,8 +564,8 @@ HTML;
 				}
 
                 var data = {
-                    action     : '<?php echo $fs->get_ajax_action( 'activate_license' ) ?>',
-                    security   : '<?php echo $fs->get_ajax_security( 'activate_license' ) ?>',
+                    action     : '<?php echo $fs->get_ajax_action('activate_license') ?>',
+                    security   : '<?php echo $fs->get_ajax_security('activate_license') ?>',
                     license_key: licenseKey,
                     module_id  : '<?php echo $fs->get_id() ?>'
                 };
@@ -611,7 +613,7 @@ HTML;
 					method: 'POST',
                     data: data,
 					beforeSend: function () {
-						$activateLicenseButton.text( '<?php fs_esc_js_echo_inline( 'Activating license', 'activating-license', $slug ) ?>...' );
+						$activateLicenseButton.text( '<?php fs_esc_js_echo_inline('Activating license', 'activating-license', $slug) ?>...' );
 					},
 					success: function( result ) {
 						var resultObj = $.parseJSON( result );
@@ -753,7 +755,7 @@ HTML;
             showSites( true );
 
             var
-                activateLicenseCheckboxLabel = '<?php fs_esc_js_echo_inline( 'Choose up to %s site(s) to activate the license on.', 'choose-up-to-n-sites-to-activate-the-license-on', $slug ) ?>';
+                activateLicenseCheckboxLabel = '<?php fs_esc_js_echo_inline('Choose up to %s site(s) to activate the license on.', 'choose-up-to-n-sites-to-activate-the-license-on', $slug) ?>';
 
             activateLicenseCheckboxLabel = activateLicenseCheckboxLabel.replace( '%s', '<span data-left="' + activationsLeft + '" class="activations-left">' + activationsLeft + '</span>' );
 
@@ -774,7 +776,7 @@ HTML;
          * @since 2.0.0
          */
         function resetActivateLicenseCheckboxLabel() {
-            var activateLicenseCheckboxLabel = '<?php fs_esc_js_echo_inline( 'Activate license on all sites in the network.', 'activate-license-on-all-sites-in-the-network', $slug ) ?>';
+            var activateLicenseCheckboxLabel = '<?php fs_esc_js_echo_inline('Activate license on all sites in the network.', 'activate-license-on-all-sites-in-the-network', $slug) ?>';
             $applyOnAllSites.parent().find( 'span' ).text( activateLicenseCheckboxLabel );
         }
 
@@ -814,7 +816,7 @@ HTML;
                 $singleInstallDetails.prev().data( 'blog-id' ) :
                 null;
 
-            <?php if ( $fs->apply_filters( 'enable_per_site_activation', true ) ) : ?>
+            <?php if ($fs->apply_filters('enable_per_site_activation', true)) : ?>
             $multisiteOptionsContainer.toggle( isNetworkActivation && ! isSingleSiteActivation );
             <?php endif ?>
 
@@ -841,7 +843,7 @@ HTML;
 
 		function resetActivateLicenseButton() {
 			enableActivateLicenseButton();
-			$activateLicenseButton.text( <?php echo json_encode( $activate_button_text ) ?> );
+			$activateLicenseButton.text( <?php echo json_encode($activate_button_text) ?> );
 		}
 
 		function resetModal() {
diff --git a/freemius/templates/forms/optout.php b/freemius/templates/forms/optout.php
index 4867a8a73af6133224dfe98d62757c6ec9dfdf98..4d9e1461010d1e4132427e29b6148b371900941c 100644
--- a/freemius/templates/forms/optout.php
+++ b/freemius/templates/forms/optout.php
@@ -1,102 +1,102 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.2.1.5
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	/**
-	 * @var array $VARS
-	 * @var Freemius $fs
-	 */
-	$fs   = freemius( $VARS['id'] );
-	$slug = $fs->get_slug();
-
-	$action = $fs->is_tracking_allowed() ?
-		'stop_tracking' :
-		'allow_tracking';
-
-	$reconnect_url = $fs->get_activation_url( array(
-		'nonce'     => wp_create_nonce( $fs->get_unique_affix() . '_reconnect' ),
-		'fs_action' => ( $fs->get_unique_affix() . '_reconnect' ),
-	) );
-
-	$plugin_title                   = "<strong>{$fs->get_plugin()->title}</strong>";
-	$opt_out_text                   = fs_text_x_inline( 'Opt Out', 'verb', 'opt-out', $slug );
-	$opt_in_text                    = fs_text_x_inline( 'Opt In', 'verb', 'opt-in', $slug );
-
-	if ( $fs->is_premium() ) {
-		$opt_in_message_appreciation = fs_text_inline( 'Connectivity to the licensing engine was successfully re-established. Automatic security & feature updates are now available through the WP Admin Dashboard.', 'premium-opt-in-message-appreciation', $slug );
-
-		$opt_out_message_subtitle       = sprintf( fs_text_inline( 'Warning: Opting out will block automatic updates', 'premium-opt-out-message-appreciation', $slug ), $fs->get_module_type() );
-		$opt_out_message_usage_tracking = sprintf( fs_text_inline( 'Ongoing connectivity with the licensing engine is essential for receiving automatic security & feature updates of the paid product. To receive these updates, data like your license key, %1$s version, and WordPress version, is periodically sent to the server to check for updates. By opting out, you understand that your site won\'t receive automatic updates for %2$s from within the WP Admin Dashboard. This can put your site at risk, and we highly recommend to keep this connection active. If you do choose to opt-out, you\'ll need to check for %1$s updates and install them manually.', 'premium-opt-out-message-usage-tracking', $slug ), $fs->get_module_type(), $plugin_title );
-
-		$primary_cta_label = fs_text_inline( 'I\'d like to keep automatic updates', 'premium-opt-out-cancel', $slug );
-	} else {
-		$opt_in_message_appreciation = sprintf( fs_text_inline( 'We appreciate your help in making the %s better by letting us track some usage data.', 'opt-in-message-appreciation', $slug ), $fs->get_module_type() );
-
-		$opt_out_message_subtitle       = $opt_in_message_appreciation;
-		$opt_out_message_usage_tracking = sprintf( fs_text_inline( "Usage tracking is done in the name of making %s better. Making a better user experience, prioritizing new features, and more good things. We'd really appreciate if you'll reconsider letting us continue with the tracking.", 'opt-out-message-usage-tracking', $slug ), $plugin_title );
-		$primary_cta_label              = fs_text_inline( 'On second thought - I want to continue helping', 'opt-out-cancel', $slug );
-	}
-
-	$opt_out_message_clicking_opt_out = sprintf(
-		fs_text_inline( 'By clicking "Opt Out", we will no longer be sending any data from %s to %s.', 'opt-out-message-clicking-opt-out', $slug ),
-		$plugin_title,
-		sprintf(
-			'<a href="%s" target="_blank" rel="noopener">%s</a>',
-			'https://freemius.com',
-			'freemius.com'
-		)
-	);
-
-	$admin_notice_params = array(
-		'id'      => '',
-		'slug'    => $fs->get_id(),
-		'type'    => 'success',
-		'sticky'  => false,
-		'plugin'  => $fs->get_plugin()->title,
-		'message' => $opt_in_message_appreciation
-	);
-
-	$admin_notice_html = fs_get_template( 'admin-notice.php', $admin_notice_params );
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.2.1.5
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    /**
+     * @var array $VARS
+     * @var Freemius $fs
+     */
+    $fs   = freemius($VARS['id']);
+    $slug = $fs->get_slug();
+
+    $action = $fs->is_tracking_allowed() ?
+        'stop_tracking' :
+        'allow_tracking';
+
+    $reconnect_url = $fs->get_activation_url(array(
+        'nonce'     => wp_create_nonce($fs->get_unique_affix() . '_reconnect'),
+        'fs_action' => ($fs->get_unique_affix() . '_reconnect'),
+    ));
+
+    $plugin_title                   = "<strong>{$fs->get_plugin()->title}</strong>";
+    $opt_out_text                   = fs_text_x_inline('Opt Out', 'verb', 'opt-out', $slug);
+    $opt_in_text                    = fs_text_x_inline('Opt In', 'verb', 'opt-in', $slug);
+
+    if ($fs->is_premium()) {
+        $opt_in_message_appreciation = fs_text_inline('Connectivity to the licensing engine was successfully re-established. Automatic security & feature updates are now available through the WP Admin Dashboard.', 'premium-opt-in-message-appreciation', $slug);
+
+        $opt_out_message_subtitle       = sprintf(fs_text_inline('Warning: Opting out will block automatic updates', 'premium-opt-out-message-appreciation', $slug), $fs->get_module_type());
+        $opt_out_message_usage_tracking = sprintf(fs_text_inline('Ongoing connectivity with the licensing engine is essential for receiving automatic security & feature updates of the paid product. To receive these updates, data like your license key, %1$s version, and WordPress version, is periodically sent to the server to check for updates. By opting out, you understand that your site won\'t receive automatic updates for %2$s from within the WP Admin Dashboard. This can put your site at risk, and we highly recommend to keep this connection active. If you do choose to opt-out, you\'ll need to check for %1$s updates and install them manually.', 'premium-opt-out-message-usage-tracking', $slug), $fs->get_module_type(), $plugin_title);
+
+        $primary_cta_label = fs_text_inline('I\'d like to keep automatic updates', 'premium-opt-out-cancel', $slug);
+    } else {
+        $opt_in_message_appreciation = sprintf(fs_text_inline('We appreciate your help in making the %s better by letting us track some usage data.', 'opt-in-message-appreciation', $slug), $fs->get_module_type());
+
+        $opt_out_message_subtitle       = $opt_in_message_appreciation;
+        $opt_out_message_usage_tracking = sprintf(fs_text_inline("Usage tracking is done in the name of making %s better. Making a better user experience, prioritizing new features, and more good things. We'd really appreciate if you'll reconsider letting us continue with the tracking.", 'opt-out-message-usage-tracking', $slug), $plugin_title);
+        $primary_cta_label              = fs_text_inline('On second thought - I want to continue helping', 'opt-out-cancel', $slug);
+    }
+
+    $opt_out_message_clicking_opt_out = sprintf(
+        fs_text_inline('By clicking "Opt Out", we will no longer be sending any data from %s to %s.', 'opt-out-message-clicking-opt-out', $slug),
+        $plugin_title,
+        sprintf(
+            '<a href="%s" target="_blank" rel="noopener">%s</a>',
+            'https://freemius.com',
+            'freemius.com'
+        )
+    );
+
+    $admin_notice_params = array(
+        'id'      => '',
+        'slug'    => $fs->get_id(),
+        'type'    => 'success',
+        'sticky'  => false,
+        'plugin'  => $fs->get_plugin()->title,
+        'message' => $opt_in_message_appreciation
+    );
+
+    $admin_notice_html = fs_get_template('admin-notice.php', $admin_notice_params);
 
     $modal_content_html = "
-		<h2" . ( $fs->is_premium() ? ' style="color: red"' : '' ) . ">{$opt_out_message_subtitle}</h2>
+		<h2" . ($fs->is_premium() ? ' style="color: red"' : '') . ">{$opt_out_message_subtitle}</h2>
 		<div class=\"notice notice-error inline opt-out-error-message\"><p></p></div>
 		<p>{$opt_out_message_usage_tracking}</p>
 		<p>{$opt_out_message_clicking_opt_out}</p>
-		<label class=\"fs-permission-extensions\"><div class=\"fs-switch fs-small fs-round fs-" . ( $fs->is_extensions_tracking_allowed() ? 'on' : 'off' ) . "\"><div class=\"fs-toggle\"></div></div> " . fs_text_inline( 'Plugins & themes tracking' ) . " <span class=\"fs-switch-feedback success\"></span></label>";
+		<label class=\"fs-permission-extensions\"><div class=\"fs-switch fs-small fs-round fs-" . ($fs->is_extensions_tracking_allowed() ? 'on' : 'off') . "\"><div class=\"fs-toggle\"></div></div> " . fs_text_inline('Plugins & themes tracking') . " <span class=\"fs-switch-feedback success\"></span></label>";
 
-	fs_enqueue_local_style( 'fs_dialog_boxes', '/admin/dialog-boxes.css' );
-	fs_enqueue_local_style( 'fs_common', '/admin/common.css' );
+    fs_enqueue_local_style('fs_dialog_boxes', '/admin/dialog-boxes.css');
+    fs_enqueue_local_style('fs_common', '/admin/common.css');
 ?>
 <script type="text/javascript">
 	(function( $ ) {
 		$( document ).ready(function() {
-			var modalContentHtml = <?php echo json_encode( $modal_content_html ) ?>,
+			var modalContentHtml = <?php echo json_encode($modal_content_html) ?>,
 			    modalHtml =
 				    '<div class="fs-modal fs-modal-opt-out">'
 				    + '	<div class="fs-modal-dialog">'
 				    + '		<div class="fs-modal-header">'
-				    + '		    <h4><?php echo esc_js( $opt_out_text ) ?></h4>'
+				    + '		    <h4><?php echo esc_js($opt_out_text) ?></h4>'
 				    + '		</div>'
 				    + '		<div class="fs-modal-body">'
 				    + '			<div class="fs-modal-panel active">' + modalContentHtml + '</div>'
 				    + '		</div>'
 				    + '		<div class="fs-modal-footer">'
-				    + '			<button class="button <?php echo $fs->is_premium() ? 'button-primary warn' : 'button-secondary' ?> button-opt-out" tabindex="1"><?php echo esc_js( $opt_out_text ) ?></button>'
-				    + '			<button class="button <?php echo $fs->is_premium() ? 'button-secondary' : 'button-primary' ?> button-close" tabindex="2"><?php echo esc_js( $primary_cta_label ) ?></button>'
+				    + '			<button class="button <?php echo $fs->is_premium() ? 'button-primary warn' : 'button-secondary' ?> button-opt-out" tabindex="1"><?php echo esc_js($opt_out_text) ?></button>'
+				    + '			<button class="button <?php echo $fs->is_premium() ? 'button-secondary' : 'button-primary' ?> button-close" tabindex="2"><?php echo esc_js($primary_cta_label) ?></button>'
 				    + '		</div>'
 				    + '	</div>'
 				    + '</div>',
                 $modal              = $(modalHtml),
-                $adminNotice        = $( <?php echo json_encode( $admin_notice_html ) ?> ),
+                $adminNotice        = $( <?php echo json_encode($admin_notice_html) ?> ),
                 action              = '<?php echo $action ?>',
                 actionLinkSelector  = 'span.opt-in-or-opt-out.<?php echo $slug ?> a',
                 $optOutButton       = $modal.find( '.button-opt-out' ),
@@ -143,7 +143,7 @@
 				});
 			}
 
-			<?php if ( $fs->is_registered() ) : ?>
+			<?php if ($fs->is_registered()) : ?>
 			registerEventHandlers();
 			<?php endif ?>
 
@@ -162,7 +162,7 @@
 
 			function resetOptOutButton() {
 				enableOptOutButton();
-				$optOutButton.text( <?php echo json_encode( $opt_out_text ) ?> );
+				$optOutButton.text( <?php echo json_encode($opt_out_text) ?> );
 			}
 
 			function resetModal() {
@@ -186,32 +186,32 @@
 					method: 'POST',
 					data: {
 						action   : ( 'stop_tracking' == action ?
-								'<?php echo $fs->get_ajax_action( 'stop_tracking' ) ?>' :
-								'<?php echo $fs->get_ajax_action( 'allow_tracking' ) ?>'
+								'<?php echo $fs->get_ajax_action('stop_tracking') ?>' :
+								'<?php echo $fs->get_ajax_action('allow_tracking') ?>'
 						),
 						security : ( 'stop_tracking' == action ?
-								'<?php echo $fs->get_ajax_security( 'stop_tracking' ) ?>' :
-								'<?php echo $fs->get_ajax_security( 'allow_tracking' ) ?>'
+								'<?php echo $fs->get_ajax_security('stop_tracking') ?>' :
+								'<?php echo $fs->get_ajax_security('allow_tracking') ?>'
 						),
 						module_id: moduleID,
                         _wp_http_referer: '<?php echo $fs->current_page_url() ?>'
 					},
 					beforeSend: function() {
 						if ( 'allow_tracking' == action ) {
-							$actionLink.text( '<?php fs_esc_js_echo_inline( 'Opting in', 'opting-in', $slug ) ?>...' );
+							$actionLink.text( '<?php fs_esc_js_echo_inline('Opting in', 'opting-in', $slug) ?>...' );
 						} else {
-							$optOutButton.text( '<?php fs_esc_js_echo_inline( 'Opting out', 'opting-out', $slug ) ?>...' );
+							$optOutButton.text( '<?php fs_esc_js_echo_inline('Opting out', 'opting-out', $slug) ?>...' );
 						}
 					},
 					success: function( resultObj ) {
 						if ( resultObj.success ) {
 							if ( 'allow_tracking' == action ) {
 								action = 'stop_tracking';
-								$actionLink.text( '<?php echo esc_js( $opt_out_text ) ?>' );
+								$actionLink.text( '<?php echo esc_js($opt_out_text) ?>' );
 								showOptInAppreciationMessageAndScrollToTop();
 							} else {
 								action = 'allow_tracking';
-								$actionLink.text( '<?php echo esc_js( $opt_in_text ) ?>' );
+								$actionLink.text( '<?php echo esc_js($opt_in_text) ?>' );
 								closeModal();
 
 								if ( $adminNotice.length > 0 ) {
@@ -249,8 +249,8 @@
                     url: ajaxurl,
                     method: 'POST',
                     data: {
-                        action    : '<?php echo $fs->get_ajax_action( 'update_tracking_permission' ) ?>',
-                        security  : '<?php echo $fs->get_ajax_security( 'update_tracking_permission' ) ?>',
+                        action    : '<?php echo $fs->get_ajax_action('update_tracking_permission') ?>',
+                        security  : '<?php echo $fs->get_ajax_security('update_tracking_permission') ?>',
                         module_id : moduleID,
                         _wp_http_referer: '<?php echo $fs->current_page_url() ?>',
                         permission: 'extensions',
@@ -258,7 +258,7 @@
                     },
                     success: function( resultObj ) {
                         if ( resultObj.success ) {
-                            $switchFeedback.html( '<i class="dashicons dashicons-yes"></i> <?php echo esc_js( fs_text_inline( 'Saved', 'saved', $slug ) ) ?>' )
+                            $switchFeedback.html( '<i class="dashicons dashicons-yes"></i> <?php echo esc_js(fs_text_inline('Saved', 'saved', $slug)) ?>' )
                         } else {
                             $switch
                                 .toggleClass( 'fs-on' )
@@ -292,7 +292,7 @@
 				$optOutErrorMessage.show();
 			}
 
-			<?php if ( $fs->is_theme() ) : ?>
+			<?php if ($fs->is_theme()) : ?>
 			/**
 			 * Add opt-in/out button to the active theme's buttons collection
 			 * in the theme's extended details overlay.
@@ -312,10 +312,10 @@
 				}
 
 				var label = (('stop_tracking' == action) ?
-					    '<?php echo esc_js( $opt_out_text ) ?>' :
-				        '<?php echo esc_js( $opt_in_text ) ?>'),
+					    '<?php echo esc_js($opt_out_text) ?>' :
+				        '<?php echo esc_js($opt_in_text) ?>'),
                     href = (('stop_tracking' != action) ?
-                        '<?php echo ( $fs->is_registered() ? '' : esc_js( $reconnect_url ) ) ?>' :
+                        '<?php echo($fs->is_registered() ? '' : esc_js($reconnect_url)) ?>' :
                         '');
 
 				var $actionLink = $('<a id="fs_theme_opt_in_out" href="' + encodeURI(href) + '" class="button">' + label + '</a>');
diff --git a/freemius/templates/forms/premium-versions-upgrade-handler.php b/freemius/templates/forms/premium-versions-upgrade-handler.php
index f30639bfa90ce40bfd43df132de6f8e0f220b08d..2425ac5e51e2b1d7aecf85f81c059c0e5f2cc25c 100644
--- a/freemius/templates/forms/premium-versions-upgrade-handler.php
+++ b/freemius/templates/forms/premium-versions-upgrade-handler.php
@@ -6,14 +6,14 @@
      * @since     2.0.2
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
     /**
      * @var Freemius $fs
      */
-    $fs   = freemius( $VARS['id'] );
+    $fs   = freemius($VARS['id']);
     $slug = $fs->get_slug();
 
     $plugin_data     = $fs->get_plugin_data();
@@ -22,14 +22,14 @@
 
     $license = $fs->_get_license();
 
-    if ( ! is_object( $license ) ) {
+    if (! is_object($license)) {
         $purchase_url = $fs->pricing_url();
     } else {
-        $subscription = $fs->_get_subscription( $license->id );
+        $subscription = $fs->_get_subscription($license->id);
 
         $purchase_url = $fs->checkout_url(
-            is_object( $subscription ) ?
-                ( 1 == $subscription->billing_cycle ? WP_FS__PERIOD_MONTHLY : WP_FS__PERIOD_ANNUALLY ) :
+            is_object($subscription) ?
+                (1 == $subscription->billing_cycle ? WP_FS__PERIOD_MONTHLY : WP_FS__PERIOD_ANNUALLY) :
                 WP_FS__PERIOD_LIFETIME,
             false,
             array( 'licenses' => $license->quota )
@@ -37,27 +37,27 @@
     }
 
     $message = sprintf(
-        fs_text_inline( 'There is a new version of %s available.', 'new-version-available-message', $slug ) .
-        fs_text_inline( ' %s to access version %s security & feature updates, and support.', 'x-for-updates-and-support', $slug ),
+        fs_text_inline('There is a new version of %s available.', 'new-version-available-message', $slug) .
+        fs_text_inline(' %s to access version %s security & feature updates, and support.', 'x-for-updates-and-support', $slug),
         '<span id="plugin_name"></span>',
         sprintf(
             '<a id="pricing_url" href="">%s</a>',
-            is_object( $license ) ?
-                fs_text_inline( 'Renew your license now', 'renew-license-now', $slug ) :
-                fs_text_inline( 'Buy a license now', 'buy-license-now', $slug )
+            is_object($license) ?
+                fs_text_inline('Renew your license now', 'renew-license-now', $slug) :
+                fs_text_inline('Buy a license now', 'buy-license-now', $slug)
         ),
         '<span id="new_version"></span>'
     );
 
     $modal_content_html = "<p>{$message}</p>";
 
-    $header_title = fs_text_inline( 'New Version Available', 'new-version-available', $slug );
+    $header_title = fs_text_inline('New Version Available', 'new-version-available', $slug);
 
-    $renew_license_button_text = is_object( $license ) ?
-        fs_text_inline( 'Renew license', 'renew-license', $slug ) :
-        fs_text_inline( 'Buy license', 'buy-license', $slug );
+    $renew_license_button_text = is_object($license) ?
+        fs_text_inline('Renew license', 'renew-license', $slug) :
+        fs_text_inline('Buy license', 'buy-license', $slug);
 
-    fs_enqueue_local_style( 'fs_dialog_boxes', '/admin/dialog-boxes.css' );
+    fs_enqueue_local_style('fs_dialog_boxes', '/admin/dialog-boxes.css');
 ?>
 <script type="text/javascript">
 (function( $ ) {
@@ -66,20 +66,20 @@
             return;
         }
 
-        var modalContentHtml = <?php echo json_encode( $modal_content_html ) ?>,
+        var modalContentHtml = <?php echo json_encode($modal_content_html) ?>,
             modalHtml        =
                 '<div class="fs-modal fs-modal-upgrade-premium-version">'
                 + ' <div class="fs-modal-dialog">'
                 + '     <div class="fs-modal-header">'
-                + '         <h4><?php echo esc_js( $header_title ) ?></h4>'
-                + '         <a href="!#" class="fs-close"><i class="dashicons dashicons-no" title="<?php echo esc_js( fs_text_x_inline( 'Dismiss', 'close a window', 'dismiss', $slug ) ) ?>"></i></a>'
+                + '         <h4><?php echo esc_js($header_title) ?></h4>'
+                + '         <a href="!#" class="fs-close"><i class="dashicons dashicons-no" title="<?php echo esc_js(fs_text_x_inline('Dismiss', 'close a window', 'dismiss', $slug)) ?>"></i></a>'
                 + '     </div>'
                 + '     <div class="fs-modal-body">'
                 + '         <div class="fs-modal-panel active">' + modalContentHtml + '</div>'
                 + '     </div>'
                 + '     <div class="fs-modal-footer">'
-                + '         <a class="button button-primary button-renew-license" tabindex="3" href="<?php echo $purchase_url ?>"><?php echo esc_js( $renew_license_button_text ) ?></a>'
-                + '         <button class="button button-secondary button-close" tabindex="4"><?php fs_esc_js_echo_inline( 'Cancel', 'cancel', $slug ) ?></button>'
+                + '         <a class="button button-primary button-renew-license" tabindex="3" href="<?php echo $purchase_url ?>"><?php echo esc_js($renew_license_button_text) ?></a>'
+                + '         <button class="button button-secondary button-close" tabindex="4"><?php fs_esc_js_echo_inline('Cancel', 'cancel', $slug) ?></button>'
                 + '     </div>'
                 + ' </div>'
                 + '</div>',
diff --git a/freemius/templates/forms/premium-versions-upgrade-metadata.php b/freemius/templates/forms/premium-versions-upgrade-metadata.php
index 5f9fddd9dd134df192f52b9c6a6ede571d5d20a0..ba3436627c6618836566c1c86d276ae5a90dff23 100644
--- a/freemius/templates/forms/premium-versions-upgrade-metadata.php
+++ b/freemius/templates/forms/premium-versions-upgrade-metadata.php
@@ -6,25 +6,25 @@
      * @since     2.0.2
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
     /**
      * @var Freemius $fs
      */
-    $fs = freemius( $VARS['id'] );
+    $fs = freemius($VARS['id']);
 
     $license = $fs->_get_license();
 
-    if ( ! is_object( $license ) ) {
+    if (! is_object($license)) {
         $purchase_url = $fs->pricing_url();
     } else {
-        $subscription = $fs->_get_subscription( $license->id );
+        $subscription = $fs->_get_subscription($license->id);
 
         $purchase_url = $fs->checkout_url(
-            is_object( $subscription ) ?
-                ( 1 == $subscription->billing_cycle ? WP_FS__PERIOD_MONTHLY : WP_FS__PERIOD_ANNUALLY ) :
+            is_object($subscription) ?
+                (1 == $subscription->billing_cycle ? WP_FS__PERIOD_MONTHLY : WP_FS__PERIOD_ANNUALLY) :
                 WP_FS__PERIOD_LIFETIME,
             false,
             array( 'licenses' => $license->quota )
@@ -39,9 +39,9 @@
         var $premiumVersionCheckbox = $( 'input[type="checkbox"][value="<?php echo $fs->get_plugin_basename() ?>"]' );
 
         $premiumVersionCheckbox.addClass( 'license-expired' );
-        $premiumVersionCheckbox.data( 'plugin-name', <?php echo json_encode( $plugin_data['Name'] ) ?> );
-        $premiumVersionCheckbox.data( 'pricing-url', <?php echo json_encode( $purchase_url ) ?> );
-        $premiumVersionCheckbox.data( 'new-version', <?php echo json_encode( $VARS['new_version'] ) ?> );
+        $premiumVersionCheckbox.data( 'plugin-name', <?php echo json_encode($plugin_data['Name']) ?> );
+        $premiumVersionCheckbox.data( 'pricing-url', <?php echo json_encode($purchase_url) ?> );
+        $premiumVersionCheckbox.data( 'new-version', <?php echo json_encode($VARS['new_version']) ?> );
     });
 })( jQuery );
 </script>
\ No newline at end of file
diff --git a/freemius/templates/forms/resend-key.php b/freemius/templates/forms/resend-key.php
index f8cafb99d2c8bc9b7b7409805c032d4224282802..365d4eb04c52ff4cd668580585952e037572a54f 100644
--- a/freemius/templates/forms/resend-key.php
+++ b/freemius/templates/forms/resend-key.php
@@ -1,61 +1,61 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.2.0
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.2.0
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	/**
-	 * @var array $VARS
-	 * @var Freemius $fs
-	 */
-	$fs   = freemius( $VARS['id'] );
+    /**
+     * @var array $VARS
+     * @var Freemius $fs
+     */
+    $fs   = freemius($VARS['id']);
 
-	$slug = $fs->get_slug();
+    $slug = $fs->get_slug();
 
-	$send_button_text          = fs_text_inline( 'Send License Key', 'send-license-key', $slug );
-	$cancel_button_text        = fs_text_inline( 'Cancel', 'cancel', $slug );
-	$email_address_placeholder = fs_esc_attr_inline( 'Email address', 'email-address', $slug );
-	$other_text                = fs_text_inline( 'Other', 'other', $slug );
+    $send_button_text          = fs_text_inline('Send License Key', 'send-license-key', $slug);
+    $cancel_button_text        = fs_text_inline('Cancel', 'cancel', $slug);
+    $email_address_placeholder = fs_esc_attr_inline('Email address', 'email-address', $slug);
+    $other_text                = fs_text_inline('Other', 'other', $slug);
 
-	$is_freemium = $fs->is_freemium();
+    $is_freemium = $fs->is_freemium();
 
-	$send_button_text_html = esc_html($send_button_text);
+    $send_button_text_html = esc_html($send_button_text);
 
-	$button_html = <<< HTML
+    $button_html = <<< HTML
 <div class="button-container">
     <a href="#" class="button button-primary button-send-license-key" tabindex="2">{$send_button_text_html}</a>
 </div>
 HTML;
 
-	if ( $is_freemium ) {
-		$current_user          = Freemius::_get_current_wp_user();
-		$email                 = $current_user->user_email;
-		$esc_email             = esc_attr( $email );
-		$form_html      = <<< HTML
+    if ($is_freemium) {
+        $current_user          = Freemius::_get_current_wp_user();
+        $email                 = $current_user->user_email;
+        $esc_email             = esc_attr($email);
+        $form_html      = <<< HTML
 <div class="email-address-container">
     <label><input name="email-address" type="radio" checked="checked" tabindex="1" value="{$esc_email}"> {$email}</label>
     <label><input name="email-address" type="radio" tabindex="1" value="other">{$other_text}: <input class="email-address" type="text" placeholder="{$email_address_placeholder}"></label>
 </div>
 {$button_html}
 HTML;
-	} else {
-		$email = '';
-		$form_html      = <<< HTML
+    } else {
+        $email = '';
+        $form_html      = <<< HTML
 {$button_html}
 <div class="email-address-container">
     <input class="email-address" type="text" placeholder="{$email_address_placeholder}" tabindex="1">
 </div>
 HTML;
-	}
+    }
 
-	$message_above_input_field = fs_esc_html_inline( "Enter the email address you've used for the upgrade below and we will resend you the license key.", 'ask-for-upgrade-email-address', $slug );
-	$modal_content_html = <<< HTML
+    $message_above_input_field = fs_esc_html_inline("Enter the email address you've used for the upgrade below and we will resend you the license key.", 'ask-for-upgrade-email-address', $slug);
+    $modal_content_html = <<< HTML
     <div class="notice notice-error inline license-resend-message"><p></p></div>
     <p>{$message_above_input_field}</p>
     <div class="input-container">
@@ -63,18 +63,18 @@ HTML;
     </div>
 HTML;
 
-	fs_enqueue_local_style( 'fs_dialog_boxes', '/admin/dialog-boxes.css' );
+    fs_enqueue_local_style('fs_dialog_boxes', '/admin/dialog-boxes.css');
 ?>
 <script type="text/javascript">
 	(function ($) {
 		$(document).ready(function () {
-			var contentHtml      = <?php echo json_encode( $modal_content_html ); ?>,
+			var contentHtml      = <?php echo json_encode($modal_content_html); ?>,
 			    modalHtml        =
 				    '<div class="fs-modal fs-modal-license-key-resend <?php echo $is_freemium ? 'fs-freemium' : 'fs-premium' ?>">'
 				    + ' <div class="fs-modal-dialog">'
 				    + '     <div class="fs-modal-header">'
-				    + '         <h4><?php echo esc_js( $send_button_text ) ?></h4>'
-				    + '         <a href="#!" class="fs-close" tabindex="3" title="Close"><i class="dashicons dashicons-no" title="<?php echo esc_js( fs_text_x_inline( 'Dismiss', 'as close a window', 'dismiss', $slug ) ) ?>"></i></a>'
+				    + '         <h4><?php echo esc_js($send_button_text) ?></h4>'
+				    + '         <a href="#!" class="fs-close" tabindex="3" title="Close"><i class="dashicons dashicons-no" title="<?php echo esc_js(fs_text_x_inline('Dismiss', 'as close a window', 'dismiss', $slug)) ?>"></i></a>'
 				    + '     </div>'
 				    + '     <div class="fs-modal-body">'
 				    + '         <div class="fs-modal-panel active">' + contentHtml + '</div>'
@@ -85,8 +85,8 @@ HTML;
 			    $sendButton      = $modal.find('.button-send-license-key'),
 			    $emailInput      = $modal.find('input.email-address'),
 			    $feedbackMessage = $modal.find('.license-resend-message'),
-			    isFreemium       = <?php echo json_encode( $is_freemium ) ?>,
-			    userEmail        = <?php echo json_encode( $email ) ?>,
+			    isFreemium       = <?php echo json_encode($is_freemium) ?>,
+			    userEmail        = <?php echo json_encode($email) ?>,
 			    moduleID         = '<?php echo $fs->get_id() ?>',
 			    isChild          = false;
 
@@ -145,13 +145,13 @@ HTML;
 						url       : ajaxurl,
 						method    : 'POST',
 						data      : {
-							action     : '<?php echo $fs->get_ajax_action( 'resend_license_key' ) ?>',
-							security   : '<?php echo $fs->get_ajax_security( 'resend_license_key' ) ?>',
+							action     : '<?php echo $fs->get_ajax_action('resend_license_key') ?>',
+							security   : '<?php echo $fs->get_ajax_security('resend_license_key') ?>',
 							module_id  : moduleID,
 							email      : email
 						},
 						beforeSend: function () {
-							$sendButton.text('<?php fs_esc_js_echo_inline( 'Sending license key', 'sending-license-key', $slug ) ?>...');
+							$sendButton.text('<?php fs_esc_js_echo_inline('Sending license key', 'sending-license-key', $slug) ?>...');
 						},
 						success   : function (result) {
 							var resultObj = $.parseJSON(result);
diff --git a/freemius/templates/forms/subscription-cancellation.php b/freemius/templates/forms/subscription-cancellation.php
index 2a1d59110755a0da3681fe0872eff1d8e2dc3777..5185a4be80909e6f2508a111681cda51436f096a 100644
--- a/freemius/templates/forms/subscription-cancellation.php
+++ b/freemius/templates/forms/subscription-cancellation.php
@@ -6,14 +6,14 @@
  * @since     2.2.1
  */
 
-if ( ! defined( 'ABSPATH' ) ) {
+if (! defined('ABSPATH')) {
     exit;
 }
 
 /**
  * @var array $VARS
  */
-$fs   = freemius( $VARS['id'] );
+$fs   = freemius($VARS['id']);
 $slug = $fs->get_slug();
 
 /**
@@ -24,13 +24,13 @@ $license = $VARS['license'];
 $has_trial = $VARS['has_trial'];
 
 $subscription_cancellation_context = $has_trial ?
-    fs_text_inline( 'trial', 'trial', $slug ) :
-    fs_text_inline( 'subscription', 'subscription', $slug );
+    fs_text_inline('trial', 'trial', $slug) :
+    fs_text_inline('subscription', 'subscription', $slug);
 
 $plan         = $fs->get_plan();
-$module_label = $fs->get_module_label( true );
+$module_label = $fs->get_module_label(true);
 
-if ( $VARS['is_license_deactivation'] ) {
+if ($VARS['is_license_deactivation']) {
     $subscription_cancellation_text = '';
 } else {
     $subscription_cancellation_text = sprintf(
@@ -44,14 +44,14 @@ if ( $VARS['is_license_deactivation'] ) {
 }
 
     $subscription_cancellation_text .= sprintf(
-    fs_text_inline(
+        fs_text_inline(
         'In case you are NOT planning on using this %s on this site (or any other site) - would you like to cancel the %s as well?',
         'cancel-subscription-message',
         $slug
     ),
-    ( $VARS['is_license_deactivation'] ? fs_text_inline( 'license', 'license', $slug ) : $module_label ),
-    $subscription_cancellation_context
-);
+        ($VARS['is_license_deactivation'] ? fs_text_inline('license', 'license', $slug) : $module_label),
+        $subscription_cancellation_context
+    );
 
 $cancel_subscription_action_label = sprintf(
     fs_esc_html_inline(
@@ -59,21 +59,21 @@ $cancel_subscription_action_label = sprintf(
         'cancel-x',
         $slug
     ),
-    esc_html( $subscription_cancellation_context ),
-    sprintf( '<strong>%s</strong>', esc_html( $fs->get_plugin_title() ) ),
-    esc_html( $module_label )
+    esc_html($subscription_cancellation_context),
+    sprintf('<strong>%s</strong>', esc_html($fs->get_plugin_title())),
+    esc_html($module_label)
 );
 
-$keep_subscription_active_action_label = esc_html( sprintf(
+$keep_subscription_active_action_label = esc_html(sprintf(
     fs_text_inline(
         "Don't cancel %s - I'm still interested in getting security & feature updates, as well as be able to contact support.",
         'dont-cancel-x',
         $slug
     ),
     $subscription_cancellation_context
-) );
+));
 
-$subscription_cancellation_text = esc_html( $subscription_cancellation_text );
+$subscription_cancellation_text = esc_html($subscription_cancellation_text);
 
 $subscription_cancellation_html = <<< HTML
     <div class="notice notice-error inline"><p></p></div><p>{$subscription_cancellation_text}</p>
@@ -93,39 +93,39 @@ $subscription_cancellation_html = <<< HTML
     </ul>
 HTML;
 
-$downgrading_plan_text                      = fs_text_inline( 'Downgrading your plan', 'downgrading-plan', $slug );
-$cancelling_subscription_text               = fs_text_inline( 'Cancelling the subscription', 'cancelling-subscription', $slug );
+$downgrading_plan_text                      = fs_text_inline('Downgrading your plan', 'downgrading-plan', $slug);
+$cancelling_subscription_text               = fs_text_inline('Cancelling the subscription', 'cancelling-subscription', $slug);
 /* translators: %1$s: Either 'Downgrading your plan' or 'Cancelling the subscription' */
-$downgrade_x_confirm_text                   = fs_text_inline( '%1$s will immediately stop all future recurring payments and your %2$s plan license will expire in %3$s.', 'downgrade-x-confirm', $slug );
-$prices_increase_text                       = fs_text_inline( 'Please note that we will not be able to grandfather outdated pricing for renewals/new subscriptions after a cancellation. If you choose to renew the subscription manually in the future, after a price increase, which typically occurs once a year, you will be charged the updated price.', 'pricing-increase-warning', $slug );
-$after_downgrade_non_blocking_text          = fs_text_inline( 'You can still enjoy all %s features but you will not have access to %s security & feature updates, nor support.', 'after-downgrade-non-blocking', $slug );
-$after_downgrade_blocking_text              = fs_text_inline( 'Once your license expires you can still use the Free version but you will NOT have access to the %s features.', 'after-downgrade-blocking', $slug );
-$after_downgrade_blocking_text_premium_only = fs_text_inline( 'Once your license expires you will no longer be able to use the %s, unless you activate it again with a valid premium license.', 'after-downgrade-blocking-premium-only', $slug );
+$downgrade_x_confirm_text                   = fs_text_inline('%1$s will immediately stop all future recurring payments and your %2$s plan license will expire in %3$s.', 'downgrade-x-confirm', $slug);
+$prices_increase_text                       = fs_text_inline('Please note that we will not be able to grandfather outdated pricing for renewals/new subscriptions after a cancellation. If you choose to renew the subscription manually in the future, after a price increase, which typically occurs once a year, you will be charged the updated price.', 'pricing-increase-warning', $slug);
+$after_downgrade_non_blocking_text          = fs_text_inline('You can still enjoy all %s features but you will not have access to %s security & feature updates, nor support.', 'after-downgrade-non-blocking', $slug);
+$after_downgrade_blocking_text              = fs_text_inline('Once your license expires you can still use the Free version but you will NOT have access to the %s features.', 'after-downgrade-blocking', $slug);
+$after_downgrade_blocking_text_premium_only = fs_text_inline('Once your license expires you will no longer be able to use the %s, unless you activate it again with a valid premium license.', 'after-downgrade-blocking-premium-only', $slug);
 
 $subscription_cancellation_confirmation_message = $has_trial ?
-    fs_text_inline( 'Cancelling the trial will immediately block access to all premium features. Are you sure?', 'cancel-trial-confirm', $slug ) :
+    fs_text_inline('Cancelling the trial will immediately block access to all premium features. Are you sure?', 'cancel-trial-confirm', $slug) :
     sprintf(
         '%s %s %s %s',
         sprintf(
             $downgrade_x_confirm_text,
-            ($fs->is_only_premium() ? $cancelling_subscription_text : $downgrading_plan_text ),
+            ($fs->is_only_premium() ? $cancelling_subscription_text : $downgrading_plan_text),
             $plan->title,
-            human_time_diff( time(), strtotime( $license->expiration ) )
+            human_time_diff(time(), strtotime($license->expiration))
         ),
         (
-        $license->is_block_features ?
+            $license->is_block_features ?
             (
                 $fs->is_only_premium() ?
-                    sprintf( $after_downgrade_blocking_text_premium_only, $module_label ) :
-                    sprintf( $after_downgrade_blocking_text, $plan->title )
+                    sprintf($after_downgrade_blocking_text_premium_only, $module_label) :
+                    sprintf($after_downgrade_blocking_text, $plan->title)
             ) :
-            sprintf( $after_downgrade_non_blocking_text, $plan->title, $fs->get_module_label( true ) )
+            sprintf($after_downgrade_non_blocking_text, $plan->title, $fs->get_module_label(true))
         ),
         $prices_increase_text,
-        fs_esc_attr_inline( 'Are you sure you want to proceed?', 'proceed-confirmation', $slug )
+        fs_esc_attr_inline('Are you sure you want to proceed?', 'proceed-confirmation', $slug)
     );
 
-fs_enqueue_local_style( 'fs_dialog_boxes', '/admin/dialog-boxes.css' );
+fs_enqueue_local_style('fs_dialog_boxes', '/admin/dialog-boxes.css');
 ?>
 <script type="text/javascript">
     (function( $ ) {
@@ -133,14 +133,14 @@ fs_enqueue_local_style( 'fs_dialog_boxes', '/admin/dialog-boxes.css' );
             '<div class="fs-modal fs-modal-subscription-cancellation fs-modal-subscription-cancellation-<?php echo $fs->get_id() ?>">'
             + '	<div class="fs-modal-dialog">'
             + '		<div class="fs-modal-header">'
-            + '		    <h4><?php echo esc_html( sprintf( fs_text_inline( 'Cancel %s?', 'cancel-x', $slug ), ucfirst( $subscription_cancellation_context ) ) ) ?></h4>'
+            + '		    <h4><?php echo esc_html(sprintf(fs_text_inline('Cancel %s?', 'cancel-x', $slug), ucfirst($subscription_cancellation_context))) ?></h4>'
             + '		</div>'
             + '		<div class="fs-modal-body">'
-            + '			<div class="fs-modal-panel active">' + <?php echo json_encode( $subscription_cancellation_html ) ?> + '<p class="fs-price-increase-warning" style="display: none;">' + <?php echo json_encode( $prices_increase_text ) ?> + '</p></div>'
+            + '			<div class="fs-modal-panel active">' + <?php echo json_encode($subscription_cancellation_html) ?> + '<p class="fs-price-increase-warning" style="display: none;">' + <?php echo json_encode($prices_increase_text) ?> + '</p></div>'
             + '		</div>'
             + '		<div class="fs-modal-footer">'
-            + '			<a href="#" class="button button-secondary button-close"><?php fs_esc_attr_echo( 'cancel', $slug ) ?></a>'
-            + '			<a href="#" class="button button-primary button-deactivate disabled"><?php fs_esc_attr_echo_inline( 'Proceed', 'proceed', $slug ) ?></a>'
+            + '			<a href="#" class="button button-secondary button-close"><?php fs_esc_attr_echo('cancel', $slug) ?></a>'
+            + '			<a href="#" class="button button-primary button-deactivate disabled"><?php fs_esc_attr_echo_inline('Proceed', 'proceed', $slug) ?></a>'
             + '		</div>'
             + '	</div>'
             + '</div>',
@@ -167,13 +167,13 @@ fs_enqueue_local_style( 'fs_dialog_boxes', '/admin/dialog-boxes.css' );
                 }
 
                 var _this                                   = $(this),
-                    subscriptionCancellationActionEventName = <?php echo json_encode( $fs->get_action_tag( 'subscription_cancellation_action' ) ) ?>;
+                    subscriptionCancellationActionEventName = <?php echo json_encode($fs->get_action_tag('subscription_cancellation_action')) ?>;
 
                 if ( _this.hasClass( 'button-primary' ) ) {
                     if ( 'true' !== $modal.find( 'input[name="cancel-subscription"]:checked' ).val() ) {
                         $modal.trigger( subscriptionCancellationActionEventName, false );
                     } else {
-                        if ( confirm( <?php echo json_encode( $subscription_cancellation_confirmation_message ) ?> ) ) {
+                        if ( confirm( <?php echo json_encode($subscription_cancellation_confirmation_message) ?> ) ) {
                             $modal.trigger( subscriptionCancellationActionEventName, true );
                         }
                     }
@@ -187,14 +187,14 @@ fs_enqueue_local_style( 'fs_dialog_boxes', '/admin/dialog-boxes.css' );
                     isSelected      = ( 'true' === $selectedOption.val() );
 
                 if ( isSelected ) {
-                    $primaryButton.html( <?php echo json_encode( sprintf(
-                        fs_text_inline( 'Cancel %s & Proceed', 'cancel-x-and-proceed', $slug ),
-                        ucfirst( $subscription_cancellation_context )
-                    ) ) ?> );
+                    $primaryButton.html( <?php echo json_encode(sprintf(
+    fs_text_inline('Cancel %s & Proceed', 'cancel-x-and-proceed', $slug),
+    ucfirst($subscription_cancellation_context)
+)) ?> );
 
                     $modal.find('.fs-price-increase-warning').show();
                 } else {
-                    $primaryButton.html( <?php echo fs_json_encode_echo_inline( 'Proceed', 'proceed', $slug ) ?> );
+                    $primaryButton.html( <?php echo fs_json_encode_echo_inline('Proceed', 'proceed', $slug) ?> );
                     $modal.find('.fs-price-increase-warning').hide();
                 }
 
@@ -269,9 +269,9 @@ fs_enqueue_local_style( 'fs_dialog_boxes', '/admin/dialog-boxes.css' );
         }
 
         function updateButtonLabels() {
-            $modal.find('.button-primary').text( <?php fs_json_encode_echo_inline( 'Proceed', 'proceed', $slug ) ?> );
+            $modal.find('.button-primary').text( <?php fs_json_encode_echo_inline('Proceed', 'proceed', $slug) ?> );
 
-            $modal.find('.button-secondary').text( <?php fs_json_encode_echo( 'cancel', $slug ) ?> );
+            $modal.find('.button-secondary').text( <?php fs_json_encode_echo('cancel', $slug) ?> );
         }
     })( jQuery );
 </script>
\ No newline at end of file
diff --git a/freemius/templates/forms/trial-start.php b/freemius/templates/forms/trial-start.php
index b66e72724bf5bfe895f006c4c1a03f2056107d4a..636fb06bf7eff8246a56d2415d75db342586ca0f 100644
--- a/freemius/templates/forms/trial-start.php
+++ b/freemius/templates/forms/trial-start.php
@@ -1,61 +1,61 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.2.0
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	/**
-	 * @var array $VARS
-	 * @var Freemius $fs
-	 */
-	$fs   = freemius( $VARS['id'] );
-	$slug = $fs->get_slug();
-
-	$message_header  = sprintf(
-		/* translators: %1$s: Number of trial days; %2$s: Plan name; */
-		fs_text_inline( 'You are 1-click away from starting your %1$s-day free trial of the %2$s plan.', 'start-trial-prompt-header', $slug ),
-		'<span class="var-trial_period"></span>',
-		'<span class="var-plan_title"></span>'
-	);
-	$message_content = sprintf(
-		/* translators: %s: Link to freemius.com */
-		fs_text_inline( 'For compliance with the WordPress.org guidelines, before we start the trial we ask that you opt in with your user and non-sensitive site information, allowing the %s to periodically send data to %s to check for version updates and to validate your trial.', 'start-trial-prompt-message', $slug ),
-		$fs->get_module_type(),
-		sprintf(
-			'<a href="%s" target="_blank" rel="noopener">%s</a>',
-			'https://freemius.com',
-			'freemius.com'
-		)
-	);
-
-	$modal_content_html = <<< HTML
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.2.0
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    /**
+     * @var array $VARS
+     * @var Freemius $fs
+     */
+    $fs   = freemius($VARS['id']);
+    $slug = $fs->get_slug();
+
+    $message_header  = sprintf(
+        /* translators: %1$s: Number of trial days; %2$s: Plan name; */
+        fs_text_inline('You are 1-click away from starting your %1$s-day free trial of the %2$s plan.', 'start-trial-prompt-header', $slug),
+        '<span class="var-trial_period"></span>',
+        '<span class="var-plan_title"></span>'
+    );
+    $message_content = sprintf(
+        /* translators: %s: Link to freemius.com */
+        fs_text_inline('For compliance with the WordPress.org guidelines, before we start the trial we ask that you opt in with your user and non-sensitive site information, allowing the %s to periodically send data to %s to check for version updates and to validate your trial.', 'start-trial-prompt-message', $slug),
+        $fs->get_module_type(),
+        sprintf(
+            '<a href="%s" target="_blank" rel="noopener">%s</a>',
+            'https://freemius.com',
+            'freemius.com'
+        )
+    );
+
+    $modal_content_html = <<< HTML
 	<div class="notice notice-error inline"><p></p></div>
 	<h3>{$message_header}</h3>
 	<p>{$message_content}</p>
 HTML;
 
-	fs_enqueue_local_style( 'fs_dialog_boxes', '/admin/dialog-boxes.css' );
+    fs_enqueue_local_style('fs_dialog_boxes', '/admin/dialog-boxes.css');
 ?>
 <script type="text/javascript">
 	(function ($) {
 		$(document).ready(function () {
-			var modalContentHtml = <?php echo json_encode( $modal_content_html ); ?>,
+			var modalContentHtml = <?php echo json_encode($modal_content_html); ?>,
 			    modalHtml        =
 				    '<div class="fs-modal fs-modal-license-key-resend">'
 				    + '	<div class="fs-modal-dialog">'
 				    + '		<div class="fs-modal-header">'
-				    + '		    <h4><?php echo esc_js( fs_text_x_inline( 'Start free trial', 'call to action', 'start-free-trial', $slug ) ) ?></h4>'
+				    + '		    <h4><?php echo esc_js(fs_text_x_inline('Start free trial', 'call to action', 'start-free-trial', $slug)) ?></h4>'
 				    + '		</div>'
 				    + '		<div class="fs-modal-body">' + modalContentHtml + '</div>'
 				    + '		<div class="fs-modal-footer">'
-				    + '			<button class="button button-secondary button-close">' + <?php fs_json_encode_echo_inline( 'Cancel', 'cancel', $slug ) ?> +'</button>'
-				    + '			<button class="button button-primary button-connect">' + <?php fs_json_encode_echo_inline( 'Approve & Start Trial', 'approve-start-trial', $slug ) ?> +'</button>'
+				    + '			<button class="button button-secondary button-close">' + <?php fs_json_encode_echo_inline('Cancel', 'cancel', $slug) ?> +'</button>'
+				    + '			<button class="button button-primary button-connect">' + <?php fs_json_encode_echo_inline('Approve & Start Trial', 'approve-start-trial', $slug) ?> +'</button>'
 				    + '		</div>'
 				    + '	</div>'
 				    + '</div>',
@@ -83,8 +83,8 @@ HTML;
 						url       : ajaxurl,
 						method    : 'POST',
 						data      : {
-							action   : '<?php echo $fs->get_ajax_action( 'start_trial' ) ?>',
-							security : '<?php echo $fs->get_ajax_security( 'start_trial' ) ?>',
+							action   : '<?php echo $fs->get_ajax_action('start_trial') ?>',
+							security : '<?php echo $fs->get_ajax_security('start_trial') ?>',
 							module_id: '<?php echo $fs->get_id() ?>',
 							trial    : trialData
 						},
@@ -92,18 +92,18 @@ HTML;
 							// Disable all buttons during trial activation.
 							$modal.find('.button').prop('disabled', true);
 
-							$button.text(<?php fs_json_encode_echo_inline( 'Starting trial', 'starting-trial', $slug ) ?> + '...');
+							$button.text(<?php fs_json_encode_echo_inline('Starting trial', 'starting-trial', $slug) ?> + '...');
 
 							setLoadingMode();
 						},
 						success   : function (resultObj) {
 							if (resultObj.success) {
-								$button.text(<?php fs_json_encode_echo_inline( 'Please wait', 'please-wait', $slug ) ?> + '...');
+								$button.text(<?php fs_json_encode_echo_inline('Please wait', 'please-wait', $slug) ?> + '...');
 
 								// Redirect to the "Account" page and sync the license.
 								window.location.href = resultObj.data.next_page;
 							} else {
-								$button.text(<?php fs_json_encode_echo( 'approve-start-trial', $slug ) ?>);
+								$button.text(<?php fs_json_encode_echo('approve-start-trial', $slug) ?>);
 
 								resetLoadingMode();
 								showError(resultObj.error);
diff --git a/freemius/templates/forms/user-change.php b/freemius/templates/forms/user-change.php
index 3571b838d5e63b19c5cbd02931768a7297cff478..bfdd390be2e8f3e1fe714a60eafaa616782ed99c 100644
--- a/freemius/templates/forms/user-change.php
+++ b/freemius/templates/forms/user-change.php
@@ -6,7 +6,7 @@
     * @since     2.3.2
     */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
@@ -15,7 +15,7 @@
      *
      * @var Freemius $fs
      */
-    $fs   = freemius( $VARS['id'] );
+    $fs   = freemius($VARS['id']);
     $slug = $fs->get_slug();
 
     /**
@@ -23,11 +23,11 @@
      */
     $license_owners = $VARS['license_owners'];
 
-    $change_user_message                  = fs_text_inline( 'By changing the user, you agree to transfer the account ownership to:', 'change-user--message', $slug );
-    $header_title                         = fs_text_inline( 'Change User', 'change-user', $slug );
-    $user_change_button_text              = fs_text_inline( 'I Agree - Change User', 'agree-change-user', $slug );
-    $other_text                           = fs_text_inline( 'Other', 'other', $slug );
-    $enter_email_address_placeholder_text = fs_text_inline( 'Enter email address', 'enter-email-address', $slug );
+    $change_user_message                  = fs_text_inline('By changing the user, you agree to transfer the account ownership to:', 'change-user--message', $slug);
+    $header_title                         = fs_text_inline('Change User', 'change-user', $slug);
+    $user_change_button_text              = fs_text_inline('I Agree - Change User', 'agree-change-user', $slug);
+    $other_text                           = fs_text_inline('Other', 'other', $slug);
+    $enter_email_address_placeholder_text = fs_text_inline('Enter email address', 'enter-email-address', $slug);
 
     $user_change_options_html = <<< HTML
     <div class="fs-user-change-options-container">
@@ -35,7 +35,7 @@
             <tbody>
 HTML;
 
-        foreach ( $license_owners as $license_owner ) {
+        foreach ($license_owners as $license_owner) {
             $user_change_options_html .= <<< HTML
                 <tr class="fs-email-address-container">
                     <td><input id="fs_email_address_{$license_owner->id}" type="radio" name="fs_email_address" value="{$license_owner->id}"></td>
@@ -67,25 +67,25 @@ HTML;
     {$user_change_options_html}
 HTML;
 
-    fs_enqueue_local_style( 'fs_dialog_boxes', '/admin/dialog-boxes.css' );
+    fs_enqueue_local_style('fs_dialog_boxes', '/admin/dialog-boxes.css');
 ?>
 <script type="text/javascript">
 (function( $ ) {
     $( document ).ready(function() {
-        var modalContentHtml            = <?php echo json_encode( $modal_content_html ) ?>,
+        var modalContentHtml            = <?php echo json_encode($modal_content_html) ?>,
             modalHtml                   =
                 '<div class="fs-modal fs-modal-change-user fs-modal-change-user-<?php echo $fs->get_unique_affix() ?>">'
                 + '	<div class="fs-modal-dialog">'
                 + '		<div class="fs-modal-header">'
-                + '		    <h4><?php echo esc_js( $header_title ) ?></h4>'
-                + '         <a href="!#" class="fs-close"><i class="dashicons dashicons-no" title="<?php echo esc_js( fs_text_x_inline( 'Dismiss', 'close window', 'dismiss', $slug ) ) ?>"></i></a>'
+                + '		    <h4><?php echo esc_js($header_title) ?></h4>'
+                + '         <a href="!#" class="fs-close"><i class="dashicons dashicons-no" title="<?php echo esc_js(fs_text_x_inline('Dismiss', 'close window', 'dismiss', $slug)) ?>"></i></a>'
                 + '		</div>'
                 + '		<div class="fs-modal-body">'
                 + '			<div class="fs-modal-panel active">' + modalContentHtml + '</div>'
                 + '		</div>'
                 + '		<div class="fs-modal-footer">'
-                + '			<button class="button button-secondary button-close" tabindex="4"><?php fs_esc_js_echo_inline( 'Cancel', 'cancel', $slug ) ?></button>'
-                + '			<button class="button button-primary fs-user-change-button" tabindex="3"><?php echo esc_js( $user_change_button_text ) ?></button>'
+                + '			<button class="button button-secondary button-close" tabindex="4"><?php fs_esc_js_echo_inline('Cancel', 'cancel', $slug) ?></button>'
+                + '			<button class="button button-primary fs-user-change-button" tabindex="3"><?php echo esc_js($user_change_button_text) ?></button>'
                 + '		</div>'
                 + '	</div>'
                 + '</div>',
@@ -197,15 +197,15 @@ HTML;
                     url       : ajaxurl,
                     method    : 'POST',
                     data      : {
-                        action       : '<?php echo $fs->get_ajax_action( 'change_user' ) ?>',
-                        security     : '<?php echo $fs->get_ajax_security( 'change_user' ) ?>',
+                        action       : '<?php echo $fs->get_ajax_action('change_user') ?>',
+                        security     : '<?php echo $fs->get_ajax_security('change_user') ?>',
                         email_address: emailAddress,
                         user_id      : licenseOwnerID,
                         module_id    : '<?php echo $fs->get_id() ?>'
                     },
                     beforeSend: function () {
                         $userChangeButton
-                            .text( '<?php fs_esc_js_echo_inline( 'Changing user, please wait', 'changing-user-please-wait', $slug ) ?>...' )
+                            .text( '<?php fs_esc_js_echo_inline('Changing user, please wait', 'changing-user-please-wait', $slug) ?>...' )
                             .prepend('<i class="fs-ajax-spinner"></i>');
 
                         $(document.body).css({'cursor': 'wait'});
@@ -224,7 +224,7 @@ HTML;
                     error     : function () {
                         $(document.body).css({'cursor': 'auto'});
 
-                        showError( '<?php fs_esc_js_echo_inline( 'Unexpected error, try again in 5 minutes. If the error persists, please contact support.', 'unexpected-error', $slug ) ?>' );
+                        showError( '<?php fs_esc_js_echo_inline('Unexpected error, try again in 5 minutes. If the error persists, please contact support.', 'unexpected-error', $slug) ?>' );
 
                         resetUserChangeButton();
                     }
@@ -267,7 +267,7 @@ HTML;
 
         function resetUserChangeButton() {
             enableUserChangeButton();
-            $userChangeButton.text( <?php echo json_encode( $user_change_button_text ) ?> );
+            $userChangeButton.text( <?php echo json_encode($user_change_button_text) ?> );
         }
 
         function resetModal() {
diff --git a/freemius/templates/gdpr-optin-js.php b/freemius/templates/gdpr-optin-js.php
index 4fdc5e38a230e441d146b497735910e2c18a2ff7..a03e809fcf8539c1091d0586b2a010510e957734 100644
--- a/freemius/templates/gdpr-optin-js.php
+++ b/freemius/templates/gdpr-optin-js.php
@@ -1,19 +1,19 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       2.1.0
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       2.1.0
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
     /**
      * @var array $VARS
      */
-    $fs = freemius( $VARS['id'] );
+    $fs = freemius($VARS['id']);
 ?>
 <script type="text/javascript">
     (function( $ ) {
@@ -39,8 +39,8 @@
 
                 $.ajax({
                     url       : ajaxurl + '?' + $.param({
-                        action   : '<?php echo $fs->get_ajax_action( 'gdpr_optin_action' ) ?>',
-                        security : '<?php echo $fs->get_ajax_security( 'gdpr_optin_action' ) ?>',
+                        action   : '<?php echo $fs->get_ajax_action('gdpr_optin_action') ?>',
+                        security : '<?php echo $fs->get_ajax_security('gdpr_optin_action') ?>',
                         module_id: '<?php echo $fs->get_id() ?>'
                     }),
                     method    : 'POST',
@@ -49,7 +49,7 @@
                         plugin_ids          : pluginIDs
                     },
                     beforeSend: function() {
-                        $this.text( <?php fs_json_encode_echo_inline( 'Thanks, please wait', 'thanks-please-wait', $fs->get_slug() ) ?> + '...' );
+                        $this.text( <?php fs_json_encode_echo_inline('Thanks, please wait', 'thanks-please-wait', $fs->get_slug()) ?> + '...' );
                         $this.css({'cursor': 'wait'});
 
                         $gdprOptinNotice.find( '.button' ).addClass( 'disabled' );
diff --git a/freemius/templates/index.php b/freemius/templates/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/templates/index.php
+++ b/freemius/templates/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/templates/js/index.php b/freemius/templates/js/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/templates/js/index.php
+++ b/freemius/templates/js/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/templates/js/jquery.content-change.php b/freemius/templates/js/jquery.content-change.php
index d1821a290fa16f4138e1ce1f2601ee0753da07ab..51d5d41e347a6b3f82f15e3cf2bdf2c5ac6fb6f3 100644
--- a/freemius/templates/js/jquery.content-change.php
+++ b/freemius/templates/js/jquery.content-change.php
@@ -1,13 +1,13 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.2.2.7
-	 */
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.2.2.7
+     */
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 ?>
 <script type="text/javascript">
 	(function ($) {
diff --git a/freemius/templates/js/open-license-activation.php b/freemius/templates/js/open-license-activation.php
index a88e6f9eb2e5773b4229044d4b6c6437d1785d6a..3e3e6c50c377eaf63ac97ebdc59d4a87359bac2e 100644
--- a/freemius/templates/js/open-license-activation.php
+++ b/freemius/templates/js/open-license-activation.php
@@ -5,7 +5,7 @@
      * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
      * @since       2.0.0
      */
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
diff --git a/freemius/templates/js/style-premium-theme.php b/freemius/templates/js/style-premium-theme.php
index 942da64fec64c81669520e2596c34bc1d32c14e0..45b8e230e1bdf595dd559af19d91feff95fe0d91 100644
--- a/freemius/templates/js/style-premium-theme.php
+++ b/freemius/templates/js/style-premium-theme.php
@@ -1,23 +1,23 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.2.2.7
-	 *
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	/**
-	 * @var array    $VARS
-	 * @var Freemius $fs
-	 */
-	$fs = freemius( $VARS['id'] );
-
-	$slug = $fs->get_slug();
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.2.2.7
+     *
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    /**
+     * @var array    $VARS
+     * @var Freemius $fs
+     */
+    $fs = freemius($VARS['id']);
+
+    $slug = $fs->get_slug();
 
 ?>
 <script type="text/javascript">
@@ -36,10 +36,10 @@
 
 				    var $themeBadgeContainer = $( '<div class="fs-premium-theme-badge-container"></div>' );
 
-				    $themeBadgeContainer.append( '<div class="fs-badge fs-premium-theme-badge">' + <?php echo json_encode( $fs->get_text_inline( 'Premium', 'premium' ) ) ?> + '</div>' );
+				    $themeBadgeContainer.append( '<div class="fs-badge fs-premium-theme-badge">' + <?php echo json_encode($fs->get_text_inline('Premium', 'premium')) ?> + '</div>' );
 
-				    <?php if ( $fs->is_beta() ) : ?>
-                    $themeBadgeContainer.append( '<div class="fs-badge fs-beta-theme-badge">' + <?php echo json_encode( $fs->get_text_inline( 'Beta', 'beta' ) ) ?> + '</div>' );
+				    <?php if ($fs->is_beta()) : ?>
+                    $themeBadgeContainer.append( '<div class="fs-badge fs-beta-theme-badge">' + <?php echo json_encode($fs->get_text_inline('Beta', 'beta')) ?> + '</div>' );
                     <?php endif ?>
 
 				    $theme.append( $themeBadgeContainer );
diff --git a/freemius/templates/partials/network-activation.php b/freemius/templates/partials/network-activation.php
index 06cbff2f5bf1a6cdd55e28d8b0f4ff6a9d8dbad4..ad5a54661f8efd5acee06c35fbcb00a24143246a 100644
--- a/freemius/templates/partials/network-activation.php
+++ b/freemius/templates/partials/network-activation.php
@@ -3,48 +3,48 @@
      * @var array $VARS
      * @var Freemius $fs
      */
-    $fs = freemius( $VARS['id'] );
+    $fs = freemius($VARS['id']);
 
     $slug = $fs->get_slug();
 
     $sites               = $VARS['sites'];
     $require_license_key = $VARS['require_license_key'];
 
-    $show_delegation_option     = $fs->apply_filters( 'show_delegation_option', true );
-    $enable_per_site_activation = $fs->apply_filters( 'enable_per_site_activation', true );
+    $show_delegation_option     = $fs->apply_filters('show_delegation_option', true);
+    $enable_per_site_activation = $fs->apply_filters('enable_per_site_activation', true);
 ?>
 <?php $separator      = '<td>|</td>' ?>
-<div class="fs-multisite-options-container fs-apply-on-all-sites"<?php if ( ! $enable_per_site_activation )
-    echo ' style="display: none;"' ?>>
+<div class="fs-multisite-options-container fs-apply-on-all-sites"<?php if (! $enable_per_site_activation) {
+    echo ' style="display: none;"';
+} ?>>
     <table class="fs-all-sites-options">
         <tbody>
         <tr>
             <td width="600">
                 <label>
                     <?php
-                        if ( ! $fs->is_network_upgrade_mode() ) {
+                        if (! $fs->is_network_upgrade_mode()) {
                             $apply_checkbox_label = $require_license_key ?
-                                fs_text_inline( 'Activate license on all sites in the network.', 'activate-license-on-all-sites-in-the-network', $slug ) :
-                                fs_text_inline( 'Apply on all sites in the network.', 'apply-on-all-sites-in-the-network', $slug );
+                                fs_text_inline('Activate license on all sites in the network.', 'activate-license-on-all-sites-in-the-network', $slug) :
+                                fs_text_inline('Apply on all sites in the network.', 'apply-on-all-sites-in-the-network', $slug);
                         } else {
                             $apply_checkbox_label = $require_license_key ?
-                                fs_text_inline( 'Activate license on all pending sites.', 'activate-license-on-pending-sites-in-the-network', $slug ) :
-                                fs_text_inline( 'Apply on all pending sites.', 'apply-on-pending-sites-in-the-network', $slug );
-
+                                fs_text_inline('Activate license on all pending sites.', 'activate-license-on-pending-sites-in-the-network', $slug) :
+                                fs_text_inline('Apply on all pending sites.', 'apply-on-pending-sites-in-the-network', $slug);
                         }
                     ?>
-                    <input class="fs-apply-on-all-sites-checkbox" type="checkbox" value="true" checked><span><?php echo esc_html( $apply_checkbox_label ) ?></span>
+                    <input class="fs-apply-on-all-sites-checkbox" type="checkbox" value="true" checked><span><?php echo esc_html($apply_checkbox_label) ?></span>
                 </label>
             </td>
-            <?php if ( ! $require_license_key ) : ?>
-                <td><a class="action action-allow" data-action-type="allow" href="#"><?php fs_esc_html_echo_inline( 'allow', 'allow', $slug ) ?></a></td>
+            <?php if (! $require_license_key) : ?>
+                <td><a class="action action-allow" data-action-type="allow" href="#"><?php fs_esc_html_echo_inline('allow', 'allow', $slug) ?></a></td>
                 <?php echo $separator ?>
-                <?php if ( $show_delegation_option ) : ?>
-                <td><a class="action action-delegate" data-action-type="delegate" href="#"><?php fs_esc_html_echo_inline( 'delegate', 'delegate', $slug ) ?></a></td>
+                <?php if ($show_delegation_option) : ?>
+                <td><a class="action action-delegate" data-action-type="delegate" href="#"><?php fs_esc_html_echo_inline('delegate', 'delegate', $slug) ?></a></td>
                 <?php endif ?>
-                <?php if ( $fs->is_enable_anonymous() ) : ?>
+                <?php if ($fs->is_enable_anonymous()) : ?>
                     <?php echo $separator ?>
-                    <td><a class="action action-skip" data-action-type="skip" href="#"><?php echo strtolower( fs_esc_html_inline( 'skip', 'skip', $slug ) ) ?></a></td>
+                    <td><a class="action action-skip" data-action-type="skip" href="#"><?php echo strtolower(fs_esc_html_inline('skip', 'skip', $slug)) ?></a></td>
                 <?php endif ?>
             <?php endif ?>
         </tr>
@@ -54,31 +54,31 @@
         <table cellspacing="0">
             <tbody>
             <?php $site_props = array('uid', 'url', 'title', 'charset', 'language') ?>
-            <?php foreach ( $sites as $site ) : ?>
-                <tr<?php if ( ! empty( $site['license_id'] ) ) {
-                    echo ' data-license-id="' . $site['license_id'] . '"';
-                } ?>>
-                    <?php if ( $require_license_key ) : ?>
+            <?php foreach ($sites as $site) : ?>
+                <tr<?php if (! empty($site['license_id'])) {
+                        echo ' data-license-id="' . $site['license_id'] . '"';
+                    } ?>>
+                    <?php if ($require_license_key) : ?>
                         <td><input type="checkbox" value="true" /></td>
                     <?php endif ?>
                     <td class="blog-id"><span><?php echo $site['blog_id'] ?></span>.</td>
                     <td width="600"><span><?php
-                        $url = str_replace( 'http://', '', str_replace( 'https://', '', $site['url'] ) );
+                        $url = str_replace('http://', '', str_replace('https://', '', $site['url']));
                         echo $url;
                         ?></span>
                         <?php foreach ($site_props as $prop) : ?>
                             <input class="<?php echo $prop ?>" type="hidden" value="<?php echo esc_attr($site[$prop]) ?>" />
                         <?php endforeach ?>
                     </td>
-                    <?php if ( ! $require_license_key ) : ?>
-                        <td><a class="action action-allow selected" data-action-type="allow" href="#"><?php fs_esc_html_echo_inline( 'allow', 'allow', $slug ) ?></a></td>
+                    <?php if (! $require_license_key) : ?>
+                        <td><a class="action action-allow selected" data-action-type="allow" href="#"><?php fs_esc_html_echo_inline('allow', 'allow', $slug) ?></a></td>
                         <?php echo $separator ?>
-                        <?php if ( $show_delegation_option ) : ?>
-                        <td><a class="action action-delegate" data-action-type="delegate" href="#"><?php fs_esc_html_echo_inline( 'delegate', 'delegate', $slug ) ?></a></td>
+                        <?php if ($show_delegation_option) : ?>
+                        <td><a class="action action-delegate" data-action-type="delegate" href="#"><?php fs_esc_html_echo_inline('delegate', 'delegate', $slug) ?></a></td>
                         <?php endif ?>
-                        <?php if ( $fs->is_enable_anonymous() ) : ?>
+                        <?php if ($fs->is_enable_anonymous()) : ?>
                             <?php echo $separator ?>
-                            <td><a class="action action-skip" data-action-type="skip" href="#"><?php echo strtolower( fs_esc_html_inline( 'skip', 'skip', $slug ) ) ?></a></td>
+                            <td><a class="action action-skip" data-action-type="skip" href="#"><?php echo strtolower(fs_esc_html_inline('skip', 'skip', $slug)) ?></a></td>
                         <?php endif ?>
                     <?php endif ?>
                 </tr>
diff --git a/freemius/templates/plugin-icon.php b/freemius/templates/plugin-icon.php
index ab0fb54e5d3c9af44849744a163b64e7358938c4..19aa2e6d8939c29427ddec2ab52ec63513f97666 100644
--- a/freemius/templates/plugin-icon.php
+++ b/freemius/templates/plugin-icon.php
@@ -1,19 +1,19 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.1.4
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.1.4
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	/**
-	 * @var array $VARS
-	 */
-	$fs   = freemius( $VARS['id'] );
+    /**
+     * @var array $VARS
+     */
+    $fs   = freemius($VARS['id']);
 ?>
 <div class="fs-plugin-icon">
 	<img src="<?php echo $fs->get_local_icon_url() ?>" width="80" height="80"/>
diff --git a/freemius/templates/plugin-info/description.php b/freemius/templates/plugin-info/description.php
index 26bc67b47adea2d1115bfe957b8486113d91d10f..62d75ef42435d354b9ada43ea5271e33d07b68ef 100644
--- a/freemius/templates/plugin-info/description.php
+++ b/freemius/templates/plugin-info/description.php
@@ -1,33 +1,33 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.6
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.6
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	/**
-	 * @var array $VARS
-	 *
-	 * @var FS_Plugin $plugin
-	 */
-	$plugin = $VARS['plugin'];
+    /**
+     * @var array $VARS
+     *
+     * @var FS_Plugin $plugin
+     */
+    $plugin = $VARS['plugin'];
 
-	if ( ! empty( $plugin->info->selling_point_0 ) ||
-	     ! empty( $plugin->info->selling_point_1 ) ||
-	     ! empty( $plugin->info->selling_point_2 )
-	) : ?>
+    if (! empty($plugin->info->selling_point_0) ||
+         ! empty($plugin->info->selling_point_1) ||
+         ! empty($plugin->info->selling_point_2)
+    ) : ?>
 		<div class="fs-selling-points">
 			<ul>
-				<?php for ( $i = 0; $i < 3; $i ++ ) : ?>
-					<?php if ( ! empty( $plugin->info->{'selling_point_' . $i} ) ) : ?>
+				<?php for ($i = 0; $i < 3; $i ++) : ?>
+					<?php if (! empty($plugin->info->{'selling_point_' . $i})) : ?>
 						<li><i class="dashicons dashicons-yes"></i>
 
-							<h3><?php echo esc_html( $plugin->info->{'selling_point_' . $i} ) ?></h3></li>
+							<h3><?php echo esc_html($plugin->info->{'selling_point_' . $i}) ?></h3></li>
 					<?php endif ?>
 				<?php endfor ?>
 			</ul>
@@ -35,33 +35,33 @@
 	<?php endif ?>
 	<div>
 		<?php
-			echo wp_kses( $plugin->info->description, array(
-				'a'          => array( 'href' => array(), 'title' => array(), 'target' => array() ),
-				'b'          => array(),
-				'i'          => array(),
-				'p'          => array(),
-				'blockquote' => array(),
-				'h2'         => array(),
-				'h3'         => array(),
-				'ul'         => array(),
-				'ol'         => array(),
-				'li'         => array()
-			) );
-		?>
+            echo wp_kses($plugin->info->description, array(
+                'a'          => array( 'href' => array(), 'title' => array(), 'target' => array() ),
+                'b'          => array(),
+                'i'          => array(),
+                'p'          => array(),
+                'blockquote' => array(),
+                'h2'         => array(),
+                'h3'         => array(),
+                'ul'         => array(),
+                'ol'         => array(),
+                'li'         => array()
+            ));
+        ?>
 	</div>
-<?php if ( ! empty( $plugin->info->screenshots ) ) : ?>
+<?php if (! empty($plugin->info->screenshots)) : ?>
 	<?php $screenshots = $plugin->info->screenshots ?>
 	<div class="fs-screenshots clearfix">
-		<h2><?php fs_esc_html_echo_inline( 'Screenshots', 'screenshots', $plugin->slug ) ?></h2>
+		<h2><?php fs_esc_html_echo_inline('Screenshots', 'screenshots', $plugin->slug) ?></h2>
 		<ul>
 			<?php $i = 0;
-				foreach ( $screenshots as $s => $url ) : ?>
+                foreach ($screenshots as $s => $url) : ?>
 					<?php
-					// Relative URLs are replaced with WordPress.org base URL
-					// therefore we need to set absolute URLs.
-					$url = 'http' . ( WP_FS__IS_HTTPS ? 's' : '' ) . ':' . $url;
-					?>
-					<li class="<?php echo ( 0 === $i % 2 ) ? 'odd' : 'even' ?>">
+                    // Relative URLs are replaced with WordPress.org base URL
+                    // therefore we need to set absolute URLs.
+                    $url = 'http' . (WP_FS__IS_HTTPS ? 's' : '') . ':' . $url;
+                    ?>
+					<li class="<?php echo (0 === $i % 2) ? 'odd' : 'even' ?>">
 						<style>
 							#section-description .fs-screenshots <?php echo ".fs-screenshot-{$i}" ?>
 							{
@@ -69,7 +69,7 @@
 							}
 						</style>
 						<a href="<?php echo $url ?>"
-						   title="<?php echo esc_attr( sprintf( fs_text_inline( 'Click to view full-size screenshot %d', 'view-full-size-x', $plugin->slug ), $i ) ) ?>"
+						   title="<?php echo esc_attr(sprintf(fs_text_inline('Click to view full-size screenshot %d', 'view-full-size-x', $plugin->slug), $i)) ?>"
 						   class="fs-screenshot-<?php echo $i ?>"></a>
 					</li>
 					<?php $i ++; endforeach ?>
diff --git a/freemius/templates/plugin-info/features.php b/freemius/templates/plugin-info/features.php
index b3d0fc8b3e661f4db3973d9e62e9b6f18ce7cabe..8db84d1fd3846474c28f75ab9ee1a8ef471072fc 100644
--- a/freemius/templates/plugin-info/features.php
+++ b/freemius/templates/plugin-info/features.php
@@ -1,106 +1,106 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.6
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.6
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	/**
-	 * @var array $VARS
-	 *
-	 * @var FS_Plugin $plugin
-	 */
-	$plugin = $VARS['plugin'];
+    /**
+     * @var array $VARS
+     *
+     * @var FS_Plugin $plugin
+     */
+    $plugin = $VARS['plugin'];
 
-	$plans = $VARS['plans'];
+    $plans = $VARS['plans'];
 
-	$features_plan_map = array();
-	foreach ( $plans as $plan ) {
-		if (!empty($plan->features) && is_array($plan->features)) {
-			foreach ( $plan->features as $feature ) {
-				if ( ! isset( $features_plan_map[ $feature->id ] ) ) {
-					$features_plan_map[ $feature->id ] = array( 'feature' => $feature, 'plans' => array() );
-				}
+    $features_plan_map = array();
+    foreach ($plans as $plan) {
+        if (!empty($plan->features) && is_array($plan->features)) {
+            foreach ($plan->features as $feature) {
+                if (! isset($features_plan_map[ $feature->id ])) {
+                    $features_plan_map[ $feature->id ] = array( 'feature' => $feature, 'plans' => array() );
+                }
 
-				$features_plan_map[ $feature->id ]['plans'][ $plan->id ] = $feature;
-			}
-		}
+                $features_plan_map[ $feature->id ]['plans'][ $plan->id ] = $feature;
+            }
+        }
 
-		// Add support as a feature.
-		if ( ! empty( $plan->support_email ) ||
-		     ! empty( $plan->support_skype ) ||
-		     ! empty( $plan->support_phone ) ||
-		     true === $plan->is_success_manager
-		) {
-			if ( ! isset( $features_plan_map['support'] ) ) {
-				$support_feature        = new stdClass();
-				$support_feature->id    = 'support';
-				$support_feature->title = fs_text_inline( 'Support', $plugin->slug );
-				$features_plan_map[ $support_feature->id ] = array( 'feature' => $support_feature, 'plans' => array() );
-			} else {
-				$support_feature = $features_plan_map['support'];
-			}
+        // Add support as a feature.
+        if (! empty($plan->support_email) ||
+             ! empty($plan->support_skype) ||
+             ! empty($plan->support_phone) ||
+             true === $plan->is_success_manager
+        ) {
+            if (! isset($features_plan_map['support'])) {
+                $support_feature        = new stdClass();
+                $support_feature->id    = 'support';
+                $support_feature->title = fs_text_inline('Support', $plugin->slug);
+                $features_plan_map[ $support_feature->id ] = array( 'feature' => $support_feature, 'plans' => array() );
+            } else {
+                $support_feature = $features_plan_map['support'];
+            }
 
-			$features_plan_map[ $support_feature->id ]['plans'][ $plan->id ] = $support_feature;
-		}
-	}
+            $features_plan_map[ $support_feature->id ]['plans'][ $plan->id ] = $support_feature;
+        }
+    }
 
-	// Add updates as a feature for all plans.
-	$updates_feature        = new stdClass();
-	$updates_feature->id    = 'updates';
-	$updates_feature->title = fs_text_inline( 'Unlimited Updates', 'unlimited-updates', $plugin->slug );
-	$features_plan_map[ $updates_feature->id ] = array( 'feature' => $updates_feature, 'plans' => array() );
-	foreach ( $plans as $plan ) {
-		$features_plan_map[ $updates_feature->id ]['plans'][ $plan->id ] = $updates_feature;
-	}
+    // Add updates as a feature for all plans.
+    $updates_feature        = new stdClass();
+    $updates_feature->id    = 'updates';
+    $updates_feature->title = fs_text_inline('Unlimited Updates', 'unlimited-updates', $plugin->slug);
+    $features_plan_map[ $updates_feature->id ] = array( 'feature' => $updates_feature, 'plans' => array() );
+    foreach ($plans as $plan) {
+        $features_plan_map[ $updates_feature->id ]['plans'][ $plan->id ] = $updates_feature;
+    }
 ?>
 <div class="fs-features">
 	<table>
 		<thead>
 		<tr>
 			<th></th>
-			<?php foreach ( $plans as $plan ) : ?>
+			<?php foreach ($plans as $plan) : ?>
 				<th>
 					<?php echo $plan->title ?>
 					<span class="fs-price"><?php
-							if ( empty( $plan->pricing ) ) {
-								fs_esc_html_echo_inline( 'Free', 'free', $plugin->slug );
-							} else {
-								foreach ( $plan->pricing as $pricing ) {
-									/**
-									 * @var FS_Pricing $pricing
-									 */
-									if ( 1 == $pricing->licenses ) {
-										if ( $pricing->has_annual() ) {
-											echo "\${$pricing->annual_price} / " . fs_esc_html_x_inline( 'year', 'as annual period', 'year', $plugin->slug );
-										} else if ( $pricing->has_monthly() ) {
-											echo "\${$pricing->monthly_price} / " . fs_esc_html_x_inline( 'mo', 'as monthly period', 'mo', $plugin->slug );
-										} else {
-											echo "\${$pricing->lifetime_price}";
-										}
-									}
-								}
-							}
-						?></span>
+                            if (empty($plan->pricing)) {
+                                fs_esc_html_echo_inline('Free', 'free', $plugin->slug);
+                            } else {
+                                foreach ($plan->pricing as $pricing) {
+                                    /**
+                                     * @var FS_Pricing $pricing
+                                     */
+                                    if (1 == $pricing->licenses) {
+                                        if ($pricing->has_annual()) {
+                                            echo "\${$pricing->annual_price} / " . fs_esc_html_x_inline('year', 'as annual period', 'year', $plugin->slug);
+                                        } elseif ($pricing->has_monthly()) {
+                                            echo "\${$pricing->monthly_price} / " . fs_esc_html_x_inline('mo', 'as monthly period', 'mo', $plugin->slug);
+                                        } else {
+                                            echo "\${$pricing->lifetime_price}";
+                                        }
+                                    }
+                                }
+                            }
+                        ?></span>
 				</th>
 			<?php endforeach ?>
 		</tr>
 		</thead>
 		<tbody>
 		<?php $odd = true;
-			foreach ( $features_plan_map as $feature_id => $data ) : ?>
+            foreach ($features_plan_map as $feature_id => $data) : ?>
 				<tr class="fs-<?php echo $odd ? 'odd' : 'even' ?>">
-					<td><?php echo esc_html( ucfirst( $data['feature']->title ) ) ?></td>
-					<?php foreach ( $plans as $plan ) : ?>
+					<td><?php echo esc_html(ucfirst($data['feature']->title)) ?></td>
+					<?php foreach ($plans as $plan) : ?>
 						<td>
-							<?php if ( isset( $data['plans'][ $plan->id ] ) ) : ?>
-								<?php if ( ! empty( $data['plans'][ $plan->id ]->value ) ) : ?>
-									<b><?php echo esc_html( $data['plans'][ $plan->id ]->value ) ?></b>
+							<?php if (isset($data['plans'][ $plan->id ])) : ?>
+								<?php if (! empty($data['plans'][ $plan->id ]->value)) : ?>
+									<b><?php echo esc_html($data['plans'][ $plan->id ]->value) ?></b>
 								<?php else : ?>
 									<i class="dashicons dashicons-yes"></i>
 								<?php endif ?>
diff --git a/freemius/templates/plugin-info/index.php b/freemius/templates/plugin-info/index.php
index 0316c6a6184fb761a0da7a20c11c20ea94dbfa68..0b29d6813837a7923395531b4ebb8ffd49d348ad 100644
--- a/freemius/templates/plugin-info/index.php
+++ b/freemius/templates/plugin-info/index.php
@@ -1,3 +1,3 @@
 <?php
-	// Silence is golden.
-	// Hide file structure from users on unprotected servers.
\ No newline at end of file
+    // Silence is golden.
+    // Hide file structure from users on unprotected servers.
diff --git a/freemius/templates/plugin-info/screenshots.php b/freemius/templates/plugin-info/screenshots.php
index 20f1ef6383260f3f5777cff038f67dc3344519e9..b26be140500adbcbd20afe52444de72bd24b876f 100644
--- a/freemius/templates/plugin-info/screenshots.php
+++ b/freemius/templates/plugin-info/screenshots.php
@@ -1,34 +1,34 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.6
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.6
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	/**
-	 * @var array $VARS
-	 *
-	 * @var FS_Plugin $plugin
-	 */
-	$plugin = $VARS['plugin'];
+    /**
+     * @var array $VARS
+     *
+     * @var FS_Plugin $plugin
+     */
+    $plugin = $VARS['plugin'];
 
-	$screenshots = $VARS['screenshots'];
+    $screenshots = $VARS['screenshots'];
 ?>
 <ol>
 	<?php $i = 0;
-		foreach ( $screenshots as $s => $url ) : ?>
+        foreach ($screenshots as $s => $url) : ?>
 			<?php
-			// Relative URLs are replaced with WordPress.org base URL
-			// therefore we need to set absolute URLs.
-			$url = 'http' . ( WP_FS__IS_HTTPS ? 's' : '' ) . ':' . $url;
-			?>
+            // Relative URLs are replaced with WordPress.org base URL
+            // therefore we need to set absolute URLs.
+            $url = 'http' . (WP_FS__IS_HTTPS ? 's' : '') . ':' . $url;
+            ?>
 			<li>
-				<a href="<?php echo $url ?>" title="<?php echo esc_attr( sprintf( fs_text_inline( 'Click to view full-size screenshot %d', 'view-full-size-x', $plugin->slug ), $i ) ) ?>"><img src="<?php echo $url ?>"></a>
+				<a href="<?php echo $url ?>" title="<?php echo esc_attr(sprintf(fs_text_inline('Click to view full-size screenshot %d', 'view-full-size-x', $plugin->slug), $i)) ?>"><img src="<?php echo $url ?>"></a>
 			</li>
 			<?php $i ++; endforeach ?>
 </ol>
diff --git a/freemius/templates/powered-by.php b/freemius/templates/powered-by.php
index bb6e081c1ab34354c406dac5eac016ff469ef797..6513a3070730c5d475cc6f7b60334eef7cf86775 100644
--- a/freemius/templates/powered-by.php
+++ b/freemius/templates/powered-by.php
@@ -1,44 +1,44 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.5
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.5
+     */
 
-	/**
-	 * Note for WordPress.org Theme/Plugin reviewer:
-	 *  Freemius is an SDK for plugin and theme developers. Since the core
-	 *  of the SDK is relevant both for plugins and themes, for obvious reasons,
-	 *  we only develop and maintain one code base.
-	 *
-	 *  This code will not run for wp.org themes (only plugins)
-	 *  since theme admin settings/options are now only allowed in the customizer.
-	 *
-	 *  In addition, this page loads an i-frame. We intentionally named it 'frame'
-	 *  so it will pass the "Theme Check" that is looking for the string "i" . "frame".
-	 *
-	 * If you have any questions or need clarifications, please don't hesitate
-	 * pinging me on slack, my username is @svovaf.
-	 *
-	 * @author Vova Feldman (@svovaf)
-	 * @since 1.2.2
-	 */
+    /**
+     * Note for WordPress.org Theme/Plugin reviewer:
+     *  Freemius is an SDK for plugin and theme developers. Since the core
+     *  of the SDK is relevant both for plugins and themes, for obvious reasons,
+     *  we only develop and maintain one code base.
+     *
+     *  This code will not run for wp.org themes (only plugins)
+     *  since theme admin settings/options are now only allowed in the customizer.
+     *
+     *  In addition, this page loads an i-frame. We intentionally named it 'frame'
+     *  so it will pass the "Theme Check" that is looking for the string "i" . "frame".
+     *
+     * If you have any questions or need clarifications, please don't hesitate
+     * pinging me on slack, my username is @svovaf.
+     *
+     * @author Vova Feldman (@svovaf)
+     * @since 1.2.2
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 
-	$VARS = isset($VARS) ? $VARS : array();
+    $VARS = isset($VARS) ? $VARS : array();
 
-    $fs = freemius( $VARS['module_id'] );
+    $fs = freemius($VARS['module_id']);
 
-	wp_enqueue_script( 'jquery' );
-	wp_enqueue_script( 'json2' );
-	fs_enqueue_local_script( 'postmessage', 'nojquery.ba-postmessage.min.js' );
-	fs_enqueue_local_script( 'fs-postmessage', 'postmessage.js' );
+    wp_enqueue_script('jquery');
+    wp_enqueue_script('json2');
+    fs_enqueue_local_script('postmessage', 'nojquery.ba-postmessage.min.js');
+    fs_enqueue_local_script('fs-postmessage', 'postmessage.js');
 ?>
-<?php if ( ! $fs->is_whitelabeled() ) : ?>
+<?php if (! $fs->is_whitelabeled()) : ?>
 <div id="pframe"></div>
 <script type="text/javascript">
 	(function ($) {
diff --git a/freemius/templates/pricing.php b/freemius/templates/pricing.php
index 469f300594cfb2f3d063ea8b820938d80d7f5843..2d00a2177eb3b39b2394a12d2893bf052002ec56 100644
--- a/freemius/templates/pricing.php
+++ b/freemius/templates/pricing.php
@@ -1,145 +1,144 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.3
-	 */
-
-	/**
-	 * Note for WordPress.org Theme/Plugin reviewer:
-	 *  Freemius is an SDK for plugin and theme developers. Since the core
-	 *  of the SDK is relevant both for plugins and themes, for obvious reasons,
-	 *  we only develop and maintain one code base.
-	 *
-	 *  This code (and page) will not run for wp.org themes (only plugins).
-	 *
-	 *  In addition, this page loads an i-frame. We intentionally named it 'frame'
-	 *  so it will pass the "Theme Check" that is looking for the string "i" . "frame".
-	 *
-	 * UPDATE:
-	 *  After ongoing conversations with the WordPress.org TRT we received
-	 *  an official approval for including i-frames in the theme's WP Admin setting's
-	 *  page tab (the SDK will never add any i-frames on the sitefront). i-frames
-	 *  were never against the guidelines, but we wanted to get the team's blessings
-	 *  before we move forward. For the record, I got the final approval from
-	 *  Ulrich Pogson (@grapplerulrich), a team lead at the TRT during WordCamp
-	 *  Europe 2017 (June 16th, 2017).
-	 *
-	 * If you have any questions or need clarifications, please don't hesitate
-	 * pinging me on slack, my username is @svovaf.
-	 *
-	 * @author Vova Feldman (@svovaf)
-	 * @since 1.2.2
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	wp_enqueue_script( 'jquery' );
-	wp_enqueue_script( 'json2' );
-	fs_enqueue_local_script( 'postmessage', 'nojquery.ba-postmessage.min.js' );
-	fs_enqueue_local_script( 'fs-postmessage', 'postmessage.js' );
-	fs_enqueue_local_style( 'fs_common', '/admin/common.css' );
-
-	/**
-	 * @var array    $VARS
-	 * @var Freemius $fs
-	 */
-	$fs        = freemius( $VARS['id'] );
-	$slug 	   = $fs->get_slug();
-	$timestamp = time();
-
-	$context_params = array(
-		'plugin_id'         => $fs->get_id(),
-		'plugin_public_key' => $fs->get_public_key(),
-		'plugin_version'    => $fs->get_plugin_version(),
-	);
-
-	$bundle_id = $fs->get_bundle_id();
-	if ( ! is_null( $bundle_id ) ) {
-	    $context_params['bundle_id'] = $bundle_id;
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.3
+     */
+
+    /**
+     * Note for WordPress.org Theme/Plugin reviewer:
+     *  Freemius is an SDK for plugin and theme developers. Since the core
+     *  of the SDK is relevant both for plugins and themes, for obvious reasons,
+     *  we only develop and maintain one code base.
+     *
+     *  This code (and page) will not run for wp.org themes (only plugins).
+     *
+     *  In addition, this page loads an i-frame. We intentionally named it 'frame'
+     *  so it will pass the "Theme Check" that is looking for the string "i" . "frame".
+     *
+     * UPDATE:
+     *  After ongoing conversations with the WordPress.org TRT we received
+     *  an official approval for including i-frames in the theme's WP Admin setting's
+     *  page tab (the SDK will never add any i-frames on the sitefront). i-frames
+     *  were never against the guidelines, but we wanted to get the team's blessings
+     *  before we move forward. For the record, I got the final approval from
+     *  Ulrich Pogson (@grapplerulrich), a team lead at the TRT during WordCamp
+     *  Europe 2017 (June 16th, 2017).
+     *
+     * If you have any questions or need clarifications, please don't hesitate
+     * pinging me on slack, my username is @svovaf.
+     *
+     * @author Vova Feldman (@svovaf)
+     * @since 1.2.2
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
     }
 
-	// Get site context secure params.
-	if ( $fs->is_registered() ) {
-		$context_params = array_merge( $context_params, FS_Security::instance()->get_context_params(
-			$fs->get_site(),
-			$timestamp,
-			'upgrade'
-		) );
-	} else {
-		$context_params['home_url'] = home_url();
-	}
-
-	if ( $fs->is_payments_sandbox() ) // Append plugin secure token for sandbox mode authentication.)
-	{
-		$context_params['sandbox'] = FS_Security::instance()->get_secure_token(
-			$fs->get_plugin(),
-			$timestamp,
-			'checkout'
-		);
-	}
-
-	$query_params = array_merge( $context_params, $_GET, array(
-		'next'             => $fs->_get_sync_license_url( false, false ),
-		'plugin_version'   => $fs->get_plugin_version(),
-		// Billing cycle.
-		'billing_cycle'    => fs_request_get( 'billing_cycle', WP_FS__PERIOD_ANNUALLY ),
-		'is_network_admin' => fs_is_network_admin() ? 'true' : 'false',
-		'currency'         => $fs->apply_filters( 'default_currency', 'usd' ),
-	) );
+    wp_enqueue_script('jquery');
+    wp_enqueue_script('json2');
+    fs_enqueue_local_script('postmessage', 'nojquery.ba-postmessage.min.js');
+    fs_enqueue_local_script('fs-postmessage', 'postmessage.js');
+    fs_enqueue_local_style('fs_common', '/admin/common.css');
+
+    /**
+     * @var array    $VARS
+     * @var Freemius $fs
+     */
+    $fs        = freemius($VARS['id']);
+    $slug 	   = $fs->get_slug();
+    $timestamp = time();
+
+    $context_params = array(
+        'plugin_id'         => $fs->get_id(),
+        'plugin_public_key' => $fs->get_public_key(),
+        'plugin_version'    => $fs->get_plugin_version(),
+    );
+
+    $bundle_id = $fs->get_bundle_id();
+    if (! is_null($bundle_id)) {
+        $context_params['bundle_id'] = $bundle_id;
+    }
+
+    // Get site context secure params.
+    if ($fs->is_registered()) {
+        $context_params = array_merge($context_params, FS_Security::instance()->get_context_params(
+            $fs->get_site(),
+            $timestamp,
+            'upgrade'
+        ));
+    } else {
+        $context_params['home_url'] = home_url();
+    }
+
+    if ($fs->is_payments_sandbox()) { // Append plugin secure token for sandbox mode authentication.)
+        $context_params['sandbox'] = FS_Security::instance()->get_secure_token(
+            $fs->get_plugin(),
+            $timestamp,
+            'checkout'
+        );
+    }
+
+    $query_params = array_merge($context_params, $_GET, array(
+        'next'             => $fs->_get_sync_license_url(false, false),
+        'plugin_version'   => $fs->get_plugin_version(),
+        // Billing cycle.
+        'billing_cycle'    => fs_request_get('billing_cycle', WP_FS__PERIOD_ANNUALLY),
+        'is_network_admin' => fs_is_network_admin() ? 'true' : 'false',
+        'currency'         => $fs->apply_filters('default_currency', 'usd'),
+    ));
 
     $use_external_pricing = $fs->should_use_external_pricing();
 
-    if ( ! $use_external_pricing ) {
-        $pricing_js_url = fs_asset_url( $fs->get_pricing_js_path() );
-        wp_enqueue_script( 'freemius-pricing', $pricing_js_url );
+    if (! $use_external_pricing) {
+        $pricing_js_url = fs_asset_url($fs->get_pricing_js_path());
+        wp_enqueue_script('freemius-pricing', $pricing_js_url);
     } else {
-        if ( ! $fs->is_registered() ) {
+        if (! $fs->is_registered()) {
             $template_data = array(
                 'id' => $fs->get_id(),
             );
-            fs_require_template( 'forms/trial-start.php', $template_data);
+            fs_require_template('forms/trial-start.php', $template_data);
         }
 
         $view_params = array(
             'id'   => $VARS['id'],
-            'page' => strtolower( $fs->get_text_x_inline( 'Pricing', 'noun', 'pricing' ) ),
+            'page' => strtolower($fs->get_text_x_inline('Pricing', 'noun', 'pricing')),
         );
         fs_require_once_template('secure-https-header.php', $view_params);
     }
 
-	$has_tabs = $fs->_add_tabs_before_content();
+    $has_tabs = $fs->_add_tabs_before_content();
 
-	if ( $has_tabs ) {
-		$query_params['tabs'] = 'true';
-	}
+    if ($has_tabs) {
+        $query_params['tabs'] = 'true';
+    }
 ?>
 	<div id="fs_pricing" class="wrap fs-section fs-full-size-wrapper">
-        <?php if ( ! $use_external_pricing ) : ?>
-        <div id="fs_pricing_wrapper" data-public-url="<?php echo trailingslashit( dirname( $pricing_js_url ) ) ?>"></div>
+        <?php if (! $use_external_pricing) : ?>
+        <div id="fs_pricing_wrapper" data-public-url="<?php echo trailingslashit(dirname($pricing_js_url)) ?>"></div>
         <?php
-        $pricing_config = array_merge( array(
+        $pricing_config = array_merge(array(
             'contact_url'         => $fs->contact_url(),
             'is_network_admin'    => fs_is_network_admin(),
-            'is_production'       => ( defined( 'WP_FS__IS_PRODUCTION_MODE' ) ? WP_FS__IS_PRODUCTION_MODE : null ),
+            'is_production'       => (defined('WP_FS__IS_PRODUCTION_MODE') ? WP_FS__IS_PRODUCTION_MODE : null),
             'menu_slug'           => $fs->get_menu_slug(),
             'mode'                => 'dashboard',
             'fs_wp_endpoint_url'  => WP_FS__ADDRESS,
             'request_handler_url' => admin_url(
-                'admin-ajax.php?' . http_build_query( array(
+                'admin-ajax.php?' . http_build_query(array(
                     'module_id' => $fs->get_id(),
-                    'action'    => $fs->get_ajax_action( 'pricing_ajax_action' ),
-                    'security'  => $fs->get_ajax_security( 'pricing_ajax_action' )
-                ) )
+                    'action'    => $fs->get_ajax_action('pricing_ajax_action'),
+                    'security'  => $fs->get_ajax_security('pricing_ajax_action')
+                ))
             ),
             'selector'            => '#fs_pricing_wrapper',
             'unique_affix'        => $fs->get_unique_affix(),
-        ), $query_params );
+        ), $query_params);
 
-        wp_add_inline_script( 'freemius-pricing', 'Freemius.pricing.new( ' . json_encode( $pricing_config ) . ' )' );
+        wp_add_inline_script('freemius-pricing', 'Freemius.pricing.new( ' . json_encode($pricing_config) . ' )');
         ?>
         <?php else : ?>
         <div id="fs_frame"></div>
@@ -161,7 +160,7 @@
 					base_url     = '<?php echo WP_FS__ADDRESS ?>',
 					// Pass the parent page URL into the i-frame in a meaningful way (this URL could be
 					// passed via query string or hard coded into the child page, it depends on your needs).
-					src          = base_url + '/pricing/?<?php echo http_build_query( $query_params ) ?>#' + encodeURIComponent(document.location.href),
+					src          = base_url + '/pricing/?<?php echo http_build_query($query_params) ?>#' + encodeURIComponent(document.location.href),
 
 					// Append the I-frame into the DOM.
 					frame = $('<i' + 'frame " src="' + src + '" width="100%" height="' + frame_height + 'px" scrolling="no" frameborder="0" style="background: transparent; width: 1px; min-width: 100%;"><\/i' + 'frame>')
@@ -195,15 +194,15 @@
         <?php endif ?>
 	</div>
 <?php
-	if ( $has_tabs ) {
-		$fs->_add_tabs_after_content();
-	}
-
-	$params = array(
-		'page'           => 'pricing',
-		'module_id'      => $fs->get_id(),
-		'module_type'    => $fs->get_module_type(),
-		'module_slug'    => $slug,
-		'module_version' => $fs->get_plugin_version(),
-	);
-	fs_require_template( 'powered-by.php', $params );
\ No newline at end of file
+    if ($has_tabs) {
+        $fs->_add_tabs_after_content();
+    }
+
+    $params = array(
+        'page'           => 'pricing',
+        'module_id'      => $fs->get_id(),
+        'module_type'    => $fs->get_module_type(),
+        'module_slug'    => $slug,
+        'module_version' => $fs->get_plugin_version(),
+    );
+    fs_require_template('powered-by.php', $params);
diff --git a/freemius/templates/secure-https-header.php b/freemius/templates/secure-https-header.php
index 3d0a81eb451a8d5965b7453b6e08985bf666ff57..65530387d16577c503899fed021aa98d33b3b9bb 100644
--- a/freemius/templates/secure-https-header.php
+++ b/freemius/templates/secure-https-header.php
@@ -1,39 +1,39 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.2.1.8
-	 *
-	 * @var array $VARS
-	 */
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.2.1.8
+     *
+     * @var array $VARS
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 ?>
 <div class="fs-secure-notice">
 	<i class="dashicons dashicons-lock"></i>
 	<span><?php
-			if ( ! empty( $VARS['message'] ) ) {
-				echo esc_html( $VARS['message'] );
-			} else {
-				/**
-				 * @var Freemius $fs
-				 */
-				$fs = freemius( $VARS['id'] );
+            if (! empty($VARS['message'])) {
+                echo esc_html($VARS['message']);
+            } else {
+                /**
+                 * @var Freemius $fs
+                 */
+                $fs = freemius($VARS['id']);
 
-				echo  esc_html( sprintf(
-						/* translators: %s: Page name */
-					     $fs->get_text_inline( 'Secure HTTPS %s page, running from an external domain', 'secure-x-page-header' ),
-					     $VARS['page']
-				     ) ) .
-				     ' - ' .
-				     sprintf(
-					     '<a class="fs-security-proof" href="%s" target="_blank" rel="noopener">%s</a>',
-					     'https://www.mcafeesecure.com/verify?host=' . WP_FS__ROOT_DOMAIN_PRODUCTION,
-					     'Freemius Inc. [US]'
-				     );
-			}
-		?></span>
+                echo  esc_html(sprintf(
+                        /* translators: %s: Page name */
+                         $fs->get_text_inline('Secure HTTPS %s page, running from an external domain', 'secure-x-page-header'),
+                    $VARS['page']
+                )) .
+                     ' - ' .
+                     sprintf(
+                         '<a class="fs-security-proof" href="%s" target="_blank" rel="noopener">%s</a>',
+                         'https://www.mcafeesecure.com/verify?host=' . WP_FS__ROOT_DOMAIN_PRODUCTION,
+                         'Freemius Inc. [US]'
+                     );
+            }
+        ?></span>
 </div>
\ No newline at end of file
diff --git a/freemius/templates/sticky-admin-notice-js.php b/freemius/templates/sticky-admin-notice-js.php
index 028a9661cecbf8296697550517db014d2b7abd7c..505f120890297882f74ee4cb29ad5849afa26fd7 100644
--- a/freemius/templates/sticky-admin-notice-js.php
+++ b/freemius/templates/sticky-admin-notice-js.php
@@ -1,17 +1,17 @@
 <?php
-	/**
-	 * Sticky admin notices JavaScript handler for dismissing notice messages
-	 * by sending AJAX call to the server in order to remove the message from the Database.
-	 *
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.0.7
-	 */
+    /**
+     * Sticky admin notices JavaScript handler for dismissing notice messages
+     * by sending AJAX call to the server in order to remove the message from the Database.
+     *
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.0.7
+     */
 
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
+    if (! defined('ABSPATH')) {
+        exit;
+    }
 ?>
 <script type="text/javascript" >
 	jQuery( document ).ready(function( $ ) {
diff --git a/freemius/templates/tabs-capture-js.php b/freemius/templates/tabs-capture-js.php
index 236be3b9e746e7528610d7b18e3f9bb6da802ea5..a05df26561824bb220061357713cd1d3d4bef210 100644
--- a/freemius/templates/tabs-capture-js.php
+++ b/freemius/templates/tabs-capture-js.php
@@ -1,21 +1,21 @@
 <?php
-	/**
-	 * @package     Freemius
-	 * @copyright   Copyright (c) 2015, Freemius, Inc.
-	 * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
-	 * @since       1.2.2.7
-	 */
-
-	if ( ! defined( 'ABSPATH' ) ) {
-		exit;
-	}
-
-	/**
-	 * @var array    $VARS
-	 * @var Freemius $fs
-	 */
-	$fs   = freemius( $VARS['id'] );
-	$slug = $fs->get_slug();
+    /**
+     * @package     Freemius
+     * @copyright   Copyright (c) 2015, Freemius, Inc.
+     * @license     https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License Version 3
+     * @since       1.2.2.7
+     */
+
+    if (! defined('ABSPATH')) {
+        exit;
+    }
+
+    /**
+     * @var array    $VARS
+     * @var Freemius $fs
+     */
+    $fs   = freemius($VARS['id']);
+    $slug = $fs->get_slug();
 ?>
 <script type="text/javascript">
 	(function ($) {
@@ -46,8 +46,8 @@
 
 					$.ajax({
 						url        : ajaxurl + '?' + $.param({
-							action   : '<?php echo $fs->get_ajax_action( 'store_tabs' ) ?>',
-							security : '<?php echo $fs->get_ajax_security( 'store_tabs' ) ?>',
+							action   : '<?php echo $fs->get_ajax_action('store_tabs') ?>',
+							security : '<?php echo $fs->get_ajax_security('store_tabs') ?>',
 							module_id: '<?php echo $fs->get_id() ?>'
 						}),
 						method     : 'POST',
diff --git a/freemius/templates/tabs.php b/freemius/templates/tabs.php
index 2a20b70b57885a5d1d4cfbd32f8625251dbfa030..b20369dccaf65904d4014d837c2b196df13467de 100644
--- a/freemius/templates/tabs.php
+++ b/freemius/templates/tabs.php
@@ -6,7 +6,7 @@
      * @since       1.2.2.7
      */
 
-    if ( ! defined( 'ABSPATH' ) ) {
+    if (! defined('ABSPATH')) {
         exit;
     }
 
@@ -14,7 +14,7 @@
      * @var array    $VARS
      * @var Freemius $fs
      */
-    $fs = freemius( $VARS['id'] );
+    $fs = freemius($VARS['id']);
 
     $slug = $fs->get_slug();
 
@@ -23,23 +23,23 @@
     $show_settings_with_tabs = $fs->show_settings_with_tabs();
 
     $tabs = array();
-    foreach ( $menu_items as $priority => $items ) {
-        foreach ( $items as $item ) {
-            if ( ! $item['show_submenu'] ) {
+    foreach ($menu_items as $priority => $items) {
+        foreach ($items as $item) {
+            if (! $item['show_submenu']) {
                 $submenu_name = ('wp-support-forum' === $item['menu_slug']) ?
                     'support' :
                     $item['menu_slug'];
 
-                if ( 'pricing' === $submenu_name && ! $fs->is_pricing_page_visible() ) {
+                if ('pricing' === $submenu_name && ! $fs->is_pricing_page_visible()) {
                     continue;
                 }
 
-                if ( ! $show_settings_with_tabs || ! $fs->is_submenu_item_visible( $submenu_name, true ) ) {
+                if (! $show_settings_with_tabs || ! $fs->is_submenu_item_visible($submenu_name, true)) {
                     continue;
                 }
             }
 
-            $url   = $fs->_get_admin_page_url( $item['menu_slug'] );
+            $url   = $fs->_get_admin_page_url($item['menu_slug']);
             $title = $item['menu_title'];
 
             $tab = array(
@@ -48,7 +48,7 @@
                 'slug'  => $item['menu_slug'],
             );
 
-            if ( 'pricing' === $item['menu_slug'] && $fs->is_in_trial_promotion() ) {
+            if ('pricing' === $item['menu_slug'] && $fs->is_in_trial_promotion()) {
                 $tab['href'] .= '&trial=true';
             }
 
@@ -81,7 +81,7 @@
                 }
             }
 
-            <?php if (0 < count( $tabs )) : ?>
+            <?php if (0 < count($tabs)) : ?>
             if (null == $tab) {
                 // No tabs found, therefore, create new tabs section if required.
                 var $h1 = $wrap.find('h1');
@@ -110,10 +110,10 @@
             <?php $freemius_context_page = null ?>
 
             <?php foreach ($tabs as $tab) : ?>
-            <?php $is_support_tab = ( 'wp-support-forum' == $tab['slug'] ) ?>
+            <?php $is_support_tab = ('wp-support-forum' == $tab['slug']) ?>
             // Add the Freemius tabs.
             $tabClone = $tab.clone();
-            $tabClone.html(<?php echo json_encode( $tab['label'] ) ?>)
+            $tabClone.html(<?php echo json_encode($tab['label']) ?>)
                 .attr('href', '<?php echo $is_support_tab ? $fs->get_support_forum_url() : $tab['href'] ?>')
                 .appendTo($tabsWrapper)
                 // Remove any custom click events.
@@ -129,13 +129,13 @@
             $tabClone.attr('target', '_blank');
             <?php endif ?>
 
-            <?php if ($fs->is_admin_page( $tab['slug'] )) : ?>
+            <?php if ($fs->is_admin_page($tab['slug'])) : ?>
             <?php $freemius_context_page = $tab['slug'] ?>
             // Select the relevant Freemius tab.
             $tabs.removeClass('nav-tab-active');
             $tabClone.addClass('nav-tab-active');
 
-            <?php if (in_array( $freemius_context_page, array( 'pricing', 'contact', 'checkout' ) )) : ?>
+            <?php if (in_array($freemius_context_page, array( 'pricing', 'contact', 'checkout' ))) : ?>
             // Add AJAX loader.
             $tabClone.prepend('<i class="fs-ajax-spinner"></i>');
             // Hide loader after content fully loaded.
@@ -147,7 +147,7 @@
             // Fix URLs that are starting with a hashtag.
             $tabs.each(function (j, tab) {
                 if (0 === $(tab).attr('href').indexOf('#')) {
-                    $(tab).attr('href', '<?php echo esc_js( $fs->main_menu_url() ) ?>' + $(tab).attr('href'));
+                    $(tab).attr('href', '<?php echo esc_js($fs->main_menu_url()) ?>' + $(tab).attr('href'));
                 }
             });
             <?php endif ?>
@@ -174,11 +174,11 @@
                 }
             }
 
-            <?php if (is_string( $freemius_context_page ) && in_array( $freemius_context_page, array(
+            <?php if (is_string($freemius_context_page) && in_array($freemius_context_page, array(
             'pricing',
             'contact',
             'checkout'
-        ) )) : ?>
+        ))) : ?>
             // Add margin to the upper section of the tabs to give extra space for the HTTPS header.
             // @todo This code assumes that the wrapper style is fully loaded, if there's a stylesheet that is not loaded via the HTML head, it may cause unpredicted margin-top.
             var $tabsWrap = $tabsWrapper.parents('.wrap');
